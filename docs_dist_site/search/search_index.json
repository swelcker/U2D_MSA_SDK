{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"msaSDK - FastAPI based Microservice Architecture Development Kit To build PoC's, MVP's, API's with CRUD and Dashboards fast and consistent. Build on top of FastAPI, SQLModel, SQLAlchemy, Amis and many other bullet proofed libraries. Features \u00b6 Build connected distributed applications faster : Ready for Dapr .. Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces. Dependencies \u00b6 FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue Frontend Usage example is in the app module __init__.py \u00b6 # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like the FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event # Mount the Admin Site here if enabled and the auto mount option was False @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # app.mount_site() # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" ) Typical Run Log \u00b6 Interface Preview \u00b6 Home Screen with System Info \u00b6 Open http://127.0.0.1:8090/admin/ in your browser: CRUD of SQLModels Screen \u00b6 Login Screen \u00b6 Open http://127.0.0.1:8090/admin/auth/form/login in your browser: OpenAPI Interactive Documentation (Swagger) Screen \u00b6 Open http://127.0.0.1:8090/#/admin/docs in your browser: Profiler Screen \u00b6 Open http://127.0.0.1:8090/#/admin/profiler in your browser: License Agreement \u00b6 msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface. How to create the documentation \u00b6 We use mkdocs and mkdocsstring. The code reference and nav entry get's created virtually by the triggered python script /docs/gen_ref_pages.py while mkdocs serve or build is executed. Requirements Install for the PDF creation option: \u00b6 PDF Export is using mainly weasyprint, if you get some errors here pls. check there documentation. Installation is part of the msaSDK, so this should be fine. We can now test and view our documentation using: mkdocs serve Build static Site: mkdocs build","title":"Index"},{"location":"#features","text":"Build connected distributed applications faster : Ready for Dapr .. Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces.","title":"Features"},{"location":"#dependencies","text":"FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue Frontend","title":"Dependencies"},{"location":"#usage-example-is-in-the-app-module-__init__py","text":"# -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like the FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event # Mount the Admin Site here if enabled and the auto mount option was False @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # app.mount_site() # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" )","title":"Usage example is in the app module __init__.py"},{"location":"#typical-run-log","text":"","title":"Typical Run Log"},{"location":"#interface-preview","text":"","title":"Interface Preview"},{"location":"#home-screen-with-system-info","text":"Open http://127.0.0.1:8090/admin/ in your browser:","title":"Home Screen with System Info"},{"location":"#crud-of-sqlmodels-screen","text":"","title":"CRUD of SQLModels Screen"},{"location":"#login-screen","text":"Open http://127.0.0.1:8090/admin/auth/form/login in your browser:","title":"Login Screen"},{"location":"#openapi-interactive-documentation-swagger-screen","text":"Open http://127.0.0.1:8090/#/admin/docs in your browser:","title":"OpenAPI Interactive Documentation (Swagger) Screen"},{"location":"#profiler-screen","text":"Open http://127.0.0.1:8090/#/admin/profiler in your browser:","title":"Profiler Screen"},{"location":"#license-agreement","text":"msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"License Agreement"},{"location":"#how-to-create-the-documentation","text":"We use mkdocs and mkdocsstring. The code reference and nav entry get's created virtually by the triggered python script /docs/gen_ref_pages.py while mkdocs serve or build is executed.","title":"How to create the documentation"},{"location":"#requirements-install-for-the-pdf-creation-option","text":"PDF Export is using mainly weasyprint, if you get some errors here pls. check there documentation. Installation is part of the msaSDK, so this should be fine. We can now test and view our documentation using: mkdocs serve Build static Site: mkdocs build","title":"Requirements Install for the PDF creation option:"},{"location":"history-design-future/","text":"History, Design and Future \u00b6 Why the heck should we need an SDK on top of FastAPI, you may think or ask yourself. What\u2019s the reason for this project? [...] Here's a story of the reasons which drive me to build this. Background \u00b6 I have been creating Software Applications, Solutions and APIs with complex requirements for decades (Mainly for AI Systems based on ML/DL and NLP/NLU, in distributed systems, asynchronous, with NoSQL and SQL databases), leading several Software companies and Development Teams. As part of that, we always had to build Showcases, PoC's, MVP's and finally a Production Version. While we used for decades Java with the Eclipse Vert.x library, since 2018 we fell in love with Python for AI Use Cases and replaced java with Python3. As the development stack and architecture shifted 100% to RestAPI, we stumbled over FastAPI and tiangolo's work. Hies ideas and concepts was a match made in heaven. The history of FastAPI is in great part similar to our history with Python and is now our core Framework. We were only missing some major feature and functions we had with Vert.x, there was still a big hole in our new stack. Then we found dapr and a final Vert.x replacement that even fits better our needs now with docker, kubernetes etc. Our customers run on Azure, AWS, Google etc., basically they all run on private cloud but more and more need native cloud solutions. Micro Services Architecture with Hybrid AI and a kind of Hybrid Service Oriented Architecture \u00b6 In the past we usually did build monolitic solutions with an RestAPI endpoint. Today, we use a Micro Service Architecture to provide a SOA layer. This added new challenges and risks. With all those 100's of services and the freedom of the developer building them, the security issues were increasing. So we used a Boilerplate approach to ensure we always use the same stack of tools and libraries, but as we all know today this doesn't really solve the problem on the long run. Also the UI challange wasn't solved using Data Analyst Tools like Dash, Streamlit etc. for PoC's they were not efficient enough to give the customer the right impression of possible UI's etc., esp. for a final solution impression. So there was and is a need to build some sophisticated modern Web UI to showcase even a simple API feature set, we developers are fine with OpenAPI/Swagger but customers mostly are not. You mostly also have some structured data in SQL type of DB's, with a need for some CRUD UI's and a document oriented DB like MongoDB to store Model structures. Also for FastAPI we always have the same need for Middleware, Profiling etc. If you create many PoC's, MVP's and finally the Services, you repeat a lot of things over and over again, sounds like a old know fact but get's repeated with any new technology coming along. Design \u00b6 The design approach was very pragmatic, leave out the AI based libraries and condense to an SDK which holds what we use and need in 80% of our API's and Micro Services. So we just made a list of what the minimum stuff is we want: Pure Python 3 with as much as possible Type hints., no java bridges etc. dapr as our distributed runtime Well for sure FastAPI with Pydantic, orjson, Jinja2 Template Engine, gunicorn, uvicorn and uvloop Starlette extensions and Middleware SQLModel with SQLAlchemy The major aio libraries: aiomultiprocess, aiofiles, aiosqlite, aioredis etc. Loguru for logging The usual datatype parsers for xml, html, dates etc. pandas, numpy, pillow, matplotlib... the usual stuff For the UI we wanted a python lib to create React/Vue.js UI's, so we decided to use Amis mkdocs with mkdocstrings and the mkdocs-material template for our documentation needs, esp. the automation of code reference documentation So we collected all the stuff from past projects, did some major re-factoring (we needed to ensure that when we overload or forked stuff that we won't have name conflicts). Finally... \u00b6 Beside the need we had for our own work, we decided to also give back to the community as we heavily use open source and community help aswell. There is also a tiny hope that some of you may find this helpfull and maybe even want to contribute and join us, yes that is an invitation...","title":"History, Design and Future"},{"location":"history-design-future/#history-design-and-future","text":"Why the heck should we need an SDK on top of FastAPI, you may think or ask yourself. What\u2019s the reason for this project? [...] Here's a story of the reasons which drive me to build this.","title":"History, Design and Future"},{"location":"history-design-future/#background","text":"I have been creating Software Applications, Solutions and APIs with complex requirements for decades (Mainly for AI Systems based on ML/DL and NLP/NLU, in distributed systems, asynchronous, with NoSQL and SQL databases), leading several Software companies and Development Teams. As part of that, we always had to build Showcases, PoC's, MVP's and finally a Production Version. While we used for decades Java with the Eclipse Vert.x library, since 2018 we fell in love with Python for AI Use Cases and replaced java with Python3. As the development stack and architecture shifted 100% to RestAPI, we stumbled over FastAPI and tiangolo's work. Hies ideas and concepts was a match made in heaven. The history of FastAPI is in great part similar to our history with Python and is now our core Framework. We were only missing some major feature and functions we had with Vert.x, there was still a big hole in our new stack. Then we found dapr and a final Vert.x replacement that even fits better our needs now with docker, kubernetes etc. Our customers run on Azure, AWS, Google etc., basically they all run on private cloud but more and more need native cloud solutions.","title":"Background"},{"location":"history-design-future/#micro-services-architecture-with-hybrid-ai-and-a-kind-of-hybrid-service-oriented-architecture","text":"In the past we usually did build monolitic solutions with an RestAPI endpoint. Today, we use a Micro Service Architecture to provide a SOA layer. This added new challenges and risks. With all those 100's of services and the freedom of the developer building them, the security issues were increasing. So we used a Boilerplate approach to ensure we always use the same stack of tools and libraries, but as we all know today this doesn't really solve the problem on the long run. Also the UI challange wasn't solved using Data Analyst Tools like Dash, Streamlit etc. for PoC's they were not efficient enough to give the customer the right impression of possible UI's etc., esp. for a final solution impression. So there was and is a need to build some sophisticated modern Web UI to showcase even a simple API feature set, we developers are fine with OpenAPI/Swagger but customers mostly are not. You mostly also have some structured data in SQL type of DB's, with a need for some CRUD UI's and a document oriented DB like MongoDB to store Model structures. Also for FastAPI we always have the same need for Middleware, Profiling etc. If you create many PoC's, MVP's and finally the Services, you repeat a lot of things over and over again, sounds like a old know fact but get's repeated with any new technology coming along.","title":"Micro Services Architecture with Hybrid AI and a kind of Hybrid Service Oriented Architecture"},{"location":"history-design-future/#design","text":"The design approach was very pragmatic, leave out the AI based libraries and condense to an SDK which holds what we use and need in 80% of our API's and Micro Services. So we just made a list of what the minimum stuff is we want: Pure Python 3 with as much as possible Type hints., no java bridges etc. dapr as our distributed runtime Well for sure FastAPI with Pydantic, orjson, Jinja2 Template Engine, gunicorn, uvicorn and uvloop Starlette extensions and Middleware SQLModel with SQLAlchemy The major aio libraries: aiomultiprocess, aiofiles, aiosqlite, aioredis etc. Loguru for logging The usual datatype parsers for xml, html, dates etc. pandas, numpy, pillow, matplotlib... the usual stuff For the UI we wanted a python lib to create React/Vue.js UI's, so we decided to use Amis mkdocs with mkdocstrings and the mkdocs-material template for our documentation needs, esp. the automation of code reference documentation So we collected all the stuff from past projects, did some major re-factoring (we needed to ensure that when we overload or forked stuff that we won't have name conflicts).","title":"Design"},{"location":"history-design-future/#finally","text":"Beside the need we had for our own work, we decided to also give back to the community as we heavily use open source and community help aswell. There is also a tiny hope that some of you may find this helpfull and maybe even want to contribute and join us, yes that is an invitation...","title":"Finally..."},{"location":"release-notes/","text":"Release Notes \u00b6 Latest Changes \u00b6 Added mkdocs features and prep for first public release 0.0.8 \u00b6 This is the first public release Features \u00b6 Fixes \u00b6 Docs \u00b6 Translations \u00b6 Internal \u00b6","title":"Release notes"},{"location":"release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/#latest-changes","text":"Added mkdocs features and prep for first public release","title":"Latest Changes"},{"location":"release-notes/#008","text":"This is the first public release","title":"0.0.8"},{"location":"release-notes/#features","text":"","title":"Features"},{"location":"release-notes/#fixes","text":"","title":"Fixes"},{"location":"release-notes/#docs","text":"","title":"Docs"},{"location":"release-notes/#translations","text":"","title":"Translations"},{"location":"release-notes/#internal","text":"","title":"Internal"},{"location":"requirements/","text":"MSASDK - Included Libraries \u00b6 General Dependencies \u00b6 aiomultiprocess ~=0.9.0 \u00b6 Running a full asyncio event loop on each child process Name: aiomultiprocess Version: 0.9.0 Summary: AsyncIO version of the standard multiprocessing module Home-page: https://aiomultiprocess.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: Required-by: aiofiles ~=22.1.0 \u00b6 Handling local disk files in asyncio applications Name: aiofiles Version: 22.1.0 Summary: File support for asyncio. Home-page: https://github.com/Tinche/aiofiles Author: Tin Tvrtkovic Author-email: tinchester@gmail.com License: Apache-2.0 Requires: Required-by: aiosqlite ~=0.17.0 \u00b6 Asyncio bridge to the standard sqlite3 module Name: aiosqlite Version: 0.17.0 Summary: asyncio bridge to the standard sqlite3 module Home-page: https://aiosqlite.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: typing_extensions Required-by: aioredis ~=2.0.1 \u00b6 Asyncio (pep 3156) redis support Name: aioredis Version: 2.0.1 Summary: asyncio (PEP 3156) Redis support Home-page: https://github.com/aio-libs/aioredis-py Author: Author-email: License: MIT Requires: async-timeout, typing-extensions Required-by: Babel ~=2.10.3 \u00b6 Collection of tools for internationalizing python applications Name: Babel Version: 2.10.3 Summary: Internationalization utilities Home-page: https://babel.pocoo.org/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD Requires: pytz Required-by: mkdocs-git-revision-date-localized-plugin charset_normalizer ~=2.1.1 \u00b6 Read text from an unknown charset encoding Name: charset-normalizer Version: 2.1.1 Summary: The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. Home-page: https://github.com/ousret/charset_normalizer Author: Ahmed TAHRI @Ousret Author-email: ahmed.tahri@cloudnursery.dev License: MIT Requires: Required-by: aiohttp, requests country_list ~=1.0.0 \u00b6 List of all countries with names and iso 3166-1 codes in all languages and all data formats Name: country-list Version: 1.0.0 Summary: List of all countries with names and ISO 3166-1 codes in all languages Home-page: https://github.com/bulv1ne/country_list Author: Niels Lemmens Author-email: draso.odin@gmail.com License: MIT license Requires: Required-by: dateparser ~=1.1.1 \u00b6 Generic parsing of dates in over 200 language locales plus numerous formats in a language agnostic fashion Name: dateparser Version: 1.1.1 Summary: Date parsing library designed to parse dates from HTML pages Home-page: https://github.com/scrapinghub/dateparser Author: Scrapinghub Author-email: info@scrapinghub.com License: BSD Requires: python-dateutil, pytz, regex, tzlocal Required-by: date-parser-sari ~=0.8.11 \u00b6 A parser for recognising free-text dates Name: date-parser-sari Version: 0.8.11 Summary: A parser for recognising free-text dates Home-page: https://github.com/swiss-art-research-net/bso-date-parser.git Author: Florian Kr\u00e4utli Author-email: florian.kraeutli@uzh.ch License: UNKNOWN Requires: Required-by: dapr ~=1.7.0 \u00b6 Dapr is a portable, serverless, event-driven runtime that makes it easy for developers to build resilient, stateless and stateful microservices that run on the cloud and edge Name: dapr Version: 1.7.0 Summary: The official release of Dapr Python SDK. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: aiohttp, grpcio, protobuf, python-dateutil Required-by: dapr-ext-fastapi, dapr-ext-grpc dapr-ext-grpc ~=1.7.0 \u00b6 Grpc extension for dapr. Name: dapr-ext-grpc Version: 1.7.0 Summary: The official release of Dapr Python SDK gRPC Extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: cloudevents, dapr Required-by: dapr-ext-fastapi ~=1.7.0 \u00b6 Dapr is a portable, serverless, event-driven runtime Name: dapr-ext-fastapi Version: 1.7.0 Summary: The official release of Dapr FastAPI extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: dapr, fastapi, uvicorn Required-by: dynaconf ~=3.1.9 \u00b6 The dynamic configurator for your python project Name: dynaconf Version: 3.1.9 Summary: The dynamic configurator for your Python Project Home-page: https://github.com/rochacbruno/dynaconf Author: Bruno Rocha Author-email: rochacbruno@gmail.com License: MIT Requires: Required-by: FastAPI related Dependencies \u00b6 fastapi ~=0.83.0 \u00b6 Fastapi framework, high performance, easy to learn, fast to code, ready for production Name: fastapi Version: 0.83.0 Summary: FastAPI framework, high performance, easy to learn, fast to code, ready for production Home-page: https://github.com/tiangolo/fastapi Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: Requires: pydantic, starlette Required-by: dapr-ext-fastapi, fastapi-pagination, fastapi-sessions, fastapi-users, fastapi-utils, prometheus-fastapi-instrumentator fastapi_utils ~=0.2.1 \u00b6 Reusable utilities for fastapi, repeated tasks, apimodel, apisettings Name: fastapi-utils Version: 0.2.1 Summary: Reusable utilities for FastAPI Home-page: https://fastapi-utils.davidmontague.xyz Author: David Montague Author-email: davwmont@gmail.com License: MIT Requires: fastapi, pydantic, sqlalchemy Required-by: fastapi_sessions ~=0.3.2 \u00b6 Add session authentication to your fastapi project Name: fastapi-sessions Version: 0.3.2 Summary: Ready-to-use session library for FastAPI Home-page: https://github.com/jordanisaacs/fastapi-sessions Author: Jordan Isaacs Author-email: License: MIT Requires: fastapi, itsdangerous Required-by: pyinstrument ~=4.3.0 \u00b6 Pyinstrument to check service performance. Name: pyinstrument Version: 4.3.0 Summary: Call stack profiler for Python. Shows you why your code is slow! Home-page: https://github.com/joerick/pyinstrument Author: Joe Rickerby Author-email: joerick@mac.com License: Requires: Required-by: fastapi-users ~=10.1.5 \u00b6 Ready-to-use and customizable users management for fastapi Name: fastapi-users Version: 10.1.5 Summary: Ready-to-use and customizable users management for FastAPI Home-page: Author: Author-email: Fran\u00e7ois Voron <fvoron@gmail.com> License: Requires: email-validator, fastapi, makefun, passlib, pyjwt, python-multipart Required-by: fastapi-users-db-sqlalchemy fastapi-pagination ~=0.10.0 \u00b6 Library that provides pagination feature Name: fastapi-pagination Version: 0.10.0 Summary: FastAPI pagination Home-page: https://github.com/uriyyo/fastapi-pagination Author: Yurii Karabas Author-email: 1998uriyyo@gmail.com License: MIT Requires: fastapi, pydantic Required-by: gunicorn ~=20.1.0 \u00b6 Name: gunicorn Version: 20.1.0 Summary: WSGI HTTP Server for UNIX Home-page: https://gunicorn.org Author: Benoit Chesneau Author-email: benoitc@e-engura.com License: MIT Requires: setuptools Required-by: Other Dependencies \u00b6 httpx ~=0.23.0 \u00b6 The next generation http client. Name: httpx Version: 0.23.0 Summary: The next generation HTTP client. Home-page: https://github.com/encode/httpx Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: certifi, httpcore, rfc3986, sniffio Required-by: httpx-oauth JPype1 ~=1.4.0 \u00b6 A python to java bridge. Name: JPype1 Version: 1.4.0 Summary: A Python to Java bridge. Home-page: https://github.com/jpype-project/jpype Author: Steve Menard Author-email: devilwolf@users.sourceforge.net License: License :: OSI Approved :: Apache Software License Requires: Required-by: loguru ~=0.6.0 \u00b6 Python logging made (stupidly) simple Name: loguru Version: 0.6.0 Summary: Python logging made (stupidly) simple Home-page: https://github.com/Delgan/loguru Author: Delgan Author-email: delgan.py@gmail.com License: MIT license Requires: Required-by: lxml ~=4.9.1 \u00b6 Powerful and pythonic xml processing library combining libxml2/libxslt with the elementtree api. Name: lxml Version: 4.9.1 Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API. Home-page: https://lxml.de/ Author: lxml dev team Author-email: lxml-dev@lxml.de License: BSD Requires: Required-by: multidict ~=6.0.2 \u00b6 Multidict is dict-like collection of key-value pairs where key might be occurred more than once in the container. Name: multidict Version: 6.0.2 Summary: multidict implementation Home-page: https://github.com/aio-libs/multidict Author: Andrew Svetlov Author-email: andrew.svetlov@gmail.com License: Apache 2 Requires: Required-by: aiohttp, yarl msgpack-asgi ~=1.1.0 \u00b6 Drop-in messagepack support for asgi applications and frameworks Name: msgpack-asgi Version: 1.1.0 Summary: Drop-in MessagePack support for ASGI applications and frameworks Home-page: http://github.com/florimondmanca/msgpack-asgi Author: Florimond Manca Author-email: florimond.manca@gmail.com License: MIT Requires: msgpack, starlette Required-by: parsedatetime ~=2.6 \u00b6 Parse human-readable date/time text. Name: parsedatetime Version: 2.6 Summary: Parse human-readable date/time text. Home-page: https://github.com/bear/parsedatetime Author: Mike Taylor Author-email: bear@bear.im License: Apache License 2.0 Requires: Required-by: passlib ~=1.7.4 \u00b6 Comprehensive password hashing framework supporting over 30 schemes Name: passlib Version: 1.7.4 Summary: comprehensive password hashing framework supporting over 30 schemes Home-page: https://passlib.readthedocs.io Author: Eli Collins Author-email: elic@assurancetechnologies.com License: BSD Requires: Required-by: fastapi-users PGPy ~=0.5.4 \u00b6 Pretty good privacy for python Name: PGPy Version: 0.5.4 Summary: Pretty Good Privacy for Python Home-page: https://github.com/SecurityInnovation/PGPy Author: Michael Greene Author-email: mgreene@securityinnovation.com License: BSD Requires: cryptography, pyasn1, six Required-by: prometheus_fastapi_instrumentator ~=5.9.0 \u00b6 Instrument your fastapi with prometheus metrics Name: prometheus-fastapi-instrumentator Version: 5.9.0 Summary: Instrument your FastAPI with Prometheus metrics Home-page: https://github.com/trallnag/prometheus-fastapi-instrumentator Author: Tim Schwenke Author-email: tim.schwenke@trallnag.com License: ISC Requires: fastapi, prometheus-client Required-by: psutil ~=5.9.2 \u00b6 Cross-platform lib for process and system monitoring in python. Name: psutil Version: 5.9.2 Summary: Cross-platform lib for process and system monitoring in Python. Home-page: https://github.com/giampaolo/psutil Author: Giampaolo Rodola Author-email: g.rodola@gmail.com License: BSD Requires: Required-by: python_magic ~=0.4.27 \u00b6 Filetype and metadata detection Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by: pydantic ~=1.9.2 \u00b6 Data validation and settings management using python type hints Name: pydantic Version: 1.9.2 Summary: Data validation and settings management using python type hints Home-page: https://github.com/samuelcolvin/pydantic Author: Samuel Colvin Author-email: s@muelcolvin.com License: MIT Requires: typing-extensions Required-by: fastapi, fastapi-pagination, fastapi-utils, pandas-profiling, sqlmodel python_dateutil ~=2.8.2 \u00b6 Extensions to the standard python datetime module Name: python-dateutil Version: 2.8.2 Summary: Extensions to the standard Python datetime module Home-page: https://github.com/dateutil/dateutil Author: Gustavo Niemeyer Author-email: gustavo@niemeyer.net License: Dual License Requires: six Required-by: dapr, dateparser, ghp-import, matplotlib, pandas, strawberry-graphql python-dotenv ~=0.20.0 \u00b6 Reads key-value pairs from a .env file and can set them as environment variables. Name: python-dotenv Version: 0.20.0 Summary: Read key-value pairs from a .env file and set them as environment variables Home-page: https://github.com/theskumar/python-dotenv Author: Saurabh Kumar Author-email: me+github@saurabh-kumar.com License: BSD-3-Clause Requires: Required-by: python-jose ~=3.3.0 \u00b6 Son web signature (jws), json web encryption (jwe), json web key (jwk), and json web algorithms (jwa) Name: python-jose Version: 3.3.0 Summary: JOSE implementation in Python Home-page: http://github.com/mpdavis/python-jose Author: Michael Davis Author-email: mike.philip.davis@gmail.com License: MIT Requires: ecdsa, pyasn1, rsa Required-by: regex ~=2022.3.2 \u00b6 Alternative regular expression module, to replace re. Name: regex Version: 2022.3.2 Summary: Alternative regular expression module, to replace re. Home-page: https://github.com/mrabarnett/mrab-regex Author: Matthew Barnett Author-email: regex@mrabarnett.plus.com License: Apache Software License Requires: Required-by: dateparser setuptools ~=65.2.0 \u00b6 Easily download, build, install, upgrade, and uninstall python packages Name: setuptools Version: 65.2.0 Summary: Easily download, build, install, upgrade, and uninstall Python packages Home-page: https://github.com/pypa/setuptools Author: Python Packaging Authority Author-email: distutils-sig@python.org License: Requires: Required-by: gunicorn, zope.interface slowapi ~=0.1.6 \u00b6 A rate limiting extension for starlette and fastapi Name: slowapi Version: 0.1.6 Summary: A rate limiting extension for Starlette and Fastapi Home-page: https://github.com/laurents/slowapi Author: Laurent Savaete Author-email: laurent@where.tf License: MIT Requires: limits Required-by: Starlette related Dependencies \u00b6 sse_starlette ~=1.1.6 \u00b6 Server sent events for starlette and fastapi Name: sse-starlette Version: 1.1.6 Summary: \"SSE plugin for Starlette\" Home-page: https://github.com/sysid/sse-starlette Author: sysid Author-email: sysid@gmx.de License: Requires: starlette Required-by: starlette ~=0.19.1 \u00b6 Name: starlette Version: 0.19.1 Summary: The little ASGI library that shines. Home-page: https://github.com/encode/starlette Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: anyio, typing-extensions Required-by: fastapi, msgpack-asgi, sse-starlette, starception, starlette-context, Starlette-WTF Starlette-WTF ~=0.4.3 \u00b6 Name: Starlette-WTF Version: 0.4.3 Summary: Simple integration of Starlette and WTForms. Home-page: https://github.com/muicss/starlette-wtf Author: Andres Morey Author-email: License: MIT Requires: itsdangerous, python-multipart, starlette, WTForms Required-by: starlette-context ~=0.3.4 \u00b6 Access context in starlette Name: starlette-context Version: 0.3.4 Summary: Access context in Starlette Home-page: https://github.com/tomwojcik/starlette-context Author: Tomasz Wojcik Author-email: License: MIT Requires: starlette Required-by: starception ~=0.4.0 \u00b6 Beautiful debugging page for starlette apps. Name: starception Version: 0.4.0 Summary: Beautiful debugging page for Starlette apps. Home-page: https://github.com/alex-oleshkevich/starception Author: Alex Oleshkevich Author-email: alex.oleshkevich@gmail.com License: MIT Requires: Jinja2, MarkupSafe, starlette Required-by: GraphQL related Dependencies \u00b6 strawberry-graphql ~=0.130.1 \u00b6 A library for creating graphql apis Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by: strawberry-graphql ~=0.130.1 \u00b6 Strawberry provides support for fastapi with a custom apirouter called graphqlrouter. Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by: SQL/DB related Dependencies \u00b6 sqlmodel ~=0.0.8 \u00b6 Sqlmodel, sql databases in python, designed for simplicity, compatibility, and robustness. Name: sqlmodel Version: 0.0.8 Summary: SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness. Home-page: https://github.com/tiangolo/sqlmodel Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: MIT Requires: pydantic, SQLAlchemy, sqlalchemy2-stubs Required-by: sqlalchemy ~=1.4.41 \u00b6 Database abstraction library Name: SQLAlchemy Version: 1.4.41 Summary: Database Abstraction Library Home-page: https://www.sqlalchemy.org Author: Mike Bayer Author-email: mike_mp@zzzcomputing.com License: MIT Requires: greenlet Required-by: fastapi-users-db-sqlalchemy, fastapi-utils, sqlalchemy_database, sqlmodel sqlalchemy_database ~=0.0.7 \u00b6 Sqlalchemy-database provides shortcut functions to common database operations for sqlalchemy orm Name: sqlalchemy_database Version: 0.0.7 Summary: SQLAlchemy-Database provides shortcut functions to common database operations for SQLAlchemy ORM. Home-page: Author: Author-email: Atomi <1456417373@qq.com> License: Requires: sqlalchemy Required-by: Uvicorn related Dependencies \u00b6 uvicorn ~=0.17.6 \u00b6 Name: uvicorn Version: 0.17.6 Summary: The lightning-fast ASGI server. Home-page: https://www.uvicorn.org/ Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: asgiref, click, h11 Required-by: dapr-ext-fastapi uvloop ~=0.16.0 \u00b6 Fast implementation of asyncio event loop on top of libuv Name: uvloop Version: 0.16.0 Summary: Fast implementation of asyncio event loop on top of libuv Home-page: http://github.com/MagicStack/uvloop Author: Yury Selivanov Author-email: yury@magic.io License: MIT Requires: Required-by: General Dependencies \u00b6 fonttools ~=4.37.1 \u00b6 Tools to manipulate font files Name: fonttools Version: 4.37.1 Summary: Tools to manipulate font files Home-page: http://github.com/fonttools/fonttools Author: Just van Rossum Author-email: just@letterror.com License: MIT Requires: Required-by: matplotlib gputil ~=1.4.0 \u00b6 Name: GPUtil Version: 1.4.0 Summary: GPUtil is a Python module for getting the GPU status from NVIDA GPUs using nvidia-smi. Home-page: https://github.com/anderskm/gputil Author: Anders Krogh Mortensen Author-email: anderskroghm@gmail.com License: MIT Requires: Required-by: Jinja2 ~=3.1.2 \u00b6 Name: Jinja2 Version: 3.1.2 Summary: A very fast and expressive template engine. Home-page: https://palletsprojects.com/p/jinja/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD-3-Clause Requires: MarkupSafe Required-by: Flask, mkdocs, mkdocs-material, mkdocstrings, myst-parser, pandas-profiling, starception matplotlib ~=3.5.3 \u00b6 Name: matplotlib Version: 3.5.3 Summary: Python plotting package Home-page: https://matplotlib.org Author: John D. Hunter, Michael Droettboom Author-email: matplotlib-users@python.org License: PSF Requires: cycler, fonttools, kiwisolver, numpy, packaging, pillow, pyparsing, python-dateutil Required-by: missingno, pandas-profiling, phik, seaborn numpy ~=1.23.3 \u00b6 Numpy is the fundamental package for array computing with python. Name: numpy Version: 1.23.3 Summary: NumPy is the fundamental package for array computing with Python. Home-page: https://www.numpy.org Author: Travis E. Oliphant et al. Author-email: License: BSD Requires: Required-by: ImageHash, matplotlib, missingno, pandas, pandas-profiling, patsy, phik, PyWavelets, scipy, seaborn, statsmodels, visions orjson ~=3.8.0 \u00b6 Name: orjson Version: 3.8.0 Summary: Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy Home-page: https://github.com/ijl/orjson Author: ijl <ijl@mailbox.org> Author-email: ijl <ijl@mailbox.org> License: Apache-2.0 OR MIT Requires: Required-by: pandas ~=1.4.4 \u00b6 Powerful data structures for data analysis, time series, and statistics Name: pandas Version: 1.4.4 Summary: Powerful data structures for data analysis, time series, and statistics Home-page: https://pandas.pydata.org Author: The Pandas Development Team Author-email: pandas-dev@python.org License: BSD-3-Clause Requires: numpy, python-dateutil, pytz Required-by: pandas-profiling, phik, seaborn, statsmodels, visions pandas-profiling ~=3.3.0 \u00b6 Generate profile report for pandas dataframe Name: pandas-profiling Version: 3.3.0 Summary: Generate profile report for pandas DataFrame Home-page: https://github.com/ydataai/pandas-profiling Author: YData Labs Inc Author-email: opensource@ydata.ai License: MIT Requires: htmlmin, jinja2, joblib, matplotlib, missingno, multimethod, numpy, pandas, phik, pydantic, PyYAML, requests, scipy, seaborn, statsmodels, tangled-up-in-unicode, tqdm, visions Required-by: pillow ~=9.2.0 \u00b6 Python imaging library (fork) Name: Pillow Version: 9.2.0 Summary: Python Imaging Library (Fork) Home-page: https://python-pillow.org Author: Alex Clark (PIL Fork Author) Author-email: aclark@python-pillow.org License: HPND Requires: Required-by: ImageHash, matplotlib python-magic ~=0.4.27 \u00b6 Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by: python-multipart ~=0.0.5 \u00b6 Name: python-multipart Version: 0.0.5 Summary: A streaming multipart parser for Python Home-page: http://github.com/andrew-d/python-multipart Author: Andrew Dunham Author-email: License: Apache Requires: six Required-by: fastapi-users, Starlette-WTF, strawberry-graphql pytz ~=2022.2.1 \u00b6 Name: pytz Version: 2022.2.1 Summary: World timezone definitions, modern and historical Home-page: http://pythonhosted.org/pytz Author: Stuart Bishop Author-email: stuart@stuartbishop.net License: MIT Requires: Required-by: Babel, dateparser, pandas Documentation related Libraries \u00b6 black ~=22.8.0 \u00b6 Code formatter. Name: black Version: 22.8.0 Summary: The uncompromising code formatter. Home-page: https://github.com/psf/black Author: \u0141ukasz Langa Author-email: lukasz@langa.pl License: MIT Requires: click, mypy-extensions, pathspec, platformdirs, tomli, typing-extensions Required-by: mkdocs ~=1.3.1 \u00b6 Project documentation with markdown. Name: mkdocs Version: 1.3.1 Summary: Project documentation with Markdown. Home-page: https://www.mkdocs.org Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: click, ghp-import, importlib-metadata, Jinja2, Markdown, mergedeep, packaging, PyYAML, pyyaml-env-tag, watchdog Required-by: mkdocs-autorefs, mkdocs-gen-files, mkdocs-git-revision-date-localized-plugin, mkdocs-literate-nav, mkdocs-material, mkdocs-section-index, mkdocstrings mkdocstrings ~=0.19.0 \u00b6 Automatic documentation from sources, for mkdocs. Name: mkdocstrings Version: 0.19.0 Summary: Automatic documentation from sources, for MkDocs. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: UNKNOWN Requires: Jinja2, Markdown, MarkupSafe, mkdocs, mkdocs-autorefs, pymdown-extensions Required-by: mkdocstrings-python mkdocstrings-python ~=0.7.1 \u00b6 A python handler for mkdocstrings. Name: mkdocstrings-python Version: 0.7.1 Summary: A Python handler for mkdocstrings. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: ISC Requires: griffe, mkdocstrings Required-by: mkdocs-material ~=8.4.3 \u00b6 Material design theme for mkdocs Name: mkdocs-material Version: 8.4.3 Summary: Documentation that simply works Home-page: https://squidfunk.github.io/mkdocs-material/ Author: Martin Donath Author-email: martin.donath@squidfunk.com License: MIT Requires: jinja2, markdown, mkdocs, mkdocs-material-extensions, pygments, pymdown-extensions Required-by: mkdocs-gen-files ~=0.4.0 \u00b6 Mkdocs plugin to programmatically generate documentation pages during the build Name: mkdocs-gen-files Version: 0.4.0 Summary: MkDocs plugin to programmatically generate documentation pages during the build Home-page: https://github.com/oprypin/mkdocs-gen-files Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by: mkdocs-literate-nav ~=0.4.1 \u00b6 Mkdocs plugin to specify the navigation in markdown instead of yaml Name: mkdocs-literate-nav Version: 0.4.1 Summary: MkDocs plugin to specify the navigation in Markdown instead of YAML Home-page: https://github.com/oprypin/mkdocs-literate-nav Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by: mkdocs-section-index ~=0.3.4 \u00b6 Mkdocs plugin to allow clickable sections that lead to an index page Name: mkdocs-section-index Version: 0.3.4 Summary: MkDocs plugin to allow clickable sections that lead to an index page Home-page: https://github.com/oprypin/mkdocs-section-index Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by: mkdocs-page-pdf ~=0.1.0 \u00b6 Generate a pdf file for each mkdocs page and adds a download button Name: mkdocs-page-pdf Version: 0.1.0 Summary: Generate a PDF file for each MkDocs page Home-page: https://github.com/brospars/mkdocs-page-pdf Author: brospars Author-email: License: MIT Requires: asyncio, mkdocs, nest-asyncio, pyppeteer Required-by: mkdocs-git-revision-date-localized-plugin ~=1.1.0 \u00b6 Name: mkdocs-git-revision-date-localized-plugin Version: 1.1.0 Summary: Mkdocs plugin that enables displaying the localized date of the last git modification of a markdown file. Home-page: https://github.com/timvink/mkdocs-git-revision-date-localized-plugin Author: Tim Vink Author-email: vinktim@gmail.com License: MIT Requires: babel, GitPython, mkdocs Required-by: Pygments ~=2.13.0 \u00b6 Generic syntax highlighter Name: Pygments Version: 2.13.0 Summary: Pygments is a syntax highlighting package written in Python. Home-page: https://pygments.org/ Author: Georg Brandl Author-email: georg@python.org License: BSD License Requires: Required-by: mkdocs-material, strawberry-graphql","title":"Libraries"},{"location":"requirements/#msasdk-included-libraries","text":"","title":"MSASDK - Included Libraries"},{"location":"requirements/#general-dependencies","text":"","title":"General Dependencies"},{"location":"requirements/#aiomultiprocess-090","text":"Running a full asyncio event loop on each child process Name: aiomultiprocess Version: 0.9.0 Summary: AsyncIO version of the standard multiprocessing module Home-page: https://aiomultiprocess.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: Required-by:","title":"aiomultiprocess ~=0.9.0"},{"location":"requirements/#aiofiles-2210","text":"Handling local disk files in asyncio applications Name: aiofiles Version: 22.1.0 Summary: File support for asyncio. Home-page: https://github.com/Tinche/aiofiles Author: Tin Tvrtkovic Author-email: tinchester@gmail.com License: Apache-2.0 Requires: Required-by:","title":"aiofiles ~=22.1.0"},{"location":"requirements/#aiosqlite-0170","text":"Asyncio bridge to the standard sqlite3 module Name: aiosqlite Version: 0.17.0 Summary: asyncio bridge to the standard sqlite3 module Home-page: https://aiosqlite.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: typing_extensions Required-by:","title":"aiosqlite ~=0.17.0"},{"location":"requirements/#aioredis-201","text":"Asyncio (pep 3156) redis support Name: aioredis Version: 2.0.1 Summary: asyncio (PEP 3156) Redis support Home-page: https://github.com/aio-libs/aioredis-py Author: Author-email: License: MIT Requires: async-timeout, typing-extensions Required-by:","title":"aioredis ~=2.0.1"},{"location":"requirements/#babel-2103","text":"Collection of tools for internationalizing python applications Name: Babel Version: 2.10.3 Summary: Internationalization utilities Home-page: https://babel.pocoo.org/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD Requires: pytz Required-by: mkdocs-git-revision-date-localized-plugin","title":"Babel ~=2.10.3"},{"location":"requirements/#charset_normalizer-211","text":"Read text from an unknown charset encoding Name: charset-normalizer Version: 2.1.1 Summary: The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. Home-page: https://github.com/ousret/charset_normalizer Author: Ahmed TAHRI @Ousret Author-email: ahmed.tahri@cloudnursery.dev License: MIT Requires: Required-by: aiohttp, requests","title":"charset_normalizer ~=2.1.1"},{"location":"requirements/#country_list-100","text":"List of all countries with names and iso 3166-1 codes in all languages and all data formats Name: country-list Version: 1.0.0 Summary: List of all countries with names and ISO 3166-1 codes in all languages Home-page: https://github.com/bulv1ne/country_list Author: Niels Lemmens Author-email: draso.odin@gmail.com License: MIT license Requires: Required-by:","title":"country_list ~=1.0.0"},{"location":"requirements/#dateparser-111","text":"Generic parsing of dates in over 200 language locales plus numerous formats in a language agnostic fashion Name: dateparser Version: 1.1.1 Summary: Date parsing library designed to parse dates from HTML pages Home-page: https://github.com/scrapinghub/dateparser Author: Scrapinghub Author-email: info@scrapinghub.com License: BSD Requires: python-dateutil, pytz, regex, tzlocal Required-by:","title":"dateparser ~=1.1.1"},{"location":"requirements/#date-parser-sari-0811","text":"A parser for recognising free-text dates Name: date-parser-sari Version: 0.8.11 Summary: A parser for recognising free-text dates Home-page: https://github.com/swiss-art-research-net/bso-date-parser.git Author: Florian Kr\u00e4utli Author-email: florian.kraeutli@uzh.ch License: UNKNOWN Requires: Required-by:","title":"date-parser-sari ~=0.8.11"},{"location":"requirements/#dapr-170","text":"Dapr is a portable, serverless, event-driven runtime that makes it easy for developers to build resilient, stateless and stateful microservices that run on the cloud and edge Name: dapr Version: 1.7.0 Summary: The official release of Dapr Python SDK. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: aiohttp, grpcio, protobuf, python-dateutil Required-by: dapr-ext-fastapi, dapr-ext-grpc","title":"dapr ~=1.7.0"},{"location":"requirements/#dapr-ext-grpc-170","text":"Grpc extension for dapr. Name: dapr-ext-grpc Version: 1.7.0 Summary: The official release of Dapr Python SDK gRPC Extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: cloudevents, dapr Required-by:","title":"dapr-ext-grpc ~=1.7.0"},{"location":"requirements/#dapr-ext-fastapi-170","text":"Dapr is a portable, serverless, event-driven runtime Name: dapr-ext-fastapi Version: 1.7.0 Summary: The official release of Dapr FastAPI extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: dapr, fastapi, uvicorn Required-by:","title":"dapr-ext-fastapi ~=1.7.0"},{"location":"requirements/#dynaconf-319","text":"The dynamic configurator for your python project Name: dynaconf Version: 3.1.9 Summary: The dynamic configurator for your Python Project Home-page: https://github.com/rochacbruno/dynaconf Author: Bruno Rocha Author-email: rochacbruno@gmail.com License: MIT Requires: Required-by:","title":"dynaconf ~=3.1.9"},{"location":"requirements/#fastapi-related-dependencies","text":"","title":"FastAPI related Dependencies"},{"location":"requirements/#fastapi-0830","text":"Fastapi framework, high performance, easy to learn, fast to code, ready for production Name: fastapi Version: 0.83.0 Summary: FastAPI framework, high performance, easy to learn, fast to code, ready for production Home-page: https://github.com/tiangolo/fastapi Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: Requires: pydantic, starlette Required-by: dapr-ext-fastapi, fastapi-pagination, fastapi-sessions, fastapi-users, fastapi-utils, prometheus-fastapi-instrumentator","title":"fastapi ~=0.83.0"},{"location":"requirements/#fastapi_utils-021","text":"Reusable utilities for fastapi, repeated tasks, apimodel, apisettings Name: fastapi-utils Version: 0.2.1 Summary: Reusable utilities for FastAPI Home-page: https://fastapi-utils.davidmontague.xyz Author: David Montague Author-email: davwmont@gmail.com License: MIT Requires: fastapi, pydantic, sqlalchemy Required-by:","title":"fastapi_utils ~=0.2.1"},{"location":"requirements/#fastapi_sessions-032","text":"Add session authentication to your fastapi project Name: fastapi-sessions Version: 0.3.2 Summary: Ready-to-use session library for FastAPI Home-page: https://github.com/jordanisaacs/fastapi-sessions Author: Jordan Isaacs Author-email: License: MIT Requires: fastapi, itsdangerous Required-by:","title":"fastapi_sessions ~=0.3.2"},{"location":"requirements/#pyinstrument-430","text":"Pyinstrument to check service performance. Name: pyinstrument Version: 4.3.0 Summary: Call stack profiler for Python. Shows you why your code is slow! Home-page: https://github.com/joerick/pyinstrument Author: Joe Rickerby Author-email: joerick@mac.com License: Requires: Required-by:","title":"pyinstrument ~=4.3.0"},{"location":"requirements/#fastapi-users-1015","text":"Ready-to-use and customizable users management for fastapi Name: fastapi-users Version: 10.1.5 Summary: Ready-to-use and customizable users management for FastAPI Home-page: Author: Author-email: Fran\u00e7ois Voron <fvoron@gmail.com> License: Requires: email-validator, fastapi, makefun, passlib, pyjwt, python-multipart Required-by: fastapi-users-db-sqlalchemy","title":"fastapi-users ~=10.1.5"},{"location":"requirements/#fastapi-pagination-0100","text":"Library that provides pagination feature Name: fastapi-pagination Version: 0.10.0 Summary: FastAPI pagination Home-page: https://github.com/uriyyo/fastapi-pagination Author: Yurii Karabas Author-email: 1998uriyyo@gmail.com License: MIT Requires: fastapi, pydantic Required-by:","title":"fastapi-pagination ~=0.10.0"},{"location":"requirements/#gunicorn-2010","text":"Name: gunicorn Version: 20.1.0 Summary: WSGI HTTP Server for UNIX Home-page: https://gunicorn.org Author: Benoit Chesneau Author-email: benoitc@e-engura.com License: MIT Requires: setuptools Required-by:","title":"gunicorn ~=20.1.0"},{"location":"requirements/#other-dependencies","text":"","title":"Other Dependencies"},{"location":"requirements/#httpx-0230","text":"The next generation http client. Name: httpx Version: 0.23.0 Summary: The next generation HTTP client. Home-page: https://github.com/encode/httpx Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: certifi, httpcore, rfc3986, sniffio Required-by: httpx-oauth","title":"httpx ~=0.23.0"},{"location":"requirements/#jpype1-140","text":"A python to java bridge. Name: JPype1 Version: 1.4.0 Summary: A Python to Java bridge. Home-page: https://github.com/jpype-project/jpype Author: Steve Menard Author-email: devilwolf@users.sourceforge.net License: License :: OSI Approved :: Apache Software License Requires: Required-by:","title":"JPype1 ~=1.4.0"},{"location":"requirements/#loguru-060","text":"Python logging made (stupidly) simple Name: loguru Version: 0.6.0 Summary: Python logging made (stupidly) simple Home-page: https://github.com/Delgan/loguru Author: Delgan Author-email: delgan.py@gmail.com License: MIT license Requires: Required-by:","title":"loguru ~=0.6.0"},{"location":"requirements/#lxml-491","text":"Powerful and pythonic xml processing library combining libxml2/libxslt with the elementtree api. Name: lxml Version: 4.9.1 Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API. Home-page: https://lxml.de/ Author: lxml dev team Author-email: lxml-dev@lxml.de License: BSD Requires: Required-by:","title":"lxml ~=4.9.1"},{"location":"requirements/#multidict-602","text":"Multidict is dict-like collection of key-value pairs where key might be occurred more than once in the container. Name: multidict Version: 6.0.2 Summary: multidict implementation Home-page: https://github.com/aio-libs/multidict Author: Andrew Svetlov Author-email: andrew.svetlov@gmail.com License: Apache 2 Requires: Required-by: aiohttp, yarl","title":"multidict ~=6.0.2"},{"location":"requirements/#msgpack-asgi-110","text":"Drop-in messagepack support for asgi applications and frameworks Name: msgpack-asgi Version: 1.1.0 Summary: Drop-in MessagePack support for ASGI applications and frameworks Home-page: http://github.com/florimondmanca/msgpack-asgi Author: Florimond Manca Author-email: florimond.manca@gmail.com License: MIT Requires: msgpack, starlette Required-by:","title":"msgpack-asgi ~=1.1.0"},{"location":"requirements/#parsedatetime-26","text":"Parse human-readable date/time text. Name: parsedatetime Version: 2.6 Summary: Parse human-readable date/time text. Home-page: https://github.com/bear/parsedatetime Author: Mike Taylor Author-email: bear@bear.im License: Apache License 2.0 Requires: Required-by:","title":"parsedatetime ~=2.6"},{"location":"requirements/#passlib-174","text":"Comprehensive password hashing framework supporting over 30 schemes Name: passlib Version: 1.7.4 Summary: comprehensive password hashing framework supporting over 30 schemes Home-page: https://passlib.readthedocs.io Author: Eli Collins Author-email: elic@assurancetechnologies.com License: BSD Requires: Required-by: fastapi-users","title":"passlib ~=1.7.4"},{"location":"requirements/#pgpy-054","text":"Pretty good privacy for python Name: PGPy Version: 0.5.4 Summary: Pretty Good Privacy for Python Home-page: https://github.com/SecurityInnovation/PGPy Author: Michael Greene Author-email: mgreene@securityinnovation.com License: BSD Requires: cryptography, pyasn1, six Required-by:","title":"PGPy ~=0.5.4"},{"location":"requirements/#prometheus_fastapi_instrumentator-590","text":"Instrument your fastapi with prometheus metrics Name: prometheus-fastapi-instrumentator Version: 5.9.0 Summary: Instrument your FastAPI with Prometheus metrics Home-page: https://github.com/trallnag/prometheus-fastapi-instrumentator Author: Tim Schwenke Author-email: tim.schwenke@trallnag.com License: ISC Requires: fastapi, prometheus-client Required-by:","title":"prometheus_fastapi_instrumentator ~=5.9.0"},{"location":"requirements/#psutil-592","text":"Cross-platform lib for process and system monitoring in python. Name: psutil Version: 5.9.2 Summary: Cross-platform lib for process and system monitoring in Python. Home-page: https://github.com/giampaolo/psutil Author: Giampaolo Rodola Author-email: g.rodola@gmail.com License: BSD Requires: Required-by:","title":"psutil ~=5.9.2"},{"location":"requirements/#python_magic-0427","text":"Filetype and metadata detection Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by:","title":"python_magic ~=0.4.27"},{"location":"requirements/#pydantic-192","text":"Data validation and settings management using python type hints Name: pydantic Version: 1.9.2 Summary: Data validation and settings management using python type hints Home-page: https://github.com/samuelcolvin/pydantic Author: Samuel Colvin Author-email: s@muelcolvin.com License: MIT Requires: typing-extensions Required-by: fastapi, fastapi-pagination, fastapi-utils, pandas-profiling, sqlmodel","title":"pydantic ~=1.9.2"},{"location":"requirements/#python_dateutil-282","text":"Extensions to the standard python datetime module Name: python-dateutil Version: 2.8.2 Summary: Extensions to the standard Python datetime module Home-page: https://github.com/dateutil/dateutil Author: Gustavo Niemeyer Author-email: gustavo@niemeyer.net License: Dual License Requires: six Required-by: dapr, dateparser, ghp-import, matplotlib, pandas, strawberry-graphql","title":"python_dateutil ~=2.8.2"},{"location":"requirements/#python-dotenv-0200","text":"Reads key-value pairs from a .env file and can set them as environment variables. Name: python-dotenv Version: 0.20.0 Summary: Read key-value pairs from a .env file and set them as environment variables Home-page: https://github.com/theskumar/python-dotenv Author: Saurabh Kumar Author-email: me+github@saurabh-kumar.com License: BSD-3-Clause Requires: Required-by:","title":"python-dotenv ~=0.20.0"},{"location":"requirements/#python-jose-330","text":"Son web signature (jws), json web encryption (jwe), json web key (jwk), and json web algorithms (jwa) Name: python-jose Version: 3.3.0 Summary: JOSE implementation in Python Home-page: http://github.com/mpdavis/python-jose Author: Michael Davis Author-email: mike.philip.davis@gmail.com License: MIT Requires: ecdsa, pyasn1, rsa Required-by:","title":"python-jose ~=3.3.0"},{"location":"requirements/#regex-202232","text":"Alternative regular expression module, to replace re. Name: regex Version: 2022.3.2 Summary: Alternative regular expression module, to replace re. Home-page: https://github.com/mrabarnett/mrab-regex Author: Matthew Barnett Author-email: regex@mrabarnett.plus.com License: Apache Software License Requires: Required-by: dateparser","title":"regex ~=2022.3.2"},{"location":"requirements/#setuptools-6520","text":"Easily download, build, install, upgrade, and uninstall python packages Name: setuptools Version: 65.2.0 Summary: Easily download, build, install, upgrade, and uninstall Python packages Home-page: https://github.com/pypa/setuptools Author: Python Packaging Authority Author-email: distutils-sig@python.org License: Requires: Required-by: gunicorn, zope.interface","title":"setuptools ~=65.2.0"},{"location":"requirements/#slowapi-016","text":"A rate limiting extension for starlette and fastapi Name: slowapi Version: 0.1.6 Summary: A rate limiting extension for Starlette and Fastapi Home-page: https://github.com/laurents/slowapi Author: Laurent Savaete Author-email: laurent@where.tf License: MIT Requires: limits Required-by:","title":"slowapi ~=0.1.6"},{"location":"requirements/#starlette-related-dependencies","text":"","title":"Starlette related Dependencies"},{"location":"requirements/#sse_starlette-116","text":"Server sent events for starlette and fastapi Name: sse-starlette Version: 1.1.6 Summary: \"SSE plugin for Starlette\" Home-page: https://github.com/sysid/sse-starlette Author: sysid Author-email: sysid@gmx.de License: Requires: starlette Required-by:","title":"sse_starlette ~=1.1.6"},{"location":"requirements/#starlette-0191","text":"Name: starlette Version: 0.19.1 Summary: The little ASGI library that shines. Home-page: https://github.com/encode/starlette Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: anyio, typing-extensions Required-by: fastapi, msgpack-asgi, sse-starlette, starception, starlette-context, Starlette-WTF","title":"starlette ~=0.19.1"},{"location":"requirements/#starlette-wtf-043","text":"Name: Starlette-WTF Version: 0.4.3 Summary: Simple integration of Starlette and WTForms. Home-page: https://github.com/muicss/starlette-wtf Author: Andres Morey Author-email: License: MIT Requires: itsdangerous, python-multipart, starlette, WTForms Required-by:","title":"Starlette-WTF ~=0.4.3"},{"location":"requirements/#starlette-context-034","text":"Access context in starlette Name: starlette-context Version: 0.3.4 Summary: Access context in Starlette Home-page: https://github.com/tomwojcik/starlette-context Author: Tomasz Wojcik Author-email: License: MIT Requires: starlette Required-by:","title":"starlette-context ~=0.3.4"},{"location":"requirements/#starception-040","text":"Beautiful debugging page for starlette apps. Name: starception Version: 0.4.0 Summary: Beautiful debugging page for Starlette apps. Home-page: https://github.com/alex-oleshkevich/starception Author: Alex Oleshkevich Author-email: alex.oleshkevich@gmail.com License: MIT Requires: Jinja2, MarkupSafe, starlette Required-by:","title":"starception ~=0.4.0"},{"location":"requirements/#graphql-related-dependencies","text":"","title":"GraphQL related Dependencies"},{"location":"requirements/#strawberry-graphql-01301","text":"A library for creating graphql apis Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by:","title":"strawberry-graphql ~=0.130.1"},{"location":"requirements/#strawberry-graphql-01301_1","text":"Strawberry provides support for fastapi with a custom apirouter called graphqlrouter. Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by:","title":"strawberry-graphql ~=0.130.1"},{"location":"requirements/#sqldb-related-dependencies","text":"","title":"SQL/DB related Dependencies"},{"location":"requirements/#sqlmodel-008","text":"Sqlmodel, sql databases in python, designed for simplicity, compatibility, and robustness. Name: sqlmodel Version: 0.0.8 Summary: SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness. Home-page: https://github.com/tiangolo/sqlmodel Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: MIT Requires: pydantic, SQLAlchemy, sqlalchemy2-stubs Required-by:","title":"sqlmodel ~=0.0.8"},{"location":"requirements/#sqlalchemy-1441","text":"Database abstraction library Name: SQLAlchemy Version: 1.4.41 Summary: Database Abstraction Library Home-page: https://www.sqlalchemy.org Author: Mike Bayer Author-email: mike_mp@zzzcomputing.com License: MIT Requires: greenlet Required-by: fastapi-users-db-sqlalchemy, fastapi-utils, sqlalchemy_database, sqlmodel","title":"sqlalchemy ~=1.4.41"},{"location":"requirements/#sqlalchemy_database-007","text":"Sqlalchemy-database provides shortcut functions to common database operations for sqlalchemy orm Name: sqlalchemy_database Version: 0.0.7 Summary: SQLAlchemy-Database provides shortcut functions to common database operations for SQLAlchemy ORM. Home-page: Author: Author-email: Atomi <1456417373@qq.com> License: Requires: sqlalchemy Required-by:","title":"sqlalchemy_database ~=0.0.7"},{"location":"requirements/#uvicorn-related-dependencies","text":"","title":"Uvicorn related Dependencies"},{"location":"requirements/#uvicorn-0176","text":"Name: uvicorn Version: 0.17.6 Summary: The lightning-fast ASGI server. Home-page: https://www.uvicorn.org/ Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: asgiref, click, h11 Required-by: dapr-ext-fastapi","title":"uvicorn ~=0.17.6"},{"location":"requirements/#uvloop-0160","text":"Fast implementation of asyncio event loop on top of libuv Name: uvloop Version: 0.16.0 Summary: Fast implementation of asyncio event loop on top of libuv Home-page: http://github.com/MagicStack/uvloop Author: Yury Selivanov Author-email: yury@magic.io License: MIT Requires: Required-by:","title":"uvloop ~=0.16.0"},{"location":"requirements/#general-dependencies_1","text":"","title":"General Dependencies"},{"location":"requirements/#fonttools-4371","text":"Tools to manipulate font files Name: fonttools Version: 4.37.1 Summary: Tools to manipulate font files Home-page: http://github.com/fonttools/fonttools Author: Just van Rossum Author-email: just@letterror.com License: MIT Requires: Required-by: matplotlib","title":"fonttools ~=4.37.1"},{"location":"requirements/#gputil-140","text":"Name: GPUtil Version: 1.4.0 Summary: GPUtil is a Python module for getting the GPU status from NVIDA GPUs using nvidia-smi. Home-page: https://github.com/anderskm/gputil Author: Anders Krogh Mortensen Author-email: anderskroghm@gmail.com License: MIT Requires: Required-by:","title":"gputil ~=1.4.0"},{"location":"requirements/#jinja2-312","text":"Name: Jinja2 Version: 3.1.2 Summary: A very fast and expressive template engine. Home-page: https://palletsprojects.com/p/jinja/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD-3-Clause Requires: MarkupSafe Required-by: Flask, mkdocs, mkdocs-material, mkdocstrings, myst-parser, pandas-profiling, starception","title":"Jinja2 ~=3.1.2"},{"location":"requirements/#matplotlib-353","text":"Name: matplotlib Version: 3.5.3 Summary: Python plotting package Home-page: https://matplotlib.org Author: John D. Hunter, Michael Droettboom Author-email: matplotlib-users@python.org License: PSF Requires: cycler, fonttools, kiwisolver, numpy, packaging, pillow, pyparsing, python-dateutil Required-by: missingno, pandas-profiling, phik, seaborn","title":"matplotlib ~=3.5.3"},{"location":"requirements/#numpy-1233","text":"Numpy is the fundamental package for array computing with python. Name: numpy Version: 1.23.3 Summary: NumPy is the fundamental package for array computing with Python. Home-page: https://www.numpy.org Author: Travis E. Oliphant et al. Author-email: License: BSD Requires: Required-by: ImageHash, matplotlib, missingno, pandas, pandas-profiling, patsy, phik, PyWavelets, scipy, seaborn, statsmodels, visions","title":"numpy ~=1.23.3"},{"location":"requirements/#orjson-380","text":"Name: orjson Version: 3.8.0 Summary: Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy Home-page: https://github.com/ijl/orjson Author: ijl <ijl@mailbox.org> Author-email: ijl <ijl@mailbox.org> License: Apache-2.0 OR MIT Requires: Required-by:","title":"orjson ~=3.8.0"},{"location":"requirements/#pandas-144","text":"Powerful data structures for data analysis, time series, and statistics Name: pandas Version: 1.4.4 Summary: Powerful data structures for data analysis, time series, and statistics Home-page: https://pandas.pydata.org Author: The Pandas Development Team Author-email: pandas-dev@python.org License: BSD-3-Clause Requires: numpy, python-dateutil, pytz Required-by: pandas-profiling, phik, seaborn, statsmodels, visions","title":"pandas ~=1.4.4"},{"location":"requirements/#pandas-profiling-330","text":"Generate profile report for pandas dataframe Name: pandas-profiling Version: 3.3.0 Summary: Generate profile report for pandas DataFrame Home-page: https://github.com/ydataai/pandas-profiling Author: YData Labs Inc Author-email: opensource@ydata.ai License: MIT Requires: htmlmin, jinja2, joblib, matplotlib, missingno, multimethod, numpy, pandas, phik, pydantic, PyYAML, requests, scipy, seaborn, statsmodels, tangled-up-in-unicode, tqdm, visions Required-by:","title":"pandas-profiling ~=3.3.0"},{"location":"requirements/#pillow-920","text":"Python imaging library (fork) Name: Pillow Version: 9.2.0 Summary: Python Imaging Library (Fork) Home-page: https://python-pillow.org Author: Alex Clark (PIL Fork Author) Author-email: aclark@python-pillow.org License: HPND Requires: Required-by: ImageHash, matplotlib","title":"pillow ~=9.2.0"},{"location":"requirements/#python-magic-0427","text":"Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by:","title":"python-magic ~=0.4.27"},{"location":"requirements/#python-multipart-005","text":"Name: python-multipart Version: 0.0.5 Summary: A streaming multipart parser for Python Home-page: http://github.com/andrew-d/python-multipart Author: Andrew Dunham Author-email: License: Apache Requires: six Required-by: fastapi-users, Starlette-WTF, strawberry-graphql","title":"python-multipart ~=0.0.5"},{"location":"requirements/#pytz-202221","text":"Name: pytz Version: 2022.2.1 Summary: World timezone definitions, modern and historical Home-page: http://pythonhosted.org/pytz Author: Stuart Bishop Author-email: stuart@stuartbishop.net License: MIT Requires: Required-by: Babel, dateparser, pandas","title":"pytz ~=2022.2.1"},{"location":"requirements/#documentation-related-libraries","text":"","title":"Documentation related Libraries"},{"location":"requirements/#black-2280","text":"Code formatter. Name: black Version: 22.8.0 Summary: The uncompromising code formatter. Home-page: https://github.com/psf/black Author: \u0141ukasz Langa Author-email: lukasz@langa.pl License: MIT Requires: click, mypy-extensions, pathspec, platformdirs, tomli, typing-extensions Required-by:","title":"black ~=22.8.0"},{"location":"requirements/#mkdocs-131","text":"Project documentation with markdown. Name: mkdocs Version: 1.3.1 Summary: Project documentation with Markdown. Home-page: https://www.mkdocs.org Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: click, ghp-import, importlib-metadata, Jinja2, Markdown, mergedeep, packaging, PyYAML, pyyaml-env-tag, watchdog Required-by: mkdocs-autorefs, mkdocs-gen-files, mkdocs-git-revision-date-localized-plugin, mkdocs-literate-nav, mkdocs-material, mkdocs-section-index, mkdocstrings","title":"mkdocs ~=1.3.1"},{"location":"requirements/#mkdocstrings-0190","text":"Automatic documentation from sources, for mkdocs. Name: mkdocstrings Version: 0.19.0 Summary: Automatic documentation from sources, for MkDocs. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: UNKNOWN Requires: Jinja2, Markdown, MarkupSafe, mkdocs, mkdocs-autorefs, pymdown-extensions Required-by: mkdocstrings-python","title":"mkdocstrings ~=0.19.0"},{"location":"requirements/#mkdocstrings-python-071","text":"A python handler for mkdocstrings. Name: mkdocstrings-python Version: 0.7.1 Summary: A Python handler for mkdocstrings. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: ISC Requires: griffe, mkdocstrings Required-by:","title":"mkdocstrings-python ~=0.7.1"},{"location":"requirements/#mkdocs-material-843","text":"Material design theme for mkdocs Name: mkdocs-material Version: 8.4.3 Summary: Documentation that simply works Home-page: https://squidfunk.github.io/mkdocs-material/ Author: Martin Donath Author-email: martin.donath@squidfunk.com License: MIT Requires: jinja2, markdown, mkdocs, mkdocs-material-extensions, pygments, pymdown-extensions Required-by:","title":"mkdocs-material ~=8.4.3"},{"location":"requirements/#mkdocs-gen-files-040","text":"Mkdocs plugin to programmatically generate documentation pages during the build Name: mkdocs-gen-files Version: 0.4.0 Summary: MkDocs plugin to programmatically generate documentation pages during the build Home-page: https://github.com/oprypin/mkdocs-gen-files Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by:","title":"mkdocs-gen-files ~=0.4.0"},{"location":"requirements/#mkdocs-literate-nav-041","text":"Mkdocs plugin to specify the navigation in markdown instead of yaml Name: mkdocs-literate-nav Version: 0.4.1 Summary: MkDocs plugin to specify the navigation in Markdown instead of YAML Home-page: https://github.com/oprypin/mkdocs-literate-nav Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by:","title":"mkdocs-literate-nav ~=0.4.1"},{"location":"requirements/#mkdocs-section-index-034","text":"Mkdocs plugin to allow clickable sections that lead to an index page Name: mkdocs-section-index Version: 0.3.4 Summary: MkDocs plugin to allow clickable sections that lead to an index page Home-page: https://github.com/oprypin/mkdocs-section-index Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by:","title":"mkdocs-section-index ~=0.3.4"},{"location":"requirements/#mkdocs-page-pdf-010","text":"Generate a pdf file for each mkdocs page and adds a download button Name: mkdocs-page-pdf Version: 0.1.0 Summary: Generate a PDF file for each MkDocs page Home-page: https://github.com/brospars/mkdocs-page-pdf Author: brospars Author-email: License: MIT Requires: asyncio, mkdocs, nest-asyncio, pyppeteer Required-by:","title":"mkdocs-page-pdf ~=0.1.0"},{"location":"requirements/#mkdocs-git-revision-date-localized-plugin-110","text":"Name: mkdocs-git-revision-date-localized-plugin Version: 1.1.0 Summary: Mkdocs plugin that enables displaying the localized date of the last git modification of a markdown file. Home-page: https://github.com/timvink/mkdocs-git-revision-date-localized-plugin Author: Tim Vink Author-email: vinktim@gmail.com License: MIT Requires: babel, GitPython, mkdocs Required-by:","title":"mkdocs-git-revision-date-localized-plugin ~=1.1.0"},{"location":"requirements/#pygments-2130","text":"Generic syntax highlighter Name: Pygments Version: 2.13.0 Summary: Pygments is a syntax highlighting package written in Python. Home-page: https://pygments.org/ Author: Georg Brandl Author-email: georg@python.org License: BSD License Requires: Required-by: mkdocs-material, strawberry-graphql","title":"Pygments ~=2.13.0"},{"location":"used_tools/","text":"Inspiration and Used Tools \u00b6 What inspired to build msaSDK , how it came to life and why i use an SDK in Micro Service Architectures. Intro \u00b6 msaSDK wouldn't exist if not for the previous work of others, esp. FastAPI and Dapr . There have been many tools created before that have helped inspire its creation. I have been avoiding the creation of a SDK for several years. I always started with all the features covered by FastAPI and adding many different frameworks, plug-ins, and tools. But at some point, the hustle to always start from scratch doing the same things slightly different all the times, each PoC or MVP was a new adventure, esp. since we now build systems with 10s or hundred's of microservices. So i fell in love with FastAPI, Pydantic, Tyype hints and then SQLModel a while ago when i learned about Dapr. Dapr and FastAPI combined is simply developers heaven. So i build the SDK to ease management of all the versions and which tool to use for what, get rid of repeated implementations and ease to build many microservices which are part of one system and can run on any Cloud deployment option. As i work in AI and mainly only build AI based automation solutions, i also added the Document Models which i typically need to process document content through AI systems. The msaSDK basically covers my toolbox which i use for any microservice and API, the bottom line layer. As i am not a 'real' programmer and tend to believe i just play with building blocks and maybe develop some glue between them, i decided to also make it Open Source. Hope this helps or even inspire some people on how to use those awsome Open Source packages in real world applications. Used by msaSDK beside FastAPI and Dapr \u00b6 Pydantic \u00b6 Pydantic is a library to define data validation, serialization and documentation (using JSON Schema) based on Python type hints. That makes it extremely intuitive. It is comparable to Marshmallow. Although it's faster than Marshmallow in benchmarks. And as it is based on the same Python type hints, the editor support is great. FastAPI uses it to Handle all the data validation, data serialization and automatic model documentation (based on JSON Schema). FastAPI then takes that JSON Schema data and puts it in OpenAPI, apart from all the other things it does. FastAPI and Starlette \u00b6 FastAPI is build on top of Starlette, which is a lightweight ASGI framework/toolkit, which is ideal for building high-performance asyncio services. It is a high performance, easy to learn, fast to code, ready for production framework. It has: Seriously impressive performance. WebSocket support. In-process background tasks. Startup and shutdown events. Test client built on requests. CORS, GZip, Static Files, Streaming responses. Session and Cookie support. 100% test coverage. 100% type annotated codebase. Few hard dependencies. Starlette is currently the fastest Python framework tested. Only surpassed by Uvicorn, which is not a framework, but a server. Starlette provides all the basic web microframework functionality. But it doesn't provide automatic data validation, serialization or documentation. That's one of the main things that FastAPI adds on top, all based on Python type hints (using Pydantic). That, plus the dependency injection system, security utilities, OpenAPI schema generation, etc. Technical Details ASGI is a new \"standard\" being developed by Django core team members. It is still not a \"Python standard\" (a PEP), although they are in the process of doing that. Nevertheless, it is already being used as a \"standard\" by several tools. This greatly improves interoperability, as you could switch Uvicorn for any other ASGI server (like Daphne or Hypercorn), or you could add ASGI compatible tools, like python-socketio . FastAPI uses it to Handle all the core web parts. Adding features on top. The class FastAPI itself inherits directly from the class Starlette . So, anything that you can do with Starlette, you can do it directly with FastAPI , as it is basically Starlette on steroids. Uvicorn \u00b6 Uvicorn is a lightning-fast ASGI server, built on uvloop and httptools. It is not a web framework, but a server. For example, it doesn't provide tools for routing by paths. That's something that a framework (like Starlette or FastAPI) would provide on top. It is the recommended server for Starlette, FastAPI and you guessed it msaSDK . FastAPI recommends it as The main web server to run FastAPI applications. You can combine it with Gunicorn, to have an asynchronous multi-process server. Check more details in the Deployment section.","title":"Inspiration and Used Tools"},{"location":"used_tools/#inspiration-and-used-tools","text":"What inspired to build msaSDK , how it came to life and why i use an SDK in Micro Service Architectures.","title":"Inspiration and Used Tools"},{"location":"used_tools/#intro","text":"msaSDK wouldn't exist if not for the previous work of others, esp. FastAPI and Dapr . There have been many tools created before that have helped inspire its creation. I have been avoiding the creation of a SDK for several years. I always started with all the features covered by FastAPI and adding many different frameworks, plug-ins, and tools. But at some point, the hustle to always start from scratch doing the same things slightly different all the times, each PoC or MVP was a new adventure, esp. since we now build systems with 10s or hundred's of microservices. So i fell in love with FastAPI, Pydantic, Tyype hints and then SQLModel a while ago when i learned about Dapr. Dapr and FastAPI combined is simply developers heaven. So i build the SDK to ease management of all the versions and which tool to use for what, get rid of repeated implementations and ease to build many microservices which are part of one system and can run on any Cloud deployment option. As i work in AI and mainly only build AI based automation solutions, i also added the Document Models which i typically need to process document content through AI systems. The msaSDK basically covers my toolbox which i use for any microservice and API, the bottom line layer. As i am not a 'real' programmer and tend to believe i just play with building blocks and maybe develop some glue between them, i decided to also make it Open Source. Hope this helps or even inspire some people on how to use those awsome Open Source packages in real world applications.","title":"Intro"},{"location":"used_tools/#used-by-msasdk-beside-fastapi-and-dapr","text":"","title":"Used by msaSDK beside FastAPI and Dapr"},{"location":"used_tools/#pydantic","text":"Pydantic is a library to define data validation, serialization and documentation (using JSON Schema) based on Python type hints. That makes it extremely intuitive. It is comparable to Marshmallow. Although it's faster than Marshmallow in benchmarks. And as it is based on the same Python type hints, the editor support is great. FastAPI uses it to Handle all the data validation, data serialization and automatic model documentation (based on JSON Schema). FastAPI then takes that JSON Schema data and puts it in OpenAPI, apart from all the other things it does.","title":"Pydantic"},{"location":"used_tools/#fastapi-and-starlette","text":"FastAPI is build on top of Starlette, which is a lightweight ASGI framework/toolkit, which is ideal for building high-performance asyncio services. It is a high performance, easy to learn, fast to code, ready for production framework. It has: Seriously impressive performance. WebSocket support. In-process background tasks. Startup and shutdown events. Test client built on requests. CORS, GZip, Static Files, Streaming responses. Session and Cookie support. 100% test coverage. 100% type annotated codebase. Few hard dependencies. Starlette is currently the fastest Python framework tested. Only surpassed by Uvicorn, which is not a framework, but a server. Starlette provides all the basic web microframework functionality. But it doesn't provide automatic data validation, serialization or documentation. That's one of the main things that FastAPI adds on top, all based on Python type hints (using Pydantic). That, plus the dependency injection system, security utilities, OpenAPI schema generation, etc. Technical Details ASGI is a new \"standard\" being developed by Django core team members. It is still not a \"Python standard\" (a PEP), although they are in the process of doing that. Nevertheless, it is already being used as a \"standard\" by several tools. This greatly improves interoperability, as you could switch Uvicorn for any other ASGI server (like Daphne or Hypercorn), or you could add ASGI compatible tools, like python-socketio . FastAPI uses it to Handle all the core web parts. Adding features on top. The class FastAPI itself inherits directly from the class Starlette . So, anything that you can do with Starlette, you can do it directly with FastAPI , as it is basically Starlette on steroids.","title":"FastAPI and Starlette"},{"location":"used_tools/#uvicorn","text":"Uvicorn is a lightning-fast ASGI server, built on uvloop and httptools. It is not a web framework, but a server. For example, it doesn't provide tools for routing by paths. That's something that a framework (like Starlette or FastAPI) would provide on top. It is the recommended server for Starlette, FastAPI and you guessed it msaSDK . FastAPI recommends it as The main web server to run FastAPI applications. You can combine it with Gunicorn, to have an asynchronous multi-process server. Check more details in the Deployment section.","title":"Uvicorn"},{"location":"examples/example_app/","text":"Example Usage of MSAApp Copyright \u00a9 2022 - U2D.ai / S.Welcker Example Usage of MSAApp Copyright (c) 2022 - U2D.ai / S.Welcker __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers, MSATimerEnum async def test_timer_min(): app.logger.info(\"msaSDK Test Timer Async Every Minute\") def test_timer_five_sec(): app.logger.info(\"msaSDK Test Timer Sync 5 Second\") class TestArticle(SQLModel, table=True): id: Optional[int] = Field(default=None, primary_key=True, nullable=False) title: str = Field(title='ArticleTitle', max_length=200) description: Optional[str] = Field(default='', title='ArticleDescription', max_length=400) status: bool = Field(None, title='status') content: str = Field(title='ArticleContent') class TestCategory(SQLModel, table=True): id: Optional[int] = Field(default=None, primary_key=True, nullable=False) title: str = Field(title='ArticleTitle', max_length=200) description: Optional[str] = Field(default='', title='ArticleDescription', max_length=400) status: bool = Field(None, title='status') content: str = Field(title='ArticleContent') get_msa_app_settings.cache_clear() settings = get_msa_app_settings() settings.title = \"SPK.ai - MSA/SDK MVP\" settings.version = \"SPK.0.0.1\" settings.debug = True my_timers: MSATimers = MSATimers() my_timers.create_timer(MSATimerEnum.every_minute, test_timer_min) my_timers.create_timer(MSATimerEnum.on_the_5_second, test_timer_five_sec) app = MSAApp(settings=settings, timers=my_timers, auto_mount_site=True, sql_models=[TestArticle, TestCategory], contact={\"name\": \"msaSDK\", \"url\": \"http://u2d.ai\", \"email\": \"stefan@u2d.ai\"}, license_info={\"name\": \"MIT\", \"url\": \"https://opensource.org/licenses/MIT\", }) app.logger.info(\"Initialized \" + settings.title + \" \" + settings.version) @app.on_event(\"startup\") async def startup(): app.logger.info(\"msaSDK Own Startup MSAUIEvent\") #app.mount_site() @app.on_event(\"shutdown\") async def shutdown(): app.logger.info(\"msaSDK Own Shutdown MSAUIEvent\") if __name__ == '__main__': pass","title":"App"},{"location":"guides/","text":"Tutorial - User Guide - Intro \u00b6 This tutorial shows you how to use msaSDK with most of its features, step by step. Each section gradually builds on the previous ones, but it's structured to separate topics, so that you can go directly to any specific one to solve your specific API needs. It is also built to work as a future reference. So you can come back and see exactly what you need. Run the code \u00b6 All the code blocks can be copied and used directly (they are actually tested Python files). To run any of the examples, copy the code to a file main.py , and start uvicorn with: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) <span style=\"color: green;\">INFO</span>: Started reloader process [28720] <span style=\"color: green;\">INFO</span>: Started server process [28722] <span style=\"color: green;\">INFO</span>: Waiting for application startup. <span style=\"color: green;\">INFO</span>: Application startup complete. It is HIGHLY encouraged that you write or copy the code, edit it and run it locally. Using it in your editor is what really shows you the benefits of FastAPI, seeing how little code you have to write, all the type checks, autocompletion, etc. Install msaSDK \u00b6 The first step is to install FastAPI. For the tutorial, you might want to install it with all the optional dependencies and features: $ pip install \"fastapi[all]\" ---> 100% ...that also includes uvicorn , that you can use as the server that runs your code. Note You can also install it part by part. This is what you would probably do once you want to deploy your application to production: pip install fastapi Also install uvicorn to work as the server: pip install \"uvicorn[standard]\" And the same for each of the optional dependencies that you want to use. Advanced User Guide \u00b6 There is also an Advanced User Guide that you can read later after this Tutorial - User guide . The Advanced User Guide , builds on this, uses the same concepts, and teaches you some extra features. But you should first read the Tutorial - User Guide (what you are reading right now). It's designed so that you can build a complete application with just the Tutorial - User Guide , and then extend it in different ways, depending on your needs, using some of the additional ideas from the Advanced User Guide .","title":"User Guides"},{"location":"guides/#tutorial-user-guide-intro","text":"This tutorial shows you how to use msaSDK with most of its features, step by step. Each section gradually builds on the previous ones, but it's structured to separate topics, so that you can go directly to any specific one to solve your specific API needs. It is also built to work as a future reference. So you can come back and see exactly what you need.","title":"Tutorial - User Guide - Intro"},{"location":"guides/#run-the-code","text":"All the code blocks can be copied and used directly (they are actually tested Python files). To run any of the examples, copy the code to a file main.py , and start uvicorn with: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) <span style=\"color: green;\">INFO</span>: Started reloader process [28720] <span style=\"color: green;\">INFO</span>: Started server process [28722] <span style=\"color: green;\">INFO</span>: Waiting for application startup. <span style=\"color: green;\">INFO</span>: Application startup complete. It is HIGHLY encouraged that you write or copy the code, edit it and run it locally. Using it in your editor is what really shows you the benefits of FastAPI, seeing how little code you have to write, all the type checks, autocompletion, etc.","title":"Run the code"},{"location":"guides/#install-msasdk","text":"The first step is to install FastAPI. For the tutorial, you might want to install it with all the optional dependencies and features: $ pip install \"fastapi[all]\" ---> 100% ...that also includes uvicorn , that you can use as the server that runs your code. Note You can also install it part by part. This is what you would probably do once you want to deploy your application to production: pip install fastapi Also install uvicorn to work as the server: pip install \"uvicorn[standard]\" And the same for each of the optional dependencies that you want to use.","title":"Install msaSDK"},{"location":"guides/#advanced-user-guide","text":"There is also an Advanced User Guide that you can read later after this Tutorial - User guide . The Advanced User Guide , builds on this, uses the same concepts, and teaches you some extra features. But you should first read the Tutorial - User Guide (what you are reading right now). It's designed so that you can build a complete application with just the Tutorial - User Guide , and then extend it in different ways, depending on your needs, using some of the additional ideas from the Advanced User Guide .","title":"Advanced User Guide"},{"location":"guides/background-tasks/","text":"Background Tasks \u00b6 You can define background tasks to be run after returning a response. This is useful for operations that need to happen after a request, but that the client doesn't really have to be waiting for the operation to complete before receiving the response. This includes, for example: Email notifications sent after performing an action: As connecting to an email server and sending an email tends to be \"slow\" (several seconds), you can return the response right away and send the email notification in the background. Processing data: For example, let's say you receive a file that must go through a slow process, you can return a response of \"Accepted\" (HTTP 202) and process it in the background. Using BackgroundTasks \u00b6 First, import BackgroundTasks and define a parameter in your path operation function with a type declaration of BackgroundTasks : { ! ../../../ docs_src / background_tasks / tutorial001 . py ! } FastAPI will create the object of type BackgroundTasks for you and pass it as that parameter. Create a task function \u00b6 Create a function to be run as the background task. It is just a standard function that can receive parameters. It can be an async def or normal def function, FastAPI will know how to handle it correctly. In this case, the task function will write to a file (simulating sending an email). And as the write operation doesn't use async and await , we define the function with normal def : { ! ../../../ docs_src / background_tasks / tutorial001 . py ! } Add the background task \u00b6 Inside of your path operation function , pass your task function to the background tasks object with the method .add_task() : { ! ../../../ docs_src / background_tasks / tutorial001 . py ! } .add_task() receives as arguments: A task function to be run in the background ( write_notification ). Any sequence of arguments that should be passed to the task function in order ( email ). Any keyword arguments that should be passed to the task function ( message=\"some notification\" ). Dependency Injection \u00b6 Using BackgroundTasks also works with the dependency injection system, you can declare a parameter of type BackgroundTasks at multiple levels: in a path operation function , in a dependency (dependable), in a sub-dependency, etc. FastAPI knows what to do in each case and how to re-use the same object, so that all the background tasks are merged together and are run in the background afterwards: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / background_tasks / tutorial002 . py ! } { ! > ../../../ docs_src / background_tasks / tutorial002_py310 . py ! } In this example, the messages will be written to the log.txt file after the response is sent. If there was a query in the request, it will be written to the log in a background task. And then another background task generated at the path operation function will write a message using the email path parameter. Technical Details \u00b6 The class BackgroundTasks comes directly from starlette.background . It is imported/included directly into FastAPI so that you can import it from fastapi and avoid accidentally importing the alternative BackgroundTask (without the s at the end) from starlette.background . By only using BackgroundTasks (and not BackgroundTask ), it's then possible to use it as a path operation function parameter and have FastAPI handle the rest for you, just like when using the Request object directly. It's still possible to use BackgroundTask alone in FastAPI, but you have to create the object in your code and return a Starlette Response including it. You can see more details in Starlette's official docs for Background Tasks . Caveat \u00b6 If you need to perform heavy background computation and you don't necessarily need it to be run by the same process (for example, you don't need to share memory, variables, etc), you might benefit from using other bigger tools like Celery . They tend to require more complex configurations, a message/job queue manager, like RabbitMQ or Redis, but they allow you to run background tasks in multiple processes, and especially, in multiple servers. To see an example, check the Project Generators , they all include Celery already configured. But if you need to access variables and objects from the same FastAPI app, or you need to perform small background tasks (like sending an email notification), you can simply just use BackgroundTasks . Recap \u00b6 Import and use BackgroundTasks with parameters in path operation functions and dependencies to add background tasks.","title":"Background Tasks"},{"location":"guides/background-tasks/#background-tasks","text":"You can define background tasks to be run after returning a response. This is useful for operations that need to happen after a request, but that the client doesn't really have to be waiting for the operation to complete before receiving the response. This includes, for example: Email notifications sent after performing an action: As connecting to an email server and sending an email tends to be \"slow\" (several seconds), you can return the response right away and send the email notification in the background. Processing data: For example, let's say you receive a file that must go through a slow process, you can return a response of \"Accepted\" (HTTP 202) and process it in the background.","title":"Background Tasks"},{"location":"guides/background-tasks/#using-backgroundtasks","text":"First, import BackgroundTasks and define a parameter in your path operation function with a type declaration of BackgroundTasks : { ! ../../../ docs_src / background_tasks / tutorial001 . py ! } FastAPI will create the object of type BackgroundTasks for you and pass it as that parameter.","title":"Using BackgroundTasks"},{"location":"guides/background-tasks/#create-a-task-function","text":"Create a function to be run as the background task. It is just a standard function that can receive parameters. It can be an async def or normal def function, FastAPI will know how to handle it correctly. In this case, the task function will write to a file (simulating sending an email). And as the write operation doesn't use async and await , we define the function with normal def : { ! ../../../ docs_src / background_tasks / tutorial001 . py ! }","title":"Create a task function"},{"location":"guides/background-tasks/#add-the-background-task","text":"Inside of your path operation function , pass your task function to the background tasks object with the method .add_task() : { ! ../../../ docs_src / background_tasks / tutorial001 . py ! } .add_task() receives as arguments: A task function to be run in the background ( write_notification ). Any sequence of arguments that should be passed to the task function in order ( email ). Any keyword arguments that should be passed to the task function ( message=\"some notification\" ).","title":"Add the background task"},{"location":"guides/background-tasks/#dependency-injection","text":"Using BackgroundTasks also works with the dependency injection system, you can declare a parameter of type BackgroundTasks at multiple levels: in a path operation function , in a dependency (dependable), in a sub-dependency, etc. FastAPI knows what to do in each case and how to re-use the same object, so that all the background tasks are merged together and are run in the background afterwards: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / background_tasks / tutorial002 . py ! } { ! > ../../../ docs_src / background_tasks / tutorial002_py310 . py ! } In this example, the messages will be written to the log.txt file after the response is sent. If there was a query in the request, it will be written to the log in a background task. And then another background task generated at the path operation function will write a message using the email path parameter.","title":"Dependency Injection"},{"location":"guides/background-tasks/#technical-details","text":"The class BackgroundTasks comes directly from starlette.background . It is imported/included directly into FastAPI so that you can import it from fastapi and avoid accidentally importing the alternative BackgroundTask (without the s at the end) from starlette.background . By only using BackgroundTasks (and not BackgroundTask ), it's then possible to use it as a path operation function parameter and have FastAPI handle the rest for you, just like when using the Request object directly. It's still possible to use BackgroundTask alone in FastAPI, but you have to create the object in your code and return a Starlette Response including it. You can see more details in Starlette's official docs for Background Tasks .","title":"Technical Details"},{"location":"guides/background-tasks/#caveat","text":"If you need to perform heavy background computation and you don't necessarily need it to be run by the same process (for example, you don't need to share memory, variables, etc), you might benefit from using other bigger tools like Celery . They tend to require more complex configurations, a message/job queue manager, like RabbitMQ or Redis, but they allow you to run background tasks in multiple processes, and especially, in multiple servers. To see an example, check the Project Generators , they all include Celery already configured. But if you need to access variables and objects from the same FastAPI app, or you need to perform small background tasks (like sending an email notification), you can simply just use BackgroundTasks .","title":"Caveat"},{"location":"guides/background-tasks/#recap","text":"Import and use BackgroundTasks with parameters in path operation functions and dependencies to add background tasks.","title":"Recap"},{"location":"guides/bigger-applications/","text":"Bigger Applications - Multiple Files \u00b6 If you are building an application or a web API, it's rarely the case that you can put everything on a single file. FastAPI provides a convenience tool to structure your application while keeping all the flexibility. Info If you come from Flask, this would be the equivalent of Flask's Blueprints. An example file structure \u00b6 Let's say you have a file structure like this: . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u2502 \u251c\u2500\u2500 dependencies.py \u2502 \u2514\u2500\u2500 routers \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 items.py \u2502 \u2502 \u2514\u2500\u2500 users.py \u2502 \u2514\u2500\u2500 internal \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 admin.py Tip There are several __init__.py files: one in each directory or subdirectory. This is what allows importing code from one file into another. For example, in app/main.py you could have a line like: from app.routers import items The app directory contains everything. And it has an empty file app/__init__.py , so it is a \"Python package\" (a collection of \"Python modules\"): app . It contains an app/main.py file. As it is inside a Python package (a directory with a file __init__.py ), it is a \"module\" of that package: app.main . There's also an app/dependencies.py file, just like app/main.py , it is a \"module\": app.dependencies . There's a subdirectory app/routers/ with another file __init__.py , so it's a \"Python subpackage\": app.routers . The file app/routers/items.py is inside a package, app/routers/ , so, it's a submodule: app.routers.items . The same with app/routers/users.py , it's another submodule: app.routers.users . There's also a subdirectory app/internal/ with another file __init__.py , so it's another \"Python subpackage\": app.internal . And the file app/internal/admin.py is another submodule: app.internal.admin . The same file structure with comments: . \u251c\u2500\u2500 app # \"app\" is a Python package \u2502 \u251c\u2500\u2500 __init__.py # this file makes \"app\" a \"Python package\" \u2502 \u251c\u2500\u2500 main.py # \"main\" module, e.g. import app.main \u2502 \u251c\u2500\u2500 dependencies.py # \"dependencies\" module, e.g. import app.dependencies \u2502 \u2514\u2500\u2500 routers # \"routers\" is a \"Python subpackage\" \u2502 \u2502 \u251c\u2500\u2500 __init__.py # makes \"routers\" a \"Python subpackage\" \u2502 \u2502 \u251c\u2500\u2500 items.py # \"items\" submodule, e.g. import app.routers.items \u2502 \u2502 \u2514\u2500\u2500 users.py # \"users\" submodule, e.g. import app.routers.users \u2502 \u2514\u2500\u2500 internal # \"internal\" is a \"Python subpackage\" \u2502 \u251c\u2500\u2500 __init__.py # makes \"internal\" a \"Python subpackage\" \u2502 \u2514\u2500\u2500 admin.py # \"admin\" submodule, e.g. import app.internal.admin APIRouter \u00b6 Let's say the file dedicated to handling just users is the submodule at /app/routers/users.py . You want to have the path operations related to your users separated from the rest of the code, to keep it organized. But it's still part of the same FastAPI application/web API (it's part of the same \"Python Package\"). You can create the path operations for that module using APIRouter . Import APIRouter \u00b6 You import it and create an \"instance\" the same way you would with the class FastAPI : { ! ../../../ docs_src / bigger_applications / app / routers / users . py ! } Path operations with APIRouter \u00b6 And then you use it to declare your path operations . Use it the same way you would use the FastAPI class: { ! ../../../ docs_src / bigger_applications / app / routers / users . py ! } You can think of APIRouter as a \"mini FastAPI \" class. All the same options are supported. All the same parameters , responses , dependencies , tags , etc. Tip In this example, the variable is called router , but you can name it however you want. We are going to include this APIRouter in the main FastAPI app, but first, let's check the dependencies and another APIRouter . Dependencies \u00b6 We see that we are going to need some dependencies used in several places of the application. So we put them in their own dependencies module ( app/dependencies.py ). We will now use a simple dependency to read a custom X-Token header: { ! ../../../ docs_src / bigger_applications / app / dependencies . py ! } Tip We are using an invented header to simplify this example. But in real cases you will get better results using the integrated Security utilities . Another module with APIRouter \u00b6 Let's say you also have the endpoints dedicated to handling \"items\" from your application in the module at app/routers/items.py . You have path operations for: /items/ /items/{item_id} It's all the same structure as with app/routers/users.py . But we want to be smarter and simplify the code a bit. We know all the path operations in this module have the same: Path prefix : /items . tags : (just one tag: items ). Extra responses . dependencies : they all need that X-Token dependency we created. So, instead of adding all that to each path operation , we can add it to the APIRouter . { ! ../../../ docs_src / bigger_applications / app / routers / items . py ! } As the path of each path operation has to start with / , like in: @router . get ( \"/ {item_id} \" ) async def read_item ( item_id : str ): ... ...the prefix must not include a final / . So, the prefix in this case is /items . We can also add a list of tags and extra responses that will be applied to all the path operations included in this router. And we can add a list of dependencies that will be added to all the path operations in the router and will be executed/solved for each request made to them. Tip Note that, much like dependencies in path operation decorators , no value will be passed to your path operation function . The end result is that the item paths are now: /items/ /items/{item_id} ...as we intended. They will be marked with a list of tags that contain a single string \"items\" . These \"tags\" are especially useful for the automatic interactive documentation systems (using OpenAPI). All of them will include the predefined responses . All these path operations will have the list of dependencies evaluated/executed before them. If you also declare dependencies in a specific path operation , they will be executed too . The router dependencies are executed first, then the dependencies in the decorator , and then the normal parameter dependencies. You can also add Security dependencies with scopes . Tip Having dependencies in the APIRouter can be used, for example, to require authentication for a whole group of path operations . Even if the dependencies are not added individually to each one of them. Check The prefix , tags , responses , and dependencies parameters are (as in many other cases) just a feature from FastAPI to help you avoid code duplication. Import the dependencies \u00b6 This codes lives in the module app.routers.items , the file app/routers/items.py . And we need to get the dependency function from the module app.dependencies , the file app/dependencies.py . So we use a relative import with .. for the dependencies: { ! ../../../ docs_src / bigger_applications / app / routers / items . py ! } How relative imports work \u00b6 Tip If you know perfectly how imports work, continue to the next section below. A single dot . , like in: from .dependencies import get_token_header would mean: Starting in the same package that this module (the file app/routers/items.py ) lives in (the directory app/routers/ )... find the module dependencies (an imaginary file at app/routers/dependencies.py )... and from it, import the function get_token_header . But that file doesn't exist, our dependencies are in a file at app/dependencies.py . Remember how our app/file structure looks like: The two dots .. , like in: from ..dependencies import get_token_header mean: Starting in the same package that this module (the file app/routers/items.py ) lives in (the directory app/routers/ )... go to the parent package (the directory app/ )... and in there, find the module dependencies (the file at app/dependencies.py )... and from it, import the function get_token_header . That works correctly! \ud83c\udf89 The same way, if we had used three dots ... , like in: from ...dependencies import get_token_header that would mean: Starting in the same package that this module (the file app/routers/items.py ) lives in (the directory app/routers/ )... go to the parent package (the directory app/ )... then go to the parent of that package (there's no parent package, app is the top level \ud83d\ude31)... and in there, find the module dependencies (the file at app/dependencies.py )... and from it, import the function get_token_header . That would refer to some package above app/ , with its own file __init__.py , etc. But we don't have that. So, that would throw an error in our example. \ud83d\udea8 But now you know how it works, so you can use relative imports in your own apps no matter how complex they are. \ud83e\udd13 Add some custom tags , responses , and dependencies \u00b6 We are not adding the prefix /items nor the tags=[\"items\"] to each path operation because we added them to the APIRouter . But we can still add more tags that will be applied to a specific path operation , and also some extra responses specific to that path operation : { ! ../../../ docs_src / bigger_applications / app / routers / items . py ! } Tip This last path operation will have the combination of tags: [\"items\", \"custom\"] . And it will also have both responses in the documentation, one for 404 and one for 403 . The main FastAPI \u00b6 Now, let's see the module at app/main.py . Here's where you import and use the class FastAPI . This will be the main file in your application that ties everything together. And as most of your logic will now live in its own specific module, the main file will be quite simple. Import FastAPI \u00b6 You import and create a FastAPI class as normally. And we can even declare global dependencies that will be combined with the dependencies for each APIRouter : { ! ../../../ docs_src / bigger_applications / app / main . py ! } Import the APIRouter \u00b6 Now we import the other submodules that have APIRouter s: { ! ../../../ docs_src / bigger_applications / app / main . py ! } As the files app/routers/users.py and app/routers/items.py are submodules that are part of the same Python package app , we can use a single dot . to import them using \"relative imports\". How the importing works \u00b6 The section: from .routers import items , users Means: Starting in the same package that this module (the file app/main.py ) lives in (the directory app/ )... look for the subpackage routers (the directory at app/routers/ )... and from it, import the submodule items (the file at app/routers/items.py ) and users (the file at app/routers/users.py )... The module items will have a variable router ( items.router ). This is the same one we created in the file app/routers/items.py , it's an APIRouter object. And then we do the same for the module users . We could also import them like: from app.routers import items , users Info The first version is a \"relative import\": from .routers import items , users The second version is an \"absolute import\": from app.routers import items , users To learn more about Python Packages and Modules, read the official Python documentation about Modules . Avoid name collisions \u00b6 We are importing the submodule items directly, instead of importing just its variable router . This is because we also have another variable named router in the submodule users . If we had imported one after the other, like: from .routers.items import router from .routers.users import router The router from users would overwrite the one from items and we wouldn't be able to use them at the same time. So, to be able to use both of them in the same file, we import the submodules directly: { ! ../../../ docs_src / bigger_applications / app / main . py ! } Include the APIRouter s for users and items \u00b6 Now, let's include the router s from the submodules users and items : { ! ../../../ docs_src / bigger_applications / app / main . py ! } Info users.router contains the APIRouter inside of the file app/routers/users.py . And items.router contains the APIRouter inside of the file app/routers/items.py . With app.include_router() we can add each APIRouter to the main FastAPI application. It will include all the routes from that router as part of it. Technical Details It will actually internally create a path operation for each path operation that was declared in the APIRouter . So, behind the scenes, it will actually work as if everything was the same single app. Check You don't have to worry about performance when including routers. This will take microseconds and will only happen at startup. So it won't affect performance. \u26a1 Include an APIRouter with a custom prefix , tags , responses , and dependencies \u00b6 Now, let's imagine your organization gave you the app/internal/admin.py file. It contains an APIRouter with some admin path operations that your organization shares between several projects. For this example it will be super simple. But let's say that because it is shared with other projects in the organization, we cannot modify it and add a prefix , dependencies , tags , etc. directly to the APIRouter : { ! ../../../ docs_src / bigger_applications / app / internal / admin . py ! } But we still want to set a custom prefix when including the APIRouter so that all its path operations start with /admin , we want to secure it with the dependencies we already have for this project, and we want to include tags and responses . We can declare all that without having to modify the original APIRouter by passing those parameters to app.include_router() : { ! ../../../ docs_src / bigger_applications / app / main . py ! } That way, the original APIRouter will keep unmodified, so we can still share that same app/internal/admin.py file with other projects in the organization. The result is that in our app, each of the path operations from the admin module will have: The prefix /admin . The tag admin . The dependency get_token_header . The response 418 . \ud83c\udf75 But that will only affect that APIRouter in our app, not in any other code that uses it. So, for example, other projects could use the same APIRouter with a different authentication method. Include a path operation \u00b6 We can also add path operations directly to the FastAPI app. Here we do it... just to show that we can \ud83e\udd37: { ! ../../../ docs_src / bigger_applications / app / main . py ! } and it will work correctly, together with all the other path operations added with app.include_router() . Very Technical Details Note : this is a very technical detail that you probably can just skip . The APIRouter s are not \"mounted\", they are not isolated from the rest of the application. This is because we want to include their path operations in the OpenAPI schema and the user interfaces. As we cannot just isolate them and \"mount\" them independently of the rest, the path operations are \"cloned\" (re-created), not included directly. Check the automatic API docs \u00b6 Now, run uvicorn , using the module app.main and the variable app : $ uvicorn app.main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) And open the docs at http://127.0.0.1:8000/docs . You will see the automatic API docs, including the paths from all the submodules, using the correct paths (and prefixes) and the correct tags: Include the same router multiple times with different prefix \u00b6 You can also use .include_router() multiple times with the same router using different prefixes. This could be useful, for example, to expose the same API under different prefixes, e.g. /api/v1 and /api/latest . This is an advanced usage that you might not really need, but it's there in case you do. Include an APIRouter in another \u00b6 The same way you can include an APIRouter in a FastAPI application, you can include an APIRouter in another APIRouter using: router . include_router ( other_router ) Make sure you do it before including router in the FastAPI app, so that the path operations from other_router are also included.","title":"Bigger Applications - Multiple Files"},{"location":"guides/bigger-applications/#bigger-applications-multiple-files","text":"If you are building an application or a web API, it's rarely the case that you can put everything on a single file. FastAPI provides a convenience tool to structure your application while keeping all the flexibility. Info If you come from Flask, this would be the equivalent of Flask's Blueprints.","title":"Bigger Applications - Multiple Files"},{"location":"guides/bigger-applications/#an-example-file-structure","text":"Let's say you have a file structure like this: . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u2502 \u251c\u2500\u2500 dependencies.py \u2502 \u2514\u2500\u2500 routers \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 items.py \u2502 \u2502 \u2514\u2500\u2500 users.py \u2502 \u2514\u2500\u2500 internal \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 admin.py Tip There are several __init__.py files: one in each directory or subdirectory. This is what allows importing code from one file into another. For example, in app/main.py you could have a line like: from app.routers import items The app directory contains everything. And it has an empty file app/__init__.py , so it is a \"Python package\" (a collection of \"Python modules\"): app . It contains an app/main.py file. As it is inside a Python package (a directory with a file __init__.py ), it is a \"module\" of that package: app.main . There's also an app/dependencies.py file, just like app/main.py , it is a \"module\": app.dependencies . There's a subdirectory app/routers/ with another file __init__.py , so it's a \"Python subpackage\": app.routers . The file app/routers/items.py is inside a package, app/routers/ , so, it's a submodule: app.routers.items . The same with app/routers/users.py , it's another submodule: app.routers.users . There's also a subdirectory app/internal/ with another file __init__.py , so it's another \"Python subpackage\": app.internal . And the file app/internal/admin.py is another submodule: app.internal.admin . The same file structure with comments: . \u251c\u2500\u2500 app # \"app\" is a Python package \u2502 \u251c\u2500\u2500 __init__.py # this file makes \"app\" a \"Python package\" \u2502 \u251c\u2500\u2500 main.py # \"main\" module, e.g. import app.main \u2502 \u251c\u2500\u2500 dependencies.py # \"dependencies\" module, e.g. import app.dependencies \u2502 \u2514\u2500\u2500 routers # \"routers\" is a \"Python subpackage\" \u2502 \u2502 \u251c\u2500\u2500 __init__.py # makes \"routers\" a \"Python subpackage\" \u2502 \u2502 \u251c\u2500\u2500 items.py # \"items\" submodule, e.g. import app.routers.items \u2502 \u2502 \u2514\u2500\u2500 users.py # \"users\" submodule, e.g. import app.routers.users \u2502 \u2514\u2500\u2500 internal # \"internal\" is a \"Python subpackage\" \u2502 \u251c\u2500\u2500 __init__.py # makes \"internal\" a \"Python subpackage\" \u2502 \u2514\u2500\u2500 admin.py # \"admin\" submodule, e.g. import app.internal.admin","title":"An example file structure"},{"location":"guides/bigger-applications/#apirouter","text":"Let's say the file dedicated to handling just users is the submodule at /app/routers/users.py . You want to have the path operations related to your users separated from the rest of the code, to keep it organized. But it's still part of the same FastAPI application/web API (it's part of the same \"Python Package\"). You can create the path operations for that module using APIRouter .","title":"APIRouter"},{"location":"guides/bigger-applications/#import-apirouter","text":"You import it and create an \"instance\" the same way you would with the class FastAPI : { ! ../../../ docs_src / bigger_applications / app / routers / users . py ! }","title":"Import APIRouter"},{"location":"guides/bigger-applications/#path-operations-with-apirouter","text":"And then you use it to declare your path operations . Use it the same way you would use the FastAPI class: { ! ../../../ docs_src / bigger_applications / app / routers / users . py ! } You can think of APIRouter as a \"mini FastAPI \" class. All the same options are supported. All the same parameters , responses , dependencies , tags , etc. Tip In this example, the variable is called router , but you can name it however you want. We are going to include this APIRouter in the main FastAPI app, but first, let's check the dependencies and another APIRouter .","title":"Path operations with APIRouter"},{"location":"guides/bigger-applications/#dependencies","text":"We see that we are going to need some dependencies used in several places of the application. So we put them in their own dependencies module ( app/dependencies.py ). We will now use a simple dependency to read a custom X-Token header: { ! ../../../ docs_src / bigger_applications / app / dependencies . py ! } Tip We are using an invented header to simplify this example. But in real cases you will get better results using the integrated Security utilities .","title":"Dependencies"},{"location":"guides/bigger-applications/#another-module-with-apirouter","text":"Let's say you also have the endpoints dedicated to handling \"items\" from your application in the module at app/routers/items.py . You have path operations for: /items/ /items/{item_id} It's all the same structure as with app/routers/users.py . But we want to be smarter and simplify the code a bit. We know all the path operations in this module have the same: Path prefix : /items . tags : (just one tag: items ). Extra responses . dependencies : they all need that X-Token dependency we created. So, instead of adding all that to each path operation , we can add it to the APIRouter . { ! ../../../ docs_src / bigger_applications / app / routers / items . py ! } As the path of each path operation has to start with / , like in: @router . get ( \"/ {item_id} \" ) async def read_item ( item_id : str ): ... ...the prefix must not include a final / . So, the prefix in this case is /items . We can also add a list of tags and extra responses that will be applied to all the path operations included in this router. And we can add a list of dependencies that will be added to all the path operations in the router and will be executed/solved for each request made to them. Tip Note that, much like dependencies in path operation decorators , no value will be passed to your path operation function . The end result is that the item paths are now: /items/ /items/{item_id} ...as we intended. They will be marked with a list of tags that contain a single string \"items\" . These \"tags\" are especially useful for the automatic interactive documentation systems (using OpenAPI). All of them will include the predefined responses . All these path operations will have the list of dependencies evaluated/executed before them. If you also declare dependencies in a specific path operation , they will be executed too . The router dependencies are executed first, then the dependencies in the decorator , and then the normal parameter dependencies. You can also add Security dependencies with scopes . Tip Having dependencies in the APIRouter can be used, for example, to require authentication for a whole group of path operations . Even if the dependencies are not added individually to each one of them. Check The prefix , tags , responses , and dependencies parameters are (as in many other cases) just a feature from FastAPI to help you avoid code duplication.","title":"Another module with APIRouter"},{"location":"guides/bigger-applications/#import-the-dependencies","text":"This codes lives in the module app.routers.items , the file app/routers/items.py . And we need to get the dependency function from the module app.dependencies , the file app/dependencies.py . So we use a relative import with .. for the dependencies: { ! ../../../ docs_src / bigger_applications / app / routers / items . py ! }","title":"Import the dependencies"},{"location":"guides/bigger-applications/#how-relative-imports-work","text":"Tip If you know perfectly how imports work, continue to the next section below. A single dot . , like in: from .dependencies import get_token_header would mean: Starting in the same package that this module (the file app/routers/items.py ) lives in (the directory app/routers/ )... find the module dependencies (an imaginary file at app/routers/dependencies.py )... and from it, import the function get_token_header . But that file doesn't exist, our dependencies are in a file at app/dependencies.py . Remember how our app/file structure looks like: The two dots .. , like in: from ..dependencies import get_token_header mean: Starting in the same package that this module (the file app/routers/items.py ) lives in (the directory app/routers/ )... go to the parent package (the directory app/ )... and in there, find the module dependencies (the file at app/dependencies.py )... and from it, import the function get_token_header . That works correctly! \ud83c\udf89 The same way, if we had used three dots ... , like in: from ...dependencies import get_token_header that would mean: Starting in the same package that this module (the file app/routers/items.py ) lives in (the directory app/routers/ )... go to the parent package (the directory app/ )... then go to the parent of that package (there's no parent package, app is the top level \ud83d\ude31)... and in there, find the module dependencies (the file at app/dependencies.py )... and from it, import the function get_token_header . That would refer to some package above app/ , with its own file __init__.py , etc. But we don't have that. So, that would throw an error in our example. \ud83d\udea8 But now you know how it works, so you can use relative imports in your own apps no matter how complex they are. \ud83e\udd13","title":"How relative imports work"},{"location":"guides/bigger-applications/#add-some-custom-tags-responses-and-dependencies","text":"We are not adding the prefix /items nor the tags=[\"items\"] to each path operation because we added them to the APIRouter . But we can still add more tags that will be applied to a specific path operation , and also some extra responses specific to that path operation : { ! ../../../ docs_src / bigger_applications / app / routers / items . py ! } Tip This last path operation will have the combination of tags: [\"items\", \"custom\"] . And it will also have both responses in the documentation, one for 404 and one for 403 .","title":"Add some custom tags, responses, and dependencies"},{"location":"guides/bigger-applications/#the-main-fastapi","text":"Now, let's see the module at app/main.py . Here's where you import and use the class FastAPI . This will be the main file in your application that ties everything together. And as most of your logic will now live in its own specific module, the main file will be quite simple.","title":"The main FastAPI"},{"location":"guides/bigger-applications/#import-fastapi","text":"You import and create a FastAPI class as normally. And we can even declare global dependencies that will be combined with the dependencies for each APIRouter : { ! ../../../ docs_src / bigger_applications / app / main . py ! }","title":"Import FastAPI"},{"location":"guides/bigger-applications/#import-the-apirouter","text":"Now we import the other submodules that have APIRouter s: { ! ../../../ docs_src / bigger_applications / app / main . py ! } As the files app/routers/users.py and app/routers/items.py are submodules that are part of the same Python package app , we can use a single dot . to import them using \"relative imports\".","title":"Import the APIRouter"},{"location":"guides/bigger-applications/#how-the-importing-works","text":"The section: from .routers import items , users Means: Starting in the same package that this module (the file app/main.py ) lives in (the directory app/ )... look for the subpackage routers (the directory at app/routers/ )... and from it, import the submodule items (the file at app/routers/items.py ) and users (the file at app/routers/users.py )... The module items will have a variable router ( items.router ). This is the same one we created in the file app/routers/items.py , it's an APIRouter object. And then we do the same for the module users . We could also import them like: from app.routers import items , users Info The first version is a \"relative import\": from .routers import items , users The second version is an \"absolute import\": from app.routers import items , users To learn more about Python Packages and Modules, read the official Python documentation about Modules .","title":"How the importing works"},{"location":"guides/bigger-applications/#avoid-name-collisions","text":"We are importing the submodule items directly, instead of importing just its variable router . This is because we also have another variable named router in the submodule users . If we had imported one after the other, like: from .routers.items import router from .routers.users import router The router from users would overwrite the one from items and we wouldn't be able to use them at the same time. So, to be able to use both of them in the same file, we import the submodules directly: { ! ../../../ docs_src / bigger_applications / app / main . py ! }","title":"Avoid name collisions"},{"location":"guides/bigger-applications/#include-the-apirouters-for-users-and-items","text":"Now, let's include the router s from the submodules users and items : { ! ../../../ docs_src / bigger_applications / app / main . py ! } Info users.router contains the APIRouter inside of the file app/routers/users.py . And items.router contains the APIRouter inside of the file app/routers/items.py . With app.include_router() we can add each APIRouter to the main FastAPI application. It will include all the routes from that router as part of it. Technical Details It will actually internally create a path operation for each path operation that was declared in the APIRouter . So, behind the scenes, it will actually work as if everything was the same single app. Check You don't have to worry about performance when including routers. This will take microseconds and will only happen at startup. So it won't affect performance. \u26a1","title":"Include the APIRouters for users and items"},{"location":"guides/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies","text":"Now, let's imagine your organization gave you the app/internal/admin.py file. It contains an APIRouter with some admin path operations that your organization shares between several projects. For this example it will be super simple. But let's say that because it is shared with other projects in the organization, we cannot modify it and add a prefix , dependencies , tags , etc. directly to the APIRouter : { ! ../../../ docs_src / bigger_applications / app / internal / admin . py ! } But we still want to set a custom prefix when including the APIRouter so that all its path operations start with /admin , we want to secure it with the dependencies we already have for this project, and we want to include tags and responses . We can declare all that without having to modify the original APIRouter by passing those parameters to app.include_router() : { ! ../../../ docs_src / bigger_applications / app / main . py ! } That way, the original APIRouter will keep unmodified, so we can still share that same app/internal/admin.py file with other projects in the organization. The result is that in our app, each of the path operations from the admin module will have: The prefix /admin . The tag admin . The dependency get_token_header . The response 418 . \ud83c\udf75 But that will only affect that APIRouter in our app, not in any other code that uses it. So, for example, other projects could use the same APIRouter with a different authentication method.","title":"Include an APIRouter with a custom prefix, tags, responses, and dependencies"},{"location":"guides/bigger-applications/#include-a-path-operation","text":"We can also add path operations directly to the FastAPI app. Here we do it... just to show that we can \ud83e\udd37: { ! ../../../ docs_src / bigger_applications / app / main . py ! } and it will work correctly, together with all the other path operations added with app.include_router() . Very Technical Details Note : this is a very technical detail that you probably can just skip . The APIRouter s are not \"mounted\", they are not isolated from the rest of the application. This is because we want to include their path operations in the OpenAPI schema and the user interfaces. As we cannot just isolate them and \"mount\" them independently of the rest, the path operations are \"cloned\" (re-created), not included directly.","title":"Include a path operation"},{"location":"guides/bigger-applications/#check-the-automatic-api-docs","text":"Now, run uvicorn , using the module app.main and the variable app : $ uvicorn app.main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) And open the docs at http://127.0.0.1:8000/docs . You will see the automatic API docs, including the paths from all the submodules, using the correct paths (and prefixes) and the correct tags:","title":"Check the automatic API docs"},{"location":"guides/bigger-applications/#include-the-same-router-multiple-times-with-different-prefix","text":"You can also use .include_router() multiple times with the same router using different prefixes. This could be useful, for example, to expose the same API under different prefixes, e.g. /api/v1 and /api/latest . This is an advanced usage that you might not really need, but it's there in case you do.","title":"Include the same router multiple times with different prefix"},{"location":"guides/bigger-applications/#include-an-apirouter-in-another","text":"The same way you can include an APIRouter in a FastAPI application, you can include an APIRouter in another APIRouter using: router . include_router ( other_router ) Make sure you do it before including router in the FastAPI app, so that the path operations from other_router are also included.","title":"Include an APIRouter in another"},{"location":"guides/cors/","text":"CORS (Cross-Origin Resource Sharing) \u00b6 CORS or \"Cross-Origin Resource Sharing\" refers to the situations when a frontend running in a browser has JavaScript code that communicates with a backend, and the backend is in a different \"origin\" than the frontend. Origin \u00b6 An origin is the combination of protocol ( http , https ), domain ( myapp.com , localhost , localhost.tiangolo.com ), and port ( 80 , 443 , 8080 ). So, all these are different origins: http://localhost https://localhost http://localhost:8080 Even if they are all in localhost , they use different protocols or ports, so, they are different \"origins\". Steps \u00b6 So, let's say you have a frontend running in your browser at http://localhost:8080 , and its JavaScript is trying to communicate with a backend running at http://localhost (because we don't specify a port, the browser will assume the default port 80 ). Then, the browser will send an HTTP OPTIONS request to the backend, and if the backend sends the appropriate headers authorizing the communication from this different origin ( http://localhost:8080 ) then the browser will let the JavaScript in the frontend send its request to the backend. To achieve this, the backend must have a list of \"allowed origins\". In this case, it would have to include http://localhost:8080 for the frontend to work correctly. Wildcards \u00b6 It's also possible to declare the list as \"*\" (a \"wildcard\") to say that all are allowed. But that will only allow certain types of communication, excluding everything that involves credentials: Cookies, Authorization headers like those used with Bearer Tokens, etc. So, for everything to work correctly, it's better to specify explicitly the allowed origins. Use CORSMiddleware \u00b6 You can configure it in your FastAPI application using the CORSMiddleware . Import CORSMiddleware . Create a list of allowed origins (as strings). Add it as a \"middleware\" to your FastAPI application. You can also specify if your backend allows: Credentials (Authorization headers, Cookies, etc). Specific HTTP methods ( POST , PUT ) or all of them with the wildcard \"*\" . Specific HTTP headers or all of them with the wildcard \"*\" . { ! ../../../ docs_src / cors / tutorial001 . py ! } The default parameters used by the CORSMiddleware implementation are restrictive by default, so you'll need to explicitly enable particular origins, methods, or headers, in order for browsers to be permitted to use them in a Cross-Domain context. The following arguments are supported: allow_origins - A list of origins that should be permitted to make cross-origin requests. E.g. ['https://example.org', 'https://www.example.org'] . You can use ['*'] to allow any origin. allow_origin_regex - A regex string to match against origins that should be permitted to make cross-origin requests. e.g. 'https://.*\\.example\\.org' . allow_methods - A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET'] . You can use ['*'] to allow all standard methods. allow_headers - A list of HTTP request headers that should be supported for cross-origin requests. Defaults to [] . You can use ['*'] to allow all headers. The Accept , Accept-Language , Content-Language and Content-Type headers are always allowed for CORS requests. allow_credentials - Indicate that cookies should be supported for cross-origin requests. Defaults to False . Also, allow_origins cannot be set to ['*'] for credentials to be allowed, origins must be specified. expose_headers - Indicate any response headers that should be made accessible to the browser. Defaults to [] . max_age - Sets a maximum time in seconds for browsers to cache CORS responses. Defaults to 600 . The middleware responds to two particular types of HTTP request... CORS preflight requests \u00b6 These are any OPTIONS request with Origin and Access-Control-Request-Method headers. In this case the middleware will intercept the incoming request and respond with appropriate CORS headers, and either a 200 or 400 response for informational purposes. Simple requests \u00b6 Any request with an Origin header. In this case the middleware will pass the request through as normal, but will include appropriate CORS headers on the response. More info \u00b6 For more info about CORS , check the Mozilla CORS documentation . Technical Details You could also use from starlette.middleware.cors import CORSMiddleware . FastAPI provides several middlewares in fastapi.middleware just as a convenience for you, the developer. But most of the available middlewares come directly from Starlette.","title":"CORS (Cross-Origin Resource Sharing)"},{"location":"guides/cors/#cors-cross-origin-resource-sharing","text":"CORS or \"Cross-Origin Resource Sharing\" refers to the situations when a frontend running in a browser has JavaScript code that communicates with a backend, and the backend is in a different \"origin\" than the frontend.","title":"CORS (Cross-Origin Resource Sharing)"},{"location":"guides/cors/#origin","text":"An origin is the combination of protocol ( http , https ), domain ( myapp.com , localhost , localhost.tiangolo.com ), and port ( 80 , 443 , 8080 ). So, all these are different origins: http://localhost https://localhost http://localhost:8080 Even if they are all in localhost , they use different protocols or ports, so, they are different \"origins\".","title":"Origin"},{"location":"guides/cors/#steps","text":"So, let's say you have a frontend running in your browser at http://localhost:8080 , and its JavaScript is trying to communicate with a backend running at http://localhost (because we don't specify a port, the browser will assume the default port 80 ). Then, the browser will send an HTTP OPTIONS request to the backend, and if the backend sends the appropriate headers authorizing the communication from this different origin ( http://localhost:8080 ) then the browser will let the JavaScript in the frontend send its request to the backend. To achieve this, the backend must have a list of \"allowed origins\". In this case, it would have to include http://localhost:8080 for the frontend to work correctly.","title":"Steps"},{"location":"guides/cors/#wildcards","text":"It's also possible to declare the list as \"*\" (a \"wildcard\") to say that all are allowed. But that will only allow certain types of communication, excluding everything that involves credentials: Cookies, Authorization headers like those used with Bearer Tokens, etc. So, for everything to work correctly, it's better to specify explicitly the allowed origins.","title":"Wildcards"},{"location":"guides/cors/#use-corsmiddleware","text":"You can configure it in your FastAPI application using the CORSMiddleware . Import CORSMiddleware . Create a list of allowed origins (as strings). Add it as a \"middleware\" to your FastAPI application. You can also specify if your backend allows: Credentials (Authorization headers, Cookies, etc). Specific HTTP methods ( POST , PUT ) or all of them with the wildcard \"*\" . Specific HTTP headers or all of them with the wildcard \"*\" . { ! ../../../ docs_src / cors / tutorial001 . py ! } The default parameters used by the CORSMiddleware implementation are restrictive by default, so you'll need to explicitly enable particular origins, methods, or headers, in order for browsers to be permitted to use them in a Cross-Domain context. The following arguments are supported: allow_origins - A list of origins that should be permitted to make cross-origin requests. E.g. ['https://example.org', 'https://www.example.org'] . You can use ['*'] to allow any origin. allow_origin_regex - A regex string to match against origins that should be permitted to make cross-origin requests. e.g. 'https://.*\\.example\\.org' . allow_methods - A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET'] . You can use ['*'] to allow all standard methods. allow_headers - A list of HTTP request headers that should be supported for cross-origin requests. Defaults to [] . You can use ['*'] to allow all headers. The Accept , Accept-Language , Content-Language and Content-Type headers are always allowed for CORS requests. allow_credentials - Indicate that cookies should be supported for cross-origin requests. Defaults to False . Also, allow_origins cannot be set to ['*'] for credentials to be allowed, origins must be specified. expose_headers - Indicate any response headers that should be made accessible to the browser. Defaults to [] . max_age - Sets a maximum time in seconds for browsers to cache CORS responses. Defaults to 600 . The middleware responds to two particular types of HTTP request...","title":"Use CORSMiddleware"},{"location":"guides/cors/#cors-preflight-requests","text":"These are any OPTIONS request with Origin and Access-Control-Request-Method headers. In this case the middleware will intercept the incoming request and respond with appropriate CORS headers, and either a 200 or 400 response for informational purposes.","title":"CORS preflight requests"},{"location":"guides/cors/#simple-requests","text":"Any request with an Origin header. In this case the middleware will pass the request through as normal, but will include appropriate CORS headers on the response.","title":"Simple requests"},{"location":"guides/cors/#more-info","text":"For more info about CORS , check the Mozilla CORS documentation . Technical Details You could also use from starlette.middleware.cors import CORSMiddleware . FastAPI provides several middlewares in fastapi.middleware just as a convenience for you, the developer. But most of the available middlewares come directly from Starlette.","title":"More info"},{"location":"guides/first-steps/","text":"First Steps \u00b6 The simplest FastAPI file could look like this: { ! ../../../ docs_src / first_steps / tutorial001 . py ! } Copy that to a file main.py . Run the live server: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) <span style=\"color: green;\">INFO</span>: Started reloader process [28720] <span style=\"color: green;\">INFO</span>: Started server process [28722] <span style=\"color: green;\">INFO</span>: Waiting for application startup. <span style=\"color: green;\">INFO</span>: Application startup complete. Note The command uvicorn main:app refers to: main : the file main.py (the Python \"module\"). app : the object created inside of main.py with the line app = FastAPI() . --reload : make the server restart after code changes. Only use for development. In the output, there's a line with something like: INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) That line shows the URL where your app is being served, in your local machine. Check it \u00b6 Open your browser at http://127.0.0.1:8000 . You will see the JSON response as: { \"message\" : \"Hello World\" } Interactive API docs \u00b6 Now go to http://127.0.0.1:8000/docs . You will see the automatic interactive API documentation (provided by Swagger UI ): Alternative API docs \u00b6 And now, go to http://127.0.0.1:8000/redoc . You will see the alternative automatic documentation (provided by ReDoc ): OpenAPI \u00b6 FastAPI generates a \"schema\" with all your API using the OpenAPI standard for defining APIs. \"Schema\" \u00b6 A \"schema\" is a definition or description of something. Not the code that implements it, but just an abstract description. API \"schema\" \u00b6 In this case, OpenAPI is a specification that dictates how to define a schema of your API. This schema definition includes your API paths, the possible parameters they take, etc. Data \"schema\" \u00b6 The term \"schema\" might also refer to the shape of some data, like a JSON content. In that case, it would mean the JSON attributes, and data types they have, etc. OpenAPI and JSON Schema \u00b6 OpenAPI defines an API schema for your API. And that schema includes definitions (or \"schemas\") of the data sent and received by your API using JSON Schema , the standard for JSON data schemas. Check the openapi.json \u00b6 If you are curious about how the raw OpenAPI schema looks like, FastAPI automatically generates a JSON (schema) with the descriptions of all your API. You can see it directly at: http://127.0.0.1:8000/openapi.json . It will show a JSON starting with something like: { \"openapi\" : \"3.0.2\" , \"info\" : { \"title\" : \"FastAPI\" , \"version\" : ' 0.1.1 ' }, \"paths\" : { \"/items/\" : { \"get\" : { \"responses\" : { \"200\" : { \"description\" : \"Successful Response\" , \"content\" : { \"application/json\" : { ... What is OpenAPI for \u00b6 The OpenAPI schema is what powers the two interactive documentation systems included. And there are dozens of alternatives, all based on OpenAPI. You could easily add any of those alternatives to your application built with FastAPI . You could also use it to generate code automatically, for clients that communicate with your API. For example, frontend, mobile or IoT applications. Recap, step by step \u00b6 Step 1: import FastAPI \u00b6 { ! ../../../ docs_src / first_steps / tutorial001 . py ! } FastAPI is a Python class that provides all the functionality for your API. Technical Details FastAPI is a class that inherits directly from Starlette . You can use all the Starlette functionality with FastAPI too. Step 2: create a FastAPI \"instance\" \u00b6 { ! ../../../ docs_src / first_steps / tutorial001 . py ! } Here the app variable will be an \"instance\" of the class FastAPI . This will be the main point of interaction to create all your API. This app is the same one referred by uvicorn in the command: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) If you create your app like: { ! ../../../ docs_src / first_steps / tutorial002 . py ! } And put it in a file main.py , then you would call uvicorn like: $ uvicorn main:my_awesome_api --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Step 3: create a path operation \u00b6 Path \u00b6 \"Path\" here refers to the last part of the URL starting from the first / . So, in a URL like: https://example.com/items/foo ...the path would be: /items/foo Info A \"path\" is also commonly called an \"endpoint\" or a \"route\". While building an API, the \"path\" is the main way to separate \"concerns\" and \"resources\". Operation \u00b6 \"Operation\" here refers to one of the HTTP \"methods\". One of: POST GET PUT DELETE ...and the more exotic ones: OPTIONS HEAD PATCH TRACE In the HTTP protocol, you can communicate to each path using one (or more) of these \"methods\". When building APIs, you normally use these specific HTTP methods to perform a specific action. Normally you use: POST : to create data. GET : to read data. PUT : to update data. DELETE : to delete data. So, in OpenAPI, each of the HTTP methods is called an \"operation\". We are going to call them \" operations \" too. Define a path operation decorator \u00b6 { ! ../../../ docs_src / first_steps / tutorial001 . py ! } The @app.get(\"/\") tells FastAPI that the function right below is in charge of handling requests that go to: the path / using a get operation @decorator Info That @something syntax in Python is called a \"decorator\". You put it on top of a function. Like a pretty decorative hat (I guess that's where the term came from). A \"decorator\" takes the function below and does something with it. In our case, this decorator tells FastAPI that the function below corresponds to the path / with an operation get . It is the \" path operation decorator \". You can also use the other operations: @app.post() @app.put() @app.delete() And the more exotic ones: @app.options() @app.head() @app.patch() @app.trace() Tip You are free to use each operation (HTTP method) as you wish. FastAPI doesn't enforce any specific meaning. The information here is presented as a guideline, not a requirement. For example, when using GraphQL you normally perform all the actions using only POST operations. Step 4: define the path operation function \u00b6 This is our \" path operation function \": path : is / . operation : is get . function : is the function below the \"decorator\" (below @app.get(\"/\") ). { ! ../../../ docs_src / first_steps / tutorial001 . py ! } This is a Python function. It will be called by FastAPI whenever it receives a request to the URL \" / \" using a GET operation. In this case, it is an async function. You could also define it as a normal function instead of async def : { ! ../../../ docs_src / first_steps / tutorial003 . py ! } Note If you don't know the difference, check the Async: \"In a hurry?\" . Step 5: return the content \u00b6 { ! ../../../ docs_src / first_steps / tutorial001 . py ! } You can return a dict , list , singular values as str , int , etc. You can also return Pydantic models (you'll see more about that later). There are many other objects and models that will be automatically converted to JSON (including ORMs, etc). Try using your favorite ones, it's highly probable that they are already supported. Recap \u00b6 Import FastAPI . Create an app instance. Write a path operation decorator (like @app.get(\"/\") ). Write a path operation function (like def root(): ... above). Run the development server (like uvicorn main:app --reload ).","title":"First Steps"},{"location":"guides/first-steps/#first-steps","text":"The simplest FastAPI file could look like this: { ! ../../../ docs_src / first_steps / tutorial001 . py ! } Copy that to a file main.py . Run the live server: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) <span style=\"color: green;\">INFO</span>: Started reloader process [28720] <span style=\"color: green;\">INFO</span>: Started server process [28722] <span style=\"color: green;\">INFO</span>: Waiting for application startup. <span style=\"color: green;\">INFO</span>: Application startup complete. Note The command uvicorn main:app refers to: main : the file main.py (the Python \"module\"). app : the object created inside of main.py with the line app = FastAPI() . --reload : make the server restart after code changes. Only use for development. In the output, there's a line with something like: INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) That line shows the URL where your app is being served, in your local machine.","title":"First Steps"},{"location":"guides/first-steps/#check-it","text":"Open your browser at http://127.0.0.1:8000 . You will see the JSON response as: { \"message\" : \"Hello World\" }","title":"Check it"},{"location":"guides/first-steps/#interactive-api-docs","text":"Now go to http://127.0.0.1:8000/docs . You will see the automatic interactive API documentation (provided by Swagger UI ):","title":"Interactive API docs"},{"location":"guides/first-steps/#alternative-api-docs","text":"And now, go to http://127.0.0.1:8000/redoc . You will see the alternative automatic documentation (provided by ReDoc ):","title":"Alternative API docs"},{"location":"guides/first-steps/#openapi","text":"FastAPI generates a \"schema\" with all your API using the OpenAPI standard for defining APIs.","title":"OpenAPI"},{"location":"guides/first-steps/#schema","text":"A \"schema\" is a definition or description of something. Not the code that implements it, but just an abstract description.","title":"\"Schema\""},{"location":"guides/first-steps/#api-schema","text":"In this case, OpenAPI is a specification that dictates how to define a schema of your API. This schema definition includes your API paths, the possible parameters they take, etc.","title":"API \"schema\""},{"location":"guides/first-steps/#data-schema","text":"The term \"schema\" might also refer to the shape of some data, like a JSON content. In that case, it would mean the JSON attributes, and data types they have, etc.","title":"Data \"schema\""},{"location":"guides/first-steps/#openapi-and-json-schema","text":"OpenAPI defines an API schema for your API. And that schema includes definitions (or \"schemas\") of the data sent and received by your API using JSON Schema , the standard for JSON data schemas.","title":"OpenAPI and JSON Schema"},{"location":"guides/first-steps/#check-the-openapijson","text":"If you are curious about how the raw OpenAPI schema looks like, FastAPI automatically generates a JSON (schema) with the descriptions of all your API. You can see it directly at: http://127.0.0.1:8000/openapi.json . It will show a JSON starting with something like: { \"openapi\" : \"3.0.2\" , \"info\" : { \"title\" : \"FastAPI\" , \"version\" : ' 0.1.1 ' }, \"paths\" : { \"/items/\" : { \"get\" : { \"responses\" : { \"200\" : { \"description\" : \"Successful Response\" , \"content\" : { \"application/json\" : { ...","title":"Check the openapi.json"},{"location":"guides/first-steps/#what-is-openapi-for","text":"The OpenAPI schema is what powers the two interactive documentation systems included. And there are dozens of alternatives, all based on OpenAPI. You could easily add any of those alternatives to your application built with FastAPI . You could also use it to generate code automatically, for clients that communicate with your API. For example, frontend, mobile or IoT applications.","title":"What is OpenAPI for"},{"location":"guides/first-steps/#recap-step-by-step","text":"","title":"Recap, step by step"},{"location":"guides/first-steps/#step-1-import-fastapi","text":"{ ! ../../../ docs_src / first_steps / tutorial001 . py ! } FastAPI is a Python class that provides all the functionality for your API. Technical Details FastAPI is a class that inherits directly from Starlette . You can use all the Starlette functionality with FastAPI too.","title":"Step 1: import FastAPI"},{"location":"guides/first-steps/#step-2-create-a-fastapi-instance","text":"{ ! ../../../ docs_src / first_steps / tutorial001 . py ! } Here the app variable will be an \"instance\" of the class FastAPI . This will be the main point of interaction to create all your API. This app is the same one referred by uvicorn in the command: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) If you create your app like: { ! ../../../ docs_src / first_steps / tutorial002 . py ! } And put it in a file main.py , then you would call uvicorn like: $ uvicorn main:my_awesome_api --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)","title":"Step 2: create a FastAPI \"instance\""},{"location":"guides/first-steps/#step-3-create-a-path-operation","text":"","title":"Step 3: create a path operation"},{"location":"guides/first-steps/#path","text":"\"Path\" here refers to the last part of the URL starting from the first / . So, in a URL like: https://example.com/items/foo ...the path would be: /items/foo Info A \"path\" is also commonly called an \"endpoint\" or a \"route\". While building an API, the \"path\" is the main way to separate \"concerns\" and \"resources\".","title":"Path"},{"location":"guides/first-steps/#operation","text":"\"Operation\" here refers to one of the HTTP \"methods\". One of: POST GET PUT DELETE ...and the more exotic ones: OPTIONS HEAD PATCH TRACE In the HTTP protocol, you can communicate to each path using one (or more) of these \"methods\". When building APIs, you normally use these specific HTTP methods to perform a specific action. Normally you use: POST : to create data. GET : to read data. PUT : to update data. DELETE : to delete data. So, in OpenAPI, each of the HTTP methods is called an \"operation\". We are going to call them \" operations \" too.","title":"Operation"},{"location":"guides/first-steps/#define-a-path-operation-decorator","text":"{ ! ../../../ docs_src / first_steps / tutorial001 . py ! } The @app.get(\"/\") tells FastAPI that the function right below is in charge of handling requests that go to: the path / using a get operation @decorator Info That @something syntax in Python is called a \"decorator\". You put it on top of a function. Like a pretty decorative hat (I guess that's where the term came from). A \"decorator\" takes the function below and does something with it. In our case, this decorator tells FastAPI that the function below corresponds to the path / with an operation get . It is the \" path operation decorator \". You can also use the other operations: @app.post() @app.put() @app.delete() And the more exotic ones: @app.options() @app.head() @app.patch() @app.trace() Tip You are free to use each operation (HTTP method) as you wish. FastAPI doesn't enforce any specific meaning. The information here is presented as a guideline, not a requirement. For example, when using GraphQL you normally perform all the actions using only POST operations.","title":"Define a path operation decorator"},{"location":"guides/first-steps/#step-4-define-the-path-operation-function","text":"This is our \" path operation function \": path : is / . operation : is get . function : is the function below the \"decorator\" (below @app.get(\"/\") ). { ! ../../../ docs_src / first_steps / tutorial001 . py ! } This is a Python function. It will be called by FastAPI whenever it receives a request to the URL \" / \" using a GET operation. In this case, it is an async function. You could also define it as a normal function instead of async def : { ! ../../../ docs_src / first_steps / tutorial003 . py ! } Note If you don't know the difference, check the Async: \"In a hurry?\" .","title":"Step 4: define the path operation function"},{"location":"guides/first-steps/#step-5-return-the-content","text":"{ ! ../../../ docs_src / first_steps / tutorial001 . py ! } You can return a dict , list , singular values as str , int , etc. You can also return Pydantic models (you'll see more about that later). There are many other objects and models that will be automatically converted to JSON (including ORMs, etc). Try using your favorite ones, it's highly probable that they are already supported.","title":"Step 5: return the content"},{"location":"guides/first-steps/#recap","text":"Import FastAPI . Create an app instance. Write a path operation decorator (like @app.get(\"/\") ). Write a path operation function (like def root(): ... above). Run the development server (like uvicorn main:app --reload ).","title":"Recap"},{"location":"guides/metadata/","text":"Metadata and Docs URLs \u00b6 You can customize several metadata configurations in your FastAPI application. Metadata for API \u00b6 You can set the following fields that are used in the OpenAPI specification and the automatic API docs UIs: Parameter Type Description title str The title of the API. description str A short description of the API. It can use Markdown. version string The version of the API. This is the version of your own application, not of OpenAPI. For example 2.5.0 . terms_of_service str A URL to the Terms of Service for the API. If provided, this has to be a URL. contact dict The contact information for the exposed API. It can contain several fields. contact fields Parameter Type Description name str The identifying name of the contact person/organization. url str The URL pointing to the contact information. MUST be in the format of a URL. email str The email address of the contact person/organization. MUST be in the format of an email address. license_info dict The license information for the exposed API. It can contain several fields. license_info fields Parameter Type Description name str REQUIRED (if a license_info is set). The license name used for the API. url str A URL to the license used for the API. MUST be in the format of a URL. You can set them as follows: { ! ../../../ docs_src / metadata / tutorial001 . py ! } Tip You can write Markdown in the description field and it will be rendered in the output. With this configuration, the automatic API docs would look like: Metadata for tags \u00b6 You can also add additional metadata for the different tags used to group your path operations with the parameter openapi_tags . It takes a list containing one dictionary for each tag. Each dictionary can contain: name ( required ): a str with the same tag name you use in the tags parameter in your path operations and APIRouter s. description : a str with a short description for the tag. It can have Markdown and will be shown in the docs UI. externalDocs : a dict describing external documentation with: description : a str with a short description for the external docs. url ( required ): a str with the URL for the external documentation. Create metadata for tags \u00b6 Let's try that in an example with tags for users and items . Create metadata for your tags and pass it to the openapi_tags parameter: { ! ../../../ docs_src / metadata / tutorial004 . py ! } Notice that you can use Markdown inside of the descriptions, for example \"login\" will be shown in bold ( login ) and \"fancy\" will be shown in italics ( fancy ). Tip You don't have to add metadata for all the tags that you use. Use your tags \u00b6 Use the tags parameter with your path operations (and APIRouter s) to assign them to different tags: { ! ../../../ docs_src / metadata / tutorial004 . py ! } Info Read more about tags in Path Operation Configuration . Check the docs \u00b6 Now, if you check the docs, they will show all the additional metadata: Order of tags \u00b6 The order of each tag metadata dictionary also defines the order shown in the docs UI. For example, even though users would go after items in alphabetical order, it is shown before them, because we added their metadata as the first dictionary in the list. OpenAPI URL \u00b6 By default, the OpenAPI schema is served at /openapi.json . But you can configure it with the parameter openapi_url . For example, to set it to be served at /api/v1/openapi.json : { ! ../../../ docs_src / metadata / tutorial002 . py ! } If you want to disable the OpenAPI schema completely you can set openapi_url=None , that will also disable the documentation user interfaces that use it. Docs URLs \u00b6 You can configure the two documentation user interfaces included: Swagger UI : served at /docs . You can set its URL with the parameter docs_url . You can disable it by setting docs_url=None . ReDoc: served at /redoc . You can set its URL with the parameter redoc_url . You can disable it by setting redoc_url=None . For example, to set Swagger UI to be served at /documentation and disable ReDoc: { ! ../../../ docs_src / metadata / tutorial003 . py ! }","title":"Metadata and Docs URLs"},{"location":"guides/metadata/#metadata-and-docs-urls","text":"You can customize several metadata configurations in your FastAPI application.","title":"Metadata and Docs URLs"},{"location":"guides/metadata/#metadata-for-api","text":"You can set the following fields that are used in the OpenAPI specification and the automatic API docs UIs: Parameter Type Description title str The title of the API. description str A short description of the API. It can use Markdown. version string The version of the API. This is the version of your own application, not of OpenAPI. For example 2.5.0 . terms_of_service str A URL to the Terms of Service for the API. If provided, this has to be a URL. contact dict The contact information for the exposed API. It can contain several fields. contact fields Parameter Type Description name str The identifying name of the contact person/organization. url str The URL pointing to the contact information. MUST be in the format of a URL. email str The email address of the contact person/organization. MUST be in the format of an email address. license_info dict The license information for the exposed API. It can contain several fields. license_info fields Parameter Type Description name str REQUIRED (if a license_info is set). The license name used for the API. url str A URL to the license used for the API. MUST be in the format of a URL. You can set them as follows: { ! ../../../ docs_src / metadata / tutorial001 . py ! } Tip You can write Markdown in the description field and it will be rendered in the output. With this configuration, the automatic API docs would look like:","title":"Metadata for API"},{"location":"guides/metadata/#metadata-for-tags","text":"You can also add additional metadata for the different tags used to group your path operations with the parameter openapi_tags . It takes a list containing one dictionary for each tag. Each dictionary can contain: name ( required ): a str with the same tag name you use in the tags parameter in your path operations and APIRouter s. description : a str with a short description for the tag. It can have Markdown and will be shown in the docs UI. externalDocs : a dict describing external documentation with: description : a str with a short description for the external docs. url ( required ): a str with the URL for the external documentation.","title":"Metadata for tags"},{"location":"guides/metadata/#create-metadata-for-tags","text":"Let's try that in an example with tags for users and items . Create metadata for your tags and pass it to the openapi_tags parameter: { ! ../../../ docs_src / metadata / tutorial004 . py ! } Notice that you can use Markdown inside of the descriptions, for example \"login\" will be shown in bold ( login ) and \"fancy\" will be shown in italics ( fancy ). Tip You don't have to add metadata for all the tags that you use.","title":"Create metadata for tags"},{"location":"guides/metadata/#use-your-tags","text":"Use the tags parameter with your path operations (and APIRouter s) to assign them to different tags: { ! ../../../ docs_src / metadata / tutorial004 . py ! } Info Read more about tags in Path Operation Configuration .","title":"Use your tags"},{"location":"guides/metadata/#check-the-docs","text":"Now, if you check the docs, they will show all the additional metadata:","title":"Check the docs"},{"location":"guides/metadata/#order-of-tags","text":"The order of each tag metadata dictionary also defines the order shown in the docs UI. For example, even though users would go after items in alphabetical order, it is shown before them, because we added their metadata as the first dictionary in the list.","title":"Order of tags"},{"location":"guides/metadata/#openapi-url","text":"By default, the OpenAPI schema is served at /openapi.json . But you can configure it with the parameter openapi_url . For example, to set it to be served at /api/v1/openapi.json : { ! ../../../ docs_src / metadata / tutorial002 . py ! } If you want to disable the OpenAPI schema completely you can set openapi_url=None , that will also disable the documentation user interfaces that use it.","title":"OpenAPI URL"},{"location":"guides/metadata/#docs-urls","text":"You can configure the two documentation user interfaces included: Swagger UI : served at /docs . You can set its URL with the parameter docs_url . You can disable it by setting docs_url=None . ReDoc: served at /redoc . You can set its URL with the parameter redoc_url . You can disable it by setting redoc_url=None . For example, to set Swagger UI to be served at /documentation and disable ReDoc: { ! ../../../ docs_src / metadata / tutorial003 . py ! }","title":"Docs URLs"},{"location":"guides/middleware/","text":"Middleware \u00b6 You can add middleware to FastAPI applications. A \"middleware\" is a function that works with every request before it is processed by any specific path operation . And also with every response before returning it. It takes each request that comes to your application. It can then do something to that request or run any needed code. Then it passes the request to be processed by the rest of the application (by some path operation ). It then takes the response generated by the application (by some path operation ). It can do something to that response or run any needed code. Then it returns the response . Technical Details If you have dependencies with yield , the exit code will run after the middleware. If there were any background tasks (documented later), they will run after all the middleware. Create a middleware \u00b6 To create a middleware you use the decorator @app.middleware(\"http\") on top of a function. The middleware function receives: The request . A function call_next that will receive the request as a parameter. This function will pass the request to the corresponding path operation . Then it returns the response generated by the corresponding path operation . You can then modify further the response before returning it. { ! ../../../ docs_src / middleware / tutorial001 . py ! } Tip Have in mind that custom proprietary headers can be added using the 'X-' prefix . But if you have custom headers that you want a client in a browser to be able to see, you need to add them to your CORS configurations ( CORS (Cross-Origin Resource Sharing) ) using the parameter expose_headers documented in Starlette's CORS docs . Technical Details You could also use from starlette.requests import Request . FastAPI provides it as a convenience for you, the developer. But it comes directly from Starlette. Before and after the response \u00b6 You can add code to be run with the request , before any path operation receives it. And also after the response is generated, before returning it. For example, you could add a custom header X-Process-Time containing the time in seconds that it took to process the request and generate a response: { ! ../../../ docs_src / middleware / tutorial001 . py ! } Other middlewares \u00b6 You can later read more about other middlewares in the Advanced User Guide: Advanced Middleware . You will read about how to handle CORS with a middleware in the next section.","title":"Middleware"},{"location":"guides/middleware/#middleware","text":"You can add middleware to FastAPI applications. A \"middleware\" is a function that works with every request before it is processed by any specific path operation . And also with every response before returning it. It takes each request that comes to your application. It can then do something to that request or run any needed code. Then it passes the request to be processed by the rest of the application (by some path operation ). It then takes the response generated by the application (by some path operation ). It can do something to that response or run any needed code. Then it returns the response . Technical Details If you have dependencies with yield , the exit code will run after the middleware. If there were any background tasks (documented later), they will run after all the middleware.","title":"Middleware"},{"location":"guides/middleware/#create-a-middleware","text":"To create a middleware you use the decorator @app.middleware(\"http\") on top of a function. The middleware function receives: The request . A function call_next that will receive the request as a parameter. This function will pass the request to the corresponding path operation . Then it returns the response generated by the corresponding path operation . You can then modify further the response before returning it. { ! ../../../ docs_src / middleware / tutorial001 . py ! } Tip Have in mind that custom proprietary headers can be added using the 'X-' prefix . But if you have custom headers that you want a client in a browser to be able to see, you need to add them to your CORS configurations ( CORS (Cross-Origin Resource Sharing) ) using the parameter expose_headers documented in Starlette's CORS docs . Technical Details You could also use from starlette.requests import Request . FastAPI provides it as a convenience for you, the developer. But it comes directly from Starlette.","title":"Create a middleware"},{"location":"guides/middleware/#before-and-after-the-response","text":"You can add code to be run with the request , before any path operation receives it. And also after the response is generated, before returning it. For example, you could add a custom header X-Process-Time containing the time in seconds that it took to process the request and generate a response: { ! ../../../ docs_src / middleware / tutorial001 . py ! }","title":"Before and after the response"},{"location":"guides/middleware/#other-middlewares","text":"You can later read more about other middlewares in the Advanced User Guide: Advanced Middleware . You will read about how to handle CORS with a middleware in the next section.","title":"Other middlewares"},{"location":"guides/sql-databases/","text":"SQL (Relational) Databases \u00b6 FastAPI doesn't require you to use a SQL (relational) database. But you can use any relational database that you want. Here we'll see an example using SQLAlchemy . You can easily adapt it to any database supported by SQLAlchemy, like: PostgreSQL MySQL SQLite Oracle Microsoft SQL Server, etc. In this example, we'll use SQLite , because it uses a single file and Python has integrated support. So, you can copy this example and run it as is. Later, for your production application, you might want to use a database server like PostgreSQL . Tip There is an official project generator with FastAPI and PostgreSQL , all based on Docker , including a frontend and more tools: https://github.com/tiangolo/full-stack-fastapi-postgresql Note Notice that most of the code is the standard SQLAlchemy code you would use with any framework. The FastAPI specific code is as small as always. ORMs \u00b6 FastAPI works with any database and any style of library to talk to the database. A common pattern is to use an \"ORM\": an \"object-relational mapping\" library. An ORM has tools to convert (\" map \") between objects in code and database tables (\" relations \"). With an ORM, you normally create a class that represents a table in a SQL database, each attribute of the class represents a column, with a name and a type. For example a class Pet could represent a SQL table pets . And each instance object of that class represents a row in the database. For example an object orion_cat (an instance of Pet ) could have an attribute orion_cat.type , for the column type . And the value of that attribute could be, e.g. \"cat\" . These ORMs also have tools to make the connections or relations between tables or entities. This way, you could also have an attribute orion_cat.owner and the owner would contain the data for this pet's owner, taken from the table owners . So, orion_cat.owner.name could be the name (from the name column in the owners table) of this pet's owner. It could have a value like \"Arquilian\" . And the ORM will do all the work to get the information from the corresponding table owners when you try to access it from your pet object. Common ORMs are for example: Django-ORM (part of the Django framework), SQLAlchemy ORM (part of SQLAlchemy, independent of framework) and Peewee (independent of framework), among others. Here we will see how to work with SQLAlchemy ORM . In a similar way you could use any other ORM. Tip There's an equivalent article using Peewee here in the docs. File structure \u00b6 For these examples, let's say you have a directory named my_super_project that contains a sub-directory called sql_app with a structure like this: . \u2514\u2500\u2500 sql_app \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 crud.py \u251c\u2500\u2500 database.py \u251c\u2500\u2500 main.py \u251c\u2500\u2500 models.py \u2514\u2500\u2500 schemas.py The file __init__.py is just an empty file, but it tells Python that sql_app with all its modules (Python files) is a package. Now let's see what each file/module does. Install SQLAlchemy \u00b6 First you need to install SQLAlchemy : $ pip install sqlalchemy ---> 100% Create the SQLAlchemy parts \u00b6 Let's refer to the file sql_app/database.py . Import the SQLAlchemy parts \u00b6 { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } Create a database URL for SQLAlchemy \u00b6 { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } In this example, we are \"connecting\" to a SQLite database (opening a file with the SQLite database). The file will be located at the same directory in the file sql_app.db . That's why the last part is ./sql_app.db . If you were using a PostgreSQL database instead, you would just have to uncomment the line: SQLALCHEMY_DATABASE_URL = \"postgresql://user:password@postgresserver/db\" ...and adapt it with your database data and credentials (equivalently for MySQL, MariaDB or any other). Tip This is the main line that you would have to modify if you wanted to use a different database. Create the SQLAlchemy engine \u00b6 The first step is to create a SQLAlchemy \"engine\". We will later use this engine in other places. { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } Note \u00b6 The argument: connect_args = { \"check_same_thread\" : False } ...is needed only for SQLite . It's not needed for other databases. Technical Details By default SQLite will only allow one thread to communicate with it, assuming that each thread would handle an independent request. This is to prevent accidentally sharing the same connection for different things (for different requests). But in FastAPI, using normal functions ( def ) more than one thread could interact with the database for the same request, so we need to make SQLite know that it should allow that with connect_args={\"check_same_thread\": False} . Also, we will make sure each request gets its own database connection session in a dependency, so there's no need for that default mechanism. Create a SessionLocal class \u00b6 Each instance of the SessionLocal class will be a database session. The class itself is not a database session yet. But once we create an instance of the SessionLocal class, this instance will be the actual database session. We name it SessionLocal to distinguish it from the Session we are importing from SQLAlchemy. We will use Session (the one imported from SQLAlchemy) later. To create the SessionLocal class, use the function sessionmaker : { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } Create a Base class \u00b6 Now we will use the function declarative_base() that returns a class. Later we will inherit from this class to create each of the database models or classes (the ORM models): { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } Create the database models \u00b6 Let's now see the file sql_app/models.py . Create SQLAlchemy models from the Base class \u00b6 We will use this Base class we created before to create the SQLAlchemy models. Tip SQLAlchemy uses the term \" model \" to refer to these classes and instances that interact with the database. But Pydantic also uses the term \" model \" to refer to something different, the data validation, conversion, and documentation classes and instances. Import Base from database (the file database.py from above). Create classes that inherit from it. These classes are the SQLAlchemy models. { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } The __tablename__ attribute tells SQLAlchemy the name of the table to use in the database for each of these models. Create model attributes/columns \u00b6 Now create all the model (class) attributes. Each of these attributes represents a column in its corresponding database table. We use Column from SQLAlchemy as the default value. And we pass a SQLAlchemy class \"type\", as Integer , String , and Boolean , that defines the type in the database, as an argument. { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } Create the relationships \u00b6 Now create the relationships. For this, we use relationship provided by SQLAlchemy ORM. This will become, more or less, a \"magic\" attribute that will contain the values from other tables related to this one. { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } When accessing the attribute items in a User , as in my_user.items , it will have a list of Item SQLAlchemy models (from the items table) that have a foreign key pointing to this record in the users table. When you access my_user.items , SQLAlchemy will actually go and fetch the items from the database in the items table and populate them here. And when accessing the attribute owner in an Item , it will contain a User SQLAlchemy model from the users table. It will use the owner_id attribute/column with its foreign key to know which record to get from the users table. Create the Pydantic models \u00b6 Now let's check the file sql_app/schemas.py . Tip To avoid confusion between the SQLAlchemy models and the Pydantic models , we will have the file models.py with the SQLAlchemy models, and the file schemas.py with the Pydantic models. These Pydantic models define more or less a \"schema\" (a valid data shape). So this will help us avoiding confusion while using both. Create initial Pydantic models / schemas \u00b6 Create an ItemBase and UserBase Pydantic models (or let's say \"schemas\") to have common attributes while creating or reading data. And create an ItemCreate and UserCreate that inherit from them (so they will have the same attributes), plus any additional data (attributes) needed for creation. So, the user will also have a password when creating it. But for security, the password won't be in other Pydantic models , for example, it won't be sent from the API when reading a user. Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } SQLAlchemy style and Pydantic style \u00b6 Notice that SQLAlchemy models define attributes using = , and pass the type as a parameter to Column , like in: name = Column ( String ) while Pydantic models declare the types using : , the new type annotation syntax/type hints: name : str Have it in mind, so you don't get confused when using = and : with them. Create Pydantic models / schemas for reading / returning \u00b6 Now create Pydantic models (schemas) that will be used when reading data, when returning it from the API. For example, before creating an item, we don't know what will be the ID assigned to it, but when reading it (when returning it from the API) we will already know its ID. The same way, when reading a user, we can now declare that items will contain the items that belong to this user. Not only the IDs of those items, but all the data that we defined in the Pydantic model for reading items: Item . Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } Tip Notice that the User , the Pydantic model that will be used when reading a user (returning it from the API) doesn't include the password . Use Pydantic's orm_mode \u00b6 Now, in the Pydantic models for reading, Item and User , add an internal Config class. This Config class is used to provide configurations to Pydantic. In the Config class, set the attribute orm_mode = True . Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } Tip Notice it's assigning a value with = , like: orm_mode = True It doesn't use : as for the type declarations before. This is setting a config value, not declaring a type. Pydantic's orm_mode will tell the Pydantic model to read the data even if it is not a dict , but an ORM model (or any other arbitrary object with attributes). This way, instead of only trying to get the id value from a dict , as in: id = data [ \"id\" ] it will also try to get it from an attribute, as in: id = data . id And with this, the Pydantic model is compatible with ORMs, and you can just declare it in the response_model argument in your path operations . You will be able to return a database model and it will read the data from it. Technical Details about ORM mode \u00b6 SQLAlchemy and many others are by default \"lazy loading\". That means, for example, that they don't fetch the data for relationships from the database unless you try to access the attribute that would contain that data. For example, accessing the attribute items : current_user . items would make SQLAlchemy go to the items table and get the items for this user, but not before. Without orm_mode , if you returned a SQLAlchemy model from your path operation , it wouldn't include the relationship data. Even if you declared those relationships in your Pydantic models. But with ORM mode, as Pydantic itself will try to access the data it needs from attributes (instead of assuming a dict ), you can declare the specific data you want to return and it will be able to go and get it, even from ORMs. CRUD utils \u00b6 Now let's see the file sql_app/crud.py . In this file we will have reusable functions to interact with the data in the database. CRUD comes from: C reate, R ead, U pdate, and D elete. ...although in this example we are only creating and reading. Read data \u00b6 Import Session from sqlalchemy.orm , this will allow you to declare the type of the db parameters and have better type checks and completion in your functions. Import models (the SQLAlchemy models) and schemas (the Pydantic models / schemas). Create utility functions to: Read a single user by ID and by email. Read multiple users. Read multiple items. { ! ../../../ docs_src / sql_databases / sql_app / crud . py ! } Tip By creating functions that are only dedicated to interacting with the database (get a user or an item) independent of your path operation function , you can more easily reuse them in multiple parts and also add unit tests for them. Create data \u00b6 Now create utility functions to create data. The steps are: Create a SQLAlchemy model instance with your data. add that instance object to your database session. commit the changes to the database (so that they are saved). refresh your instance (so that it contains any new data from the database, like the generated ID). { ! ../../../ docs_src / sql_databases / sql_app / crud . py ! } Tip The SQLAlchemy model for User contains a hashed_password that should contain a secure hashed version of the password. But as what the API client provides is the original password, you need to extract it and generate the hashed password in your application. And then pass the hashed_password argument with the value to save. Warning This example is not secure, the password is not hashed. In a real life application you would need to hash the password and never save them in plaintext. For more details, go back to the Security section in the tutorial. Here we are focusing only on the tools and mechanics of databases. Tip Instead of passing each of the keyword arguments to Item and reading each one of them from the Pydantic model , we are generating a dict with the Pydantic model 's data with: item.dict() and then we are passing the dict 's key-value pairs as the keyword arguments to the SQLAlchemy Item , with: Item(**item.dict()) And then we pass the extra keyword argument owner_id that is not provided by the Pydantic model , with: Item(**item.dict(), owner_id=user_id) Main FastAPI app \u00b6 And now in the file sql_app/main.py let's integrate and use all the other parts we created before. Create the database tables \u00b6 In a very simplistic way create the database tables: Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } Alembic Note \u00b6 Normally you would probably initialize your database (create tables, etc) with Alembic . And you would also use Alembic for \"migrations\" (that's its main job). A \"migration\" is the set of steps needed whenever you change the structure of your SQLAlchemy models, add a new attribute, etc. to replicate those changes in the database, add a new column, a new table, etc. You can find an example of Alembic in a FastAPI project in the templates from Project Generation - Template . Specifically in the alembic directory in the source code . Create a dependency \u00b6 Now use the SessionLocal class we created in the sql_app/database.py file to create a dependency. We need to have an independent database session/connection ( SessionLocal ) per request, use the same session through all the request and then close it after the request is finished. And then a new session will be created for the next request. For that, we will create a new dependency with yield , as explained before in the section about Dependencies with yield . Our dependency will create a new SQLAlchemy SessionLocal that will be used in a single request, and then close it once the request is finished. Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } Info We put the creation of the SessionLocal() and handling of the requests in a try block. And then we close it in the finally block. This way we make sure the database session is always closed after the request. Even if there was an exception while processing the request. But you can't raise another exception from the exit code (after yield ). See more in Dependencies with yield and HTTPException And then, when using the dependency in a path operation function , we declare it with the type Session we imported directly from SQLAlchemy. This will then give us better editor support inside the path operation function , because the editor will know that the db parameter is of type Session : Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } Technical Details The parameter db is actually of type SessionLocal , but this class (created with sessionmaker() ) is a \"proxy\" of a SQLAlchemy Session , so, the editor doesn't really know what methods are provided. But by declaring the type as Session , the editor now can know the available methods ( .add() , .query() , .commit() , etc) and can provide better support (like completion). The type declaration doesn't affect the actual object. Create your FastAPI path operations \u00b6 Now, finally, here's the standard FastAPI path operations code. Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } We are creating the database session before each request in the dependency with yield , and then closing it afterwards. And then we can create the required dependency in the path operation function , to get that session directly. With that, we can just call crud.get_user directly from inside of the path operation function and use that session. Tip Notice that the values you return are SQLAlchemy models, or lists of SQLAlchemy models. But as all the path operations have a response_model with Pydantic models / schemas using orm_mode , the data declared in your Pydantic models will be extracted from them and returned to the client, with all the normal filtering and validation. Tip Also notice that there are response_models that have standard Python types like List[schemas.Item] . But as the content/parameter of that List is a Pydantic model with orm_mode , the data will be retrieved and returned to the client as normally, without problems. About def vs async def \u00b6 Here we are using SQLAlchemy code inside of the path operation function and in the dependency, and, in turn, it will go and communicate with an external database. That could potentially require some \"waiting\". But as SQLAlchemy doesn't have compatibility for using await directly, as would be with something like: user = await db . query ( User ) . first () ...and instead we are using: user = db . query ( User ) . first () Then we should declare the path operation functions and the dependency without async def , just with a normal def , as: @app . get ( \"/users/ {user_id} \" , response_model = schemas . User ) def read_user ( user_id : int , db : Session = Depends ( get_db )): db_user = crud . get_user ( db , user_id = user_id ) ... Info If you need to connect to your relational database asynchronously, see Async SQL (Relational) Databases . Very Technical Details If you are curious and have a deep technical knowledge, you can check the very technical details of how this async def vs def is handled in the Async docs. Migrations \u00b6 Because we are using SQLAlchemy directly and we don't require any kind of plug-in for it to work with FastAPI , we could integrate database migrations with Alembic directly. And as the code related to SQLAlchemy and the SQLAlchemy models lives in separate independent files, you would even be able to perform the migrations with Alembic without having to install FastAPI, Pydantic, or anything else. The same way, you would be able to use the same SQLAlchemy models and utilities in other parts of your code that are not related to FastAPI . For example, in a background task worker with Celery , RQ , or ARQ . Review all the files \u00b6 Remember you should have a directory named my_super_project that contains a sub-directory called sql_app . sql_app should have the following files: sql_app/__init__.py : is an empty file. sql_app/database.py : { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } sql_app/models.py : { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } sql_app/schemas.py : Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } sql_app/crud.py : { ! ../../../ docs_src / sql_databases / sql_app / crud . py ! } sql_app/main.py : Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } Check it \u00b6 You can copy this code and use it as is. Info In fact, the code shown here is part of the tests. As most of the code in these docs. Then you can run it with Uvicorn: $ uvicorn sql_app.main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) And then, you can open your browser at http://127.0.0.1:8000/docs . And you will be able to interact with your FastAPI application, reading data from a real database: Interact with the database directly \u00b6 If you want to explore the SQLite database (file) directly, independently of FastAPI, to debug its contents, add tables, columns, records, modify data, etc. you can use DB Browser for SQLite . It will look like this: You can also use an online SQLite browser like SQLite Viewer or ExtendsClass . Alternative DB session with middleware \u00b6 If you can't use dependencies with yield -- for example, if you are not using Python 3.7 and can't install the \"backports\" mentioned above for Python 3.6 -- you can set up the session in a \"middleware\" in a similar way. A \"middleware\" is basically a function that is always executed for each request, with some code executed before, and some code executed after the endpoint function. Create a middleware \u00b6 The middleware we'll add (just a function) will create a new SQLAlchemy SessionLocal for each request, add it to the request and then close it once the request is finished. Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / alt_main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / alt_main . py ! } Info We put the creation of the SessionLocal() and handling of the requests in a try block. And then we close it in the finally block. This way we make sure the database session is always closed after the request. Even if there was an exception while processing the request. About request.state \u00b6 request.state is a property of each Request object. It is there to store arbitrary objects attached to the request itself, like the database session in this case. You can read more about it in Starlette's docs about Request state . For us in this case, it helps us ensure a single database session is used through all the request, and then closed afterwards (in the middleware). Dependencies with yield or middleware \u00b6 Adding a middleware here is similar to what a dependency with yield does, with some differences: It requires more code and is a bit more complex. The middleware has to be an async function. If there is code in it that has to \"wait\" for the network, it could \"block\" your application there and degrade performance a bit. Although it's probably not very problematic here with the way SQLAlchemy works. But if you added more code to the middleware that had a lot of I/O waiting, it could then be problematic. A middleware is run for every request. So, a connection will be created for every request. Even when the path operation that handles that request didn't need the DB. Tip It's probably better to use dependencies with yield when they are enough for the use case. Info Dependencies with yield were added recently to FastAPI . A previous version of this tutorial only had the examples with a middleware and there are probably several applications using the middleware for database session management.","title":"SQL (Relational) Databases"},{"location":"guides/sql-databases/#sql-relational-databases","text":"FastAPI doesn't require you to use a SQL (relational) database. But you can use any relational database that you want. Here we'll see an example using SQLAlchemy . You can easily adapt it to any database supported by SQLAlchemy, like: PostgreSQL MySQL SQLite Oracle Microsoft SQL Server, etc. In this example, we'll use SQLite , because it uses a single file and Python has integrated support. So, you can copy this example and run it as is. Later, for your production application, you might want to use a database server like PostgreSQL . Tip There is an official project generator with FastAPI and PostgreSQL , all based on Docker , including a frontend and more tools: https://github.com/tiangolo/full-stack-fastapi-postgresql Note Notice that most of the code is the standard SQLAlchemy code you would use with any framework. The FastAPI specific code is as small as always.","title":"SQL (Relational) Databases"},{"location":"guides/sql-databases/#orms","text":"FastAPI works with any database and any style of library to talk to the database. A common pattern is to use an \"ORM\": an \"object-relational mapping\" library. An ORM has tools to convert (\" map \") between objects in code and database tables (\" relations \"). With an ORM, you normally create a class that represents a table in a SQL database, each attribute of the class represents a column, with a name and a type. For example a class Pet could represent a SQL table pets . And each instance object of that class represents a row in the database. For example an object orion_cat (an instance of Pet ) could have an attribute orion_cat.type , for the column type . And the value of that attribute could be, e.g. \"cat\" . These ORMs also have tools to make the connections or relations between tables or entities. This way, you could also have an attribute orion_cat.owner and the owner would contain the data for this pet's owner, taken from the table owners . So, orion_cat.owner.name could be the name (from the name column in the owners table) of this pet's owner. It could have a value like \"Arquilian\" . And the ORM will do all the work to get the information from the corresponding table owners when you try to access it from your pet object. Common ORMs are for example: Django-ORM (part of the Django framework), SQLAlchemy ORM (part of SQLAlchemy, independent of framework) and Peewee (independent of framework), among others. Here we will see how to work with SQLAlchemy ORM . In a similar way you could use any other ORM. Tip There's an equivalent article using Peewee here in the docs.","title":"ORMs"},{"location":"guides/sql-databases/#file-structure","text":"For these examples, let's say you have a directory named my_super_project that contains a sub-directory called sql_app with a structure like this: . \u2514\u2500\u2500 sql_app \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 crud.py \u251c\u2500\u2500 database.py \u251c\u2500\u2500 main.py \u251c\u2500\u2500 models.py \u2514\u2500\u2500 schemas.py The file __init__.py is just an empty file, but it tells Python that sql_app with all its modules (Python files) is a package. Now let's see what each file/module does.","title":"File structure"},{"location":"guides/sql-databases/#install-sqlalchemy","text":"First you need to install SQLAlchemy : $ pip install sqlalchemy ---> 100%","title":"Install SQLAlchemy"},{"location":"guides/sql-databases/#create-the-sqlalchemy-parts","text":"Let's refer to the file sql_app/database.py .","title":"Create the SQLAlchemy parts"},{"location":"guides/sql-databases/#import-the-sqlalchemy-parts","text":"{ ! ../../../ docs_src / sql_databases / sql_app / database . py ! }","title":"Import the SQLAlchemy parts"},{"location":"guides/sql-databases/#create-a-database-url-for-sqlalchemy","text":"{ ! ../../../ docs_src / sql_databases / sql_app / database . py ! } In this example, we are \"connecting\" to a SQLite database (opening a file with the SQLite database). The file will be located at the same directory in the file sql_app.db . That's why the last part is ./sql_app.db . If you were using a PostgreSQL database instead, you would just have to uncomment the line: SQLALCHEMY_DATABASE_URL = \"postgresql://user:password@postgresserver/db\" ...and adapt it with your database data and credentials (equivalently for MySQL, MariaDB or any other). Tip This is the main line that you would have to modify if you wanted to use a different database.","title":"Create a database URL for SQLAlchemy"},{"location":"guides/sql-databases/#create-the-sqlalchemy-engine","text":"The first step is to create a SQLAlchemy \"engine\". We will later use this engine in other places. { ! ../../../ docs_src / sql_databases / sql_app / database . py ! }","title":"Create the SQLAlchemy engine"},{"location":"guides/sql-databases/#note","text":"The argument: connect_args = { \"check_same_thread\" : False } ...is needed only for SQLite . It's not needed for other databases. Technical Details By default SQLite will only allow one thread to communicate with it, assuming that each thread would handle an independent request. This is to prevent accidentally sharing the same connection for different things (for different requests). But in FastAPI, using normal functions ( def ) more than one thread could interact with the database for the same request, so we need to make SQLite know that it should allow that with connect_args={\"check_same_thread\": False} . Also, we will make sure each request gets its own database connection session in a dependency, so there's no need for that default mechanism.","title":"Note"},{"location":"guides/sql-databases/#create-a-sessionlocal-class","text":"Each instance of the SessionLocal class will be a database session. The class itself is not a database session yet. But once we create an instance of the SessionLocal class, this instance will be the actual database session. We name it SessionLocal to distinguish it from the Session we are importing from SQLAlchemy. We will use Session (the one imported from SQLAlchemy) later. To create the SessionLocal class, use the function sessionmaker : { ! ../../../ docs_src / sql_databases / sql_app / database . py ! }","title":"Create a SessionLocal class"},{"location":"guides/sql-databases/#create-a-base-class","text":"Now we will use the function declarative_base() that returns a class. Later we will inherit from this class to create each of the database models or classes (the ORM models): { ! ../../../ docs_src / sql_databases / sql_app / database . py ! }","title":"Create a Base class"},{"location":"guides/sql-databases/#create-the-database-models","text":"Let's now see the file sql_app/models.py .","title":"Create the database models"},{"location":"guides/sql-databases/#create-sqlalchemy-models-from-the-base-class","text":"We will use this Base class we created before to create the SQLAlchemy models. Tip SQLAlchemy uses the term \" model \" to refer to these classes and instances that interact with the database. But Pydantic also uses the term \" model \" to refer to something different, the data validation, conversion, and documentation classes and instances. Import Base from database (the file database.py from above). Create classes that inherit from it. These classes are the SQLAlchemy models. { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } The __tablename__ attribute tells SQLAlchemy the name of the table to use in the database for each of these models.","title":"Create SQLAlchemy models from the Base class"},{"location":"guides/sql-databases/#create-model-attributescolumns","text":"Now create all the model (class) attributes. Each of these attributes represents a column in its corresponding database table. We use Column from SQLAlchemy as the default value. And we pass a SQLAlchemy class \"type\", as Integer , String , and Boolean , that defines the type in the database, as an argument. { ! ../../../ docs_src / sql_databases / sql_app / models . py ! }","title":"Create model attributes/columns"},{"location":"guides/sql-databases/#create-the-relationships","text":"Now create the relationships. For this, we use relationship provided by SQLAlchemy ORM. This will become, more or less, a \"magic\" attribute that will contain the values from other tables related to this one. { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } When accessing the attribute items in a User , as in my_user.items , it will have a list of Item SQLAlchemy models (from the items table) that have a foreign key pointing to this record in the users table. When you access my_user.items , SQLAlchemy will actually go and fetch the items from the database in the items table and populate them here. And when accessing the attribute owner in an Item , it will contain a User SQLAlchemy model from the users table. It will use the owner_id attribute/column with its foreign key to know which record to get from the users table.","title":"Create the relationships"},{"location":"guides/sql-databases/#create-the-pydantic-models","text":"Now let's check the file sql_app/schemas.py . Tip To avoid confusion between the SQLAlchemy models and the Pydantic models , we will have the file models.py with the SQLAlchemy models, and the file schemas.py with the Pydantic models. These Pydantic models define more or less a \"schema\" (a valid data shape). So this will help us avoiding confusion while using both.","title":"Create the Pydantic models"},{"location":"guides/sql-databases/#create-initial-pydantic-models-schemas","text":"Create an ItemBase and UserBase Pydantic models (or let's say \"schemas\") to have common attributes while creating or reading data. And create an ItemCreate and UserCreate that inherit from them (so they will have the same attributes), plus any additional data (attributes) needed for creation. So, the user will also have a password when creating it. But for security, the password won't be in other Pydantic models , for example, it won't be sent from the API when reading a user. Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! }","title":"Create initial Pydantic models / schemas"},{"location":"guides/sql-databases/#sqlalchemy-style-and-pydantic-style","text":"Notice that SQLAlchemy models define attributes using = , and pass the type as a parameter to Column , like in: name = Column ( String ) while Pydantic models declare the types using : , the new type annotation syntax/type hints: name : str Have it in mind, so you don't get confused when using = and : with them.","title":"SQLAlchemy style and Pydantic style"},{"location":"guides/sql-databases/#create-pydantic-models-schemas-for-reading-returning","text":"Now create Pydantic models (schemas) that will be used when reading data, when returning it from the API. For example, before creating an item, we don't know what will be the ID assigned to it, but when reading it (when returning it from the API) we will already know its ID. The same way, when reading a user, we can now declare that items will contain the items that belong to this user. Not only the IDs of those items, but all the data that we defined in the Pydantic model for reading items: Item . Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } Tip Notice that the User , the Pydantic model that will be used when reading a user (returning it from the API) doesn't include the password .","title":"Create Pydantic models / schemas for reading / returning"},{"location":"guides/sql-databases/#use-pydantics-orm_mode","text":"Now, in the Pydantic models for reading, Item and User , add an internal Config class. This Config class is used to provide configurations to Pydantic. In the Config class, set the attribute orm_mode = True . Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } Tip Notice it's assigning a value with = , like: orm_mode = True It doesn't use : as for the type declarations before. This is setting a config value, not declaring a type. Pydantic's orm_mode will tell the Pydantic model to read the data even if it is not a dict , but an ORM model (or any other arbitrary object with attributes). This way, instead of only trying to get the id value from a dict , as in: id = data [ \"id\" ] it will also try to get it from an attribute, as in: id = data . id And with this, the Pydantic model is compatible with ORMs, and you can just declare it in the response_model argument in your path operations . You will be able to return a database model and it will read the data from it.","title":"Use Pydantic's orm_mode"},{"location":"guides/sql-databases/#technical-details-about-orm-mode","text":"SQLAlchemy and many others are by default \"lazy loading\". That means, for example, that they don't fetch the data for relationships from the database unless you try to access the attribute that would contain that data. For example, accessing the attribute items : current_user . items would make SQLAlchemy go to the items table and get the items for this user, but not before. Without orm_mode , if you returned a SQLAlchemy model from your path operation , it wouldn't include the relationship data. Even if you declared those relationships in your Pydantic models. But with ORM mode, as Pydantic itself will try to access the data it needs from attributes (instead of assuming a dict ), you can declare the specific data you want to return and it will be able to go and get it, even from ORMs.","title":"Technical Details about ORM mode"},{"location":"guides/sql-databases/#crud-utils","text":"Now let's see the file sql_app/crud.py . In this file we will have reusable functions to interact with the data in the database. CRUD comes from: C reate, R ead, U pdate, and D elete. ...although in this example we are only creating and reading.","title":"CRUD utils"},{"location":"guides/sql-databases/#read-data","text":"Import Session from sqlalchemy.orm , this will allow you to declare the type of the db parameters and have better type checks and completion in your functions. Import models (the SQLAlchemy models) and schemas (the Pydantic models / schemas). Create utility functions to: Read a single user by ID and by email. Read multiple users. Read multiple items. { ! ../../../ docs_src / sql_databases / sql_app / crud . py ! } Tip By creating functions that are only dedicated to interacting with the database (get a user or an item) independent of your path operation function , you can more easily reuse them in multiple parts and also add unit tests for them.","title":"Read data"},{"location":"guides/sql-databases/#create-data","text":"Now create utility functions to create data. The steps are: Create a SQLAlchemy model instance with your data. add that instance object to your database session. commit the changes to the database (so that they are saved). refresh your instance (so that it contains any new data from the database, like the generated ID). { ! ../../../ docs_src / sql_databases / sql_app / crud . py ! } Tip The SQLAlchemy model for User contains a hashed_password that should contain a secure hashed version of the password. But as what the API client provides is the original password, you need to extract it and generate the hashed password in your application. And then pass the hashed_password argument with the value to save. Warning This example is not secure, the password is not hashed. In a real life application you would need to hash the password and never save them in plaintext. For more details, go back to the Security section in the tutorial. Here we are focusing only on the tools and mechanics of databases. Tip Instead of passing each of the keyword arguments to Item and reading each one of them from the Pydantic model , we are generating a dict with the Pydantic model 's data with: item.dict() and then we are passing the dict 's key-value pairs as the keyword arguments to the SQLAlchemy Item , with: Item(**item.dict()) And then we pass the extra keyword argument owner_id that is not provided by the Pydantic model , with: Item(**item.dict(), owner_id=user_id)","title":"Create data"},{"location":"guides/sql-databases/#main-fastapi-app","text":"And now in the file sql_app/main.py let's integrate and use all the other parts we created before.","title":"Main FastAPI app"},{"location":"guides/sql-databases/#create-the-database-tables","text":"In a very simplistic way create the database tables: Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! }","title":"Create the database tables"},{"location":"guides/sql-databases/#alembic-note","text":"Normally you would probably initialize your database (create tables, etc) with Alembic . And you would also use Alembic for \"migrations\" (that's its main job). A \"migration\" is the set of steps needed whenever you change the structure of your SQLAlchemy models, add a new attribute, etc. to replicate those changes in the database, add a new column, a new table, etc. You can find an example of Alembic in a FastAPI project in the templates from Project Generation - Template . Specifically in the alembic directory in the source code .","title":"Alembic Note"},{"location":"guides/sql-databases/#create-a-dependency","text":"Now use the SessionLocal class we created in the sql_app/database.py file to create a dependency. We need to have an independent database session/connection ( SessionLocal ) per request, use the same session through all the request and then close it after the request is finished. And then a new session will be created for the next request. For that, we will create a new dependency with yield , as explained before in the section about Dependencies with yield . Our dependency will create a new SQLAlchemy SessionLocal that will be used in a single request, and then close it once the request is finished. Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } Info We put the creation of the SessionLocal() and handling of the requests in a try block. And then we close it in the finally block. This way we make sure the database session is always closed after the request. Even if there was an exception while processing the request. But you can't raise another exception from the exit code (after yield ). See more in Dependencies with yield and HTTPException And then, when using the dependency in a path operation function , we declare it with the type Session we imported directly from SQLAlchemy. This will then give us better editor support inside the path operation function , because the editor will know that the db parameter is of type Session : Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } Technical Details The parameter db is actually of type SessionLocal , but this class (created with sessionmaker() ) is a \"proxy\" of a SQLAlchemy Session , so, the editor doesn't really know what methods are provided. But by declaring the type as Session , the editor now can know the available methods ( .add() , .query() , .commit() , etc) and can provide better support (like completion). The type declaration doesn't affect the actual object.","title":"Create a dependency"},{"location":"guides/sql-databases/#create-your-fastapi-path-operations","text":"Now, finally, here's the standard FastAPI path operations code. Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! } We are creating the database session before each request in the dependency with yield , and then closing it afterwards. And then we can create the required dependency in the path operation function , to get that session directly. With that, we can just call crud.get_user directly from inside of the path operation function and use that session. Tip Notice that the values you return are SQLAlchemy models, or lists of SQLAlchemy models. But as all the path operations have a response_model with Pydantic models / schemas using orm_mode , the data declared in your Pydantic models will be extracted from them and returned to the client, with all the normal filtering and validation. Tip Also notice that there are response_models that have standard Python types like List[schemas.Item] . But as the content/parameter of that List is a Pydantic model with orm_mode , the data will be retrieved and returned to the client as normally, without problems.","title":"Create your FastAPI path operations"},{"location":"guides/sql-databases/#about-def-vs-async-def","text":"Here we are using SQLAlchemy code inside of the path operation function and in the dependency, and, in turn, it will go and communicate with an external database. That could potentially require some \"waiting\". But as SQLAlchemy doesn't have compatibility for using await directly, as would be with something like: user = await db . query ( User ) . first () ...and instead we are using: user = db . query ( User ) . first () Then we should declare the path operation functions and the dependency without async def , just with a normal def , as: @app . get ( \"/users/ {user_id} \" , response_model = schemas . User ) def read_user ( user_id : int , db : Session = Depends ( get_db )): db_user = crud . get_user ( db , user_id = user_id ) ... Info If you need to connect to your relational database asynchronously, see Async SQL (Relational) Databases . Very Technical Details If you are curious and have a deep technical knowledge, you can check the very technical details of how this async def vs def is handled in the Async docs.","title":"About def vs async def"},{"location":"guides/sql-databases/#migrations","text":"Because we are using SQLAlchemy directly and we don't require any kind of plug-in for it to work with FastAPI , we could integrate database migrations with Alembic directly. And as the code related to SQLAlchemy and the SQLAlchemy models lives in separate independent files, you would even be able to perform the migrations with Alembic without having to install FastAPI, Pydantic, or anything else. The same way, you would be able to use the same SQLAlchemy models and utilities in other parts of your code that are not related to FastAPI . For example, in a background task worker with Celery , RQ , or ARQ .","title":"Migrations"},{"location":"guides/sql-databases/#review-all-the-files","text":"Remember you should have a directory named my_super_project that contains a sub-directory called sql_app . sql_app should have the following files: sql_app/__init__.py : is an empty file. sql_app/database.py : { ! ../../../ docs_src / sql_databases / sql_app / database . py ! } sql_app/models.py : { ! ../../../ docs_src / sql_databases / sql_app / models . py ! } sql_app/schemas.py : Python 3.6 and above Python 3.9 and above Python 3.10 and above { ! > ../../../ docs_src / sql_databases / sql_app / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / schemas . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py310 / schemas . py ! } sql_app/crud.py : { ! ../../../ docs_src / sql_databases / sql_app / crud . py ! } sql_app/main.py : Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / main . py ! }","title":"Review all the files"},{"location":"guides/sql-databases/#check-it","text":"You can copy this code and use it as is. Info In fact, the code shown here is part of the tests. As most of the code in these docs. Then you can run it with Uvicorn: $ uvicorn sql_app.main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) And then, you can open your browser at http://127.0.0.1:8000/docs . And you will be able to interact with your FastAPI application, reading data from a real database:","title":"Check it"},{"location":"guides/sql-databases/#interact-with-the-database-directly","text":"If you want to explore the SQLite database (file) directly, independently of FastAPI, to debug its contents, add tables, columns, records, modify data, etc. you can use DB Browser for SQLite . It will look like this: You can also use an online SQLite browser like SQLite Viewer or ExtendsClass .","title":"Interact with the database directly"},{"location":"guides/sql-databases/#alternative-db-session-with-middleware","text":"If you can't use dependencies with yield -- for example, if you are not using Python 3.7 and can't install the \"backports\" mentioned above for Python 3.6 -- you can set up the session in a \"middleware\" in a similar way. A \"middleware\" is basically a function that is always executed for each request, with some code executed before, and some code executed after the endpoint function.","title":"Alternative DB session with middleware"},{"location":"guides/sql-databases/#create-a-middleware","text":"The middleware we'll add (just a function) will create a new SQLAlchemy SessionLocal for each request, add it to the request and then close it once the request is finished. Python 3.6 and above Python 3.9 and above { ! > ../../../ docs_src / sql_databases / sql_app / alt_main . py ! } { ! > ../../../ docs_src / sql_databases / sql_app_py39 / alt_main . py ! } Info We put the creation of the SessionLocal() and handling of the requests in a try block. And then we close it in the finally block. This way we make sure the database session is always closed after the request. Even if there was an exception while processing the request.","title":"Create a middleware"},{"location":"guides/sql-databases/#about-requeststate","text":"request.state is a property of each Request object. It is there to store arbitrary objects attached to the request itself, like the database session in this case. You can read more about it in Starlette's docs about Request state . For us in this case, it helps us ensure a single database session is used through all the request, and then closed afterwards (in the middleware).","title":"About request.state"},{"location":"guides/sql-databases/#dependencies-with-yield-or-middleware","text":"Adding a middleware here is similar to what a dependency with yield does, with some differences: It requires more code and is a bit more complex. The middleware has to be an async function. If there is code in it that has to \"wait\" for the network, it could \"block\" your application there and degrade performance a bit. Although it's probably not very problematic here with the way SQLAlchemy works. But if you added more code to the middleware that had a lot of I/O waiting, it could then be problematic. A middleware is run for every request. So, a connection will be created for every request. Even when the path operation that handles that request didn't need the DB. Tip It's probably better to use dependencies with yield when they are enough for the use case. Info Dependencies with yield were added recently to FastAPI . A previous version of this tutorial only had the examples with a middleware and there are probably several applications using the middleware for database session management.","title":"Dependencies with yield or middleware"},{"location":"guides/static-files/","text":"Static Files \u00b6 You can serve static files automatically from a directory using StaticFiles . Use StaticFiles \u00b6 Import StaticFiles . \"Mount\" a StaticFiles() instance in a specific path. { ! ../../../ docs_src / static_files / tutorial001 . py ! } Technical Details You could also use from starlette.staticfiles import StaticFiles . FastAPI provides the same starlette.staticfiles as fastapi.staticfiles just as a convenience for you, the developer. But it actually comes directly from Starlette. What is \"Mounting\" \u00b6 \"Mounting\" means adding a complete \"independent\" application in a specific path, that then takes care of handling all the sub-paths. This is different from using an APIRouter as a mounted application is completely independent. The OpenAPI and docs from your main application won't include anything from the mounted application, etc. You can read more about this in the Advanced User Guide . Details \u00b6 The first \"/static\" refers to the sub-path this \"sub-application\" will be \"mounted\" on. So, any path that starts with \"/static\" will be handled by it. The directory=\"static\" refers to the name of the directory that contains your static files. The name=\"static\" gives it a name that can be used internally by FastAPI . All these parameters can be different than \" static \", adjust them with the needs and specific details of your own application. More info \u00b6 For more details and options check Starlette's docs about Static Files .","title":"Static Files"},{"location":"guides/static-files/#static-files","text":"You can serve static files automatically from a directory using StaticFiles .","title":"Static Files"},{"location":"guides/static-files/#use-staticfiles","text":"Import StaticFiles . \"Mount\" a StaticFiles() instance in a specific path. { ! ../../../ docs_src / static_files / tutorial001 . py ! } Technical Details You could also use from starlette.staticfiles import StaticFiles . FastAPI provides the same starlette.staticfiles as fastapi.staticfiles just as a convenience for you, the developer. But it actually comes directly from Starlette.","title":"Use StaticFiles"},{"location":"guides/static-files/#what-is-mounting","text":"\"Mounting\" means adding a complete \"independent\" application in a specific path, that then takes care of handling all the sub-paths. This is different from using an APIRouter as a mounted application is completely independent. The OpenAPI and docs from your main application won't include anything from the mounted application, etc. You can read more about this in the Advanced User Guide .","title":"What is \"Mounting\""},{"location":"guides/static-files/#details","text":"The first \"/static\" refers to the sub-path this \"sub-application\" will be \"mounted\" on. So, any path that starts with \"/static\" will be handled by it. The directory=\"static\" refers to the name of the directory that contains your static files. The name=\"static\" gives it a name that can be used internally by FastAPI . All these parameters can be different than \" static \", adjust them with the needs and specific details of your own application.","title":"Details"},{"location":"guides/static-files/#more-info","text":"For more details and options check Starlette's docs about Static Files .","title":"More info"},{"location":"guides/security/","text":"Security Intro \u00b6 There are many ways to handle security, authentication and authorization. And it normally is a complex and \"difficult\" topic. In many frameworks and systems just handling security and authentication takes a big amount of effort and code (in many cases it can be 50% or more of all the code written). FastAPI provides several tools to help you deal with Security easily, rapidly, in a standard way, without having to study and learn all the security specifications. But first, let's check some small concepts. In a hurry? \u00b6 If you don't care about any of these terms and you just need to add security with authentication based on username and password right now , skip to the next chapters. OAuth2 \u00b6 OAuth2 is a specification that defines several ways to handle authentication and authorization. It is quite an extensive specification and covers several complex use cases. It includes ways to authenticate using a \"third party\". That's what all the systems with \"login with Facebook, Google, Twitter, GitHub\" use underneath. OAuth 1 \u00b6 There was an OAuth 1, which is very different from OAuth2, and more complex, as it included directly specifications on how to encrypt the communication. It is not very popular or used nowadays. OAuth2 doesn't specify how to encrypt the communication, it expects you to have your application served with HTTPS. Tip In the section about deployment you will see how to set up HTTPS for free, using Traefik and Let's Encrypt. OpenID Connect \u00b6 OpenID Connect is another specification, based on OAuth2 . It just extends OAuth2 specifying some things that are relatively ambiguous in OAuth2, to try to make it more interoperable. For example, Google login uses OpenID Connect (which underneath uses OAuth2). But Facebook login doesn't support OpenID Connect. It has its own flavor of OAuth2. OpenID (not \"OpenID Connect\") \u00b6 There was also an \"OpenID\" specification. That tried to solve the same thing as OpenID Connect , but was not based on OAuth2. So, it was a complete additional system. It is not very popular or used nowadays. OpenAPI \u00b6 OpenAPI (previously known as Swagger) is the open specification for building APIs (now part of the Linux Foundation). FastAPI is based on OpenAPI . That's what makes it possible to have multiple automatic interactive documentation interfaces, code generation, etc. OpenAPI has a way to define multiple security \"schemes\". By using them, you can take advantage of all these standard-based tools, including these interactive documentation systems. OpenAPI defines the following security schemes: apiKey : an application specific key that can come from: A query parameter. A header. A cookie. http : standard HTTP authentication systems, including: bearer : a header Authorization with a value of Bearer plus a token. This is inherited from OAuth2. HTTP Basic authentication. HTTP Digest, etc. oauth2 : all the OAuth2 ways to handle security (called \"flows\"). Several of these flows are appropriate for building an OAuth 2.0 authentication provider (like Google, Facebook, Twitter, GitHub, etc): implicit clientCredentials authorizationCode But there is one specific \"flow\" that can be perfectly used for handling authentication in the same application directly: password : some next chapters will cover examples of this. openIdConnect : has a way to define how to discover OAuth2 authentication data automatically. This automatic discovery is what is defined in the OpenID Connect specification. Tip Integrating other authentication/authorization providers like Google, Facebook, Twitter, GitHub, etc. is also possible and relatively easy. The most complex problem is building an authentication/authorization provider like those, but FastAPI gives you the tools to do it easily, while doing the heavy lifting for you. FastAPI utilities \u00b6 FastAPI provides several tools for each of these security schemes in the fastapi.security module that simplify using these security mechanisms. In the next chapters you will see how to add security to your API using those tools provided by FastAPI . And you will also see how it gets automatically integrated into the interactive documentation system.","title":"Security"},{"location":"guides/security/#security-intro","text":"There are many ways to handle security, authentication and authorization. And it normally is a complex and \"difficult\" topic. In many frameworks and systems just handling security and authentication takes a big amount of effort and code (in many cases it can be 50% or more of all the code written). FastAPI provides several tools to help you deal with Security easily, rapidly, in a standard way, without having to study and learn all the security specifications. But first, let's check some small concepts.","title":"Security Intro"},{"location":"guides/security/#in-a-hurry","text":"If you don't care about any of these terms and you just need to add security with authentication based on username and password right now , skip to the next chapters.","title":"In a hurry?"},{"location":"guides/security/#oauth2","text":"OAuth2 is a specification that defines several ways to handle authentication and authorization. It is quite an extensive specification and covers several complex use cases. It includes ways to authenticate using a \"third party\". That's what all the systems with \"login with Facebook, Google, Twitter, GitHub\" use underneath.","title":"OAuth2"},{"location":"guides/security/#oauth-1","text":"There was an OAuth 1, which is very different from OAuth2, and more complex, as it included directly specifications on how to encrypt the communication. It is not very popular or used nowadays. OAuth2 doesn't specify how to encrypt the communication, it expects you to have your application served with HTTPS. Tip In the section about deployment you will see how to set up HTTPS for free, using Traefik and Let's Encrypt.","title":"OAuth 1"},{"location":"guides/security/#openid-connect","text":"OpenID Connect is another specification, based on OAuth2 . It just extends OAuth2 specifying some things that are relatively ambiguous in OAuth2, to try to make it more interoperable. For example, Google login uses OpenID Connect (which underneath uses OAuth2). But Facebook login doesn't support OpenID Connect. It has its own flavor of OAuth2.","title":"OpenID Connect"},{"location":"guides/security/#openid-not-openid-connect","text":"There was also an \"OpenID\" specification. That tried to solve the same thing as OpenID Connect , but was not based on OAuth2. So, it was a complete additional system. It is not very popular or used nowadays.","title":"OpenID (not \"OpenID Connect\")"},{"location":"guides/security/#openapi","text":"OpenAPI (previously known as Swagger) is the open specification for building APIs (now part of the Linux Foundation). FastAPI is based on OpenAPI . That's what makes it possible to have multiple automatic interactive documentation interfaces, code generation, etc. OpenAPI has a way to define multiple security \"schemes\". By using them, you can take advantage of all these standard-based tools, including these interactive documentation systems. OpenAPI defines the following security schemes: apiKey : an application specific key that can come from: A query parameter. A header. A cookie. http : standard HTTP authentication systems, including: bearer : a header Authorization with a value of Bearer plus a token. This is inherited from OAuth2. HTTP Basic authentication. HTTP Digest, etc. oauth2 : all the OAuth2 ways to handle security (called \"flows\"). Several of these flows are appropriate for building an OAuth 2.0 authentication provider (like Google, Facebook, Twitter, GitHub, etc): implicit clientCredentials authorizationCode But there is one specific \"flow\" that can be perfectly used for handling authentication in the same application directly: password : some next chapters will cover examples of this. openIdConnect : has a way to define how to discover OAuth2 authentication data automatically. This automatic discovery is what is defined in the OpenID Connect specification. Tip Integrating other authentication/authorization providers like Google, Facebook, Twitter, GitHub, etc. is also possible and relatively easy. The most complex problem is building an authentication/authorization provider like those, but FastAPI gives you the tools to do it easily, while doing the heavy lifting for you.","title":"OpenAPI"},{"location":"guides/security/#fastapi-utilities","text":"FastAPI provides several tools for each of these security schemes in the fastapi.security module that simplify using these security mechanisms. In the next chapters you will see how to add security to your API using those tools provided by FastAPI . And you will also see how it gets automatically integrated into the interactive documentation system.","title":"FastAPI utilities"},{"location":"guides/security/first-steps/","text":"Security - First Steps \u00b6 Let's imagine that you have your backend API in some domain. And you have a frontend in another domain or in a different path of the same domain (or in a mobile application). And you want to have a way for the frontend to authenticate with the backend, using a username and password . We can use OAuth2 to build that with FastAPI . But let's save you the time of reading the full long specification just to find those little pieces of information you need. Let's use the tools provided by FastAPI to handle security. How it looks \u00b6 Let's first just use the code and see how it works, and then we'll come back to understand what's happening. Create main.py \u00b6 Copy the example in a file main.py : { ! ../../../ docs_src / security / tutorial001 . py ! } Run it \u00b6 Info First install python-multipart . E.g. pip install python-multipart . This is because OAuth2 uses \"form data\" for sending the username and password . Run the example with: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) Check it \u00b6 Go to the interactive docs at: http://127.0.0.1:8000/docs . You will see something like this: Authorize button! You already have a shiny new \"Authorize\" button. And your path operation has a little lock in the top-right corner that you can click. And if you click it, you have a little authorization form to type a username and password (and other optional fields): Note It doesn't matter what you type in the form, it won't work yet. But we'll get there. This is of course not the frontend for the final users, but it's a great automatic tool to document interactively all your API. It can be used by the frontend team (that can also be yourself). It can be used by third party applications and systems. And it can also be used by yourself, to debug, check and test the same application. The password flow \u00b6 Now let's go back a bit and understand what is all that. The password \"flow\" is one of the ways (\"flows\") defined in OAuth2, to handle security and authentication. OAuth2 was designed so that the backend or API could be independent of the server that authenticates the user. But in this case, the same FastAPI application will handle the API and the authentication. So, let's review it from that simplified point of view: The user types the username and password in the frontend, and hits Enter . The frontend (running in the user's browser) sends that username and password to a specific URL in our API (declared with tokenUrl=\"token\" ). The API checks that username and password , and responds with a \"token\" (we haven't implemented any of this yet). A \"token\" is just a string with some content that we can use later to verify this user. Normally, a token is set to expire after some time. So, the user will have to log in again at some point later. And if the token is stolen, the risk is less. It is not like a permanent key that will work forever (in most of the cases). The frontend stores that token temporarily somewhere. The user clicks in the frontend to go to another section of the frontend web app. The frontend needs to fetch some more data from the API. But it needs authentication for that specific endpoint. So, to authenticate with our API, it sends a header Authorization with a value of Bearer plus the token. If the token contains foobar , the content of the Authorization header would be: Bearer foobar . FastAPI 's OAuth2PasswordBearer \u00b6 FastAPI provides several tools, at different levels of abstraction, to implement these security features. In this example we are going to use OAuth2 , with the Password flow, using a Bearer token. We do that using the OAuth2PasswordBearer class. Info A \"bearer\" token is not the only option. But it's the best one for our use case. And it might be the best for most use cases, unless you are an OAuth2 expert and know exactly why there's another option that suits better your needs. In that case, FastAPI also provides you with the tools to build it. When we create an instance of the OAuth2PasswordBearer class we pass in the tokenUrl parameter. This parameter contains the URL that the client (the frontend running in the user's browser) will use to send the username and password in order to get a token. { ! ../../../ docs_src / security / tutorial001 . py ! } Tip Here tokenUrl=\"token\" refers to a relative URL token that we haven't created yet. As it's a relative URL, it's equivalent to ./token . Because we are using a relative URL, if your API was located at https://example.com/ , then it would refer to https://example.com/token . But if your API was located at https://example.com/api/v1/ , then it would refer to https://example.com/api/v1/token . Using a relative URL is important to make sure your application keeps working even in an advanced use case like Behind a Proxy . This parameter doesn't create that endpoint / path operation , but declares that the URL /token will be the one that the client should use to get the token. That information is used in OpenAPI, and then in the interactive API documentation systems. We will soon also create the actual path operation. Info If you are a very strict \"Pythonista\" you might dislike the style of the parameter name tokenUrl instead of token_url . That's because it is using the same name as in the OpenAPI spec. So that if you need to investigate more about any of these security schemes you can just copy and paste it to find more information about it. The oauth2_scheme variable is an instance of OAuth2PasswordBearer , but it is also a \"callable\". It could be called as: oauth2_scheme ( some , parameters ) So, it can be used with Depends . Use it \u00b6 Now you can pass that oauth2_scheme in a dependency with Depends . { ! ../../../ docs_src / security / tutorial001 . py ! } This dependency will provide a str that is assigned to the parameter token of the path operation function . FastAPI will know that it can use this dependency to define a \"security scheme\" in the OpenAPI schema (and the automatic API docs). Technical Details FastAPI will know that it can use the class OAuth2PasswordBearer (declared in a dependency) to define the security scheme in OpenAPI because it inherits from fastapi.security.oauth2.OAuth2 , which in turn inherits from fastapi.security.base.SecurityBase . All the security utilities that integrate with OpenAPI (and the automatic API docs) inherit from SecurityBase , that's how FastAPI can know how to integrate them in OpenAPI. What it does \u00b6 It will go and look in the request for that Authorization header, check if the value is Bearer plus some token, and will return the token as a str . If it doesn't see an Authorization header, or the value doesn't have a Bearer token, it will respond with a 401 status code error ( UNAUTHORIZED ) directly. You don't even have to check if the token exists to return an error. You can be sure that if your function is executed, it will have a str in that token. You can try it already in the interactive docs: We are not verifying the validity of the token yet, but that's a start already. Recap \u00b6 So, in just 3 or 4 extra lines, you already have some primitive form of security.","title":"Security - First Steps"},{"location":"guides/security/first-steps/#security-first-steps","text":"Let's imagine that you have your backend API in some domain. And you have a frontend in another domain or in a different path of the same domain (or in a mobile application). And you want to have a way for the frontend to authenticate with the backend, using a username and password . We can use OAuth2 to build that with FastAPI . But let's save you the time of reading the full long specification just to find those little pieces of information you need. Let's use the tools provided by FastAPI to handle security.","title":"Security - First Steps"},{"location":"guides/security/first-steps/#how-it-looks","text":"Let's first just use the code and see how it works, and then we'll come back to understand what's happening.","title":"How it looks"},{"location":"guides/security/first-steps/#create-mainpy","text":"Copy the example in a file main.py : { ! ../../../ docs_src / security / tutorial001 . py ! }","title":"Create main.py"},{"location":"guides/security/first-steps/#run-it","text":"Info First install python-multipart . E.g. pip install python-multipart . This is because OAuth2 uses \"form data\" for sending the username and password . Run the example with: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)","title":"Run it"},{"location":"guides/security/first-steps/#check-it","text":"Go to the interactive docs at: http://127.0.0.1:8000/docs . You will see something like this: Authorize button! You already have a shiny new \"Authorize\" button. And your path operation has a little lock in the top-right corner that you can click. And if you click it, you have a little authorization form to type a username and password (and other optional fields): Note It doesn't matter what you type in the form, it won't work yet. But we'll get there. This is of course not the frontend for the final users, but it's a great automatic tool to document interactively all your API. It can be used by the frontend team (that can also be yourself). It can be used by third party applications and systems. And it can also be used by yourself, to debug, check and test the same application.","title":"Check it"},{"location":"guides/security/first-steps/#the-password-flow","text":"Now let's go back a bit and understand what is all that. The password \"flow\" is one of the ways (\"flows\") defined in OAuth2, to handle security and authentication. OAuth2 was designed so that the backend or API could be independent of the server that authenticates the user. But in this case, the same FastAPI application will handle the API and the authentication. So, let's review it from that simplified point of view: The user types the username and password in the frontend, and hits Enter . The frontend (running in the user's browser) sends that username and password to a specific URL in our API (declared with tokenUrl=\"token\" ). The API checks that username and password , and responds with a \"token\" (we haven't implemented any of this yet). A \"token\" is just a string with some content that we can use later to verify this user. Normally, a token is set to expire after some time. So, the user will have to log in again at some point later. And if the token is stolen, the risk is less. It is not like a permanent key that will work forever (in most of the cases). The frontend stores that token temporarily somewhere. The user clicks in the frontend to go to another section of the frontend web app. The frontend needs to fetch some more data from the API. But it needs authentication for that specific endpoint. So, to authenticate with our API, it sends a header Authorization with a value of Bearer plus the token. If the token contains foobar , the content of the Authorization header would be: Bearer foobar .","title":"The password flow"},{"location":"guides/security/first-steps/#fastapis-oauth2passwordbearer","text":"FastAPI provides several tools, at different levels of abstraction, to implement these security features. In this example we are going to use OAuth2 , with the Password flow, using a Bearer token. We do that using the OAuth2PasswordBearer class. Info A \"bearer\" token is not the only option. But it's the best one for our use case. And it might be the best for most use cases, unless you are an OAuth2 expert and know exactly why there's another option that suits better your needs. In that case, FastAPI also provides you with the tools to build it. When we create an instance of the OAuth2PasswordBearer class we pass in the tokenUrl parameter. This parameter contains the URL that the client (the frontend running in the user's browser) will use to send the username and password in order to get a token. { ! ../../../ docs_src / security / tutorial001 . py ! } Tip Here tokenUrl=\"token\" refers to a relative URL token that we haven't created yet. As it's a relative URL, it's equivalent to ./token . Because we are using a relative URL, if your API was located at https://example.com/ , then it would refer to https://example.com/token . But if your API was located at https://example.com/api/v1/ , then it would refer to https://example.com/api/v1/token . Using a relative URL is important to make sure your application keeps working even in an advanced use case like Behind a Proxy . This parameter doesn't create that endpoint / path operation , but declares that the URL /token will be the one that the client should use to get the token. That information is used in OpenAPI, and then in the interactive API documentation systems. We will soon also create the actual path operation. Info If you are a very strict \"Pythonista\" you might dislike the style of the parameter name tokenUrl instead of token_url . That's because it is using the same name as in the OpenAPI spec. So that if you need to investigate more about any of these security schemes you can just copy and paste it to find more information about it. The oauth2_scheme variable is an instance of OAuth2PasswordBearer , but it is also a \"callable\". It could be called as: oauth2_scheme ( some , parameters ) So, it can be used with Depends .","title":"FastAPI's OAuth2PasswordBearer"},{"location":"guides/security/first-steps/#use-it","text":"Now you can pass that oauth2_scheme in a dependency with Depends . { ! ../../../ docs_src / security / tutorial001 . py ! } This dependency will provide a str that is assigned to the parameter token of the path operation function . FastAPI will know that it can use this dependency to define a \"security scheme\" in the OpenAPI schema (and the automatic API docs). Technical Details FastAPI will know that it can use the class OAuth2PasswordBearer (declared in a dependency) to define the security scheme in OpenAPI because it inherits from fastapi.security.oauth2.OAuth2 , which in turn inherits from fastapi.security.base.SecurityBase . All the security utilities that integrate with OpenAPI (and the automatic API docs) inherit from SecurityBase , that's how FastAPI can know how to integrate them in OpenAPI.","title":"Use it"},{"location":"guides/security/first-steps/#what-it-does","text":"It will go and look in the request for that Authorization header, check if the value is Bearer plus some token, and will return the token as a str . If it doesn't see an Authorization header, or the value doesn't have a Bearer token, it will respond with a 401 status code error ( UNAUTHORIZED ) directly. You don't even have to check if the token exists to return an error. You can be sure that if your function is executed, it will have a str in that token. You can try it already in the interactive docs: We are not verifying the validity of the token yet, but that's a start already.","title":"What it does"},{"location":"guides/security/first-steps/#recap","text":"So, in just 3 or 4 extra lines, you already have some primitive form of security.","title":"Recap"},{"location":"guides/security/get-current-user/","text":"Get Current User \u00b6 In the previous chapter the security system (which is based on the dependency injection system) was giving the path operation function a token as a str : { ! ../../../ docs_src / security / tutorial001 . py ! } But that is still not that useful. Let's make it give us the current user. Create a user model \u00b6 First, let's create a Pydantic user model. The same way we use Pydantic to declare bodies, we can use it anywhere else: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! } Create a get_current_user dependency \u00b6 Let's create a dependency get_current_user . Remember that dependencies can have sub-dependencies? get_current_user will have a dependency with the same oauth2_scheme we created before. The same as we were doing before in the path operation directly, our new dependency get_current_user will receive a token as a str from the sub-dependency oauth2_scheme : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! } Get the user \u00b6 get_current_user will use a (fake) utility function we created, that takes a token as a str and returns our Pydantic User model: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! } Inject the current user \u00b6 So now we can use the same Depends with our get_current_user in the path operation : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! } Notice that we declare the type of current_user as the Pydantic model User . This will help us inside of the function with all the completion and type checks. Tip You might remember that request bodies are also declared with Pydantic models. Here FastAPI won't get confused because you are using Depends . Check The way this dependency system is designed allows us to have different dependencies (different \"dependables\") that all return a User model. We are not restricted to having only one dependency that can return that type of data. Other models \u00b6 You can now get the current user directly in the path operation functions and deal with the security mechanisms at the Dependency Injection level, using Depends . And you can use any model or data for the security requirements (in this case, a Pydantic model User ). But you are not restricted to using some specific data model, class or type. Do you want to have an id and email and not have any username in your model? Sure. You can use these same tools. Do you want to just have a str ? Or just a dict ? Or a database class model instance directly? It all works the same way. You actually don't have users that log in to your application but robots, bots, or other systems, that have just an access token? Again, it all works the same. Just use any kind of model, any kind of class, any kind of database that you need for your application. FastAPI has you covered with the dependency injection system. Code size \u00b6 This example might seem verbose. Have in mind that we are mixing security, data models, utility functions and path operations in the same file. But here's the key point. The security and dependency injection stuff is written once. And you can make it as complex as you want. And still, have it written only once, in a single place. With all the flexibility. But you can have thousands of endpoints ( path operations ) using the same security system. And all of them (or any portion of them that you want) can take the advantage of re-using these dependencies or any other dependencies you create. And all these thousands of path operations can be as small as 3 lines: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! } Recap \u00b6 You can now get the current user directly in your path operation function . We are already halfway there. We just need to add a path operation for the user/client to actually send the username and password . That comes next.","title":"Get Current User"},{"location":"guides/security/get-current-user/#get-current-user","text":"In the previous chapter the security system (which is based on the dependency injection system) was giving the path operation function a token as a str : { ! ../../../ docs_src / security / tutorial001 . py ! } But that is still not that useful. Let's make it give us the current user.","title":"Get Current User"},{"location":"guides/security/get-current-user/#create-a-user-model","text":"First, let's create a Pydantic user model. The same way we use Pydantic to declare bodies, we can use it anywhere else: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! }","title":"Create a user model"},{"location":"guides/security/get-current-user/#create-a-get_current_user-dependency","text":"Let's create a dependency get_current_user . Remember that dependencies can have sub-dependencies? get_current_user will have a dependency with the same oauth2_scheme we created before. The same as we were doing before in the path operation directly, our new dependency get_current_user will receive a token as a str from the sub-dependency oauth2_scheme : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! }","title":"Create a get_current_user dependency"},{"location":"guides/security/get-current-user/#get-the-user","text":"get_current_user will use a (fake) utility function we created, that takes a token as a str and returns our Pydantic User model: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! }","title":"Get the user"},{"location":"guides/security/get-current-user/#inject-the-current-user","text":"So now we can use the same Depends with our get_current_user in the path operation : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! } Notice that we declare the type of current_user as the Pydantic model User . This will help us inside of the function with all the completion and type checks. Tip You might remember that request bodies are also declared with Pydantic models. Here FastAPI won't get confused because you are using Depends . Check The way this dependency system is designed allows us to have different dependencies (different \"dependables\") that all return a User model. We are not restricted to having only one dependency that can return that type of data.","title":"Inject the current user"},{"location":"guides/security/get-current-user/#other-models","text":"You can now get the current user directly in the path operation functions and deal with the security mechanisms at the Dependency Injection level, using Depends . And you can use any model or data for the security requirements (in this case, a Pydantic model User ). But you are not restricted to using some specific data model, class or type. Do you want to have an id and email and not have any username in your model? Sure. You can use these same tools. Do you want to just have a str ? Or just a dict ? Or a database class model instance directly? It all works the same way. You actually don't have users that log in to your application but robots, bots, or other systems, that have just an access token? Again, it all works the same. Just use any kind of model, any kind of class, any kind of database that you need for your application. FastAPI has you covered with the dependency injection system.","title":"Other models"},{"location":"guides/security/get-current-user/#code-size","text":"This example might seem verbose. Have in mind that we are mixing security, data models, utility functions and path operations in the same file. But here's the key point. The security and dependency injection stuff is written once. And you can make it as complex as you want. And still, have it written only once, in a single place. With all the flexibility. But you can have thousands of endpoints ( path operations ) using the same security system. And all of them (or any portion of them that you want) can take the advantage of re-using these dependencies or any other dependencies you create. And all these thousands of path operations can be as small as 3 lines: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial002 . py ! } { ! > ../../../ docs_src / security / tutorial002_py310 . py ! }","title":"Code size"},{"location":"guides/security/get-current-user/#recap","text":"You can now get the current user directly in your path operation function . We are already halfway there. We just need to add a path operation for the user/client to actually send the username and password . That comes next.","title":"Recap"},{"location":"guides/security/oauth2-jwt/","text":"OAuth2 with Password (and hashing), Bearer with JWT tokens \u00b6 Now that we have all the security flow, let's make the application actually secure, using JWT tokens and secure password hashing. This code is something you can actually use in your application, save the password hashes in your database, etc. We are going to start from where we left in the previous chapter and increment it. About JWT \u00b6 JWT means \"JSON Web Tokens\". It's a standard to codify a JSON object in a long dense string without spaces. It looks like this: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c It is not encrypted, so, anyone could recover the information from the contents. But it's signed. So, when you receive a token that you emitted, you can verify that you actually emitted it. That way, you can create a token with an expiration of, let's say, 1 week. And then when the user comes back the next day with the token, you know that user is still logged in to your system. After a week, the token will be expired and the user will not be authorized and will have to sign in again to get a new token. And if the user (or a third party) tried to modify the token to change the expiration, you would be able to discover it, because the signatures would not match. If you want to play with JWT tokens and see how they work, check https://jwt.io . Install python-jose \u00b6 We need to install python-jose to generate and verify the JWT tokens in Python: $ pip install \"python-jose[cryptography]\" ---> 100% Python-jose requires a cryptographic backend as an extra. Here we are using the recommended one: pyca/cryptography . Tip This tutorial previously used PyJWT . But it was updated to use Python-jose instead as it provides all the features from PyJWT plus some extras that you might need later when building integrations with other tools. Password hashing \u00b6 \"Hashing\" means converting some content (a password in this case) into a sequence of bytes (just a string) that looks like gibberish. Whenever you pass exactly the same content (exactly the same password) you get exactly the same gibberish. But you cannot convert from the gibberish back to the password. Why use password hashing \u00b6 If your database is stolen, the thief won't have your users' plaintext passwords, only the hashes. So, the thief won't be able to try to use that password in another system (as many users use the same password everywhere, this would be dangerous). Install passlib \u00b6 PassLib is a great Python package to handle password hashes. It supports many secure hashing algorithms and utilities to work with them. The recommended algorithm is \"Bcrypt\". So, install PassLib with Bcrypt: $ pip install \"passlib[bcrypt]\" ---> 100% Tip With passlib , you could even configure it to be able to read passwords created by Django , a Flask security plug-in or many others. So, you would be able to, for example, share the same data from a Django application in a database with a FastAPI application. Or gradually migrate a Django application using the same database. And your users would be able to login from your Django app or from your FastAPI app, at the same time. Hash and verify the passwords \u00b6 Import the tools we need from passlib . Create a PassLib \"context\". This is what will be used to hash and verify passwords. Tip The PassLib context also has functionality to use different hashing algorithms, including deprecated old ones only to allow verifying them, etc. For example, you could use it to read and verify passwords generated by another system (like Django) but hash any new passwords with a different algorithm like Bcrypt. And be compatible with all of them at the same time. Create a utility function to hash a password coming from the user. And another utility to verify if a received password matches the hash stored. And another one to authenticate and return a user. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! } Note If you check the new (fake) database fake_users_db , you will see how the hashed password looks like now: \"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\" . Handle JWT tokens \u00b6 Import the modules installed. Create a random secret key that will be used to sign the JWT tokens. To generate a secure random secret key use the command: $ openssl rand -hex 32 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7 And copy the output to the variable SECRET_KEY (don't use the one in the example). Create a variable ALGORITHM with the algorithm used to sign the JWT token and set it to \"HS256\" . Create a variable for the expiration of the token. Define a Pydantic Model that will be used in the token endpoint for the response. Create a utility function to generate a new access token. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! } Update the dependencies \u00b6 Update get_current_user to receive the same token as before, but this time, using JWT tokens. Decode the received token, verify it, and return the current user. If the token is invalid, return an HTTP error right away. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! } Update the /token path operation \u00b6 Create a timedelta with the expiration time of the token. Create a real JWT access token and return it. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! } Technical details about the JWT \"subject\" sub \u00b6 The JWT specification says that there's a key sub , with the subject of the token. It's optional to use it, but that's where you would put the user's identification, so we are using it here. JWT might be used for other things apart from identifying a user and allowing them to perform operations directly on your API. For example, you could identify a \"car\" or a \"blog post\". Then you could add permissions about that entity, like \"drive\" (for the car) or \"edit\" (for the blog). And then, you could give that JWT token to a user (or bot), and they could use it to perform those actions (drive the car, or edit the blog post) without even needing to have an account, just with the JWT token your API generated for that. Using these ideas, JWT can be used for way more sophisticated scenarios. In those cases, several of those entities could have the same ID, let's say foo (a user foo , a car foo , and a blog post foo ). So, to avoid ID collisions, when creating the JWT token for the user, you could prefix the value of the sub key, e.g. with username: . So, in this example, the value of sub could have been: username:johndoe . The important thing to have in mind is that the sub key should have a unique identifier across the entire application, and it should be a string. Check it \u00b6 Run the server and go to the docs: http://127.0.0.1:8000/docs . You'll see the user interface like: Authorize the application the same way as before. Using the credentials: Username: johndoe Password: secret Check Notice that nowhere in the code is the plaintext password \" secret \", we only have the hashed version. Call the endpoint /users/me/ , you will get the response as: { \"username\" : \"johndoe\" , \"email\" : \"johndoe@example.com\" , \"full_name\" : \"John Doe\" , \"disabled\" : false } If you open the developer tools, you could see how the data sent and only includes the token, the password is only sent in the first request to authenticate the user and get that access token, but not afterwards: Note Notice the header Authorization , with a value that starts with Bearer . Advanced usage with scopes \u00b6 OAuth2 has the notion of \"scopes\". You can use them to add a specific set of permissions to a JWT token. Then you can give this token to a user directly or a third party, to interact with your API with a set of restrictions. You can learn how to use them and how they are integrated into FastAPI later in the Advanced User Guide . Recap \u00b6 With what you have seen up to now, you can set up a secure FastAPI application using standards like OAuth2 and JWT. In almost any framework handling the security becomes a rather complex subject quite quickly. Many packages that simplify it a lot have to make many compromises with the data model, database, and available features. And some of these packages that simplify things too much actually have security flaws underneath. FastAPI doesn't make any compromise with any database, data model or tool. It gives you all the flexibility to choose the ones that fit your project the best. And you can use directly many well maintained and widely used packages like passlib and python-jose , because FastAPI doesn't require any complex mechanisms to integrate external packages. But it provides you the tools to simplify the process as much as possible without compromising flexibility, robustness, or security. And you can use and implement secure, standard protocols, like OAuth2 in a relatively simple way. You can learn more in the Advanced User Guide about how to use OAuth2 \"scopes\", for a more fine-grained permission system, following these same standards. OAuth2 with scopes is the mechanism used by many big authentication providers, like Facebook, Google, GitHub, Microsoft, Twitter, etc. to authorize third party applications to interact with their APIs on behalf of their users.","title":"OAuth2 with Password (and hashing), Bearer with JWT tokens"},{"location":"guides/security/oauth2-jwt/#oauth2-with-password-and-hashing-bearer-with-jwt-tokens","text":"Now that we have all the security flow, let's make the application actually secure, using JWT tokens and secure password hashing. This code is something you can actually use in your application, save the password hashes in your database, etc. We are going to start from where we left in the previous chapter and increment it.","title":"OAuth2 with Password (and hashing), Bearer with JWT tokens"},{"location":"guides/security/oauth2-jwt/#about-jwt","text":"JWT means \"JSON Web Tokens\". It's a standard to codify a JSON object in a long dense string without spaces. It looks like this: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c It is not encrypted, so, anyone could recover the information from the contents. But it's signed. So, when you receive a token that you emitted, you can verify that you actually emitted it. That way, you can create a token with an expiration of, let's say, 1 week. And then when the user comes back the next day with the token, you know that user is still logged in to your system. After a week, the token will be expired and the user will not be authorized and will have to sign in again to get a new token. And if the user (or a third party) tried to modify the token to change the expiration, you would be able to discover it, because the signatures would not match. If you want to play with JWT tokens and see how they work, check https://jwt.io .","title":"About JWT"},{"location":"guides/security/oauth2-jwt/#install-python-jose","text":"We need to install python-jose to generate and verify the JWT tokens in Python: $ pip install \"python-jose[cryptography]\" ---> 100% Python-jose requires a cryptographic backend as an extra. Here we are using the recommended one: pyca/cryptography . Tip This tutorial previously used PyJWT . But it was updated to use Python-jose instead as it provides all the features from PyJWT plus some extras that you might need later when building integrations with other tools.","title":"Install python-jose"},{"location":"guides/security/oauth2-jwt/#password-hashing","text":"\"Hashing\" means converting some content (a password in this case) into a sequence of bytes (just a string) that looks like gibberish. Whenever you pass exactly the same content (exactly the same password) you get exactly the same gibberish. But you cannot convert from the gibberish back to the password.","title":"Password hashing"},{"location":"guides/security/oauth2-jwt/#why-use-password-hashing","text":"If your database is stolen, the thief won't have your users' plaintext passwords, only the hashes. So, the thief won't be able to try to use that password in another system (as many users use the same password everywhere, this would be dangerous).","title":"Why use password hashing"},{"location":"guides/security/oauth2-jwt/#install-passlib","text":"PassLib is a great Python package to handle password hashes. It supports many secure hashing algorithms and utilities to work with them. The recommended algorithm is \"Bcrypt\". So, install PassLib with Bcrypt: $ pip install \"passlib[bcrypt]\" ---> 100% Tip With passlib , you could even configure it to be able to read passwords created by Django , a Flask security plug-in or many others. So, you would be able to, for example, share the same data from a Django application in a database with a FastAPI application. Or gradually migrate a Django application using the same database. And your users would be able to login from your Django app or from your FastAPI app, at the same time.","title":"Install passlib"},{"location":"guides/security/oauth2-jwt/#hash-and-verify-the-passwords","text":"Import the tools we need from passlib . Create a PassLib \"context\". This is what will be used to hash and verify passwords. Tip The PassLib context also has functionality to use different hashing algorithms, including deprecated old ones only to allow verifying them, etc. For example, you could use it to read and verify passwords generated by another system (like Django) but hash any new passwords with a different algorithm like Bcrypt. And be compatible with all of them at the same time. Create a utility function to hash a password coming from the user. And another utility to verify if a received password matches the hash stored. And another one to authenticate and return a user. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! } Note If you check the new (fake) database fake_users_db , you will see how the hashed password looks like now: \"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\" .","title":"Hash and verify the passwords"},{"location":"guides/security/oauth2-jwt/#handle-jwt-tokens","text":"Import the modules installed. Create a random secret key that will be used to sign the JWT tokens. To generate a secure random secret key use the command: $ openssl rand -hex 32 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7 And copy the output to the variable SECRET_KEY (don't use the one in the example). Create a variable ALGORITHM with the algorithm used to sign the JWT token and set it to \"HS256\" . Create a variable for the expiration of the token. Define a Pydantic Model that will be used in the token endpoint for the response. Create a utility function to generate a new access token. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! }","title":"Handle JWT tokens"},{"location":"guides/security/oauth2-jwt/#update-the-dependencies","text":"Update get_current_user to receive the same token as before, but this time, using JWT tokens. Decode the received token, verify it, and return the current user. If the token is invalid, return an HTTP error right away. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! }","title":"Update the dependencies"},{"location":"guides/security/oauth2-jwt/#update-the-token-path-operation","text":"Create a timedelta with the expiration time of the token. Create a real JWT access token and return it. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial004 . py ! } { ! > ../../../ docs_src / security / tutorial004_py310 . py ! }","title":"Update the /token path operation"},{"location":"guides/security/oauth2-jwt/#technical-details-about-the-jwt-subject-sub","text":"The JWT specification says that there's a key sub , with the subject of the token. It's optional to use it, but that's where you would put the user's identification, so we are using it here. JWT might be used for other things apart from identifying a user and allowing them to perform operations directly on your API. For example, you could identify a \"car\" or a \"blog post\". Then you could add permissions about that entity, like \"drive\" (for the car) or \"edit\" (for the blog). And then, you could give that JWT token to a user (or bot), and they could use it to perform those actions (drive the car, or edit the blog post) without even needing to have an account, just with the JWT token your API generated for that. Using these ideas, JWT can be used for way more sophisticated scenarios. In those cases, several of those entities could have the same ID, let's say foo (a user foo , a car foo , and a blog post foo ). So, to avoid ID collisions, when creating the JWT token for the user, you could prefix the value of the sub key, e.g. with username: . So, in this example, the value of sub could have been: username:johndoe . The important thing to have in mind is that the sub key should have a unique identifier across the entire application, and it should be a string.","title":"Technical details about the JWT \"subject\" sub"},{"location":"guides/security/oauth2-jwt/#check-it","text":"Run the server and go to the docs: http://127.0.0.1:8000/docs . You'll see the user interface like: Authorize the application the same way as before. Using the credentials: Username: johndoe Password: secret Check Notice that nowhere in the code is the plaintext password \" secret \", we only have the hashed version. Call the endpoint /users/me/ , you will get the response as: { \"username\" : \"johndoe\" , \"email\" : \"johndoe@example.com\" , \"full_name\" : \"John Doe\" , \"disabled\" : false } If you open the developer tools, you could see how the data sent and only includes the token, the password is only sent in the first request to authenticate the user and get that access token, but not afterwards: Note Notice the header Authorization , with a value that starts with Bearer .","title":"Check it"},{"location":"guides/security/oauth2-jwt/#advanced-usage-with-scopes","text":"OAuth2 has the notion of \"scopes\". You can use them to add a specific set of permissions to a JWT token. Then you can give this token to a user directly or a third party, to interact with your API with a set of restrictions. You can learn how to use them and how they are integrated into FastAPI later in the Advanced User Guide .","title":"Advanced usage with scopes"},{"location":"guides/security/oauth2-jwt/#recap","text":"With what you have seen up to now, you can set up a secure FastAPI application using standards like OAuth2 and JWT. In almost any framework handling the security becomes a rather complex subject quite quickly. Many packages that simplify it a lot have to make many compromises with the data model, database, and available features. And some of these packages that simplify things too much actually have security flaws underneath. FastAPI doesn't make any compromise with any database, data model or tool. It gives you all the flexibility to choose the ones that fit your project the best. And you can use directly many well maintained and widely used packages like passlib and python-jose , because FastAPI doesn't require any complex mechanisms to integrate external packages. But it provides you the tools to simplify the process as much as possible without compromising flexibility, robustness, or security. And you can use and implement secure, standard protocols, like OAuth2 in a relatively simple way. You can learn more in the Advanced User Guide about how to use OAuth2 \"scopes\", for a more fine-grained permission system, following these same standards. OAuth2 with scopes is the mechanism used by many big authentication providers, like Facebook, Google, GitHub, Microsoft, Twitter, etc. to authorize third party applications to interact with their APIs on behalf of their users.","title":"Recap"},{"location":"guides/security/simple-oauth2/","text":"Simple OAuth2 with Password and Bearer \u00b6 Now let's build from the previous chapter and add the missing parts to have a complete security flow. Get the username and password \u00b6 We are going to use FastAPI security utilities to get the username and password . OAuth2 specifies that when using the \"password flow\" (that we are using) the client/user must send a username and password fields as form data. And the spec says that the fields have to be named like that. So user-name or email wouldn't work. But don't worry, you can show it as you wish to your final users in the frontend. And your database models can use any other names you want. But for the login path operation , we need to use these names to be compatible with the spec (and be able to, for example, use the integrated API documentation system). The spec also states that the username and password must be sent as form data (so, no JSON here). scope \u00b6 The spec also says that the client can send another form field \" scope \". The form field name is scope (in singular), but it is actually a long string with \"scopes\" separated by spaces. Each \"scope\" is just a string (without spaces). They are normally used to declare specific security permissions, for example: users:read or users:write are common examples. instagram_basic is used by Facebook / Instagram. https://www.googleapis.com/auth/drive is used by Google. Info In OAuth2 a \"scope\" is just a string that declares a specific permission required. It doesn't matter if it has other characters like : or if it is a URL. Those details are implementation specific. For OAuth2 they are just strings. Code to get the username and password \u00b6 Now let's use the utilities provided by FastAPI to handle this. OAuth2PasswordRequestForm \u00b6 First, import OAuth2PasswordRequestForm , and use it as a dependency with Depends in the path operation for /token : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } OAuth2PasswordRequestForm is a class dependency that declares a form body with: The username . The password . An optional scope field as a big string, composed of strings separated by spaces. An optional grant_type . Tip The OAuth2 spec actually requires a field grant_type with a fixed value of password , but OAuth2PasswordRequestForm doesn't enforce it. If you need to enforce it, use OAuth2PasswordRequestFormStrict instead of OAuth2PasswordRequestForm . An optional client_id (we don't need it for our example). An optional client_secret (we don't need it for our example). Info The OAuth2PasswordRequestForm is not a special class for FastAPI as is OAuth2PasswordBearer . OAuth2PasswordBearer makes FastAPI know that it is a security scheme. So it is added that way to OpenAPI. But OAuth2PasswordRequestForm is just a class dependency that you could have written yourself, or you could have declared Form parameters directly. But as it's a common use case, it is provided by FastAPI directly, just to make it easier. Use the form data \u00b6 Tip The instance of the dependency class OAuth2PasswordRequestForm won't have an attribute scope with the long string separated by spaces, instead, it will have a scopes attribute with the actual list of strings for each scope sent. We are not using scopes in this example, but the functionality is there if you need it. Now, get the user data from the (fake) database, using the username from the form field. If there is no such user, we return an error saying \"incorrect username or password\". For the error, we use the exception HTTPException : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } Check the password \u00b6 At this point we have the user data from our database, but we haven't checked the password. Let's put that data in the Pydantic UserInDB model first. You should never save plaintext passwords, so, we'll use the (fake) password hashing system. If the passwords don't match, we return the same error. Password hashing \u00b6 \"Hashing\" means: converting some content (a password in this case) into a sequence of bytes (just a string) that looks like gibberish. Whenever you pass exactly the same content (exactly the same password) you get exactly the same gibberish. But you cannot convert from the gibberish back to the password. Why use password hashing \u00b6 If your database is stolen, the thief won't have your users' plaintext passwords, only the hashes. So, the thief won't be able to try to use those same passwords in another system (as many users use the same password everywhere, this would be dangerous). Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } About **user_dict \u00b6 UserInDB(**user_dict) means: Pass the keys and values of the user_dict directly as key-value arguments, equivalent to: UserInDB ( username = user_dict [ \"username\" ], email = user_dict [ \"email\" ], full_name = user_dict [ \"full_name\" ], disabled = user_dict [ \"disabled\" ], hashed_password = user_dict [ \"hashed_password\" ], ) Info For a more complete explanation of **user_dict check back in the documentation for Extra Models . Return the token \u00b6 The response of the token endpoint must be a JSON object. It should have a token_type . In our case, as we are using \"Bearer\" tokens, the token type should be \" bearer \". And it should have an access_token , with a string containing our access token. For this simple example, we are going to just be completely insecure and return the same username as the token. Tip In the next chapter, you will see a real secure implementation, with password hashing and JWT tokens. But for now, let's focus on the specific details we need. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } Tip By the spec, you should return a JSON with an access_token and a token_type , the same as in this example. This is something that you have to do yourself in your code, and make sure you use those JSON keys. It's almost the only thing that you have to remember to do correctly yourself, to be compliant with the specifications. For the rest, FastAPI handles it for you. Update the dependencies \u00b6 Now we are going to update our dependencies. We want to get the current_user only if this user is active. So, we create an additional dependency get_current_active_user that in turn uses get_current_user as a dependency. Both of these dependencies will just return an HTTP error if the user doesn't exist, or if is inactive. So, in our endpoint, we will only get a user if the user exists, was correctly authenticated, and is active: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } Info The additional header WWW-Authenticate with value Bearer we are returning here is also part of the spec. Any HTTP (error) status code 401 \"UNAUTHORIZED\" is supposed to also return a WWW-Authenticate header. In the case of bearer tokens (our case), the value of that header should be Bearer . You can actually skip that extra header and it would still work. But it's provided here to be compliant with the specifications. Also, there might be tools that expect and use it (now or in the future) and that might be useful for you or your users, now or in the future. That's the benefit of standards... See it in action \u00b6 Open the interactive docs: http://127.0.0.1:8000/docs . Authenticate \u00b6 Click the \"Authorize\" button. Use the credentials: User: johndoe Password: secret After authenticating in the system, you will see it like: Get your own user data \u00b6 Now use the operation GET with the path /users/me . You will get your user's data, like: { \"username\" : \"johndoe\" , \"email\" : \"johndoe@example.com\" , \"full_name\" : \"John Doe\" , \"disabled\" : false , \"hashed_password\" : \"fakehashedsecret\" } If you click the lock icon and logout, and then try the same operation again, you will get an HTTP 401 error of: { \"detail\" : \"Not authenticated\" } Inactive user \u00b6 Now try with an inactive user, authenticate with: User: alice Password: secret2 And try to use the operation GET with the path /users/me . You will get an \"inactive user\" error, like: { \"detail\" : \"Inactive user\" } Recap \u00b6 You now have the tools to implement a complete security system based on username and password for your API. Using these tools, you can make the security system compatible with any database and with any user or data model. The only detail missing is that it is not actually \"secure\" yet. In the next chapter you'll see how to use a secure password hashing library and JWT tokens.","title":"Simple OAuth2 with Password and Bearer"},{"location":"guides/security/simple-oauth2/#simple-oauth2-with-password-and-bearer","text":"Now let's build from the previous chapter and add the missing parts to have a complete security flow.","title":"Simple OAuth2 with Password and Bearer"},{"location":"guides/security/simple-oauth2/#get-the-username-and-password","text":"We are going to use FastAPI security utilities to get the username and password . OAuth2 specifies that when using the \"password flow\" (that we are using) the client/user must send a username and password fields as form data. And the spec says that the fields have to be named like that. So user-name or email wouldn't work. But don't worry, you can show it as you wish to your final users in the frontend. And your database models can use any other names you want. But for the login path operation , we need to use these names to be compatible with the spec (and be able to, for example, use the integrated API documentation system). The spec also states that the username and password must be sent as form data (so, no JSON here).","title":"Get the username and password"},{"location":"guides/security/simple-oauth2/#scope","text":"The spec also says that the client can send another form field \" scope \". The form field name is scope (in singular), but it is actually a long string with \"scopes\" separated by spaces. Each \"scope\" is just a string (without spaces). They are normally used to declare specific security permissions, for example: users:read or users:write are common examples. instagram_basic is used by Facebook / Instagram. https://www.googleapis.com/auth/drive is used by Google. Info In OAuth2 a \"scope\" is just a string that declares a specific permission required. It doesn't matter if it has other characters like : or if it is a URL. Those details are implementation specific. For OAuth2 they are just strings.","title":"scope"},{"location":"guides/security/simple-oauth2/#code-to-get-the-username-and-password","text":"Now let's use the utilities provided by FastAPI to handle this.","title":"Code to get the username and password"},{"location":"guides/security/simple-oauth2/#oauth2passwordrequestform","text":"First, import OAuth2PasswordRequestForm , and use it as a dependency with Depends in the path operation for /token : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } OAuth2PasswordRequestForm is a class dependency that declares a form body with: The username . The password . An optional scope field as a big string, composed of strings separated by spaces. An optional grant_type . Tip The OAuth2 spec actually requires a field grant_type with a fixed value of password , but OAuth2PasswordRequestForm doesn't enforce it. If you need to enforce it, use OAuth2PasswordRequestFormStrict instead of OAuth2PasswordRequestForm . An optional client_id (we don't need it for our example). An optional client_secret (we don't need it for our example). Info The OAuth2PasswordRequestForm is not a special class for FastAPI as is OAuth2PasswordBearer . OAuth2PasswordBearer makes FastAPI know that it is a security scheme. So it is added that way to OpenAPI. But OAuth2PasswordRequestForm is just a class dependency that you could have written yourself, or you could have declared Form parameters directly. But as it's a common use case, it is provided by FastAPI directly, just to make it easier.","title":"OAuth2PasswordRequestForm"},{"location":"guides/security/simple-oauth2/#use-the-form-data","text":"Tip The instance of the dependency class OAuth2PasswordRequestForm won't have an attribute scope with the long string separated by spaces, instead, it will have a scopes attribute with the actual list of strings for each scope sent. We are not using scopes in this example, but the functionality is there if you need it. Now, get the user data from the (fake) database, using the username from the form field. If there is no such user, we return an error saying \"incorrect username or password\". For the error, we use the exception HTTPException : Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! }","title":"Use the form data"},{"location":"guides/security/simple-oauth2/#check-the-password","text":"At this point we have the user data from our database, but we haven't checked the password. Let's put that data in the Pydantic UserInDB model first. You should never save plaintext passwords, so, we'll use the (fake) password hashing system. If the passwords don't match, we return the same error.","title":"Check the password"},{"location":"guides/security/simple-oauth2/#password-hashing","text":"\"Hashing\" means: converting some content (a password in this case) into a sequence of bytes (just a string) that looks like gibberish. Whenever you pass exactly the same content (exactly the same password) you get exactly the same gibberish. But you cannot convert from the gibberish back to the password.","title":"Password hashing"},{"location":"guides/security/simple-oauth2/#why-use-password-hashing","text":"If your database is stolen, the thief won't have your users' plaintext passwords, only the hashes. So, the thief won't be able to try to use those same passwords in another system (as many users use the same password everywhere, this would be dangerous). Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! }","title":"Why use password hashing"},{"location":"guides/security/simple-oauth2/#about-user_dict","text":"UserInDB(**user_dict) means: Pass the keys and values of the user_dict directly as key-value arguments, equivalent to: UserInDB ( username = user_dict [ \"username\" ], email = user_dict [ \"email\" ], full_name = user_dict [ \"full_name\" ], disabled = user_dict [ \"disabled\" ], hashed_password = user_dict [ \"hashed_password\" ], ) Info For a more complete explanation of **user_dict check back in the documentation for Extra Models .","title":"About **user_dict"},{"location":"guides/security/simple-oauth2/#return-the-token","text":"The response of the token endpoint must be a JSON object. It should have a token_type . In our case, as we are using \"Bearer\" tokens, the token type should be \" bearer \". And it should have an access_token , with a string containing our access token. For this simple example, we are going to just be completely insecure and return the same username as the token. Tip In the next chapter, you will see a real secure implementation, with password hashing and JWT tokens. But for now, let's focus on the specific details we need. Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } Tip By the spec, you should return a JSON with an access_token and a token_type , the same as in this example. This is something that you have to do yourself in your code, and make sure you use those JSON keys. It's almost the only thing that you have to remember to do correctly yourself, to be compliant with the specifications. For the rest, FastAPI handles it for you.","title":"Return the token"},{"location":"guides/security/simple-oauth2/#update-the-dependencies","text":"Now we are going to update our dependencies. We want to get the current_user only if this user is active. So, we create an additional dependency get_current_active_user that in turn uses get_current_user as a dependency. Both of these dependencies will just return an HTTP error if the user doesn't exist, or if is inactive. So, in our endpoint, we will only get a user if the user exists, was correctly authenticated, and is active: Python 3.6 and above Python 3.10 and above { ! > ../../../ docs_src / security / tutorial003 . py ! } { ! > ../../../ docs_src / security / tutorial003_py310 . py ! } Info The additional header WWW-Authenticate with value Bearer we are returning here is also part of the spec. Any HTTP (error) status code 401 \"UNAUTHORIZED\" is supposed to also return a WWW-Authenticate header. In the case of bearer tokens (our case), the value of that header should be Bearer . You can actually skip that extra header and it would still work. But it's provided here to be compliant with the specifications. Also, there might be tools that expect and use it (now or in the future) and that might be useful for you or your users, now or in the future. That's the benefit of standards...","title":"Update the dependencies"},{"location":"guides/security/simple-oauth2/#see-it-in-action","text":"Open the interactive docs: http://127.0.0.1:8000/docs .","title":"See it in action"},{"location":"guides/security/simple-oauth2/#authenticate","text":"Click the \"Authorize\" button. Use the credentials: User: johndoe Password: secret After authenticating in the system, you will see it like:","title":"Authenticate"},{"location":"guides/security/simple-oauth2/#get-your-own-user-data","text":"Now use the operation GET with the path /users/me . You will get your user's data, like: { \"username\" : \"johndoe\" , \"email\" : \"johndoe@example.com\" , \"full_name\" : \"John Doe\" , \"disabled\" : false , \"hashed_password\" : \"fakehashedsecret\" } If you click the lock icon and logout, and then try the same operation again, you will get an HTTP 401 error of: { \"detail\" : \"Not authenticated\" }","title":"Get your own user data"},{"location":"guides/security/simple-oauth2/#inactive-user","text":"Now try with an inactive user, authenticate with: User: alice Password: secret2 And try to use the operation GET with the path /users/me . You will get an \"inactive user\" error, like: { \"detail\" : \"Inactive user\" }","title":"Inactive user"},{"location":"guides/security/simple-oauth2/#recap","text":"You now have the tools to implement a complete security system based on username and password for your API. Using these tools, you can make the security system compatible with any database and with any user or data model. The only detail missing is that it is not actually \"secure\" yet. In the next chapter you'll see how to use a secure password hashing library and JWT tokens.","title":"Recap"},{"location":"reference/SUMMARY/","text":"admin admin frontend components constants types utils parser site utils choices fields functools translation auth admin app auth auth backends base db jwt redis models schemas site db crud _sqlmodel base parser schema utils models files health sdu service wdc wfl msaapi router system security server srv_gunicorn srv_uvicorn service services wdc session userprogress utils constants doc_code_ref email errorhandling example_google_doc_style fileupload fileutils fonts healthcheck htmlutils logger profiler scheduler sysinfo token","title":"SUMMARY"},{"location":"reference/msaapi/","text":"msaSDK Module \u00b6 .msaapi \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAFastAPI \u00b6 Bases: FastAPI","title":"msaapi"},{"location":"reference/msaapi/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/msaapi/#msaapi_1","text":"","title":".msaapi"},{"location":"reference/msaapi/#msaapi-attributes","text":"","title":"Attributes"},{"location":"reference/msaapi/#msaapi.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/msaapi/#msaapi-classes","text":"","title":"Classes"},{"location":"reference/msaapi/#msaapi.MSAFastAPI","text":"Bases: FastAPI","title":"MSAFastAPI"},{"location":"reference/security/","text":"msaSDK Module \u00b6 .security \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSASecurity \u00b6 Attributes \u00b6 auth_backend_cookie instance-attribute \u00b6 auth_backend_cookie = AuthenticationBackend ( name = \"jwt_cookie\" , transport = self . cookie_authentication , get_strategy = get_jwt_strategy , ) auth_backend_jwt instance-attribute \u00b6 auth_backend_jwt = AuthenticationBackend ( name = \"jwt_bearer\" , transport = self . bearer_transport , get_strategy = get_jwt_strategy , ) auth_backends instance-attribute \u00b6 auth_backends = [] bearer_transport instance-attribute \u00b6 bearer_transport = BearerTransport ( tokenUrl = \"auth/jwt/login\" ) cookie_authentication instance-attribute \u00b6 cookie_authentication = CookieTransport ( cookie_name = \"sduaiservices-cookie\" ) Functions \u00b6 __init__ \u00b6 __init__ () -> None Functions \u00b6 getMSASecurity cached \u00b6 getMSASecurity () -> MSASecurity This function returns a cached instance of the MSASecurity object. Note Caching is used to prevent re-reading the environment every time the MSASecurity is used. getSecretKey \u00b6 getSecretKey () get_jwt_strategy \u00b6 get_jwt_strategy () -> JWTStrategy","title":"security"},{"location":"reference/security/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/security/#security_1","text":"","title":".security"},{"location":"reference/security/#security-attributes","text":"","title":"Attributes"},{"location":"reference/security/#security.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/security/#security-classes","text":"","title":"Classes"},{"location":"reference/security/#security.MSASecurity","text":"","title":"MSASecurity"},{"location":"reference/security/#security.MSASecurity-attributes","text":"","title":"Attributes"},{"location":"reference/security/#security.MSASecurity.auth_backend_cookie","text":"auth_backend_cookie = AuthenticationBackend ( name = \"jwt_cookie\" , transport = self . cookie_authentication , get_strategy = get_jwt_strategy , )","title":"auth_backend_cookie"},{"location":"reference/security/#security.MSASecurity.auth_backend_jwt","text":"auth_backend_jwt = AuthenticationBackend ( name = \"jwt_bearer\" , transport = self . bearer_transport , get_strategy = get_jwt_strategy , )","title":"auth_backend_jwt"},{"location":"reference/security/#security.MSASecurity.auth_backends","text":"auth_backends = []","title":"auth_backends"},{"location":"reference/security/#security.MSASecurity.bearer_transport","text":"bearer_transport = BearerTransport ( tokenUrl = \"auth/jwt/login\" )","title":"bearer_transport"},{"location":"reference/security/#security.MSASecurity.cookie_authentication","text":"cookie_authentication = CookieTransport ( cookie_name = \"sduaiservices-cookie\" )","title":"cookie_authentication"},{"location":"reference/security/#security.MSASecurity-functions","text":"","title":"Functions"},{"location":"reference/security/#security.MSASecurity.__init__","text":"__init__ () -> None","title":"__init__()"},{"location":"reference/security/#security-functions","text":"","title":"Functions"},{"location":"reference/security/#security.getMSASecurity","text":"getMSASecurity () -> MSASecurity This function returns a cached instance of the MSASecurity object. Note Caching is used to prevent re-reading the environment every time the MSASecurity is used.","title":"getMSASecurity()"},{"location":"reference/security/#security.getSecretKey","text":"getSecretKey ()","title":"getSecretKey()"},{"location":"reference/security/#security.get_jwt_strategy","text":"get_jwt_strategy () -> JWTStrategy","title":"get_jwt_strategy()"},{"location":"reference/service/","text":"msaSDK Module \u00b6 .service \u00b6 Main Service Module for MSAApp. Initialize with a MSAServiceDefintion Instance to control the features and functions of the MSAApp. Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' str: Module Version password_helper module-attribute \u00b6 password_helper = PasswordHelper ( security_context ) Password Helper Instance security module-attribute \u00b6 security = getMSASecurity () MSASecurity instance security_context module-attribute \u00b6 security_context = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ) Security Context for Password Helper Classes \u00b6 MSAApp \u00b6 Bases: MSAFastAPI Creates an application msaSDK instance. Note As with FastApi the MSAApp provides two events: startup : A list of callables to run on application startup. Startup handler callables do not take any arguments, and may be be either standard functions, or async functions. shutdown : A list of callables to run on application shutdown. Shutdown handler callables do not take any arguments, and may be be either standard functions, or async functions. Those are also used internally, which are triggered before the external events. Do not include the self parameter in the Args section. PARAMETER DESCRIPTION settings MSAServiceDefinition (Must be provided), instance of a service definition with all settings TYPE: MSAServiceDefinition timers MSATimers instance Default None, provide a MSATimers instance and it will start the scheduler internaly TYPE: MSATimers DEFAULT: None sql_models List of SQLModel Default None, provide list of your SQLModel Classes and the instance can create CRUD API and if site is enabled also UI for CRUD TYPE: List [ SQLModel ] DEFAULT: None auto_mount_site Default True, if site is enabled in settings and this is true, mounts the site in internal startup event. TYPE: bool DEFAULT: True ATTRIBUTE DESCRIPTION logger loguru logger instance auto_mount_site bool auto_mount_site TYPE: bool settings MSAServiceDefinition settings instance. timers MSATimers = timers TYPE: MSATimers healthdefinition MSAHealthDefinition settings.healthdefinition TYPE: MSAHealthDefinition limiter Limiter = None TYPE: Limiter db_engine AsyncEngine = Db Engine instance TYPE: AsyncEngine sql_models List[SQLModel] = sql_models TYPE: List [ SQLModel ] sql_cruds List[MSASQLModelCrud] = [] TYPE: List [ MSASQLModelCrud ] scheduler MSAScheduler = None TYPE: MSAScheduler site AdminSite Admin/Auth Site instance. scheduler_task The Task instance that runs the Scheduler in the Background TYPE: Task ROOTPATH str os.path.join(os.path.dirname( file )) Attributes \u00b6 Base instance-attribute \u00b6 Base : DeclarativeMeta = declarative_base () ROOTPATH instance-attribute \u00b6 ROOTPATH = os . path . join ( os . path . dirname ( __file__ )) auto_mount_site instance-attribute \u00b6 auto_mount_site : bool = auto_mount_site db_engine instance-attribute \u00b6 db_engine : AsyncEngine = None graphql_app instance-attribute \u00b6 graphql_app : GraphQLRouter = None graphql_schema instance-attribute \u00b6 graphql_schema : schema = None healthcheck instance-attribute \u00b6 healthcheck : health . MSAHealthCheck = None healthdefinition instance-attribute \u00b6 healthdefinition : MSAHealthDefinition = ( self . settings . healthdefinition ) limiter instance-attribute \u00b6 limiter : Limiter = None logger instance-attribute \u00b6 logger = logger scheduler instance-attribute \u00b6 scheduler : MSAScheduler = None scheduler_task instance-attribute \u00b6 scheduler_task : Task = None settings instance-attribute \u00b6 settings = settings site instance-attribute \u00b6 site = None sql_cruds instance-attribute \u00b6 sql_cruds : List [ MSASQLModelCrud ] = [] sql_models instance-attribute \u00b6 sql_models : List [ SQLModel ] = sql_models templates instance-attribute \u00b6 templates = Jinja2Templates ( directory = self . settings . templates_dir ) timers instance-attribute \u00b6 timers : MSATimers = timers Functions \u00b6 __init__ \u00b6 __init__ ( settings : MSAServiceDefinition , timers : MSATimers = None , sql_models : List [ SQLModel ] = None , auto_mount_site : bool = True , * args , ** kwargs ) -> None get_healthcheck async \u00b6 get_healthcheck ( request : Request ) -> ORJSONResponse Get Healthcheck Status get_scheduler_status async \u00b6 get_scheduler_status ( request : Request , ) -> MSASchedulerStatus Get Service Status Info get_services_definition \u00b6 get_services_definition ( request : Request , ) -> MSAServiceDefinition Get Service Definition Info get_services_openapi_info \u00b6 get_services_openapi_info ( request : Request , ) -> MSAOpenAPIInfo Get Service OpenAPI Info get_services_openapi_schema \u00b6 get_services_openapi_schema ( request : Request , ) -> ORJSONResponse Get Service OpenAPI Schema get_services_settings \u00b6 get_services_settings ( request : Request ) -> ORJSONResponse Get Service OpenAPI Schema get_services_status async \u00b6 get_services_status ( request : Request ) -> MSAServiceStatus Get Service Status Info index_page \u00b6 index_page ( request : Request ) -> _TemplateResponse Get Service Index.html Page monitor async \u00b6 monitor ( request : Request ) -> _TemplateResponse Simple Service Monitor Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return: monitor_inline async \u00b6 monitor_inline ( request : Request ) -> _TemplateResponse Simple Monitor Page as Inline without head and body tags. Only works if pages is enabled in MSAServiceDefinition :param request: :return: mount_site \u00b6 mount_site () -> None msa_exception_handler async \u00b6 msa_exception_handler ( request : Request , exc : HTTPException ) Handles all HTTPExceptions if enabled with HTML Response or forward error if the code is in the exclude settings list. :param request: :type request: :param exc: :type exc: :return: :rtype: msa_exception_handler_disabled async \u00b6 msa_exception_handler_disabled ( request : Request , exc : HTTPException ) -> JSONResponse Handles all HTTPExceptions if Disabled with JSON Response. :param request: :type request: :param exc: :type exc: :return: :rtype: profiler \u00b6 profiler ( request : Request ) -> _TemplateResponse Simple Profiler Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return: shutdown_event async \u00b6 shutdown_event () -> None startup_event async \u00b6 startup_event () -> None :return: :rtype: testpage \u00b6 testpage ( request : Request ) -> _TemplateResponse Simple Testpage to see if the Micro Service is up and running. Only works if pages is enabled in MSAServiceDefinition :param request: :return: validation_exception_handler async \u00b6 validation_exception_handler ( request : Request , exc : RequestValidationError ) -> JSONResponse MSAOpenAPIInfo \u00b6 Bases: SQLModel MSAOpenAPIInfo Pydantic Response Class Attributes \u00b6 name class-attribute \u00b6 name : str = 'msaSDK Service' Service Name. tags class-attribute \u00b6 tags : Optional [ List [ str ]] = None OpenAPI Tags. url class-attribute \u00b6 url : str = '/openapi.json' OpenAPI URL. version class-attribute \u00b6 version : str = '0.0.0' API Version. MSASchedulerStatus \u00b6 Bases: SQLModel MSASchedulerStatus Pydantic Response Class Attributes \u00b6 message class-attribute \u00b6 message : Optional [ str ] = 'None' Optional Message Text name class-attribute \u00b6 name : Optional [ str ] = 'msaSDK Service' Service Name. timers class-attribute \u00b6 timers : Optional [ List [ MSATimerStatus ]] = [] Optional MSATimerStatus List MSAServiceStatus \u00b6 Bases: SQLModel MSAServiceStatus Pydantic Response Class Attributes \u00b6 healthy class-attribute \u00b6 healthy : Optional [ str ] = 'None' Health status message class-attribute \u00b6 message : Optional [ str ] = 'None' Optional Message Text name class-attribute \u00b6 name : Optional [ str ] = 'msaSDK Service' Service Name. MSATimerStatus \u00b6 Bases: SQLModel MSATimerStatus Pydantic Response Class Attributes \u00b6 func class-attribute \u00b6 func : Optional [ str ] = None Timer Handler Function. mark_HH_MM class-attribute \u00b6 mark_HH_MM : Optional [ str ] = None Mark for Schedule mode class-attribute \u00b6 mode : Optional [ str ] = None Timer Mode. Functions \u00b6 getSecretKey \u00b6 getSecretKey () Get Secret Key for Token creation from OS Environment Variable SECRET_KEY_TOKEN RETURNS DESCRIPTION key The SECRET_KEY_TOKEN. getSecretKeyCSRF \u00b6 getSecretKeyCSRF () -> str Get Secret Key for CSRF Middleware from OS Environment Variable SECRET_KEY_CSRF RETURNS DESCRIPTION key The SECRET_KEY_CSRF. TYPE: str getSecretKeySessions \u00b6 getSecretKeySessions () Get Secret Key for Session Middleware from OS Environment Variable SECRET_KEY_SESSIONS RETURNS DESCRIPTION key The SECRET_KEY_SESSIONS.","title":"service"},{"location":"reference/service/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/service/#service_1","text":"Main Service Module for MSAApp. Initialize with a MSAServiceDefintion Instance to control the features and functions of the MSAApp.","title":".service"},{"location":"reference/service/#service-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.__version__","text":"__version__ = '0.1.1' str: Module Version","title":"__version__"},{"location":"reference/service/#service.password_helper","text":"password_helper = PasswordHelper ( security_context ) Password Helper Instance","title":"password_helper"},{"location":"reference/service/#service.security","text":"security = getMSASecurity () MSASecurity instance","title":"security"},{"location":"reference/service/#service.security_context","text":"security_context = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ) Security Context for Password Helper","title":"security_context"},{"location":"reference/service/#service-classes","text":"","title":"Classes"},{"location":"reference/service/#service.MSAApp","text":"Bases: MSAFastAPI Creates an application msaSDK instance. Note As with FastApi the MSAApp provides two events: startup : A list of callables to run on application startup. Startup handler callables do not take any arguments, and may be be either standard functions, or async functions. shutdown : A list of callables to run on application shutdown. Shutdown handler callables do not take any arguments, and may be be either standard functions, or async functions. Those are also used internally, which are triggered before the external events. Do not include the self parameter in the Args section. PARAMETER DESCRIPTION settings MSAServiceDefinition (Must be provided), instance of a service definition with all settings TYPE: MSAServiceDefinition timers MSATimers instance Default None, provide a MSATimers instance and it will start the scheduler internaly TYPE: MSATimers DEFAULT: None sql_models List of SQLModel Default None, provide list of your SQLModel Classes and the instance can create CRUD API and if site is enabled also UI for CRUD TYPE: List [ SQLModel ] DEFAULT: None auto_mount_site Default True, if site is enabled in settings and this is true, mounts the site in internal startup event. TYPE: bool DEFAULT: True ATTRIBUTE DESCRIPTION logger loguru logger instance auto_mount_site bool auto_mount_site TYPE: bool settings MSAServiceDefinition settings instance. timers MSATimers = timers TYPE: MSATimers healthdefinition MSAHealthDefinition settings.healthdefinition TYPE: MSAHealthDefinition limiter Limiter = None TYPE: Limiter db_engine AsyncEngine = Db Engine instance TYPE: AsyncEngine sql_models List[SQLModel] = sql_models TYPE: List [ SQLModel ] sql_cruds List[MSASQLModelCrud] = [] TYPE: List [ MSASQLModelCrud ] scheduler MSAScheduler = None TYPE: MSAScheduler site AdminSite Admin/Auth Site instance. scheduler_task The Task instance that runs the Scheduler in the Background TYPE: Task ROOTPATH str os.path.join(os.path.dirname( file ))","title":"MSAApp"},{"location":"reference/service/#service.MSAApp-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSAApp.Base","text":"Base : DeclarativeMeta = declarative_base ()","title":"Base"},{"location":"reference/service/#service.MSAApp.ROOTPATH","text":"ROOTPATH = os . path . join ( os . path . dirname ( __file__ ))","title":"ROOTPATH"},{"location":"reference/service/#service.MSAApp.auto_mount_site","text":"auto_mount_site : bool = auto_mount_site","title":"auto_mount_site"},{"location":"reference/service/#service.MSAApp.db_engine","text":"db_engine : AsyncEngine = None","title":"db_engine"},{"location":"reference/service/#service.MSAApp.graphql_app","text":"graphql_app : GraphQLRouter = None","title":"graphql_app"},{"location":"reference/service/#service.MSAApp.graphql_schema","text":"graphql_schema : schema = None","title":"graphql_schema"},{"location":"reference/service/#service.MSAApp.healthcheck","text":"healthcheck : health . MSAHealthCheck = None","title":"healthcheck"},{"location":"reference/service/#service.MSAApp.healthdefinition","text":"healthdefinition : MSAHealthDefinition = ( self . settings . healthdefinition )","title":"healthdefinition"},{"location":"reference/service/#service.MSAApp.limiter","text":"limiter : Limiter = None","title":"limiter"},{"location":"reference/service/#service.MSAApp.logger","text":"logger = logger","title":"logger"},{"location":"reference/service/#service.MSAApp.scheduler","text":"scheduler : MSAScheduler = None","title":"scheduler"},{"location":"reference/service/#service.MSAApp.scheduler_task","text":"scheduler_task : Task = None","title":"scheduler_task"},{"location":"reference/service/#service.MSAApp.settings","text":"settings = settings","title":"settings"},{"location":"reference/service/#service.MSAApp.site","text":"site = None","title":"site"},{"location":"reference/service/#service.MSAApp.sql_cruds","text":"sql_cruds : List [ MSASQLModelCrud ] = []","title":"sql_cruds"},{"location":"reference/service/#service.MSAApp.sql_models","text":"sql_models : List [ SQLModel ] = sql_models","title":"sql_models"},{"location":"reference/service/#service.MSAApp.templates","text":"templates = Jinja2Templates ( directory = self . settings . templates_dir )","title":"templates"},{"location":"reference/service/#service.MSAApp.timers","text":"timers : MSATimers = timers","title":"timers"},{"location":"reference/service/#service.MSAApp-functions","text":"","title":"Functions"},{"location":"reference/service/#service.MSAApp.__init__","text":"__init__ ( settings : MSAServiceDefinition , timers : MSATimers = None , sql_models : List [ SQLModel ] = None , auto_mount_site : bool = True , * args , ** kwargs ) -> None","title":"__init__()"},{"location":"reference/service/#service.MSAApp.get_healthcheck","text":"get_healthcheck ( request : Request ) -> ORJSONResponse Get Healthcheck Status","title":"get_healthcheck()"},{"location":"reference/service/#service.MSAApp.get_scheduler_status","text":"get_scheduler_status ( request : Request , ) -> MSASchedulerStatus Get Service Status Info","title":"get_scheduler_status()"},{"location":"reference/service/#service.MSAApp.get_services_definition","text":"get_services_definition ( request : Request , ) -> MSAServiceDefinition Get Service Definition Info","title":"get_services_definition()"},{"location":"reference/service/#service.MSAApp.get_services_openapi_info","text":"get_services_openapi_info ( request : Request , ) -> MSAOpenAPIInfo Get Service OpenAPI Info","title":"get_services_openapi_info()"},{"location":"reference/service/#service.MSAApp.get_services_openapi_schema","text":"get_services_openapi_schema ( request : Request , ) -> ORJSONResponse Get Service OpenAPI Schema","title":"get_services_openapi_schema()"},{"location":"reference/service/#service.MSAApp.get_services_settings","text":"get_services_settings ( request : Request ) -> ORJSONResponse Get Service OpenAPI Schema","title":"get_services_settings()"},{"location":"reference/service/#service.MSAApp.get_services_status","text":"get_services_status ( request : Request ) -> MSAServiceStatus Get Service Status Info","title":"get_services_status()"},{"location":"reference/service/#service.MSAApp.index_page","text":"index_page ( request : Request ) -> _TemplateResponse Get Service Index.html Page","title":"index_page()"},{"location":"reference/service/#service.MSAApp.monitor","text":"monitor ( request : Request ) -> _TemplateResponse Simple Service Monitor Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"monitor()"},{"location":"reference/service/#service.MSAApp.monitor_inline","text":"monitor_inline ( request : Request ) -> _TemplateResponse Simple Monitor Page as Inline without head and body tags. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"monitor_inline()"},{"location":"reference/service/#service.MSAApp.mount_site","text":"mount_site () -> None","title":"mount_site()"},{"location":"reference/service/#service.MSAApp.msa_exception_handler","text":"msa_exception_handler ( request : Request , exc : HTTPException ) Handles all HTTPExceptions if enabled with HTML Response or forward error if the code is in the exclude settings list. :param request: :type request: :param exc: :type exc: :return: :rtype:","title":"msa_exception_handler()"},{"location":"reference/service/#service.MSAApp.msa_exception_handler_disabled","text":"msa_exception_handler_disabled ( request : Request , exc : HTTPException ) -> JSONResponse Handles all HTTPExceptions if Disabled with JSON Response. :param request: :type request: :param exc: :type exc: :return: :rtype:","title":"msa_exception_handler_disabled()"},{"location":"reference/service/#service.MSAApp.profiler","text":"profiler ( request : Request ) -> _TemplateResponse Simple Profiler Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"profiler()"},{"location":"reference/service/#service.MSAApp.shutdown_event","text":"shutdown_event () -> None","title":"shutdown_event()"},{"location":"reference/service/#service.MSAApp.startup_event","text":"startup_event () -> None :return: :rtype:","title":"startup_event()"},{"location":"reference/service/#service.MSAApp.testpage","text":"testpage ( request : Request ) -> _TemplateResponse Simple Testpage to see if the Micro Service is up and running. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"testpage()"},{"location":"reference/service/#service.MSAApp.validation_exception_handler","text":"validation_exception_handler ( request : Request , exc : RequestValidationError ) -> JSONResponse","title":"validation_exception_handler()"},{"location":"reference/service/#service.MSAOpenAPIInfo","text":"Bases: SQLModel MSAOpenAPIInfo Pydantic Response Class","title":"MSAOpenAPIInfo"},{"location":"reference/service/#service.MSAOpenAPIInfo-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSAOpenAPIInfo.name","text":"name : str = 'msaSDK Service' Service Name.","title":"name"},{"location":"reference/service/#service.MSAOpenAPIInfo.tags","text":"tags : Optional [ List [ str ]] = None OpenAPI Tags.","title":"tags"},{"location":"reference/service/#service.MSAOpenAPIInfo.url","text":"url : str = '/openapi.json' OpenAPI URL.","title":"url"},{"location":"reference/service/#service.MSAOpenAPIInfo.version","text":"version : str = '0.0.0' API Version.","title":"version"},{"location":"reference/service/#service.MSASchedulerStatus","text":"Bases: SQLModel MSASchedulerStatus Pydantic Response Class","title":"MSASchedulerStatus"},{"location":"reference/service/#service.MSASchedulerStatus-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSASchedulerStatus.message","text":"message : Optional [ str ] = 'None' Optional Message Text","title":"message"},{"location":"reference/service/#service.MSASchedulerStatus.name","text":"name : Optional [ str ] = 'msaSDK Service' Service Name.","title":"name"},{"location":"reference/service/#service.MSASchedulerStatus.timers","text":"timers : Optional [ List [ MSATimerStatus ]] = [] Optional MSATimerStatus List","title":"timers"},{"location":"reference/service/#service.MSAServiceStatus","text":"Bases: SQLModel MSAServiceStatus Pydantic Response Class","title":"MSAServiceStatus"},{"location":"reference/service/#service.MSAServiceStatus-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSAServiceStatus.healthy","text":"healthy : Optional [ str ] = 'None' Health status","title":"healthy"},{"location":"reference/service/#service.MSAServiceStatus.message","text":"message : Optional [ str ] = 'None' Optional Message Text","title":"message"},{"location":"reference/service/#service.MSAServiceStatus.name","text":"name : Optional [ str ] = 'msaSDK Service' Service Name.","title":"name"},{"location":"reference/service/#service.MSATimerStatus","text":"Bases: SQLModel MSATimerStatus Pydantic Response Class","title":"MSATimerStatus"},{"location":"reference/service/#service.MSATimerStatus-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSATimerStatus.func","text":"func : Optional [ str ] = None Timer Handler Function.","title":"func"},{"location":"reference/service/#service.MSATimerStatus.mark_HH_MM","text":"mark_HH_MM : Optional [ str ] = None Mark for Schedule","title":"mark_HH_MM"},{"location":"reference/service/#service.MSATimerStatus.mode","text":"mode : Optional [ str ] = None Timer Mode.","title":"mode"},{"location":"reference/service/#service-functions","text":"","title":"Functions"},{"location":"reference/service/#service.getSecretKey","text":"getSecretKey () Get Secret Key for Token creation from OS Environment Variable SECRET_KEY_TOKEN RETURNS DESCRIPTION key The SECRET_KEY_TOKEN.","title":"getSecretKey()"},{"location":"reference/service/#service.getSecretKeyCSRF","text":"getSecretKeyCSRF () -> str Get Secret Key for CSRF Middleware from OS Environment Variable SECRET_KEY_CSRF RETURNS DESCRIPTION key The SECRET_KEY_CSRF. TYPE: str","title":"getSecretKeyCSRF()"},{"location":"reference/service/#service.getSecretKeySessions","text":"getSecretKeySessions () Get Secret Key for Session Middleware from OS Environment Variable SECRET_KEY_SESSIONS RETURNS DESCRIPTION key The SECRET_KEY_SESSIONS.","title":"getSecretKeySessions()"},{"location":"reference/session/","text":"msaSDK Module \u00b6 .session \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' backend module-attribute \u00b6 backend = InMemoryBackend [ UUID , SessionData ]() cookie module-attribute \u00b6 cookie = SessionCookie ( cookie_name = \"cookie\" , identifier = \"general_verifier\" , auto_error = True , secret_key = getSecretKey (), cookie_params = cookie_params , ) cookie_params module-attribute \u00b6 cookie_params = CookieParameters () verifier module-attribute \u00b6 verifier = BasicVerifier ( identifier = \"general_verifier\" , auto_error = True , backend = backend , auth_http_exception = HTTPException ( status_code = 403 , detail = \"invalid session\" ), ) Classes \u00b6 BasicVerifier \u00b6 Bases: SessionVerifier [ UUID , SessionData ] Functions \u00b6 __init__ \u00b6 __init__ ( * , identifier : str , auto_error : bool , backend : InMemoryBackend [ UUID , SessionData ], auth_http_exception : HTTPException ) auth_http_exception property \u00b6 auth_http_exception () auto_error property \u00b6 auto_error () backend property \u00b6 backend () identifier property \u00b6 identifier () verify_session \u00b6 verify_session ( model : SessionData ) -> bool If the session exists, it is valid SessionData \u00b6 Bases: SQLModel Attributes \u00b6 email class-attribute \u00b6 email : str input class-attribute \u00b6 input : str = '' settings class-attribute \u00b6 settings : dict = {} Functions \u00b6 getSecretKey \u00b6 getSecretKey () xuuid4 \u00b6 xuuid4 ()","title":"session"},{"location":"reference/session/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/session/#session_1","text":"","title":".session"},{"location":"reference/session/#session-attributes","text":"","title":"Attributes"},{"location":"reference/session/#session.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/session/#session.backend","text":"backend = InMemoryBackend [ UUID , SessionData ]()","title":"backend"},{"location":"reference/session/#session.cookie","text":"cookie = SessionCookie ( cookie_name = \"cookie\" , identifier = \"general_verifier\" , auto_error = True , secret_key = getSecretKey (), cookie_params = cookie_params , )","title":"cookie"},{"location":"reference/session/#session.cookie_params","text":"cookie_params = CookieParameters ()","title":"cookie_params"},{"location":"reference/session/#session.verifier","text":"verifier = BasicVerifier ( identifier = \"general_verifier\" , auto_error = True , backend = backend , auth_http_exception = HTTPException ( status_code = 403 , detail = \"invalid session\" ), )","title":"verifier"},{"location":"reference/session/#session-classes","text":"","title":"Classes"},{"location":"reference/session/#session.BasicVerifier","text":"Bases: SessionVerifier [ UUID , SessionData ]","title":"BasicVerifier"},{"location":"reference/session/#session.BasicVerifier-functions","text":"","title":"Functions"},{"location":"reference/session/#session.BasicVerifier.__init__","text":"__init__ ( * , identifier : str , auto_error : bool , backend : InMemoryBackend [ UUID , SessionData ], auth_http_exception : HTTPException )","title":"__init__()"},{"location":"reference/session/#session.BasicVerifier.auth_http_exception","text":"auth_http_exception ()","title":"auth_http_exception()"},{"location":"reference/session/#session.BasicVerifier.auto_error","text":"auto_error ()","title":"auto_error()"},{"location":"reference/session/#session.BasicVerifier.backend","text":"backend ()","title":"backend()"},{"location":"reference/session/#session.BasicVerifier.identifier","text":"identifier ()","title":"identifier()"},{"location":"reference/session/#session.BasicVerifier.verify_session","text":"verify_session ( model : SessionData ) -> bool If the session exists, it is valid","title":"verify_session()"},{"location":"reference/session/#session.SessionData","text":"Bases: SQLModel","title":"SessionData"},{"location":"reference/session/#session.SessionData-attributes","text":"","title":"Attributes"},{"location":"reference/session/#session.SessionData.email","text":"email : str","title":"email"},{"location":"reference/session/#session.SessionData.input","text":"input : str = ''","title":"input"},{"location":"reference/session/#session.SessionData.settings","text":"settings : dict = {}","title":"settings"},{"location":"reference/session/#session-functions","text":"","title":"Functions"},{"location":"reference/session/#session.getSecretKey","text":"getSecretKey ()","title":"getSecretKey()"},{"location":"reference/session/#session.xuuid4","text":"xuuid4 ()","title":"xuuid4()"},{"location":"reference/userprogress/","text":"msaSDK Module \u00b6 .userprogress \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAUserProgress \u00b6 Attributes \u00b6 user_progress instance-attribute \u00b6 user_progress = {} Functions \u00b6 __init__ \u00b6 __init__ () -> None addToProgress async \u00b6 addToProgress ( event : str , message : Dict ) resetProgress \u00b6 resetProgress ( event : str , message : Dict ) Functions \u00b6 getMSAUserProgress cached \u00b6 getMSAUserProgress () -> MSAUserProgress This function returns a cached instance of the MSAUserProgress object. Note Caching is used to prevent re-reading the environment every time the MSAUserProgress is used.","title":"userprogress"},{"location":"reference/userprogress/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/userprogress/#userprogress_1","text":"","title":".userprogress"},{"location":"reference/userprogress/#userprogress-attributes","text":"","title":"Attributes"},{"location":"reference/userprogress/#userprogress.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/userprogress/#userprogress-classes","text":"","title":"Classes"},{"location":"reference/userprogress/#userprogress.MSAUserProgress","text":"","title":"MSAUserProgress"},{"location":"reference/userprogress/#userprogress.MSAUserProgress-attributes","text":"","title":"Attributes"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.user_progress","text":"user_progress = {}","title":"user_progress"},{"location":"reference/userprogress/#userprogress.MSAUserProgress-functions","text":"","title":"Functions"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.__init__","text":"__init__ () -> None","title":"__init__()"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.addToProgress","text":"addToProgress ( event : str , message : Dict )","title":"addToProgress()"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.resetProgress","text":"resetProgress ( event : str , message : Dict )","title":"resetProgress()"},{"location":"reference/userprogress/#userprogress-functions","text":"","title":"Functions"},{"location":"reference/userprogress/#userprogress.getMSAUserProgress","text":"getMSAUserProgress () -> MSAUserProgress This function returns a cached instance of the MSAUserProgress object. Note Caching is used to prevent re-reading the environment every time the MSAUserProgress is used.","title":"getMSAUserProgress()"},{"location":"reference/admin/admin/","text":"msaSDK Module \u00b6 .admin.admin \u00b6 Attributes \u00b6 Classes \u00b6 AdminApp \u00b6 Bases: PageAdmin , AdminGroup Management Applications Attributes \u00b6 __register_lock instance-attribute \u00b6 __register_lock = False db instance-attribute \u00b6 db = AsyncDatabase ( self . engine ) engine instance-attribute \u00b6 engine = self . engine or self . app . engine msa_app instance-attribute \u00b6 msa_app : MSAApp = msa_app page_path class-attribute \u00b6 page_path = '/' tabs_mode class-attribute \u00b6 tabs_mode : TabsModeEnum = None Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , msa_app : MSAApp ) get_admin_or_create \u00b6 get_admin_or_create ( admin_cls : Type [ _BaseAdminT ], register : bool = True ) -> Optional [ _BaseAdminT ] get_model_admin cached \u00b6 get_model_admin ( table_name : str ) -> Optional [ ModelAdmin ] This function returns a cached instance of the ModelAdmin object. Note Caching is used to prevent re-reading the environment every time the ModelAdmin object is used. get_page async \u00b6 get_page ( request : Request ) -> Union [ Page , App ] get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] register_admin \u00b6 register_admin ( * admin_cls : Type [ _BaseAdminT ], ) -> Type [ _BaseAdminT ] register_router \u00b6 register_router () router_prefix property \u00b6 router_prefix () unregister_admin \u00b6 unregister_admin ( * admin_cls : Type [ BaseAdmin ]) AdminGroup \u00b6 Bases: PageSchemaAdmin Management Applications Group Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) -> None __iter__ \u00b6 __iter__ () -> Iterator [ _PageSchemaAdminT ] append_child \u00b6 append_child ( child : _PageSchemaAdminT , group_schema : PageSchema = None , ) -> None get_page_schema_child \u00b6 get_page_schema_child ( unique_id : str , ) -> Optional [ _PageSchemaAdminT ] get_page_schema_children async \u00b6 get_page_schema_children ( request : Request , ) -> List [ PageSchema ] unique_id \u00b6 unique_id () -> str BaseAdmin \u00b6 Attributes \u00b6 app instance-attribute \u00b6 app = app Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) site \u00b6 site () -> BaseAdminSite unique_id \u00b6 unique_id () -> str BaseAdminSite \u00b6 Bases: AdminApp Attributes \u00b6 auth class-attribute \u00b6 auth : Auth = None db_engine instance-attribute \u00b6 db_engine = self . msa_app . db_engine msa_app instance-attribute \u00b6 msa_app = msa_app router instance-attribute \u00b6 router = self . msa_app . router settings instance-attribute \u00b6 settings = msa_app . settings Functions \u00b6 __init__ \u00b6 __init__ ( msa_app : MSAApp ) mount_app \u00b6 mount_app ( msa_app : MSAApp , name : str = 'admin' ) -> None router_path \u00b6 router_path () -> str BaseFormAdmin \u00b6 Bases: PageAdmin Attributes \u00b6 form class-attribute \u00b6 form : Form = None form_init class-attribute \u00b6 form_init : bool = None form_path instance-attribute \u00b6 form_path = self . form_path or f ' { self . page_path } /api' route_init class-attribute \u00b6 route_init : Callable = None route_submit class-attribute \u00b6 route_submit : Callable = None router_prefix class-attribute \u00b6 router_prefix : str = '/form' schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_init_out class-attribute \u00b6 schema_init_out : Type [ Any ] = Any schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ Any ] = Any Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_form async \u00b6 get_form ( request : Request ) -> Form get_form_item async \u00b6 get_form_item ( request : Request , modelfield : ModelField ) -> Union [ FormItem , MSAUISchemaNode ] get_page async \u00b6 get_page ( request : Request ) -> Page register_router \u00b6 register_router () BaseModelAction \u00b6 Base Model Action Attributes \u00b6 action class-attribute \u00b6 action : Action = None admin instance-attribute \u00b6 admin = admin Functions \u00b6 __init__ \u00b6 __init__ ( admin : ModelAdmin ) fetch_item_scalars async \u00b6 fetch_item_scalars ( item_id : List [ str ]) -> List [ BaseModel ] register_router \u00b6 register_router () BaseModelAdmin \u00b6 Bases: MSASQLModelCrud Attributes \u00b6 app instance-attribute \u00b6 app = app bulk_update_fields class-attribute \u00b6 bulk_update_fields : List [ Union [ SQLModelListField , FormItem ] ] = [] Batch Edit Fields engine instance-attribute \u00b6 engine = self . engine or self . app . db . engine fields instance-attribute \u00b6 fields = self . fields or [ self . model ] link_model_fields class-attribute \u00b6 link_model_fields : List [ InstrumentedAttribute ] = [] Inline Fields link_model_forms class-attribute \u00b6 link_model_forms : List [ LinkModelForm ] = [] Inline Forms list_display class-attribute \u00b6 list_display : List [ Union [ SQLModelListField , TableColumn ] ] = [] Fields to be displayed list_filter instance-attribute \u00b6 list_filter = self . list_filter or list_display_insfield list_per_page class-attribute \u00b6 list_per_page : int = 10 Data volume per page model instance-attribute \u00b6 model = model parser instance-attribute \u00b6 parser = MSASQLModelFieldParser ( default_model = self . model ) search_fields class-attribute \u00b6 search_fields : List [ SQLModelField ] = [] Fuzzy search fields Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , model = None ) get_actions_on_bulk async \u00b6 get_actions_on_bulk ( request : Request ) -> List [ Action ] get_actions_on_header_toolbar async \u00b6 get_actions_on_header_toolbar ( request : Request , ) -> List [ Action ] get_actions_on_item async \u00b6 get_actions_on_item ( request : Request ) -> List [ Action ] get_create_action async \u00b6 get_create_action ( request : Request , bulk : bool = False ) -> Optional [ Action ] get_create_form async \u00b6 get_create_form ( request : Request , bulk : bool = False ) -> Form get_delete_action async \u00b6 get_delete_action ( request : Request , bulk : bool = False ) -> Optional [ Action ] get_form_item async \u00b6 get_form_item ( request : Request , modelfield : ModelField , action : MSACRUDEnum , ) -> Union [ FormItem , MSAUISchemaNode , None ] get_form_item_on_foreign_key async \u00b6 get_form_item_on_foreign_key ( request : Request , modelfield : ModelField , is_filter : bool = False , ) -> Union [ Service , MSAUISchemaNode , None ] get_link_model_forms \u00b6 get_link_model_forms () -> List [ LinkModelForm ] get_list_column async \u00b6 get_list_column ( request : Request , modelfield : ModelField ) -> TableColumn get_list_columns async \u00b6 get_list_columns ( request : Request ) -> List [ TableColumn ] get_list_display async \u00b6 get_list_display ( request : Request , ) -> List [ Union [ SQLModelListField , TableColumn ]] get_list_filter async \u00b6 get_list_filter ( request : Request , ) -> List [ Union [ SQLModelListField , FormItem ]] get_list_filter_form async \u00b6 get_list_filter_form ( request : Request ) -> Form get_list_table async \u00b6 get_list_table ( request : Request ) -> TableCRUD get_list_table_api async \u00b6 get_list_table_api ( request : Request ) -> MSAUIAPI get_update_action async \u00b6 get_update_action ( request : Request , bulk : bool = False ) -> Optional [ Action ] get_update_form async \u00b6 get_update_form ( request : Request , bulk : bool = False ) -> Form router_path \u00b6 router_path () -> str FormAdmin \u00b6 Bases: BaseFormAdmin Form Management Functions \u00b6 get_init_data async \u00b6 get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ] handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ] route_init property \u00b6 route_init () route_submit property \u00b6 route_submit () IframeAdmin \u00b6 Bases: PageSchemaAdmin Attributes \u00b6 iframe class-attribute \u00b6 iframe : Iframe = None src class-attribute \u00b6 src : str = '' Functions \u00b6 get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] LinkAdmin \u00b6 Bases: PageSchemaAdmin Management Links Attributes \u00b6 link class-attribute \u00b6 link : str = '' Functions \u00b6 get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] LinkModelForm \u00b6 Link Model to Form Attributes \u00b6 display_admin instance-attribute \u00b6 display_admin = display_admin item_col instance-attribute \u00b6 item_col = item_col link_col instance-attribute \u00b6 link_col = link_col link_model instance-attribute \u00b6 link_model = link_model path instance-attribute \u00b6 path = f '/ { self . display_admin . model . __name__ . lower () } ' pk_admin instance-attribute \u00b6 pk_admin = pk_admin Functions \u00b6 __init__ \u00b6 __init__ ( pk_admin : BaseModelAdmin , display_admin : ModelAdmin , link_model : Union [ SQLModel , Table ], link_col : Column , item_col : Column , ) bind_model_admin classmethod \u00b6 bind_model_admin ( pk_admin : BaseModelAdmin , insfield : InstrumentedAttribute , ) -> Optional [ LinkModelForm ] get_form_item async \u00b6 get_form_item ( request : Request ) register_router \u00b6 register_router () route_create property \u00b6 route_create () route_delete property \u00b6 route_delete () ModelAction \u00b6 Bases: BaseFormAdmin , BaseModelAction Form and Model Actions Attributes \u00b6 action class-attribute \u00b6 action : ActionType . Dialog = None router instance-attribute \u00b6 router = self . admin . router schema class-attribute \u00b6 schema : Type [ BaseModel ] = None Functions \u00b6 __init__ \u00b6 __init__ ( admin : ModelAdmin ) get_action async \u00b6 get_action ( request : Request , ** kwargs ) -> Action handle async \u00b6 handle ( request : Request , item_id : List [ str ], data : Optional [ BaseModel ], ** kwargs ) -> MSACRUDOut [ Any ] route_submit property \u00b6 route_submit () ModelAdmin \u00b6 Bases: BaseModelAdmin , PageAdmin Model Management Attributes \u00b6 bind_model class-attribute \u00b6 bind_model : bool = True page_path class-attribute \u00b6 page_path : str = '' Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , model = None ) get_page async \u00b6 get_page ( request : Request ) -> Page has_create_permission async \u00b6 has_create_permission ( request : Request , data : BaseModel , ** kwargs ) -> bool has_delete_permission async \u00b6 has_delete_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool has_list_permission async \u00b6 has_list_permission ( request : Request , paginator : MSACRUDPaginator , filters : BaseModel = None , ** kwargs ) -> bool has_read_permission async \u00b6 has_read_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool has_update_permission async \u00b6 has_update_permission ( request : Request , item_id : List [ str ], data : BaseModel , ** kwargs ) -> bool register_router \u00b6 register_router () router_prefix property \u00b6 router_prefix () ModelFormAdmin \u00b6 Bases: FormAdmin , MSASQLModelSelector , ABC todo Read and update a model resource Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) PageAdmin \u00b6 Bases: PageSchemaAdmin , RouterAdmin msa_ui page management Attributes \u00b6 page class-attribute \u00b6 page : Page = None page_parser_mode class-attribute \u00b6 page_parser_mode : Literal [ json , html ] = 'json' page_path class-attribute \u00b6 page_path : Optional [ str ] = None page_route_kwargs class-attribute \u00b6 page_route_kwargs : Dict [ str , Any ] = {} router_prefix class-attribute \u00b6 router_prefix = '/page' template_name class-attribute \u00b6 template_name : str = '' Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) error_no_page_permission \u00b6 error_no_page_permission ( request : Request ) get_page async \u00b6 get_page ( request : Request ) -> Page get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] page_parser async \u00b6 page_parser ( request : Request , page : Page ) -> Response page_permission_depend async \u00b6 page_permission_depend ( request : Request ) -> bool register_router \u00b6 register_router () route_page property \u00b6 route_page () -> Callable PageSchemaAdmin \u00b6 Bases: BaseAdmin Attributes \u00b6 group_schema instance-attribute \u00b6 group_schema = self . get_group_schema () page_schema instance-attribute \u00b6 page_schema = self . get_page_schema () Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_group_schema \u00b6 get_group_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError) get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError) has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool RouterAdmin \u00b6 Bases: BaseAdmin , MSARouterMixin Management Router Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) register_router \u00b6 register_router () router_path \u00b6 router_path () -> str TemplateAdmin \u00b6 Bases: PageAdmin Jinja2-Rendering Template Management Attributes \u00b6 page class-attribute \u00b6 page : Dict [ str , Any ] = {} page_parser_mode class-attribute \u00b6 page_parser_mode = 'html' page_path instance-attribute \u00b6 page_path = self . page_path or f '/ { self . template_name } ' templates class-attribute \u00b6 templates : Jinja2Templates = None Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_page async \u00b6 get_page ( request : Request ) -> Dict [ str , Any ] page_parser async \u00b6 page_parser ( request : Request , page : Dict [ str , Any ] ) -> Response","title":"admin"},{"location":"reference/admin/admin/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/admin/#adminadmin","text":"","title":".admin.admin"},{"location":"reference/admin/admin/#admin.admin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin-classes","text":"","title":"Classes"},{"location":"reference/admin/admin/#admin.admin.AdminApp","text":"Bases: PageAdmin , AdminGroup Management Applications","title":"AdminApp"},{"location":"reference/admin/admin/#admin.admin.AdminApp-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.AdminApp.__register_lock","text":"__register_lock = False","title":"__register_lock"},{"location":"reference/admin/admin/#admin.admin.AdminApp.db","text":"db = AsyncDatabase ( self . engine )","title":"db"},{"location":"reference/admin/admin/#admin.admin.AdminApp.engine","text":"engine = self . engine or self . app . engine","title":"engine"},{"location":"reference/admin/admin/#admin.admin.AdminApp.msa_app","text":"msa_app : MSAApp = msa_app","title":"msa_app"},{"location":"reference/admin/admin/#admin.admin.AdminApp.page_path","text":"page_path = '/'","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.AdminApp.tabs_mode","text":"tabs_mode : TabsModeEnum = None","title":"tabs_mode"},{"location":"reference/admin/admin/#admin.admin.AdminApp-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.AdminApp.__init__","text":"__init__ ( app : AdminApp , msa_app : MSAApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_admin_or_create","text":"get_admin_or_create ( admin_cls : Type [ _BaseAdminT ], register : bool = True ) -> Optional [ _BaseAdminT ]","title":"get_admin_or_create()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_model_admin","text":"get_model_admin ( table_name : str ) -> Optional [ ModelAdmin ] This function returns a cached instance of the ModelAdmin object. Note Caching is used to prevent re-reading the environment every time the ModelAdmin object is used.","title":"get_model_admin()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_page","text":"get_page ( request : Request ) -> Union [ Page , App ]","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.register_admin","text":"register_admin ( * admin_cls : Type [ _BaseAdminT ], ) -> Type [ _BaseAdminT ]","title":"register_admin()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.router_prefix","text":"router_prefix ()","title":"router_prefix()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.unregister_admin","text":"unregister_admin ( * admin_cls : Type [ BaseAdmin ])","title":"unregister_admin()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup","text":"Bases: PageSchemaAdmin Management Applications Group","title":"AdminGroup"},{"location":"reference/admin/admin/#admin.admin.AdminGroup-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.__init__","text":"__init__ ( app : AdminApp ) -> None","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.__iter__","text":"__iter__ () -> Iterator [ _PageSchemaAdminT ]","title":"__iter__()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.append_child","text":"append_child ( child : _PageSchemaAdminT , group_schema : PageSchema = None , ) -> None","title":"append_child()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.get_page_schema_child","text":"get_page_schema_child ( unique_id : str , ) -> Optional [ _PageSchemaAdminT ]","title":"get_page_schema_child()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.get_page_schema_children","text":"get_page_schema_children ( request : Request , ) -> List [ PageSchema ]","title":"get_page_schema_children()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.unique_id","text":"unique_id () -> str","title":"unique_id()"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin","text":"","title":"BaseAdmin"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.app","text":"app = app","title":"app"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.site","text":"site () -> BaseAdminSite","title":"site()"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.unique_id","text":"unique_id () -> str","title":"unique_id()"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite","text":"Bases: AdminApp","title":"BaseAdminSite"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.auth","text":"auth : Auth = None","title":"auth"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.db_engine","text":"db_engine = self . msa_app . db_engine","title":"db_engine"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.msa_app","text":"msa_app = msa_app","title":"msa_app"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.router","text":"router = self . msa_app . router","title":"router"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.settings","text":"settings = msa_app . settings","title":"settings"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.__init__","text":"__init__ ( msa_app : MSAApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.mount_app","text":"mount_app ( msa_app : MSAApp , name : str = 'admin' ) -> None","title":"mount_app()"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin","text":"Bases: PageAdmin","title":"BaseFormAdmin"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.form","text":"form : Form = None","title":"form"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.form_init","text":"form_init : bool = None","title":"form_init"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.form_path","text":"form_path = self . form_path or f ' { self . page_path } /api'","title":"form_path"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.route_init","text":"route_init : Callable = None","title":"route_init"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.route_submit","text":"route_submit : Callable = None","title":"route_submit"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.router_prefix","text":"router_prefix : str = '/form'","title":"router_prefix"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.schema_init_out","text":"schema_init_out : Type [ Any ] = Any","title":"schema_init_out"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ Any ] = Any","title":"schema_submit_out"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.get_form_item","text":"get_form_item ( request : Request , modelfield : ModelField ) -> Union [ FormItem , MSAUISchemaNode ]","title":"get_form_item()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction","text":"Base Model Action","title":"BaseModelAction"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.action","text":"action : Action = None","title":"action"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.admin","text":"admin = admin","title":"admin"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.__init__","text":"__init__ ( admin : ModelAdmin )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.fetch_item_scalars","text":"fetch_item_scalars ( item_id : List [ str ]) -> List [ BaseModel ]","title":"fetch_item_scalars()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin","text":"Bases: MSASQLModelCrud","title":"BaseModelAdmin"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.app","text":"app = app","title":"app"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.bulk_update_fields","text":"bulk_update_fields : List [ Union [ SQLModelListField , FormItem ] ] = [] Batch Edit Fields","title":"bulk_update_fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.engine","text":"engine = self . engine or self . app . db . engine","title":"engine"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.fields","text":"fields = self . fields or [ self . model ]","title":"fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.link_model_fields","text":"link_model_fields : List [ InstrumentedAttribute ] = [] Inline Fields","title":"link_model_fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.link_model_forms","text":"link_model_forms : List [ LinkModelForm ] = [] Inline Forms","title":"link_model_forms"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.list_display","text":"list_display : List [ Union [ SQLModelListField , TableColumn ] ] = [] Fields to be displayed","title":"list_display"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.list_filter","text":"list_filter = self . list_filter or list_display_insfield","title":"list_filter"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.list_per_page","text":"list_per_page : int = 10 Data volume per page","title":"list_per_page"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.model","text":"model = model","title":"model"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.parser","text":"parser = MSASQLModelFieldParser ( default_model = self . model )","title":"parser"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.search_fields","text":"search_fields : List [ SQLModelField ] = [] Fuzzy search fields","title":"search_fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.__init__","text":"__init__ ( app : AdminApp , model = None )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_actions_on_bulk","text":"get_actions_on_bulk ( request : Request ) -> List [ Action ]","title":"get_actions_on_bulk()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_actions_on_header_toolbar","text":"get_actions_on_header_toolbar ( request : Request , ) -> List [ Action ]","title":"get_actions_on_header_toolbar()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_actions_on_item","text":"get_actions_on_item ( request : Request ) -> List [ Action ]","title":"get_actions_on_item()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_create_action","text":"get_create_action ( request : Request , bulk : bool = False ) -> Optional [ Action ]","title":"get_create_action()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_create_form","text":"get_create_form ( request : Request , bulk : bool = False ) -> Form","title":"get_create_form()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_delete_action","text":"get_delete_action ( request : Request , bulk : bool = False ) -> Optional [ Action ]","title":"get_delete_action()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_form_item","text":"get_form_item ( request : Request , modelfield : ModelField , action : MSACRUDEnum , ) -> Union [ FormItem , MSAUISchemaNode , None ]","title":"get_form_item()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_form_item_on_foreign_key","text":"get_form_item_on_foreign_key ( request : Request , modelfield : ModelField , is_filter : bool = False , ) -> Union [ Service , MSAUISchemaNode , None ]","title":"get_form_item_on_foreign_key()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_link_model_forms","text":"get_link_model_forms () -> List [ LinkModelForm ]","title":"get_link_model_forms()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_column","text":"get_list_column ( request : Request , modelfield : ModelField ) -> TableColumn","title":"get_list_column()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_columns","text":"get_list_columns ( request : Request ) -> List [ TableColumn ]","title":"get_list_columns()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_display","text":"get_list_display ( request : Request , ) -> List [ Union [ SQLModelListField , TableColumn ]]","title":"get_list_display()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_filter","text":"get_list_filter ( request : Request , ) -> List [ Union [ SQLModelListField , FormItem ]]","title":"get_list_filter()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_filter_form","text":"get_list_filter_form ( request : Request ) -> Form","title":"get_list_filter_form()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_table","text":"get_list_table ( request : Request ) -> TableCRUD","title":"get_list_table()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_table_api","text":"get_list_table_api ( request : Request ) -> MSAUIAPI","title":"get_list_table_api()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_update_action","text":"get_update_action ( request : Request , bulk : bool = False ) -> Optional [ Action ]","title":"get_update_action()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_update_form","text":"get_update_form ( request : Request , bulk : bool = False ) -> Form","title":"get_update_form()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin","text":"Bases: BaseFormAdmin Form Management","title":"FormAdmin"},{"location":"reference/admin/admin/#admin.admin.FormAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.get_init_data","text":"get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ]","title":"get_init_data()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ]","title":"handle()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.route_init","text":"route_init ()","title":"route_init()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin","text":"Bases: PageSchemaAdmin","title":"IframeAdmin"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin.iframe","text":"iframe : Iframe = None","title":"iframe"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin.src","text":"src : str = ''","title":"src"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin","text":"Bases: PageSchemaAdmin Management Links","title":"LinkAdmin"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin.link","text":"link : str = ''","title":"link"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm","text":"Link Model to Form","title":"LinkModelForm"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.display_admin","text":"display_admin = display_admin","title":"display_admin"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.item_col","text":"item_col = item_col","title":"item_col"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.link_col","text":"link_col = link_col","title":"link_col"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.link_model","text":"link_model = link_model","title":"link_model"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.path","text":"path = f '/ { self . display_admin . model . __name__ . lower () } '","title":"path"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.pk_admin","text":"pk_admin = pk_admin","title":"pk_admin"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.__init__","text":"__init__ ( pk_admin : BaseModelAdmin , display_admin : ModelAdmin , link_model : Union [ SQLModel , Table ], link_col : Column , item_col : Column , )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.bind_model_admin","text":"bind_model_admin ( pk_admin : BaseModelAdmin , insfield : InstrumentedAttribute , ) -> Optional [ LinkModelForm ]","title":"bind_model_admin()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.get_form_item","text":"get_form_item ( request : Request )","title":"get_form_item()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.route_create","text":"route_create ()","title":"route_create()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.route_delete","text":"route_delete ()","title":"route_delete()"},{"location":"reference/admin/admin/#admin.admin.ModelAction","text":"Bases: BaseFormAdmin , BaseModelAction Form and Model Actions","title":"ModelAction"},{"location":"reference/admin/admin/#admin.admin.ModelAction-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.ModelAction.action","text":"action : ActionType . Dialog = None","title":"action"},{"location":"reference/admin/admin/#admin.admin.ModelAction.router","text":"router = self . admin . router","title":"router"},{"location":"reference/admin/admin/#admin.admin.ModelAction.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/admin/admin/#admin.admin.ModelAction-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.ModelAction.__init__","text":"__init__ ( admin : ModelAdmin )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.ModelAction.get_action","text":"get_action ( request : Request , ** kwargs ) -> Action","title":"get_action()"},{"location":"reference/admin/admin/#admin.admin.ModelAction.handle","text":"handle ( request : Request , item_id : List [ str ], data : Optional [ BaseModel ], ** kwargs ) -> MSACRUDOut [ Any ]","title":"handle()"},{"location":"reference/admin/admin/#admin.admin.ModelAction.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin","text":"Bases: BaseModelAdmin , PageAdmin Model Management","title":"ModelAdmin"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.bind_model","text":"bind_model : bool = True","title":"bind_model"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.page_path","text":"page_path : str = ''","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.__init__","text":"__init__ ( app : AdminApp , model = None )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_create_permission","text":"has_create_permission ( request : Request , data : BaseModel , ** kwargs ) -> bool","title":"has_create_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_delete_permission","text":"has_delete_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool","title":"has_delete_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_list_permission","text":"has_list_permission ( request : Request , paginator : MSACRUDPaginator , filters : BaseModel = None , ** kwargs ) -> bool","title":"has_list_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_read_permission","text":"has_read_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool","title":"has_read_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_update_permission","text":"has_update_permission ( request : Request , item_id : List [ str ], data : BaseModel , ** kwargs ) -> bool","title":"has_update_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.router_prefix","text":"router_prefix ()","title":"router_prefix()"},{"location":"reference/admin/admin/#admin.admin.ModelFormAdmin","text":"Bases: FormAdmin , MSASQLModelSelector , ABC todo Read and update a model resource","title":"ModelFormAdmin"},{"location":"reference/admin/admin/#admin.admin.ModelFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.ModelFormAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin","text":"Bases: PageSchemaAdmin , RouterAdmin msa_ui page management","title":"PageAdmin"},{"location":"reference/admin/admin/#admin.admin.PageAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page","text":"page : Page = None","title":"page"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_parser_mode","text":"page_parser_mode : Literal [ json , html ] = 'json'","title":"page_parser_mode"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_path","text":"page_path : Optional [ str ] = None","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_route_kwargs","text":"page_route_kwargs : Dict [ str , Any ] = {}","title":"page_route_kwargs"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.router_prefix","text":"router_prefix = '/page'","title":"router_prefix"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.template_name","text":"template_name : str = ''","title":"template_name"},{"location":"reference/admin/admin/#admin.admin.PageAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.error_no_page_permission","text":"error_no_page_permission ( request : Request )","title":"error_no_page_permission()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_parser","text":"page_parser ( request : Request , page : Page ) -> Response","title":"page_parser()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_permission_depend","text":"page_permission_depend ( request : Request ) -> bool","title":"page_permission_depend()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.route_page","text":"route_page () -> Callable","title":"route_page()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin","text":"Bases: BaseAdmin","title":"PageSchemaAdmin"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.group_schema","text":"group_schema = self . get_group_schema ()","title":"group_schema"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.page_schema","text":"page_schema = self . get_page_schema ()","title":"page_schema"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.get_group_schema","text":"get_group_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError)","title":"get_group_schema()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError)","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin","text":"Bases: BaseAdmin , MSARouterMixin Management Router","title":"RouterAdmin"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin","text":"Bases: PageAdmin Jinja2-Rendering Template Management","title":"TemplateAdmin"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page","text":"page : Dict [ str , Any ] = {}","title":"page"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page_parser_mode","text":"page_parser_mode = 'html'","title":"page_parser_mode"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page_path","text":"page_path = self . page_path or f '/ { self . template_name } '","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.templates","text":"templates : Jinja2Templates = None","title":"templates"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.get_page","text":"get_page ( request : Request ) -> Dict [ str , Any ]","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page_parser","text":"page_parser ( request : Request , page : Dict [ str , Any ] ) -> Response","title":"page_parser()"},{"location":"reference/admin/parser/","text":"msaSDK Module \u00b6 .admin.parser \u00b6 Classes \u00b6 MSAUIParser \u00b6 MSA UI Core Model Parser Attributes \u00b6 modelfield instance-attribute \u00b6 modelfield = modelfield Functions \u00b6 __init__ \u00b6 __init__ ( modelfield : ModelField ) as_form_item \u00b6 as_form_item ( set_default : bool = False , is_filter : bool = False ) -> FormItem as_table_column \u00b6 as_table_column ( quick_edit : bool = False ) -> TableColumn label property \u00b6 label () remark property \u00b6 remark () Functions \u00b6 cyclic_generator \u00b6 cyclic_generator ( iterable : Iterable ) Yield Iterable","title":"parser"},{"location":"reference/admin/parser/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/parser/#adminparser","text":"","title":".admin.parser"},{"location":"reference/admin/parser/#admin.parser-classes","text":"","title":"Classes"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser","text":"MSA UI Core Model Parser","title":"MSAUIParser"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser-attributes","text":"","title":"Attributes"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.modelfield","text":"modelfield = modelfield","title":"modelfield"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser-functions","text":"","title":"Functions"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.__init__","text":"__init__ ( modelfield : ModelField )","title":"__init__()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.as_form_item","text":"as_form_item ( set_default : bool = False , is_filter : bool = False ) -> FormItem","title":"as_form_item()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.as_table_column","text":"as_table_column ( quick_edit : bool = False ) -> TableColumn","title":"as_table_column()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.label","text":"label ()","title":"label()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.remark","text":"remark ()","title":"remark()"},{"location":"reference/admin/parser/#admin.parser-functions","text":"","title":"Functions"},{"location":"reference/admin/parser/#admin.parser.cyclic_generator","text":"cyclic_generator ( iterable : Iterable ) Yield Iterable","title":"cyclic_generator()"},{"location":"reference/admin/site/","text":"msaSDK Module \u00b6 .admin.site \u00b6 Attributes \u00b6 Classes \u00b6 AdminSite \u00b6 Bases: BaseAdminSite Admin Site, registers all defined Pages for the UI and the Routers Functions \u00b6 __init__ \u00b6 __init__ ( msa_app : MSAApp ) DocsAdmin \u00b6 Bases: IframeAdmin Admin Page for the OpenAPI Documentation as a IFrame Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 ) page_schema class-attribute \u00b6 page_schema = PageSchema ( label = \"OpenAPI\" , icon = \"fa fa-book\" ) Functions \u00b6 src property \u00b6 src () FileAdmin \u00b6 Bases: RouterAdmin Admin API Router for General FileUpload Attributes \u00b6 file_directory instance-attribute \u00b6 file_directory = self . file_directory or self . file_path file_max_size class-attribute \u00b6 file_max_size : int = 2 * 1024 * 1024 file_path class-attribute \u00b6 file_path : str = '/upload' router_prefix class-attribute \u00b6 router_prefix = '/file' API route prefix for URL static_path instance-attribute \u00b6 static_path = self . mount_staticfile () Classes \u00b6 UploadOutSchema \u00b6 Bases: BaseModel Upload Pydantic Response Model Attributes \u00b6 filename class-attribute \u00b6 filename : str = None url class-attribute \u00b6 url : str = None Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_filename \u00b6 get_filename ( file : UploadFile ) mount_staticfile \u00b6 mount_staticfile () -> str Mount upload file_directory as StaticFiles Directory register_router \u00b6 register_router () Register the upload function as API Router HomeAdmin \u00b6 Bases: PageAdmin Admin Home Page Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None page_path class-attribute \u00b6 page_path = '/home' page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Home\" ), icon = \"fa fa-home\" , url = \"/home\" , isDefaultPage = True , sort = 100 , ) Functions \u00b6 get_page async \u00b6 get_page ( request : Request ) -> Page ProfilerAdmin \u00b6 Bases: IframeAdmin Admin Page for the Profiler Result HTML as a IFrame Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None page_schema class-attribute \u00b6 page_schema = PageSchema ( label = \"Profiler\" , icon = \"fa fa-microchip\" , sort =- 110 ) Functions \u00b6 src property \u00b6 src () ReDocsAdmin \u00b6 Bases: IframeAdmin Admin Page for the ReDoc Documentation as a IFrame Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 ) page_schema class-attribute \u00b6 page_schema = PageSchema ( label = 'Redocs' , icon = 'fa fa-book' ) Functions \u00b6 src property \u00b6 src ()","title":"site"},{"location":"reference/admin/site/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/site/#adminsite","text":"","title":".admin.site"},{"location":"reference/admin/site/#admin.site-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site-classes","text":"","title":"Classes"},{"location":"reference/admin/site/#admin.site.AdminSite","text":"Bases: BaseAdminSite Admin Site, registers all defined Pages for the UI and the Routers","title":"AdminSite"},{"location":"reference/admin/site/#admin.site.AdminSite-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.AdminSite.__init__","text":"__init__ ( msa_app : MSAApp )","title":"__init__()"},{"location":"reference/admin/site/#admin.site.DocsAdmin","text":"Bases: IframeAdmin Admin Page for the OpenAPI Documentation as a IFrame","title":"DocsAdmin"},{"location":"reference/admin/site/#admin.site.DocsAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.DocsAdmin.group_schema","text":"group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 )","title":"group_schema"},{"location":"reference/admin/site/#admin.site.DocsAdmin.page_schema","text":"page_schema = PageSchema ( label = \"OpenAPI\" , icon = \"fa fa-book\" )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.DocsAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.DocsAdmin.src","text":"src ()","title":"src()"},{"location":"reference/admin/site/#admin.site.FileAdmin","text":"Bases: RouterAdmin Admin API Router for General FileUpload","title":"FileAdmin"},{"location":"reference/admin/site/#admin.site.FileAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.FileAdmin.file_directory","text":"file_directory = self . file_directory or self . file_path","title":"file_directory"},{"location":"reference/admin/site/#admin.site.FileAdmin.file_max_size","text":"file_max_size : int = 2 * 1024 * 1024","title":"file_max_size"},{"location":"reference/admin/site/#admin.site.FileAdmin.file_path","text":"file_path : str = '/upload'","title":"file_path"},{"location":"reference/admin/site/#admin.site.FileAdmin.router_prefix","text":"router_prefix = '/file' API route prefix for URL","title":"router_prefix"},{"location":"reference/admin/site/#admin.site.FileAdmin.static_path","text":"static_path = self . mount_staticfile ()","title":"static_path"},{"location":"reference/admin/site/#admin.site.FileAdmin-classes","text":"","title":"Classes"},{"location":"reference/admin/site/#admin.site.FileAdmin.UploadOutSchema","text":"Bases: BaseModel Upload Pydantic Response Model","title":"UploadOutSchema"},{"location":"reference/admin/site/#admin.site.FileAdmin.UploadOutSchema-attributes","text":"filename class-attribute \u00b6 filename : str = None url class-attribute \u00b6 url : str = None","title":"Attributes"},{"location":"reference/admin/site/#admin.site.FileAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.FileAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/site/#admin.site.FileAdmin.get_filename","text":"get_filename ( file : UploadFile )","title":"get_filename()"},{"location":"reference/admin/site/#admin.site.FileAdmin.mount_staticfile","text":"mount_staticfile () -> str Mount upload file_directory as StaticFiles Directory","title":"mount_staticfile()"},{"location":"reference/admin/site/#admin.site.FileAdmin.register_router","text":"register_router () Register the upload function as API Router","title":"register_router()"},{"location":"reference/admin/site/#admin.site.HomeAdmin","text":"Bases: PageAdmin Admin Home Page","title":"HomeAdmin"},{"location":"reference/admin/site/#admin.site.HomeAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.HomeAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/admin/site/#admin.site.HomeAdmin.page_path","text":"page_path = '/home'","title":"page_path"},{"location":"reference/admin/site/#admin.site.HomeAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Home\" ), icon = \"fa fa-home\" , url = \"/home\" , isDefaultPage = True , sort = 100 , )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.HomeAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.HomeAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin","text":"Bases: IframeAdmin Admin Page for the Profiler Result HTML as a IFrame","title":"ProfilerAdmin"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin.page_schema","text":"page_schema = PageSchema ( label = \"Profiler\" , icon = \"fa fa-microchip\" , sort =- 110 )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin.src","text":"src ()","title":"src()"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin","text":"Bases: IframeAdmin Admin Page for the ReDoc Documentation as a IFrame","title":"ReDocsAdmin"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin.group_schema","text":"group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 )","title":"group_schema"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin.page_schema","text":"page_schema = PageSchema ( label = 'Redocs' , icon = 'fa fa-book' )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin.src","text":"src ()","title":"src()"},{"location":"reference/admin/frontend/components/","text":"msaSDK Module \u00b6 .admin.frontend.components \u00b6 Attributes \u00b6 BASE_DIR module-attribute \u00b6 BASE_DIR = os . path . dirname ( os . path . abspath ( __file__ )) Classes \u00b6 Action \u00b6 Bases: MSAUINode Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = None active class-attribute \u00b6 active : bool = None activeClassName class-attribute \u00b6 activeClassName : str = None activeLevel class-attribute \u00b6 activeLevel : str = None args class-attribute \u00b6 args : Union [ dict , str ] = None block class-attribute \u00b6 block : bool = None close class-attribute \u00b6 close : Union [ bool , str ] = None componentId class-attribute \u00b6 componentId : str = None confirmText class-attribute \u00b6 confirmText : MSAUITemplate = None disabledTip class-attribute \u00b6 disabledTip : str = None icon class-attribute \u00b6 icon : str = None iconClassName class-attribute \u00b6 iconClassName : str = None label class-attribute \u00b6 label : str = None level class-attribute \u00b6 level : LevelEnum = None onClick class-attribute \u00b6 onClick : str = None reload class-attribute \u00b6 reload : str = None required class-attribute \u00b6 required : List [ str ] = None rightIcon class-attribute \u00b6 rightIcon : str = None rightIconClassName class-attribute \u00b6 rightIconClassName : str = None script class-attribute \u00b6 script : str = None size class-attribute \u00b6 size : str = None tooltip class-attribute \u00b6 tooltip : str = None tooltipPlacement class-attribute \u00b6 tooltipPlacement : str = None type class-attribute \u00b6 type : str = 'button' ActionType \u00b6 Classes \u00b6 Ajax \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'ajax' api class-attribute \u00b6 api : MSA_UI_API = None feedback class-attribute \u00b6 feedback : Dialog = None messages class-attribute \u00b6 messages : dict = None redirect class-attribute \u00b6 redirect : MSAUITemplate = None Copy \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'copy' content class-attribute \u00b6 content : MSAUITemplate copyFormat class-attribute \u00b6 copyFormat : str = None Dialog \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'dialog' dialog class-attribute \u00b6 dialog : Union [ Dialog , Service , MSAUISchemaNode ] nextCondition class-attribute \u00b6 nextCondition : bool = None Drawer \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'drawer' drawer class-attribute \u00b6 drawer : Union [ Drawer , Service , MSAUISchemaNode ] Link \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'link' link class-attribute \u00b6 link : str Url \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'url' blank class-attribute \u00b6 blank : bool = None url class-attribute \u00b6 url : str Alert \u00b6 Bases: MSAUINode \u63d0\u793a Attributes \u00b6 body class-attribute \u00b6 body : MSAUISchemaNode = None className class-attribute \u00b6 className : str = None closeButtonClassName class-attribute \u00b6 closeButtonClassName : str = None icon class-attribute \u00b6 icon : str = None iconClassName class-attribute \u00b6 iconClassName : str = None level class-attribute \u00b6 level : str = None showCloseButton class-attribute \u00b6 showCloseButton : bool = None showIcon class-attribute \u00b6 showIcon : bool = None type class-attribute \u00b6 type : str = 'alert' AnchorNav \u00b6 Bases: MSAUINode \u951a\u70b9\u5bfc\u822a Attributes \u00b6 active class-attribute \u00b6 active : str = None className class-attribute \u00b6 className : str = None direction class-attribute \u00b6 direction : str = None linkClassName class-attribute \u00b6 linkClassName : str = None links class-attribute \u00b6 links : list = None sectionClassName class-attribute \u00b6 sectionClassName : str = None type class-attribute \u00b6 type : str = 'anchor-nav' Classes \u00b6 Link \u00b6 Bases: MSAUINode Attributes \u00b6 body class-attribute \u00b6 body : MSAUISchemaNode = None className class-attribute \u00b6 className : str = None href class-attribute \u00b6 href : str = None label class-attribute \u00b6 label : str = None title class-attribute \u00b6 title : str = None App \u00b6 Bases: Page \u591a\u9875\u5e94\u7528 Attributes \u00b6 __default_template_path__ class-attribute \u00b6 __default_template_path__ : str = ( f \" { BASE_DIR } /templates/app.html\" ) api class-attribute \u00b6 api : MSA_UI_API = None asideAfter class-attribute \u00b6 asideAfter : str = None asideBefore class-attribute \u00b6 asideBefore : str = None brandName class-attribute \u00b6 brandName : str = None className class-attribute \u00b6 className : str = None footer class-attribute \u00b6 footer : str = None header class-attribute \u00b6 header : str = None logo class-attribute \u00b6 logo : str = '/msastatic/img/msa_logo.png' pages class-attribute \u00b6 pages : List [ PageSchema ] = None type class-attribute \u00b6 type : str = 'app' Audio \u00b6 Bases: MSAUINode \u97f3\u9891 Attributes \u00b6 autoPlay class-attribute \u00b6 autoPlay : bool = None className class-attribute \u00b6 className : str = None controls class-attribute \u00b6 controls : List [ str ] = None inline class-attribute \u00b6 inline : bool = None loop class-attribute \u00b6 loop : bool = None rates class-attribute \u00b6 rates : List [ float ] = None src class-attribute \u00b6 src : str = None type class-attribute \u00b6 type : str = 'audio' Avatar \u00b6 Bases: MSAUINode \u5934\u50cf Attributes \u00b6 className class-attribute \u00b6 className : str = None fit class-attribute \u00b6 fit : str = None icon class-attribute \u00b6 icon : str = None shape class-attribute \u00b6 shape : str = None size class-attribute \u00b6 size : int = None src class-attribute \u00b6 src : str = None style class-attribute \u00b6 style : dict = None text class-attribute \u00b6 text : str = None type class-attribute \u00b6 type : str = 'avatar' Badge \u00b6 Bases: MSAUINode \u89d2\u6807 Attributes \u00b6 animation class-attribute \u00b6 animation : bool = None className class-attribute \u00b6 className : str = None level class-attribute \u00b6 level : str = None mode class-attribute \u00b6 mode : str = 'dot' offset class-attribute \u00b6 offset : int = None overflowCount class-attribute \u00b6 overflowCount : int = None position class-attribute \u00b6 position : str = None size class-attribute \u00b6 size : int = None style class-attribute \u00b6 style : dict = None text class-attribute \u00b6 text : Union [ str , int ] = None visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Button \u00b6 Bases: FormItem \u6309\u94ae Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = None block class-attribute \u00b6 block : bool = None className class-attribute \u00b6 className : str = None disabled class-attribute \u00b6 disabled : bool = None href class-attribute \u00b6 href : str = None level class-attribute \u00b6 level : LevelEnum = None loading class-attribute \u00b6 loading : bool = None loadingOn class-attribute \u00b6 loadingOn : str = None size class-attribute \u00b6 size : str = None tooltip class-attribute \u00b6 tooltip : Union [ str , dict ] = None tooltipPlacement class-attribute \u00b6 tooltipPlacement : str = None tooltipTrigger class-attribute \u00b6 tooltipTrigger : str = None ButtonGroup \u00b6 Bases: MSAUINode \u6309\u94ae\u7ec4 Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ Action ] className class-attribute \u00b6 className : str = None type class-attribute \u00b6 type : str = 'button-group' vertical class-attribute \u00b6 vertical : bool = None ButtonToolbar \u00b6 Bases: MSAUINode \u6309\u94ae\u5de5\u5177\u680f Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ Action ] type class-attribute \u00b6 type : str = 'button-toolbar' CRUD \u00b6 Bases: MSAUINode \u589e\u5220\u6539\u67e5 Attributes \u00b6 affixHeader class-attribute \u00b6 affixHeader : bool = None alwaysShowPagination class-attribute \u00b6 alwaysShowPagination : bool = None api class-attribute \u00b6 api : MSA_UI_API = None autoGenerateFilter class-attribute \u00b6 autoGenerateFilter : bool = None autoJumpToTopOnPagerChange class-attribute \u00b6 autoJumpToTopOnPagerChange : bool = None bulkActions class-attribute \u00b6 bulkActions : List [ Action ] = None className class-attribute \u00b6 className : str = None defaultChecked class-attribute \u00b6 defaultChecked : bool = None defaultParams class-attribute \u00b6 defaultParams : dict = None draggable class-attribute \u00b6 draggable : bool = None filter class-attribute \u00b6 filter : Union [ MSAUISchemaNode , Form ] = None filterDefaultVisible class-attribute \u00b6 filterDefaultVisible : bool = None filterTogglable class-attribute \u00b6 filterTogglable : bool = None footerToolbar class-attribute \u00b6 footerToolbar : list = None headerToolbar class-attribute \u00b6 headerToolbar : list = None hideQuickSaveBtn class-attribute \u00b6 hideQuickSaveBtn : bool = None initFetch class-attribute \u00b6 initFetch : bool = None interval class-attribute \u00b6 interval : int = None itemAction class-attribute \u00b6 itemAction : Action = None itemDraggableOn class-attribute \u00b6 itemDraggableOn : bool = None keepItemSelectionOnPageChange class-attribute \u00b6 keepItemSelectionOnPageChange : bool = None labelTpl class-attribute \u00b6 labelTpl : str = None loadDataOnce class-attribute \u00b6 loadDataOnce : bool = None loadDataOnceFetchOnFilter class-attribute \u00b6 loadDataOnceFetchOnFilter : bool = None messages class-attribute \u00b6 messages : Messages = None mode class-attribute \u00b6 mode : str = None orderField class-attribute \u00b6 orderField : str = None pageField class-attribute \u00b6 pageField : str = None perPage class-attribute \u00b6 perPage : int = None perPageAvailable class-attribute \u00b6 perPageAvailable : List [ int ] = None perPageField class-attribute \u00b6 perPageField : str = None primaryField class-attribute \u00b6 primaryField : str = None quickSaveApi class-attribute \u00b6 quickSaveApi : MSA_UI_API = None quickSaveItemApi class-attribute \u00b6 quickSaveItemApi : MSA_UI_API = None saveOrderApi class-attribute \u00b6 saveOrderApi : MSA_UI_API = None silentPolling class-attribute \u00b6 silentPolling : bool = None source class-attribute \u00b6 source : str = None stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : str = None stopAutoRefreshWhenModalIsOpen class-attribute \u00b6 stopAutoRefreshWhenModalIsOpen : bool = None syncLocation class-attribute \u00b6 syncLocation : bool = None syncResponse2Query class-attribute \u00b6 syncResponse2Query : bool = None title class-attribute \u00b6 title : str = None type class-attribute \u00b6 type : str = 'crud' Classes \u00b6 Messages \u00b6 Bases: MSAUINode Attributes \u00b6 fetchFailed class-attribute \u00b6 fetchFailed : str = None quickSaveFailed class-attribute \u00b6 quickSaveFailed : str = None quickSaveSuccess class-attribute \u00b6 quickSaveSuccess : str = None saveOrderFailed class-attribute \u00b6 saveOrderFailed : str = None saveOrderSuccess class-attribute \u00b6 saveOrderSuccess : str = None Carousel \u00b6 Bases: MSAUINode \u8f6e\u64ad\u56fe Attributes \u00b6 animation class-attribute \u00b6 animation : str = None auto class-attribute \u00b6 auto : bool = True className class-attribute \u00b6 className : str = None controls class-attribute \u00b6 controls : List [ str ] = None controlsTheme class-attribute \u00b6 controlsTheme : str = None duration class-attribute \u00b6 duration : str = None height class-attribute \u00b6 height : str = None interval class-attribute \u00b6 interval : str = None itemSchema class-attribute \u00b6 itemSchema : dict = None options class-attribute \u00b6 options : List [ Item ] = None thumbMode class-attribute \u00b6 thumbMode : str = None type class-attribute \u00b6 type : str = 'carousel' width class-attribute \u00b6 width : str = None Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 description class-attribute \u00b6 description : str = None descriptionClassName class-attribute \u00b6 descriptionClassName : str = None href class-attribute \u00b6 href : str = None html class-attribute \u00b6 html : str = None image class-attribute \u00b6 image : str = None imageClassName class-attribute \u00b6 imageClassName : str = None title class-attribute \u00b6 title : str = None titleClassName class-attribute \u00b6 titleClassName : str = None Chart \u00b6 Bases: MSAUINode \u56fe\u8868: https://echarts.apache.org/zh/option.html#title Attributes \u00b6 api class-attribute \u00b6 api : MSA_UI_API = None body class-attribute \u00b6 body : MSAUISchemaNode = None className class-attribute \u00b6 className : str = None config class-attribute \u00b6 config : Union [ dict , str ] = None height class-attribute \u00b6 height : str = None initFetch class-attribute \u00b6 initFetch : bool = None interval class-attribute \u00b6 interval : int = None replaceChartOption class-attribute \u00b6 replaceChartOption : bool = None source class-attribute \u00b6 source : dict = None style class-attribute \u00b6 style : dict = None trackExpression class-attribute \u00b6 trackExpression : str = None type class-attribute \u00b6 type : str = 'chart' width class-attribute \u00b6 width : str = None ChartRadios \u00b6 Bases: Radios \u5355\u9009\u6846 Attributes \u00b6 chartValueField class-attribute \u00b6 chartValueField : str = None config class-attribute \u00b6 config : dict = None showTooltipOnHighlight class-attribute \u00b6 showTooltipOnHighlight : bool = None type class-attribute \u00b6 type : str = 'chart-radios' Checkbox \u00b6 Bases: FormItem \u52fe\u9009\u6846 Attributes \u00b6 falseValue class-attribute \u00b6 falseValue : Any = None option class-attribute \u00b6 option : str = None trueValue class-attribute \u00b6 trueValue : Any = None type class-attribute \u00b6 type : str = 'checkbox' Checkboxes \u00b6 Bases: FormItem \u590d\u9009\u6846 Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None addControls class-attribute \u00b6 addControls : List [ FormItem ] = None checkAll class-attribute \u00b6 checkAll : bool = None columnsCount class-attribute \u00b6 columnsCount : int = None creatable class-attribute \u00b6 creatable : bool = None createBtnLabel class-attribute \u00b6 createBtnLabel : str = None defaultCheckAll class-attribute \u00b6 defaultCheckAll : bool = None deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None delimiter class-attribute \u00b6 delimiter : str = None editApi class-attribute \u00b6 editApi : MSA_UI_API = None editControls class-attribute \u00b6 editControls : List [ FormItem ] = None editable class-attribute \u00b6 editable : bool = None extractValue class-attribute \u00b6 extractValue : bool = None inline class-attribute \u00b6 inline : bool = None joinValues class-attribute \u00b6 joinValues : bool = None labelField class-attribute \u00b6 labelField : str = None options class-attribute \u00b6 options : MSAOptionsNode = None removable class-attribute \u00b6 removable : bool = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'checkboxes' valueField class-attribute \u00b6 valueField : str = None Code \u00b6 Bases: MSAUINode \u4ee3\u7801\u9ad8\u4eae Attributes \u00b6 className class-attribute \u00b6 className : str = None editorTheme class-attribute \u00b6 editorTheme : str = None language class-attribute \u00b6 language : str = None name class-attribute \u00b6 name : str = None tabSize class-attribute \u00b6 tabSize : int = None type class-attribute \u00b6 type : str = 'code' value class-attribute \u00b6 value : str = None wordWrap class-attribute \u00b6 wordWrap : str = None ColumnImage \u00b6 Bases: Image , TableColumn \u56fe\u7247\u5217 ColumnImages \u00b6 Bases: Images , TableColumn \u56fe\u7247\u96c6\u5217 ColumnOperation \u00b6 Bases: TableColumn \u64cd\u4f5c\u5217 Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ Union [ Action , MSAUINode ]] = None label class-attribute \u00b6 label : MSAUITemplate = None toggled class-attribute \u00b6 toggled : bool = None type class-attribute \u00b6 type : str = 'operation' Combo \u00b6 Bases: FormItem \u7ec4\u5408 Attributes \u00b6 addButtonClassName class-attribute \u00b6 addButtonClassName : str = None addButtonText class-attribute \u00b6 addButtonText : str = None addable class-attribute \u00b6 addable : bool = False canAccessSuperData class-attribute \u00b6 canAccessSuperData : bool = False conditions class-attribute \u00b6 conditions : dict = None deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None deleteConfirmText class-attribute \u00b6 deleteConfirmText : str = None delimiter class-attribute \u00b6 delimiter : str = None draggable class-attribute \u00b6 draggable : bool = False draggableTip class-attribute \u00b6 draggableTip : str = None flat class-attribute \u00b6 flat : bool = False formClassName class-attribute \u00b6 formClassName : str = None items class-attribute \u00b6 items : List [ FormItem ] = None joinValues class-attribute \u00b6 joinValues : bool = True maxLength class-attribute \u00b6 maxLength : int = None minLength class-attribute \u00b6 minLength : int = None multiLine class-attribute \u00b6 multiLine : bool = False multiple class-attribute \u00b6 multiple : bool = False noBorder class-attribute \u00b6 noBorder : bool = False nullable class-attribute \u00b6 nullable : bool = False placeholder class-attribute \u00b6 placeholder : str = None removable class-attribute \u00b6 removable : bool = False scaffold class-attribute \u00b6 scaffold : dict = {} strictMode class-attribute \u00b6 strictMode : bool = True subFormMode class-attribute \u00b6 subFormMode : str = None syncFields class-attribute \u00b6 syncFields : List [ str ] = [] type class-attribute \u00b6 type : str = 'combo' typeSwitchable class-attribute \u00b6 typeSwitchable : bool = False ConditionBuilder \u00b6 Bases: FormItem \u7ec4\u5408\u6761\u4ef6 Attributes \u00b6 className class-attribute \u00b6 className : str = None fieldClassName class-attribute \u00b6 fieldClassName : str = None fields class-attribute \u00b6 fields : List [ Field ] = None source class-attribute \u00b6 source : str = None type class-attribute \u00b6 type : str = 'condition-builder' Classes \u00b6 Date \u00b6 Bases: Field \u65e5\u671f Attributes \u00b6 defaultValue class-attribute \u00b6 defaultValue : str = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None type class-attribute \u00b6 type : str = 'date' Datetime \u00b6 Bases: Date \u65e5\u671f\u65f6\u95f4 Attributes \u00b6 timeFormat class-attribute \u00b6 timeFormat : str = None type class-attribute \u00b6 type : str = 'datetime' Field \u00b6 Bases: MSAUINode Attributes \u00b6 defaultOp class-attribute \u00b6 defaultOp : str = None label class-attribute \u00b6 label : str = None operators class-attribute \u00b6 operators : List [ str ] = None placeholder class-attribute \u00b6 placeholder : str = None type class-attribute \u00b6 type : str = 'text' Number \u00b6 Bases: Field \u6570\u5b57 Attributes \u00b6 maximum class-attribute \u00b6 maximum : float = None minimum class-attribute \u00b6 minimum : float = None step class-attribute \u00b6 step : float = None type class-attribute \u00b6 type : str = 'number' Select \u00b6 Bases: Field \u4e0b\u62c9\u9009\u62e9 Attributes \u00b6 autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None options class-attribute \u00b6 options : MSAOptionsNode = None searchable class-attribute \u00b6 searchable : bool = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'select' Text \u00b6 Bases: Field \u6587\u672c Time \u00b6 Bases: Date \u65f6\u95f4 Attributes \u00b6 type class-attribute \u00b6 type : str = 'datetime' Custom \u00b6 Bases: MSAUINode \u81ea\u5b9a\u4e49\u7ec4\u4ef6 Attributes \u00b6 className class-attribute \u00b6 className : str = None html class-attribute \u00b6 html : str = None id class-attribute \u00b6 id : str = None inline class-attribute \u00b6 inline : bool = False name class-attribute \u00b6 name : str = None onMount class-attribute \u00b6 onMount : str = None onUnmount class-attribute \u00b6 onUnmount : str = None onUpdate class-attribute \u00b6 onUpdate : str = None type class-attribute \u00b6 type : str = 'custom' Dialog \u00b6 Bases: MSAUINode \u5bf9\u8bdd\u6846 Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None body class-attribute \u00b6 body : MSAUISchemaNode = None bodyClassName class-attribute \u00b6 bodyClassName : str = None closeOnEsc class-attribute \u00b6 closeOnEsc : bool = None data class-attribute \u00b6 data : dict = None disabled class-attribute \u00b6 disabled : bool = None showCloseButton class-attribute \u00b6 showCloseButton : bool = None showErrorMsg class-attribute \u00b6 showErrorMsg : bool = None size class-attribute \u00b6 size : Union [ str , SizeEnum ] = None title class-attribute \u00b6 title : MSAUISchemaNode = None type class-attribute \u00b6 type : str = 'dialog' Divider \u00b6 Bases: MSAUINode Attributes \u00b6 className class-attribute \u00b6 className : str = None lineStyle class-attribute \u00b6 lineStyle : str = None type class-attribute \u00b6 type : str = 'divider' Drawer \u00b6 Bases: MSAUINode \u62bd\u5c49 Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None body class-attribute \u00b6 body : MSAUISchemaNode = None bodyClassName class-attribute \u00b6 bodyClassName : str = None closeOnEsc class-attribute \u00b6 closeOnEsc : bool = None closeOnOutside class-attribute \u00b6 closeOnOutside : bool = None data class-attribute \u00b6 data : dict = None overlay class-attribute \u00b6 overlay : bool = None position class-attribute \u00b6 position : str = None resizable class-attribute \u00b6 resizable : bool = None size class-attribute \u00b6 size : Union [ str , SizeEnum ] = None title class-attribute \u00b6 title : MSAUISchemaNode = None type class-attribute \u00b6 type : str = 'drawer' Editor \u00b6 Bases: FormItem \u4ee3\u7801\u7f16\u8f91\u5668 Attributes \u00b6 allowFullscreen class-attribute \u00b6 allowFullscreen : bool = None language class-attribute \u00b6 language : str = None options class-attribute \u00b6 options : dict = None size class-attribute \u00b6 size : str = None type class-attribute \u00b6 type : str = 'editor' Flex \u00b6 Bases: MSAUINode Attributes \u00b6 alignItems class-attribute \u00b6 alignItems : str = None className class-attribute \u00b6 className : str = None items class-attribute \u00b6 items : List [ MSAUISchemaNode ] = None justify class-attribute \u00b6 justify : str = None style class-attribute \u00b6 style : dict = None type class-attribute \u00b6 type : str = 'flex' Form \u00b6 Bases: MSAUINode \u8868\u5355 Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None actionsClassName class-attribute \u00b6 actionsClassName : str = None api class-attribute \u00b6 api : MSA_UI_API = None asyncApi class-attribute \u00b6 asyncApi : MSA_UI_API = None autoFocus class-attribute \u00b6 autoFocus : bool = None body class-attribute \u00b6 body : List [ Union [ FormItem , MSAUISchemaNode ]] = None canAccessSuperData class-attribute \u00b6 canAccessSuperData : bool = None checkInterval class-attribute \u00b6 checkInterval : int = None className class-attribute \u00b6 className : str = None clearPersistDataAfterSubmit class-attribute \u00b6 clearPersistDataAfterSubmit : bool = None columnCount class-attribute \u00b6 columnCount : int = None debug class-attribute \u00b6 debug : bool = None finishedField class-attribute \u00b6 finishedField : Optional [ str ] = None horizontal class-attribute \u00b6 horizontal : Horizontal = None initApi class-attribute \u00b6 initApi : MSA_UI_API = None initAsyncApi class-attribute \u00b6 initAsyncApi : MSA_UI_API = None initCheckInterval class-attribute \u00b6 initCheckInterval : int = None initFetch class-attribute \u00b6 initFetch : bool = None initFetchOn class-attribute \u00b6 initFetchOn : str = None initFinishedField class-attribute \u00b6 initFinishedField : Optional [ str ] = None interval class-attribute \u00b6 interval : int = None messages class-attribute \u00b6 messages : Messages = None mode class-attribute \u00b6 mode : DisplayModeEnum = None name class-attribute \u00b6 name : str = None panelClassName class-attribute \u00b6 panelClassName : str = None persistData class-attribute \u00b6 persistData : str = None preventEnterSubmit class-attribute \u00b6 preventEnterSubmit : bool = None primaryField class-attribute \u00b6 primaryField : str = None promptPageLeave class-attribute \u00b6 promptPageLeave : bool = None redirect class-attribute \u00b6 redirect : str = None reload class-attribute \u00b6 reload : str = None resetAfterSubmit class-attribute \u00b6 resetAfterSubmit : bool = None rules class-attribute \u00b6 rules : list = None silentPolling class-attribute \u00b6 silentPolling : bool = False stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : str = None submitOnChange class-attribute \u00b6 submitOnChange : bool = None submitOnInit class-attribute \u00b6 submitOnInit : bool = None submitText class-attribute \u00b6 submitText : Optional [ str ] = None target class-attribute \u00b6 target : str = None title class-attribute \u00b6 title : Optional [ str ] = None trimValues class-attribute \u00b6 trimValues : bool = None type class-attribute \u00b6 type : str = 'form' wrapWithPanel class-attribute \u00b6 wrapWithPanel : bool = None Classes \u00b6 Messages \u00b6 Bases: MSAUINode Attributes \u00b6 fetchFailed class-attribute \u00b6 fetchFailed : str = None fetchSuccess class-attribute \u00b6 fetchSuccess : str = None saveFailed class-attribute \u00b6 saveFailed : str = None saveSuccess class-attribute \u00b6 saveSuccess : str = None FormItem \u00b6 Bases: MSAUINode \u8868\u5355\u9879\u901a\u7528 Attributes \u00b6 className class-attribute \u00b6 className : str = None copyable class-attribute \u00b6 copyable : Union [ bool , dict ] = None description class-attribute \u00b6 description : MSAUITemplate = None disabled class-attribute \u00b6 disabled : bool = None disabledOn class-attribute \u00b6 disabledOn : MSAUIExpression = None inline class-attribute \u00b6 inline : bool = None inputClassName class-attribute \u00b6 inputClassName : str = None label class-attribute \u00b6 label : MSAUITemplate = None labelClassName class-attribute \u00b6 labelClassName : str = None labelRemark class-attribute \u00b6 labelRemark : Remark = None name class-attribute \u00b6 name : str = None placeholder class-attribute \u00b6 placeholder : str = None required class-attribute \u00b6 required : bool = None requiredOn class-attribute \u00b6 requiredOn : MSAUIExpression = None submitOnChange class-attribute \u00b6 submitOnChange : bool = None type class-attribute \u00b6 type : str = 'input-text' validateApi class-attribute \u00b6 validateApi : MSAUIExpression = None validations class-attribute \u00b6 validations : Union [ Validation , MSAUIExpression ] = None value class-attribute \u00b6 value : Union [ int , str ] = None visible class-attribute \u00b6 visible : MSAUIExpression = None visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Grid \u00b6 Bases: MSAUINode Attributes \u00b6 align class-attribute \u00b6 align : str = None className class-attribute \u00b6 className : str = None columns class-attribute \u00b6 columns : List [ MSAUISchemaNode ] = None gap class-attribute \u00b6 gap : str = None type class-attribute \u00b6 type : str = 'grid' valign class-attribute \u00b6 valign : str = None Classes \u00b6 Column \u00b6 Bases: MSAUINode Attributes \u00b6 ClassName class-attribute \u00b6 ClassName : str = None body class-attribute \u00b6 body : List [ MSAUISchemaNode ] = None lg class-attribute \u00b6 lg : int = None md class-attribute \u00b6 md : int = None sm class-attribute \u00b6 sm : int = None valign class-attribute \u00b6 valign : str = None xs class-attribute \u00b6 xs : int = None Group \u00b6 Bases: InputGroup \u8868\u5355\u9879\u7ec4 Attributes \u00b6 direction class-attribute \u00b6 direction : str = None gap class-attribute \u00b6 gap : str = None mode class-attribute \u00b6 mode : DisplayModeEnum = None type class-attribute \u00b6 type : str = 'group' Hidden \u00b6 Bases: FormItem \u9690\u85cf\u5b57\u6bb5 Attributes \u00b6 type class-attribute \u00b6 type : str = 'hidden' Horizontal \u00b6 Bases: MSAUINode Attributes \u00b6 left class-attribute \u00b6 left : int = None offset class-attribute \u00b6 offset : int = None right class-attribute \u00b6 right : int = None Html \u00b6 Bases: MSAUINode Html Node Attributes \u00b6 html class-attribute \u00b6 html : str type class-attribute \u00b6 type : str = 'html' Icon \u00b6 Bases: MSAUINode \u56fe\u6807 Attributes \u00b6 className class-attribute \u00b6 className : str = None icon class-attribute \u00b6 icon : str = None type class-attribute \u00b6 type : str = 'icon' Iframe \u00b6 Bases: MSAUINode Iframe Attributes \u00b6 className class-attribute \u00b6 className : str = None frameBorder class-attribute \u00b6 frameBorder : list = None height class-attribute \u00b6 height : Union [ int , str ] = None src class-attribute \u00b6 src : str = None style class-attribute \u00b6 style : dict = None type class-attribute \u00b6 type : str = 'iframe' width class-attribute \u00b6 width : Union [ int , str ] = None Image \u00b6 Bases: MSAUINode \u56fe\u7247 Attributes \u00b6 className class-attribute \u00b6 className : str = None defaultImage class-attribute \u00b6 defaultImage : str = None enlargeAble class-attribute \u00b6 enlargeAble : bool = None enlargeCaption class-attribute \u00b6 enlargeCaption : str = None enlargeTitle class-attribute \u00b6 enlargeTitle : str = None height class-attribute \u00b6 height : int = None href class-attribute \u00b6 href : MSAUITemplate = None imageCaption class-attribute \u00b6 imageCaption : str = None imageClassName class-attribute \u00b6 imageClassName : str = None imageMode class-attribute \u00b6 imageMode : str = None originalSrc class-attribute \u00b6 originalSrc : str = None placeholder class-attribute \u00b6 placeholder : str = None src class-attribute \u00b6 src : str = None thumbClassName class-attribute \u00b6 thumbClassName : str = None thumbMode class-attribute \u00b6 thumbMode : str = None thumbRatio class-attribute \u00b6 thumbRatio : str = None title class-attribute \u00b6 title : str = None type class-attribute \u00b6 type : str = 'image' width class-attribute \u00b6 width : int = None Images \u00b6 Bases: MSAUINode \u56fe\u7247\u96c6 Attributes \u00b6 className class-attribute \u00b6 className : str = None defaultImage class-attribute \u00b6 defaultImage : str = None delimiter class-attribute \u00b6 delimiter : str = None enlargeAble class-attribute \u00b6 enlargeAble : bool = None originalSrc class-attribute \u00b6 originalSrc : str = None source class-attribute \u00b6 source : str = None src class-attribute \u00b6 src : str = None thumbMode class-attribute \u00b6 thumbMode : str = None thumbRatio class-attribute \u00b6 thumbRatio : str = None type class-attribute \u00b6 type : str = 'images' value class-attribute \u00b6 value : Union [ str , List [ str ], List [ dict ]] = None InputArray \u00b6 Bases: FormItem \u6570\u7ec4\u8f93\u5165\u6846 Attributes \u00b6 addButtonText class-attribute \u00b6 addButtonText : str = None addable class-attribute \u00b6 addable : bool = None draggable class-attribute \u00b6 draggable : bool = False draggableTip class-attribute \u00b6 draggableTip : str = None items class-attribute \u00b6 items : FormItem = None maxLength class-attribute \u00b6 maxLength : int = None minLength class-attribute \u00b6 minLength : int = None removable class-attribute \u00b6 removable : bool = None type class-attribute \u00b6 type : str = 'input-array' InputCity \u00b6 Bases: FormItem \u57ce\u5e02\u9009\u62e9\u5668 Attributes \u00b6 allowCity class-attribute \u00b6 allowCity : bool = None allowDistrict class-attribute \u00b6 allowDistrict : bool = None extractValue class-attribute \u00b6 extractValue : bool = None searchable class-attribute \u00b6 searchable : bool = None type class-attribute \u00b6 type : str = 'location-city' InputColor \u00b6 Bases: FormItem \u989c\u8272\u9009\u62e9\u5668 Attributes \u00b6 allowCustomColor class-attribute \u00b6 allowCustomColor : bool = None clearable class-attribute \u00b6 clearable : bool = None format class-attribute \u00b6 format : str = None presetColors class-attribute \u00b6 presetColors : List [ str ] = None resetValue class-attribute \u00b6 resetValue : str = None type class-attribute \u00b6 type : str = 'input-color' InputDate \u00b6 Bases: FormItem \u65e5\u671f Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None closeOnSelect class-attribute \u00b6 closeOnSelect : bool = None embed class-attribute \u00b6 embed : bool = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None largeMode class-attribute \u00b6 largeMode : bool = None maxDate class-attribute \u00b6 maxDate : str = None minDate class-attribute \u00b6 minDate : str = None placeholder class-attribute \u00b6 placeholder : str = None scheduleAction class-attribute \u00b6 scheduleAction : MSAUISchemaNode = None scheduleClassNames class-attribute \u00b6 scheduleClassNames : List [ str ] = None schedules class-attribute \u00b6 schedules : Union [ list , str ] = None shortcuts class-attribute \u00b6 shortcuts : str = None timeConstraints class-attribute \u00b6 timeConstraints : dict = None type class-attribute \u00b6 type : str = 'input-date' utc class-attribute \u00b6 utc : bool = None value class-attribute \u00b6 value : str = None InputDateRange \u00b6 Bases: InputDatetimeRange \u65e5\u671f\u8303\u56f4 Attributes \u00b6 maxDuration class-attribute \u00b6 maxDuration : str = None minDuration class-attribute \u00b6 minDuration : str = None type class-attribute \u00b6 type : str = 'input-date-range' InputDatetime \u00b6 Bases: FormItem \u65e5\u671f Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None embed class-attribute \u00b6 embed : bool = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None maxDate class-attribute \u00b6 maxDate : str = None minDate class-attribute \u00b6 minDate : str = None placeholder class-attribute \u00b6 placeholder : str = None shortcuts class-attribute \u00b6 shortcuts : str = None timeConstraints class-attribute \u00b6 timeConstraints : dict = None type class-attribute \u00b6 type : str = 'input-datetime' utc class-attribute \u00b6 utc : bool = None value class-attribute \u00b6 value : str = None InputDatetimeRange \u00b6 Bases: InputTimeRange \u65e5\u671f\u65f6\u95f4\u8303\u56f4 Attributes \u00b6 maxDate class-attribute \u00b6 maxDate : str = None minDate class-attribute \u00b6 minDate : str = None ranges class-attribute \u00b6 ranges : Union [ str , List [ str ]] = None type class-attribute \u00b6 type : str = 'input-datetime-range' utc class-attribute \u00b6 utc : bool = None InputExcel \u00b6 Bases: FormItem \u89e3\u6790 Excel Attributes \u00b6 allSheets class-attribute \u00b6 allSheets : bool = None includeEmpty class-attribute \u00b6 includeEmpty : bool = None parseMode class-attribute \u00b6 parseMode : str = None plainText class-attribute \u00b6 plainText : bool = None type class-attribute \u00b6 type : str = 'input-excel' InputFile \u00b6 Bases: FormItem \u6587\u4ef6\u4e0a\u4f20 Attributes \u00b6 accept class-attribute \u00b6 accept : str = None asBase64 class-attribute \u00b6 asBase64 : bool = None asBlob class-attribute \u00b6 asBlob : bool = None autoFill class-attribute \u00b6 autoFill : Dict [ str , str ] = None autoUpload class-attribute \u00b6 autoUpload : bool = None btnLabel class-attribute \u00b6 btnLabel : str = None chunkApi class-attribute \u00b6 chunkApi : MSA_UI_API = None chunkSize class-attribute \u00b6 chunkSize : int = None delimiter class-attribute \u00b6 delimiter : str = None downloadUrl class-attribute \u00b6 downloadUrl : Union [ str , bool ] = None extractValue class-attribute \u00b6 extractValue : bool = None fileField class-attribute \u00b6 fileField : str = None finishChunkApi class-attribute \u00b6 finishChunkApi : MSA_UI_API = None hideUploadButton class-attribute \u00b6 hideUploadButton : bool = None joinValues class-attribute \u00b6 joinValues : bool = None maxLength class-attribute \u00b6 maxLength : int = None maxSize class-attribute \u00b6 maxSize : int = None multiple class-attribute \u00b6 multiple : bool = None nameField class-attribute \u00b6 nameField : str = None receiver class-attribute \u00b6 receiver : MSA_UI_API = None startChunkApi class-attribute \u00b6 startChunkApi : MSA_UI_API = None stateTextMap class-attribute \u00b6 stateTextMap : dict = None type class-attribute \u00b6 type : str = 'input-file' urlField class-attribute \u00b6 urlField : str = None useChunk class-attribute \u00b6 useChunk : bool = None valueField class-attribute \u00b6 valueField : str = None InputGroup \u00b6 Bases: FormItem \u8f93\u5165\u6846\u7ec4\u5408 Attributes \u00b6 body class-attribute \u00b6 body : List [ FormItem ] = None className class-attribute \u00b6 className : str = None type class-attribute \u00b6 type : str = 'input-group' InputImage \u00b6 Bases: FormItem \u56fe\u7247\u4e0a\u4f20 Attributes \u00b6 accept class-attribute \u00b6 accept : str = None autoFill class-attribute \u00b6 autoFill : Dict [ str , str ] = None autoUpload class-attribute \u00b6 autoUpload : bool = None crop class-attribute \u00b6 crop : Union [ bool , CropInfo ] = None cropFormat class-attribute \u00b6 cropFormat : str = None cropQuality class-attribute \u00b6 cropQuality : int = None delimiter class-attribute \u00b6 delimiter : str = None extractValue class-attribute \u00b6 extractValue : bool = None fileField class-attribute \u00b6 fileField : str = None fixedSize class-attribute \u00b6 fixedSize : bool = None fixedSizeClassName class-attribute \u00b6 fixedSizeClassName : str = None frameImage class-attribute \u00b6 frameImage : str = None hideUploadButton class-attribute \u00b6 hideUploadButton : bool = None joinValues class-attribute \u00b6 joinValues : bool = None limit class-attribute \u00b6 limit : Limit = None maxLength class-attribute \u00b6 maxLength : int = None maxSize class-attribute \u00b6 maxSize : int = None multiple class-attribute \u00b6 multiple : bool = None receiver class-attribute \u00b6 receiver : MSA_UI_API = None type class-attribute \u00b6 type : str = 'input-image' Classes \u00b6 CropInfo \u00b6 Bases: MSABaseUIModel Attributes \u00b6 aspectRatio class-attribute \u00b6 aspectRatio : float = None rotatable class-attribute \u00b6 rotatable : bool = None scalable class-attribute \u00b6 scalable : bool = None viewMode class-attribute \u00b6 viewMode : int = None Limit \u00b6 Bases: MSABaseUIModel Attributes \u00b6 aspectRatio class-attribute \u00b6 aspectRatio : float = None height class-attribute \u00b6 height : int = None maxHeight class-attribute \u00b6 maxHeight : int = None maxWidth class-attribute \u00b6 maxWidth : int = None minHeight class-attribute \u00b6 minHeight : int = None minWidth class-attribute \u00b6 minWidth : int = None width class-attribute \u00b6 width : int = None InputMonth \u00b6 Bases: FormItem \u6708\u4efd Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None placeholder class-attribute \u00b6 placeholder : str = None type class-attribute \u00b6 type : str = 'input-month' value class-attribute \u00b6 value : str = None InputMonthRange \u00b6 Bases: InputDateRange \u6708\u4efd\u8303\u56f4 Attributes \u00b6 type class-attribute \u00b6 type : str = 'input-month-range' InputNumber \u00b6 Bases: FormItem \u6570\u5b57\u8f93\u5165\u6846 Attributes \u00b6 kilobitSeparator class-attribute \u00b6 kilobitSeparator : bool = None max class-attribute \u00b6 max : Union [ int , MSAUITemplate ] = None min class-attribute \u00b6 min : Union [ int , MSAUITemplate ] = None precision class-attribute \u00b6 precision : int = None prefix class-attribute \u00b6 prefix : str = None showSteps class-attribute \u00b6 showSteps : bool = None step class-attribute \u00b6 step : int = None suffix class-attribute \u00b6 suffix : str = None type class-attribute \u00b6 type : str = 'input-number' InputPassword \u00b6 Bases: InputText \u5bc6\u7801\u8f93\u6846 Attributes \u00b6 type class-attribute \u00b6 type : str = 'input-password' InputRichText \u00b6 Bases: FormItem \u5bcc\u6587\u672c\u7f16\u8f91\u5668 Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ str ] = None options class-attribute \u00b6 options : dict = None receiver class-attribute \u00b6 receiver : MSA_UI_API = None saveAsUbb class-attribute \u00b6 saveAsUbb : bool = None size class-attribute \u00b6 size : str = None type class-attribute \u00b6 type : str = 'input-rich-text' vendor class-attribute \u00b6 vendor : str = None videoReceiver class-attribute \u00b6 videoReceiver : MSA_UI_API = None InputTable \u00b6 Bases: FormItem \u8868\u683c Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None addBtnIcon class-attribute \u00b6 addBtnIcon : str = None addBtnLabel class-attribute \u00b6 addBtnLabel : str = None addable class-attribute \u00b6 addable : bool = None canAccessSuperData class-attribute \u00b6 canAccessSuperData : bool = None cancelBtnIcon class-attribute \u00b6 cancelBtnIcon : str = None cancelBtnLabel class-attribute \u00b6 cancelBtnLabel : str = None columns class-attribute \u00b6 columns : list = None confirmBtnIcon class-attribute \u00b6 confirmBtnIcon : str = None confirmBtnLabel class-attribute \u00b6 confirmBtnLabel : str = None copyBtnIcon class-attribute \u00b6 copyBtnIcon : str = None copyBtnLabel class-attribute \u00b6 copyBtnLabel : str = None deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None deleteBtnIcon class-attribute \u00b6 deleteBtnIcon : str = None deleteBtnLabel class-attribute \u00b6 deleteBtnLabel : str = None editBtnIcon class-attribute \u00b6 editBtnIcon : str = None editBtnLabel class-attribute \u00b6 editBtnLabel : str = None editable class-attribute \u00b6 editable : bool = None needConfirm class-attribute \u00b6 needConfirm : bool = None perPage class-attribute \u00b6 perPage : int = None removable class-attribute \u00b6 removable : bool = None showAddBtn class-attribute \u00b6 showAddBtn : bool = None showIndex class-attribute \u00b6 showIndex : bool = None strictMode class-attribute \u00b6 strictMode : bool = None type class-attribute \u00b6 type : str = 'input-table' updateApi class-attribute \u00b6 updateApi : MSA_UI_API = None InputText \u00b6 Bases: FormItem \u8f93\u5165\u6846 Attributes \u00b6 addOn class-attribute \u00b6 addOn : MSAUISchemaNode = None autoComplete class-attribute \u00b6 autoComplete : Union [ str , MSA_UI_API ] = None clearable class-attribute \u00b6 clearable : bool = None creatable class-attribute \u00b6 creatable : bool = None delimiter class-attribute \u00b6 delimiter : str = None extractValue class-attribute \u00b6 extractValue : bool = None joinValues class-attribute \u00b6 joinValues : bool = None labelField class-attribute \u00b6 labelField : str = None maxLength class-attribute \u00b6 maxLength : int = None minLength class-attribute \u00b6 minLength : int = None multiple class-attribute \u00b6 multiple : bool = None options class-attribute \u00b6 options : Union [ List [ str ], List [ dict ]] = None prefix class-attribute \u00b6 prefix : str = None resetValue class-attribute \u00b6 resetValue : str = None showCounter class-attribute \u00b6 showCounter : bool = None source class-attribute \u00b6 source : Union [ str , MSA_UI_API ] = None suffix class-attribute \u00b6 suffix : str = None trimContents class-attribute \u00b6 trimContents : bool = None type class-attribute \u00b6 type : str = 'input-text' valueField class-attribute \u00b6 valueField : str = None InputTime \u00b6 Bases: FormItem \u65f6\u95f4 Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None placeholder class-attribute \u00b6 placeholder : str = None timeConstraints class-attribute \u00b6 timeConstraints : dict = None timeFormat class-attribute \u00b6 timeFormat : str = None type class-attribute \u00b6 type : str = 'input-time' value class-attribute \u00b6 value : str = None InputTimeRange \u00b6 Bases: FormItem \u65f6\u95f4\u8303\u56f4 Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None embed class-attribute \u00b6 embed : bool = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None placeholder class-attribute \u00b6 placeholder : str = None timeFormat class-attribute \u00b6 timeFormat : str = None type class-attribute \u00b6 type : str = 'input-time-range' InputTree \u00b6 Bases: FormItem \u6811\u5f62\u9009\u62e9\u6846 Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None addControls class-attribute \u00b6 addControls : List [ FormItem ] = None autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None cascade class-attribute \u00b6 cascade : bool = None creatable class-attribute \u00b6 creatable : bool = None deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None delimiter class-attribute \u00b6 delimiter : str = None editApi class-attribute \u00b6 editApi : MSA_UI_API = None editControls class-attribute \u00b6 editControls : List [ FormItem ] = None editable class-attribute \u00b6 editable : bool = None enableNodePath class-attribute \u00b6 enableNodePath : bool = None extractValue class-attribute \u00b6 extractValue : bool = None hideRoot class-attribute \u00b6 hideRoot : bool = None iconField class-attribute \u00b6 iconField : str = None initiallyOpen class-attribute \u00b6 initiallyOpen : bool = None joinValues class-attribute \u00b6 joinValues : bool = None labelField class-attribute \u00b6 labelField : str = None maxLength class-attribute \u00b6 maxLength : int = None minLength class-attribute \u00b6 minLength : int = None multiple class-attribute \u00b6 multiple : bool = None onlyChildren class-attribute \u00b6 onlyChildren : bool = None options class-attribute \u00b6 options : MSAOptionsNode = None pathSeparator class-attribute \u00b6 pathSeparator : str = None removable class-attribute \u00b6 removable : bool = None rootCreatable class-attribute \u00b6 rootCreatable : bool = None rootCreateTip class-attribute \u00b6 rootCreateTip : str = None rootLabel class-attribute \u00b6 rootLabel : bool = None searchable class-attribute \u00b6 searchable : bool = None selectFirst class-attribute \u00b6 selectFirst : bool = None showIcon class-attribute \u00b6 showIcon : bool = None showRadio class-attribute \u00b6 showRadio : bool = None source class-attribute \u00b6 source : MSA_UI_API = None treeContainerClassName class-attribute \u00b6 treeContainerClassName : str = None type class-attribute \u00b6 type : str = 'input-tree' unfoldedLevel class-attribute \u00b6 unfoldedLevel : int = None valueField class-attribute \u00b6 valueField : str = None withChildren class-attribute \u00b6 withChildren : bool = None Json \u00b6 Bases: MSAUINode JSON \u5c55\u793a\u7ec4\u4ef6 Attributes \u00b6 className class-attribute \u00b6 className : str = None displayDataTypes class-attribute \u00b6 displayDataTypes : bool = None jsonTheme class-attribute \u00b6 jsonTheme : str = None levelExpand class-attribute \u00b6 levelExpand : int = None mutable class-attribute \u00b6 mutable : bool = None placeholder class-attribute \u00b6 placeholder : str = None source class-attribute \u00b6 source : str = None type class-attribute \u00b6 type : str = 'json' value class-attribute \u00b6 value : Union [ dict , str ] = None Link \u00b6 Bases: MSAUINode \u94fe\u63a5 Attributes \u00b6 blank class-attribute \u00b6 blank : bool = None body class-attribute \u00b6 body : str = None disabled class-attribute \u00b6 disabled : bool = None href class-attribute \u00b6 href : str = None htmlTarget class-attribute \u00b6 htmlTarget : str = None icon class-attribute \u00b6 icon : str = None rightIcon class-attribute \u00b6 rightIcon : str = None title class-attribute \u00b6 title : str = None type class-attribute \u00b6 type : str = 'link' LocationPicker \u00b6 Bases: FormItem \u5730\u7406\u4f4d\u7f6e Attributes \u00b6 ak class-attribute \u00b6 ak : str = Ellipsis clearable class-attribute \u00b6 clearable : bool = None coordinatesType class-attribute \u00b6 coordinatesType : str = None placeholder class-attribute \u00b6 placeholder : str = None type class-attribute \u00b6 type : str = 'location-picker' vendor class-attribute \u00b6 vendor : str = 'baidu' Log \u00b6 Bases: MSAUINode \u5b9e\u65f6\u65e5\u5fd7 Attributes \u00b6 autoScroll class-attribute \u00b6 autoScroll : bool = None className class-attribute \u00b6 className : str = None encoding class-attribute \u00b6 encoding : str = None height class-attribute \u00b6 height : int = None placeholder class-attribute \u00b6 placeholder : str = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'log' Mapping \u00b6 Bases: MSAUINode \u6620\u5c04 Attributes \u00b6 className class-attribute \u00b6 className : str = None map class-attribute \u00b6 map : dict = None placeholder class-attribute \u00b6 placeholder : str = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'mapping' Markdown \u00b6 Bases: MSAUINode Markdown\u6e32\u67d3 Attributes \u00b6 className class-attribute \u00b6 className : str = None name class-attribute \u00b6 name : str = None options class-attribute \u00b6 options : dict = None src class-attribute \u00b6 src : MSA_UI_API = None type class-attribute \u00b6 type : str = 'markdown' value class-attribute \u00b6 value : Union [ int , str ] = None Nav \u00b6 Bases: MSAUINode \u5bfc\u822a Attributes \u00b6 className class-attribute \u00b6 className : str = None deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None dragOnSameLevel class-attribute \u00b6 dragOnSameLevel : bool = None draggable class-attribute \u00b6 draggable : bool = None itemActions class-attribute \u00b6 itemActions : MSAUISchemaNode = None itemBadge class-attribute \u00b6 itemBadge : Badge = None links class-attribute \u00b6 links : list = None saveOrderApi class-attribute \u00b6 saveOrderApi : MSA_UI_API = None source class-attribute \u00b6 source : MSA_UI_API = None stacked class-attribute \u00b6 stacked : bool = True type class-attribute \u00b6 type : str = 'nav' Classes \u00b6 Link \u00b6 Bases: MSAUINode Attributes \u00b6 active class-attribute \u00b6 active : bool = None activeOn class-attribute \u00b6 activeOn : MSAUIExpression = None children class-attribute \u00b6 children : List [ Link ] = None defer class-attribute \u00b6 defer : bool = None deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None icon class-attribute \u00b6 icon : str = None label class-attribute \u00b6 label : str = None target class-attribute \u00b6 target : str = None to class-attribute \u00b6 to : MSAUITemplate = None unfolded class-attribute \u00b6 unfolded : bool = None NestedSelect \u00b6 Bases: Select \u7ea7\u8054\u9009\u62e9\u5668 Attributes \u00b6 cascade class-attribute \u00b6 cascade : bool = None hideNodePathLabel class-attribute \u00b6 hideNodePathLabel : bool = None noResultsText class-attribute \u00b6 noResultsText : str = None onlyChildren class-attribute \u00b6 onlyChildren : bool = None onlyLeaf class-attribute \u00b6 onlyLeaf : bool = None searchPromptText class-attribute \u00b6 searchPromptText : str = None type class-attribute \u00b6 type : str = 'nested-select' withChildren class-attribute \u00b6 withChildren : bool = None Page \u00b6 Bases: MSAUINode \u9875\u9762 Attributes \u00b6 __default_template_path__ class-attribute \u00b6 __default_template_path__ : str = ( f \" { BASE_DIR } /templates/page.html\" ) aside class-attribute \u00b6 aside : MSAUISchemaNode = None asideClassName class-attribute \u00b6 asideClassName : str = None asideMaxWidth class-attribute \u00b6 asideMaxWidth : int = None asideMinWidth class-attribute \u00b6 asideMinWidth : int = None asideResizor class-attribute \u00b6 asideResizor : bool = None body class-attribute \u00b6 body : MSAUISchemaNode = None bodyClassName class-attribute \u00b6 bodyClassName : str = None className class-attribute \u00b6 className : str = None cssVars class-attribute \u00b6 cssVars : dict = None headerClassName class-attribute \u00b6 headerClassName : str = None initApi class-attribute \u00b6 initApi : MSA_UI_API = None initFetch class-attribute \u00b6 initFetch : bool = None initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None interval class-attribute \u00b6 interval : int = None regions class-attribute \u00b6 regions : List [ str ] = None remark class-attribute \u00b6 remark : Remark = None silentPolling class-attribute \u00b6 silentPolling : bool = None stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : MSAUIExpression = None subTitle class-attribute \u00b6 subTitle : MSAUISchemaNode = None title class-attribute \u00b6 title : MSAUISchemaNode = None toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None toolbarClassName class-attribute \u00b6 toolbarClassName : str = None type class-attribute \u00b6 type : str = 'page' Functions \u00b6 msa_ui_html \u00b6 msa_ui_html ( template_path : str = \"\" , locale : str = \"zh_CN\" , site_title : str = \"Admin\" , site_icon : str = \"\" , ) PageSchema \u00b6 Bases: MSAUINode Attributes \u00b6 children class-attribute \u00b6 children : List [ PageSchema ] = None className class-attribute \u00b6 className : str = None icon class-attribute \u00b6 icon : str = 'fa fa-flash' isDefaultPage class-attribute \u00b6 isDefaultPage : Union [ str , bool ] = None label class-attribute \u00b6 label : str = None link class-attribute \u00b6 link : str = None redirect class-attribute \u00b6 redirect : str = None rewrite class-attribute \u00b6 rewrite : str = None schemaApi class-attribute \u00b6 schemaApi : MSA_UI_API = None schema_ class-attribute \u00b6 schema_ : Union [ Page , Iframe ] = Field ( None , alias = 'schema' ) sort class-attribute \u00b6 sort : int = None url class-attribute \u00b6 url : str = None visible class-attribute \u00b6 visible : str = None Functions \u00b6 as_tabs_item \u00b6 as_tabs_item ( tabs_extra : Dict [ str , Any ] = None , item_extra : Dict [ str , Any ] = None , ) Panel \u00b6 Bases: MSAUINode Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None actionsClassName class-attribute \u00b6 actionsClassName : str = None affixFooter class-attribute \u00b6 affixFooter : bool = None body class-attribute \u00b6 body : MSAUISchemaNode = None bodyClassName class-attribute \u00b6 bodyClassName : str = None className class-attribute \u00b6 className : str = None footer class-attribute \u00b6 footer : MSAUISchemaNode = None footerClassName class-attribute \u00b6 footerClassName : str = None header class-attribute \u00b6 header : MSAUISchemaNode = None headerClassName class-attribute \u00b6 headerClassName : str = None title class-attribute \u00b6 title : MSAUISchemaNode = None type class-attribute \u00b6 type : str = 'panel' Picker \u00b6 Bases: FormItem \u5217\u8868\u9009\u62e9\u5668 Attributes \u00b6 autoFill class-attribute \u00b6 autoFill : dict = None delimiter class-attribute \u00b6 delimiter : bool = None embed class-attribute \u00b6 embed : bool = None extractValue class-attribute \u00b6 extractValue : bool = None joinValues class-attribute \u00b6 joinValues : bool = None labelField class-attribute \u00b6 labelField : str = None modalMode class-attribute \u00b6 modalMode : Literal [ dialog , drawer ] = None multiple class-attribute \u00b6 multiple : bool = None options class-attribute \u00b6 options : MSAOptionsNode = None pickerSchema class-attribute \u00b6 pickerSchema : Union [ CRUD , MSAUISchemaNode ] = None size class-attribute \u00b6 size : Union [ str , SizeEnum ] = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'picker' valueField class-attribute \u00b6 valueField : str = None Portlet \u00b6 Bases: Tabs Attributes \u00b6 contentClassName class-attribute \u00b6 contentClassName : str = None description class-attribute \u00b6 description : MSAUITemplate = None divider class-attribute \u00b6 divider : bool = None hideHeader class-attribute \u00b6 hideHeader : bool = None style class-attribute \u00b6 style : Union [ str , dict ] = None tabs class-attribute \u00b6 tabs : List [ Item ] = None type class-attribute \u00b6 type : str = 'portlet' Classes \u00b6 Item \u00b6 Bases: Tabs . Item Attributes \u00b6 toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None Property \u00b6 Bases: MSAUINode \u5c5e\u6027\u8868 Attributes \u00b6 className class-attribute \u00b6 className : str = None column class-attribute \u00b6 column : int = None contentStyle class-attribute \u00b6 contentStyle : dict = None items class-attribute \u00b6 items : List [ Item ] = None labelStyle class-attribute \u00b6 labelStyle : dict = None mode class-attribute \u00b6 mode : str = None separator class-attribute \u00b6 separator : str = None source class-attribute \u00b6 source : MSAUITemplate = None style class-attribute \u00b6 style : dict = None title class-attribute \u00b6 title : str = None type class-attribute \u00b6 type : str = 'property' Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 content class-attribute \u00b6 content : MSAUITemplate = None hiddenOn class-attribute \u00b6 hiddenOn : MSAUIExpression = None label class-attribute \u00b6 label : MSAUITemplate = None span class-attribute \u00b6 span : int = None visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None QRCode \u00b6 Bases: MSAUINode \u4e8c\u7ef4\u7801 Attributes \u00b6 backgroundColor class-attribute \u00b6 backgroundColor : str = None className class-attribute \u00b6 className : str = None codeSize class-attribute \u00b6 codeSize : int = None foregroundColor class-attribute \u00b6 foregroundColor : str = None level class-attribute \u00b6 level : str = None qrcodeClassName class-attribute \u00b6 qrcodeClassName : str = None type class-attribute \u00b6 type : str = 'qr-code' value class-attribute \u00b6 value : MSAUITemplate Radios \u00b6 Bases: FormItem \u5355\u9009\u6846 Attributes \u00b6 autoFill class-attribute \u00b6 autoFill : dict = None columnsCount class-attribute \u00b6 columnsCount : int = None inline class-attribute \u00b6 inline : bool = None labelField class-attribute \u00b6 labelField : bool = None options class-attribute \u00b6 options : List [ Union [ dict , str ]] = None selectFirst class-attribute \u00b6 selectFirst : bool = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'radios' valueField class-attribute \u00b6 valueField : bool = None Remark \u00b6 Bases: MSAUINode \u6807\u8bb0 Attributes \u00b6 className class-attribute \u00b6 className : str = None content class-attribute \u00b6 content : str = None icon class-attribute \u00b6 icon : str = None placement class-attribute \u00b6 placement : str = None trigger class-attribute \u00b6 trigger : str = None type class-attribute \u00b6 type : str = 'remark' Select \u00b6 Bases: FormItem \u4e0b\u62c9\u6846 Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None addControls class-attribute \u00b6 addControls : List [ FormItem ] = None autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None autoFill class-attribute \u00b6 autoFill : dict = None checkAll class-attribute \u00b6 checkAll : bool = None checkAllBySearch class-attribute \u00b6 checkAllBySearch : bool = None checkAllLabel class-attribute \u00b6 checkAllLabel : str = None clearable class-attribute \u00b6 clearable : bool = None columns class-attribute \u00b6 columns : List [ dict ] = None creatable class-attribute \u00b6 creatable : bool = None createBtnLabel class-attribute \u00b6 createBtnLabel : str = None defaultCheckAll class-attribute \u00b6 defaultCheckAll : bool = None deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None delimiter class-attribute \u00b6 delimiter : Union [ bool , str ] = None editApi class-attribute \u00b6 editApi : MSA_UI_API = None editControls class-attribute \u00b6 editControls : List [ FormItem ] = None editable class-attribute \u00b6 editable : bool = None extractValue class-attribute \u00b6 extractValue : bool = None hideSelected class-attribute \u00b6 hideSelected : bool = None joinValues class-attribute \u00b6 joinValues : bool = None labelField class-attribute \u00b6 labelField : str = None leftMode class-attribute \u00b6 leftMode : str = None leftOptions class-attribute \u00b6 leftOptions : List [ dict ] = None menuTpl class-attribute \u00b6 menuTpl : str = None mobileClassName class-attribute \u00b6 mobileClassName : str = None multiple class-attribute \u00b6 multiple : bool = None options class-attribute \u00b6 options : MSAOptionsNode = None removable class-attribute \u00b6 removable : bool = None rightMode class-attribute \u00b6 rightMode : str = None searchResultMode class-attribute \u00b6 searchResultMode : str = None searchable class-attribute \u00b6 searchable : bool = None selectMode class-attribute \u00b6 selectMode : str = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'select' valueField class-attribute \u00b6 valueField : str = None Service \u00b6 Bases: MSAUINode \u529f\u80fd\u578b\u5bb9\u5668 Attributes \u00b6 api class-attribute \u00b6 api : MSA_UI_API = None body class-attribute \u00b6 body : MSAUISchemaNode = None className class-attribute \u00b6 className : str = None data class-attribute \u00b6 data : dict = None dataProvider class-attribute \u00b6 dataProvider : str = None initFetch class-attribute \u00b6 initFetch : bool = None initFetchSchema class-attribute \u00b6 initFetchSchema : bool = None interval class-attribute \u00b6 interval : int = None messages class-attribute \u00b6 messages : dict = None name class-attribute \u00b6 name : str = None schemaApi class-attribute \u00b6 schemaApi : MSA_UI_API = None silentPolling class-attribute \u00b6 silentPolling : bool = None stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : MSAUIExpression = None type class-attribute \u00b6 type : str = 'service' ws class-attribute \u00b6 ws : str = None Spinner \u00b6 Bases: MSAUINode \u52a0\u8f7d\u4e2d Attributes \u00b6 type class-attribute \u00b6 type : str = 'spinner' Static \u00b6 Bases: FormItem \u9759\u6001\u5c55\u793a/\u6807\u7b7e Attributes \u00b6 type class-attribute \u00b6 type : str = 'static' Classes \u00b6 Datetime \u00b6 Bases: FormItem \u663e\u793a\u65e5\u671f Attributes \u00b6 type class-attribute \u00b6 type : str = 'static-datetime' value class-attribute \u00b6 value : Union [ int , str ] Json \u00b6 Bases: FormItem Attributes \u00b6 type class-attribute \u00b6 type : str = 'static-json' value class-attribute \u00b6 value : Union [ dict , str ] Status \u00b6 Bases: MSAUINode \u72b6\u6001 Attributes \u00b6 className class-attribute \u00b6 className : str = None labelMap class-attribute \u00b6 labelMap : dict = None map class-attribute \u00b6 map : dict = None placeholder class-attribute \u00b6 placeholder : str = None type class-attribute \u00b6 type : str = 'status' Switch \u00b6 Bases: FormItem \u5f00\u5173 Attributes \u00b6 falseValue class-attribute \u00b6 falseValue : Any = None offText class-attribute \u00b6 offText : str = None onText class-attribute \u00b6 onText : str = None option class-attribute \u00b6 option : str = None trueValue class-attribute \u00b6 trueValue : Any = None type class-attribute \u00b6 type : str = 'switch' Table \u00b6 Bases: MSAUINode \u8868\u683c Attributes \u00b6 affixHeader class-attribute \u00b6 affixHeader : bool = None affixRow class-attribute \u00b6 affixRow : list = None autoFillHeight class-attribute \u00b6 autoFillHeight : bool = None checkOnItemClick class-attribute \u00b6 checkOnItemClick : bool = None className class-attribute \u00b6 className : str = None columns class-attribute \u00b6 columns : List [ Union [ TableColumn , MSAUISchemaNode ]] = None columnsTogglable class-attribute \u00b6 columnsTogglable : Union [ str , bool ] = None combineNum class-attribute \u00b6 combineNum : int = None footable class-attribute \u00b6 footable : Union [ bool , dict ] = None footerClassName class-attribute \u00b6 footerClassName : str = None headerClassName class-attribute \u00b6 headerClassName : str = None itemActions class-attribute \u00b6 itemActions : List [ Action ] = None itemBadge class-attribute \u00b6 itemBadge : Badge = None itemCheckableOn class-attribute \u00b6 itemCheckableOn : MSAUIExpression = None itemDraggableOn class-attribute \u00b6 itemDraggableOn : MSAUIExpression = None placeholder class-attribute \u00b6 placeholder : str = None prefixRow class-attribute \u00b6 prefixRow : list = None rowClassName class-attribute \u00b6 rowClassName : str = None rowClassNameExpr class-attribute \u00b6 rowClassNameExpr : MSAUITemplate = None source class-attribute \u00b6 source : str = None tableClassName class-attribute \u00b6 tableClassName : str = None title class-attribute \u00b6 title : str = None toolbarClassName class-attribute \u00b6 toolbarClassName : str = None type class-attribute \u00b6 type : str = 'table' TableCRUD \u00b6 Bases: CRUD , Table \u8868\u683cCRUD TableColumn \u00b6 Bases: MSAUINode \u5217\u914d\u7f6e Attributes \u00b6 breakpoint class-attribute \u00b6 breakpoint : str = None copyable class-attribute \u00b6 copyable : Union [ bool , dict ] = None fixed class-attribute \u00b6 fixed : str = None label class-attribute \u00b6 label : MSAUITemplate = None name class-attribute \u00b6 name : str = None popOver class-attribute \u00b6 popOver : Union [ bool , dict ] = None quickEdit class-attribute \u00b6 quickEdit : Union [ bool , dict ] = None remark class-attribute \u00b6 remark : Remark = None searchable class-attribute \u00b6 searchable : Union [ bool , MSAUISchemaNode ] = None sortable class-attribute \u00b6 sortable : bool = None tpl class-attribute \u00b6 tpl : MSAUITemplate = None type class-attribute \u00b6 type : str = None width class-attribute \u00b6 width : Union [ str , int ] = None Tabs \u00b6 Bases: MSAUINode Attributes \u00b6 addBtnText class-attribute \u00b6 addBtnText : str = None addable class-attribute \u00b6 addable : bool = None className class-attribute \u00b6 className : str = None closable class-attribute \u00b6 closable : bool = None draggable class-attribute \u00b6 draggable : bool = None editable class-attribute \u00b6 editable : bool = None mode class-attribute \u00b6 mode : str = None mountOnEnter class-attribute \u00b6 mountOnEnter : bool = None scrollable class-attribute \u00b6 scrollable : bool = None showTip class-attribute \u00b6 showTip : bool = None showTipClassName class-attribute \u00b6 showTipClassName : str = None sidePosition class-attribute \u00b6 sidePosition : str = None source class-attribute \u00b6 source : str = None tabs class-attribute \u00b6 tabs : List [ Item ] = None tabsClassName class-attribute \u00b6 tabsClassName : str = None tabsMode class-attribute \u00b6 tabsMode : TabsModeEnum = None toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None toolbarClassName class-attribute \u00b6 toolbarClassName : str = None type class-attribute \u00b6 type : str = 'tabs' unmountOnExit class-attribute \u00b6 unmountOnExit : bool = None Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 className class-attribute \u00b6 className : str = None closable class-attribute \u00b6 closable : bool = None disabled class-attribute \u00b6 disabled : bool = None hash class-attribute \u00b6 hash : str = None icon class-attribute \u00b6 icon : Union [ str , Icon ] = None iconPosition class-attribute \u00b6 iconPosition : str = None reload class-attribute \u00b6 reload : bool = None tab class-attribute \u00b6 tab : MSAUISchemaNode = None title class-attribute \u00b6 title : str = None unmountOnExit class-attribute \u00b6 unmountOnExit : bool = None TabsTransfer \u00b6 Bases: Transfer \u7ec4\u5408\u7a7f\u68ad\u5668 Attributes \u00b6 type class-attribute \u00b6 type : str = 'tabs-transfer' TabsTransferPicker \u00b6 Bases: Transfer \u7ec4\u5408\u7a7f\u68ad\u9009\u62e9\u5668 Attributes \u00b6 type class-attribute \u00b6 type : str = 'tabs-transfer-picker' Tasks \u00b6 Bases: MSAUINode \u4efb\u52a1\u64cd\u4f5c\u96c6\u5408 Attributes \u00b6 btnClassName class-attribute \u00b6 btnClassName : str = None btnText class-attribute \u00b6 btnText : str = None checkApi class-attribute \u00b6 checkApi : MSA_UI_API = None className class-attribute \u00b6 className : str = None interval class-attribute \u00b6 interval : int = None items class-attribute \u00b6 items : List [ Item ] = None operationLabel class-attribute \u00b6 operationLabel : str = None reSubmitApi class-attribute \u00b6 reSubmitApi : MSA_UI_API = None remarkLabel class-attribute \u00b6 remarkLabel : str = None retryBtnClassName class-attribute \u00b6 retryBtnClassName : str = None retryBtnText class-attribute \u00b6 retryBtnText : str = None statusLabel class-attribute \u00b6 statusLabel : str = None statusLabelMap class-attribute \u00b6 statusLabelMap : List [ str ] = None statusTextMap class-attribute \u00b6 statusTextMap : List [ str ] = None submitApi class-attribute \u00b6 submitApi : MSA_UI_API = None tableClassName class-attribute \u00b6 tableClassName : str = None taskNameLabel class-attribute \u00b6 taskNameLabel : str = None type class-attribute \u00b6 type : str = 'tasks' Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 key class-attribute \u00b6 key : str = None label class-attribute \u00b6 label : str = None remark class-attribute \u00b6 remark : str = None status class-attribute \u00b6 status : str = None Textarea \u00b6 Bases: FormItem \u591a\u884c\u6587\u672c\u8f93\u5165\u6846 Attributes \u00b6 maxLength class-attribute \u00b6 maxLength : int = None maxRows class-attribute \u00b6 maxRows : int = None minLength class-attribute \u00b6 minLength : int = None minRows class-attribute \u00b6 minRows : int = None readOnly class-attribute \u00b6 readOnly : bool = None showCounter class-attribute \u00b6 showCounter : bool = True trimContents class-attribute \u00b6 trimContents : bool = None type class-attribute \u00b6 type : str = 'textarea' Transfer \u00b6 Bases: FormItem \u7a7f\u68ad\u5668 Attributes \u00b6 columns class-attribute \u00b6 columns : List [ dict ] = None delimiter class-attribute \u00b6 delimiter : str = None extractValue class-attribute \u00b6 extractValue : bool = None joinValues class-attribute \u00b6 joinValues : bool = None leftMode class-attribute \u00b6 leftMode : str = None leftOptions class-attribute \u00b6 leftOptions : List [ dict ] = None menuTpl class-attribute \u00b6 menuTpl : MSAUISchemaNode = None options class-attribute \u00b6 options : MSAOptionsNode = None resultTitle class-attribute \u00b6 resultTitle : str = None rightMode class-attribute \u00b6 rightMode : str = None searchApi class-attribute \u00b6 searchApi : MSA_UI_API = None searchResultMode class-attribute \u00b6 searchResultMode : str = None searchable class-attribute \u00b6 searchable : bool = None selectMode class-attribute \u00b6 selectMode : str = None selectTitle class-attribute \u00b6 selectTitle : str = None sortable class-attribute \u00b6 sortable : bool = None source class-attribute \u00b6 source : MSA_UI_API = None statistics class-attribute \u00b6 statistics : bool = None type class-attribute \u00b6 type : Literal [ transfer , transfer - picker , tabs - transfer , tabs - transfer - picker , ] = \"transfer\" valueTpl class-attribute \u00b6 valueTpl : MSAUISchemaNode = None TransferPicker \u00b6 Bases: Transfer \u7a7f\u68ad\u9009\u62e9\u5668 Attributes \u00b6 type class-attribute \u00b6 type : str = 'transfer-picker' TreeSelect \u00b6 Bases: InputTree \u6811\u5f62\u9009\u62e9\u5668 Attributes \u00b6 hideNodePathLabel class-attribute \u00b6 hideNodePathLabel : bool = None type class-attribute \u00b6 type : str = 'tree-select' Validation \u00b6 Bases: MSABaseUIModel Attributes \u00b6 equals class-attribute \u00b6 equals : str = None equalsField class-attribute \u00b6 equalsField : str = None isAlpha class-attribute \u00b6 isAlpha : bool = None isAlphanumeric class-attribute \u00b6 isAlphanumeric : bool = None isEmail class-attribute \u00b6 isEmail : bool = None isFloat class-attribute \u00b6 isFloat : bool = None isId class-attribute \u00b6 isId : bool = None isInt class-attribute \u00b6 isInt : bool = None isJson class-attribute \u00b6 isJson : bool = None isLength class-attribute \u00b6 isLength : int = None isNumeric class-attribute \u00b6 isNumeric : bool = None isPhoneNumber class-attribute \u00b6 isPhoneNumber : bool = None isTelNumber class-attribute \u00b6 isTelNumber : bool = None isUrl class-attribute \u00b6 isUrl : bool = None isUrlPath class-attribute \u00b6 isUrlPath : bool = None isZipcode class-attribute \u00b6 isZipcode : bool = None matchRegexp class-attribute \u00b6 matchRegexp : str = None maxLength class-attribute \u00b6 maxLength : int = None maximum class-attribute \u00b6 maximum : int = None minLength class-attribute \u00b6 minLength : int = None minimum class-attribute \u00b6 minimum : int = None Video \u00b6 Bases: MSAUINode \u89c6\u9891 Attributes \u00b6 autoPlay class-attribute \u00b6 autoPlay : bool = None className class-attribute \u00b6 className : str = None isLive class-attribute \u00b6 isLive : bool = None muted class-attribute \u00b6 muted : bool = None poster class-attribute \u00b6 poster : str = None rates class-attribute \u00b6 rates : List [ float ] = None src class-attribute \u00b6 src : str = None type class-attribute \u00b6 type : str = 'video' videoType class-attribute \u00b6 videoType : str = None Wizard \u00b6 Bases: MSAUINode \u5411\u5bfc Attributes \u00b6 actionClassName class-attribute \u00b6 actionClassName : str = None actionFinishLabel class-attribute \u00b6 actionFinishLabel : str = None actionNextLabel class-attribute \u00b6 actionNextLabel : str = None actionNextSaveLabel class-attribute \u00b6 actionNextSaveLabel : str = None actionPrevLabel class-attribute \u00b6 actionPrevLabel : str = None api class-attribute \u00b6 api : MSA_UI_API = None className class-attribute \u00b6 className : str = None initApi class-attribute \u00b6 initApi : MSA_UI_API = None initFetch class-attribute \u00b6 initFetch : MSA_UI_API = None initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None mode class-attribute \u00b6 mode : str = None redirect class-attribute \u00b6 redirect : MSAUITemplate = None reload class-attribute \u00b6 reload : str = None startStep class-attribute \u00b6 startStep : int = None steps class-attribute \u00b6 steps : List [ Step ] = None target class-attribute \u00b6 target : str = None type class-attribute \u00b6 type : str = 'wizard' Classes \u00b6 Step \u00b6 Bases: MSAUINode Attributes \u00b6 api class-attribute \u00b6 api : MSA_UI_API = None body class-attribute \u00b6 body : List [ FormItem ] = None horizontal class-attribute \u00b6 horizontal : Horizontal = None initApi class-attribute \u00b6 initApi : MSA_UI_API = None initFetch class-attribute \u00b6 initFetch : bool = None initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None mode class-attribute \u00b6 mode : str = None title class-attribute \u00b6 title : str = None Functions \u00b6","title":"components"},{"location":"reference/admin/frontend/components/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/components/#adminfrontendcomponents","text":"","title":".admin.frontend.components"},{"location":"reference/admin/frontend/components/#admin.frontend.components-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.BASE_DIR","text":"BASE_DIR = os . path . dirname ( os . path . abspath ( __file__ ))","title":"BASE_DIR"},{"location":"reference/admin/frontend/components/#admin.frontend.components-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action","text":"Bases: MSAUINode","title":"Action"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.actionType","text":"actionType : str = None","title":"actionType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.active","text":"active : bool = None","title":"active"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.activeClassName","text":"activeClassName : str = None","title":"activeClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.activeLevel","text":"activeLevel : str = None","title":"activeLevel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.args","text":"args : Union [ dict , str ] = None","title":"args"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.block","text":"block : bool = None","title":"block"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.close","text":"close : Union [ bool , str ] = None","title":"close"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.componentId","text":"componentId : str = None","title":"componentId"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.confirmText","text":"confirmText : MSAUITemplate = None","title":"confirmText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.disabledTip","text":"disabledTip : str = None","title":"disabledTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.icon","text":"icon : str = None","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.iconClassName","text":"iconClassName : str = None","title":"iconClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.label","text":"label : str = None","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.level","text":"level : LevelEnum = None","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.onClick","text":"onClick : str = None","title":"onClick"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.reload","text":"reload : str = None","title":"reload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.required","text":"required : List [ str ] = None","title":"required"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.rightIcon","text":"rightIcon : str = None","title":"rightIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.rightIconClassName","text":"rightIconClassName : str = None","title":"rightIconClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.script","text":"script : str = None","title":"script"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.size","text":"size : str = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.tooltip","text":"tooltip : str = None","title":"tooltip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.tooltipPlacement","text":"tooltipPlacement : str = None","title":"tooltipPlacement"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.type","text":"type : str = 'button'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType","text":"","title":"ActionType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Ajax","text":"Bases: Action","title":"Ajax"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Ajax-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'ajax' api class-attribute \u00b6 api : MSA_UI_API = None feedback class-attribute \u00b6 feedback : Dialog = None messages class-attribute \u00b6 messages : dict = None redirect class-attribute \u00b6 redirect : MSAUITemplate = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Copy","text":"Bases: Action","title":"Copy"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Copy-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'copy' content class-attribute \u00b6 content : MSAUITemplate copyFormat class-attribute \u00b6 copyFormat : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Dialog","text":"Bases: Action","title":"Dialog"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Dialog-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'dialog' dialog class-attribute \u00b6 dialog : Union [ Dialog , Service , MSAUISchemaNode ] nextCondition class-attribute \u00b6 nextCondition : bool = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Drawer","text":"Bases: Action","title":"Drawer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Drawer-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'drawer' drawer class-attribute \u00b6 drawer : Union [ Drawer , Service , MSAUISchemaNode ]","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Link","text":"Bases: Action","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Link-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'link' link class-attribute \u00b6 link : str","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Url","text":"Bases: Action","title":"Url"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Url-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'url' blank class-attribute \u00b6 blank : bool = None url class-attribute \u00b6 url : str","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert","text":"Bases: MSAUINode \u63d0\u793a","title":"Alert"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.closeButtonClassName","text":"closeButtonClassName : str = None","title":"closeButtonClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.icon","text":"icon : str = None","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.iconClassName","text":"iconClassName : str = None","title":"iconClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.level","text":"level : str = None","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.showCloseButton","text":"showCloseButton : bool = None","title":"showCloseButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.showIcon","text":"showIcon : bool = None","title":"showIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.type","text":"type : str = 'alert'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav","text":"Bases: MSAUINode \u951a\u70b9\u5bfc\u822a","title":"AnchorNav"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.active","text":"active : str = None","title":"active"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.direction","text":"direction : str = None","title":"direction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.linkClassName","text":"linkClassName : str = None","title":"linkClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.links","text":"links : list = None","title":"links"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.sectionClassName","text":"sectionClassName : str = None","title":"sectionClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.type","text":"type : str = 'anchor-nav'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.Link","text":"Bases: MSAUINode","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.Link-attributes","text":"body class-attribute \u00b6 body : MSAUISchemaNode = None className class-attribute \u00b6 className : str = None href class-attribute \u00b6 href : str = None label class-attribute \u00b6 label : str = None title class-attribute \u00b6 title : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App","text":"Bases: Page \u591a\u9875\u5e94\u7528","title":"App"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.__default_template_path__","text":"__default_template_path__ : str = ( f \" { BASE_DIR } /templates/app.html\" )","title":"__default_template_path__"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.api","text":"api : MSA_UI_API = None","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.asideAfter","text":"asideAfter : str = None","title":"asideAfter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.asideBefore","text":"asideBefore : str = None","title":"asideBefore"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.brandName","text":"brandName : str = None","title":"brandName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.footer","text":"footer : str = None","title":"footer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.header","text":"header : str = None","title":"header"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.logo","text":"logo : str = '/msastatic/img/msa_logo.png'","title":"logo"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.pages","text":"pages : List [ PageSchema ] = None","title":"pages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.type","text":"type : str = 'app'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio","text":"Bases: MSAUINode \u97f3\u9891","title":"Audio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.autoPlay","text":"autoPlay : bool = None","title":"autoPlay"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.controls","text":"controls : List [ str ] = None","title":"controls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.inline","text":"inline : bool = None","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.loop","text":"loop : bool = None","title":"loop"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.rates","text":"rates : List [ float ] = None","title":"rates"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.src","text":"src : str = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.type","text":"type : str = 'audio'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar","text":"Bases: MSAUINode \u5934\u50cf","title":"Avatar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.fit","text":"fit : str = None","title":"fit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.icon","text":"icon : str = None","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.shape","text":"shape : str = None","title":"shape"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.size","text":"size : int = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.src","text":"src : str = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.style","text":"style : dict = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.text","text":"text : str = None","title":"text"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.type","text":"type : str = 'avatar'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge","text":"Bases: MSAUINode \u89d2\u6807","title":"Badge"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.animation","text":"animation : bool = None","title":"animation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.level","text":"level : str = None","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.mode","text":"mode : str = 'dot'","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.offset","text":"offset : int = None","title":"offset"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.overflowCount","text":"overflowCount : int = None","title":"overflowCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.position","text":"position : str = None","title":"position"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.size","text":"size : int = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.style","text":"style : dict = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.text","text":"text : Union [ str , int ] = None","title":"text"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.visibleOn","text":"visibleOn : MSAUIExpression = None","title":"visibleOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button","text":"Bases: FormItem \u6309\u94ae","title":"Button"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.actionType","text":"actionType : str = None","title":"actionType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.block","text":"block : bool = None","title":"block"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.disabled","text":"disabled : bool = None","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.href","text":"href : str = None","title":"href"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.level","text":"level : LevelEnum = None","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.loading","text":"loading : bool = None","title":"loading"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.loadingOn","text":"loadingOn : str = None","title":"loadingOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.size","text":"size : str = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.tooltip","text":"tooltip : Union [ str , dict ] = None","title":"tooltip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.tooltipPlacement","text":"tooltipPlacement : str = None","title":"tooltipPlacement"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.tooltipTrigger","text":"tooltipTrigger : str = None","title":"tooltipTrigger"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup","text":"Bases: MSAUINode \u6309\u94ae\u7ec4","title":"ButtonGroup"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.buttons","text":"buttons : List [ Action ]","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.type","text":"type : str = 'button-group'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.vertical","text":"vertical : bool = None","title":"vertical"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar","text":"Bases: MSAUINode \u6309\u94ae\u5de5\u5177\u680f","title":"ButtonToolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar.buttons","text":"buttons : List [ Action ]","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar.type","text":"type : str = 'button-toolbar'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD","text":"Bases: MSAUINode \u589e\u5220\u6539\u67e5","title":"CRUD"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.affixHeader","text":"affixHeader : bool = None","title":"affixHeader"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.alwaysShowPagination","text":"alwaysShowPagination : bool = None","title":"alwaysShowPagination"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.api","text":"api : MSA_UI_API = None","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.autoGenerateFilter","text":"autoGenerateFilter : bool = None","title":"autoGenerateFilter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.autoJumpToTopOnPagerChange","text":"autoJumpToTopOnPagerChange : bool = None","title":"autoJumpToTopOnPagerChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.bulkActions","text":"bulkActions : List [ Action ] = None","title":"bulkActions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.defaultChecked","text":"defaultChecked : bool = None","title":"defaultChecked"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.defaultParams","text":"defaultParams : dict = None","title":"defaultParams"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.draggable","text":"draggable : bool = None","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.filter","text":"filter : Union [ MSAUISchemaNode , Form ] = None","title":"filter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.filterDefaultVisible","text":"filterDefaultVisible : bool = None","title":"filterDefaultVisible"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.filterTogglable","text":"filterTogglable : bool = None","title":"filterTogglable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.footerToolbar","text":"footerToolbar : list = None","title":"footerToolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.headerToolbar","text":"headerToolbar : list = None","title":"headerToolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.hideQuickSaveBtn","text":"hideQuickSaveBtn : bool = None","title":"hideQuickSaveBtn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.initFetch","text":"initFetch : bool = None","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.interval","text":"interval : int = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.itemAction","text":"itemAction : Action = None","title":"itemAction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.itemDraggableOn","text":"itemDraggableOn : bool = None","title":"itemDraggableOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.keepItemSelectionOnPageChange","text":"keepItemSelectionOnPageChange : bool = None","title":"keepItemSelectionOnPageChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.labelTpl","text":"labelTpl : str = None","title":"labelTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.loadDataOnce","text":"loadDataOnce : bool = None","title":"loadDataOnce"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.loadDataOnceFetchOnFilter","text":"loadDataOnceFetchOnFilter : bool = None","title":"loadDataOnceFetchOnFilter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.messages","text":"messages : Messages = None","title":"messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.mode","text":"mode : str = None","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.orderField","text":"orderField : str = None","title":"orderField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.pageField","text":"pageField : str = None","title":"pageField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.perPage","text":"perPage : int = None","title":"perPage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.perPageAvailable","text":"perPageAvailable : List [ int ] = None","title":"perPageAvailable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.perPageField","text":"perPageField : str = None","title":"perPageField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.primaryField","text":"primaryField : str = None","title":"primaryField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.quickSaveApi","text":"quickSaveApi : MSA_UI_API = None","title":"quickSaveApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.quickSaveItemApi","text":"quickSaveItemApi : MSA_UI_API = None","title":"quickSaveItemApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.saveOrderApi","text":"saveOrderApi : MSA_UI_API = None","title":"saveOrderApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.silentPolling","text":"silentPolling : bool = None","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.source","text":"source : str = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : str = None","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.stopAutoRefreshWhenModalIsOpen","text":"stopAutoRefreshWhenModalIsOpen : bool = None","title":"stopAutoRefreshWhenModalIsOpen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.syncLocation","text":"syncLocation : bool = None","title":"syncLocation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.syncResponse2Query","text":"syncResponse2Query : bool = None","title":"syncResponse2Query"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.title","text":"title : str = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.type","text":"type : str = 'crud'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.Messages","text":"Bases: MSAUINode","title":"Messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.Messages-attributes","text":"fetchFailed class-attribute \u00b6 fetchFailed : str = None quickSaveFailed class-attribute \u00b6 quickSaveFailed : str = None quickSaveSuccess class-attribute \u00b6 quickSaveSuccess : str = None saveOrderFailed class-attribute \u00b6 saveOrderFailed : str = None saveOrderSuccess class-attribute \u00b6 saveOrderSuccess : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel","text":"Bases: MSAUINode \u8f6e\u64ad\u56fe","title":"Carousel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.animation","text":"animation : str = None","title":"animation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.auto","text":"auto : bool = True","title":"auto"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.controls","text":"controls : List [ str ] = None","title":"controls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.controlsTheme","text":"controlsTheme : str = None","title":"controlsTheme"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.duration","text":"duration : str = None","title":"duration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.height","text":"height : str = None","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.interval","text":"interval : str = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.itemSchema","text":"itemSchema : dict = None","title":"itemSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.options","text":"options : List [ Item ] = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.thumbMode","text":"thumbMode : str = None","title":"thumbMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.type","text":"type : str = 'carousel'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.width","text":"width : str = None","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.Item-attributes","text":"description class-attribute \u00b6 description : str = None descriptionClassName class-attribute \u00b6 descriptionClassName : str = None href class-attribute \u00b6 href : str = None html class-attribute \u00b6 html : str = None image class-attribute \u00b6 image : str = None imageClassName class-attribute \u00b6 imageClassName : str = None title class-attribute \u00b6 title : str = None titleClassName class-attribute \u00b6 titleClassName : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart","text":"Bases: MSAUINode \u56fe\u8868: https://echarts.apache.org/zh/option.html#title","title":"Chart"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.api","text":"api : MSA_UI_API = None","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.config","text":"config : Union [ dict , str ] = None","title":"config"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.height","text":"height : str = None","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.initFetch","text":"initFetch : bool = None","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.interval","text":"interval : int = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.replaceChartOption","text":"replaceChartOption : bool = None","title":"replaceChartOption"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.source","text":"source : dict = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.style","text":"style : dict = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.trackExpression","text":"trackExpression : str = None","title":"trackExpression"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.type","text":"type : str = 'chart'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.width","text":"width : str = None","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios","text":"Bases: Radios \u5355\u9009\u6846","title":"ChartRadios"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.chartValueField","text":"chartValueField : str = None","title":"chartValueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.config","text":"config : dict = None","title":"config"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.showTooltipOnHighlight","text":"showTooltipOnHighlight : bool = None","title":"showTooltipOnHighlight"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.type","text":"type : str = 'chart-radios'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox","text":"Bases: FormItem \u52fe\u9009\u6846","title":"Checkbox"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.falseValue","text":"falseValue : Any = None","title":"falseValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.option","text":"option : str = None","title":"option"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.trueValue","text":"trueValue : Any = None","title":"trueValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.type","text":"type : str = 'checkbox'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes","text":"Bases: FormItem \u590d\u9009\u6846","title":"Checkboxes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.addApi","text":"addApi : MSA_UI_API = None","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.addControls","text":"addControls : List [ FormItem ] = None","title":"addControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.checkAll","text":"checkAll : bool = None","title":"checkAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.columnsCount","text":"columnsCount : int = None","title":"columnsCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.creatable","text":"creatable : bool = None","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.createBtnLabel","text":"createBtnLabel : str = None","title":"createBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.defaultCheckAll","text":"defaultCheckAll : bool = None","title":"defaultCheckAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.deleteApi","text":"deleteApi : MSA_UI_API = None","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.editApi","text":"editApi : MSA_UI_API = None","title":"editApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.editControls","text":"editControls : List [ FormItem ] = None","title":"editControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.editable","text":"editable : bool = None","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.inline","text":"inline : bool = None","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.labelField","text":"labelField : str = None","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.options","text":"options : MSAOptionsNode = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.removable","text":"removable : bool = None","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.type","text":"type : str = 'checkboxes'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.valueField","text":"valueField : str = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code","text":"Bases: MSAUINode \u4ee3\u7801\u9ad8\u4eae","title":"Code"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.editorTheme","text":"editorTheme : str = None","title":"editorTheme"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.language","text":"language : str = None","title":"language"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.tabSize","text":"tabSize : int = None","title":"tabSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.type","text":"type : str = 'code'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.value","text":"value : str = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.wordWrap","text":"wordWrap : str = None","title":"wordWrap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnImage","text":"Bases: Image , TableColumn \u56fe\u7247\u5217","title":"ColumnImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnImages","text":"Bases: Images , TableColumn \u56fe\u7247\u96c6\u5217","title":"ColumnImages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation","text":"Bases: TableColumn \u64cd\u4f5c\u5217","title":"ColumnOperation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.buttons","text":"buttons : List [ Union [ Action , MSAUINode ]] = None","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.label","text":"label : MSAUITemplate = None","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.toggled","text":"toggled : bool = None","title":"toggled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.type","text":"type : str = 'operation'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo","text":"Bases: FormItem \u7ec4\u5408","title":"Combo"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.addButtonClassName","text":"addButtonClassName : str = None","title":"addButtonClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.addButtonText","text":"addButtonText : str = None","title":"addButtonText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.addable","text":"addable : bool = False","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.canAccessSuperData","text":"canAccessSuperData : bool = False","title":"canAccessSuperData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.conditions","text":"conditions : dict = None","title":"conditions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.deleteApi","text":"deleteApi : MSA_UI_API = None","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.deleteConfirmText","text":"deleteConfirmText : str = None","title":"deleteConfirmText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.draggable","text":"draggable : bool = False","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.draggableTip","text":"draggableTip : str = None","title":"draggableTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.flat","text":"flat : bool = False","title":"flat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.formClassName","text":"formClassName : str = None","title":"formClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.items","text":"items : List [ FormItem ] = None","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.joinValues","text":"joinValues : bool = True","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.minLength","text":"minLength : int = None","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.multiLine","text":"multiLine : bool = False","title":"multiLine"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.multiple","text":"multiple : bool = False","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.noBorder","text":"noBorder : bool = False","title":"noBorder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.nullable","text":"nullable : bool = False","title":"nullable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.removable","text":"removable : bool = False","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.scaffold","text":"scaffold : dict = {}","title":"scaffold"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.strictMode","text":"strictMode : bool = True","title":"strictMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.subFormMode","text":"subFormMode : str = None","title":"subFormMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.syncFields","text":"syncFields : List [ str ] = []","title":"syncFields"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.type","text":"type : str = 'combo'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.typeSwitchable","text":"typeSwitchable : bool = False","title":"typeSwitchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder","text":"Bases: FormItem \u7ec4\u5408\u6761\u4ef6","title":"ConditionBuilder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.fieldClassName","text":"fieldClassName : str = None","title":"fieldClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.fields","text":"fields : List [ Field ] = None","title":"fields"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.source","text":"source : str = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.type","text":"type : str = 'condition-builder'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Date","text":"Bases: Field \u65e5\u671f","title":"Date"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Date-attributes","text":"defaultValue class-attribute \u00b6 defaultValue : str = None format class-attribute \u00b6 format : str = None inputFormat class-attribute \u00b6 inputFormat : str = None type class-attribute \u00b6 type : str = 'date'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Datetime","text":"Bases: Date \u65e5\u671f\u65f6\u95f4","title":"Datetime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Datetime-attributes","text":"timeFormat class-attribute \u00b6 timeFormat : str = None type class-attribute \u00b6 type : str = 'datetime'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Field","text":"Bases: MSAUINode","title":"Field"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Field-attributes","text":"defaultOp class-attribute \u00b6 defaultOp : str = None label class-attribute \u00b6 label : str = None operators class-attribute \u00b6 operators : List [ str ] = None placeholder class-attribute \u00b6 placeholder : str = None type class-attribute \u00b6 type : str = 'text'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Number","text":"Bases: Field \u6570\u5b57","title":"Number"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Number-attributes","text":"maximum class-attribute \u00b6 maximum : float = None minimum class-attribute \u00b6 minimum : float = None step class-attribute \u00b6 step : float = None type class-attribute \u00b6 type : str = 'number'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Select","text":"Bases: Field \u4e0b\u62c9\u9009\u62e9","title":"Select"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Select-attributes","text":"autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None options class-attribute \u00b6 options : MSAOptionsNode = None searchable class-attribute \u00b6 searchable : bool = None source class-attribute \u00b6 source : MSA_UI_API = None type class-attribute \u00b6 type : str = 'select'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Text","text":"Bases: Field \u6587\u672c","title":"Text"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Time","text":"Bases: Date \u65f6\u95f4","title":"Time"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Time-attributes","text":"type class-attribute \u00b6 type : str = 'datetime'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom","text":"Bases: MSAUINode \u81ea\u5b9a\u4e49\u7ec4\u4ef6","title":"Custom"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.html","text":"html : str = None","title":"html"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.id","text":"id : str = None","title":"id"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.inline","text":"inline : bool = False","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.onMount","text":"onMount : str = None","title":"onMount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.onUnmount","text":"onUnmount : str = None","title":"onUnmount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.onUpdate","text":"onUpdate : str = None","title":"onUpdate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.type","text":"type : str = 'custom'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog","text":"Bases: MSAUINode \u5bf9\u8bdd\u6846","title":"Dialog"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.actions","text":"actions : List [ Action ] = None","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.bodyClassName","text":"bodyClassName : str = None","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.closeOnEsc","text":"closeOnEsc : bool = None","title":"closeOnEsc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.data","text":"data : dict = None","title":"data"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.disabled","text":"disabled : bool = None","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.showCloseButton","text":"showCloseButton : bool = None","title":"showCloseButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.showErrorMsg","text":"showErrorMsg : bool = None","title":"showErrorMsg"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.size","text":"size : Union [ str , SizeEnum ] = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.title","text":"title : MSAUISchemaNode = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.type","text":"type : str = 'dialog'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider","text":"Bases: MSAUINode","title":"Divider"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider.lineStyle","text":"lineStyle : str = None","title":"lineStyle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider.type","text":"type : str = 'divider'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer","text":"Bases: MSAUINode \u62bd\u5c49","title":"Drawer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.actions","text":"actions : List [ Action ] = None","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.bodyClassName","text":"bodyClassName : str = None","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.closeOnEsc","text":"closeOnEsc : bool = None","title":"closeOnEsc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.closeOnOutside","text":"closeOnOutside : bool = None","title":"closeOnOutside"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.data","text":"data : dict = None","title":"data"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.overlay","text":"overlay : bool = None","title":"overlay"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.position","text":"position : str = None","title":"position"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.resizable","text":"resizable : bool = None","title":"resizable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.size","text":"size : Union [ str , SizeEnum ] = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.title","text":"title : MSAUISchemaNode = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.type","text":"type : str = 'drawer'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor","text":"Bases: FormItem \u4ee3\u7801\u7f16\u8f91\u5668","title":"Editor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.allowFullscreen","text":"allowFullscreen : bool = None","title":"allowFullscreen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.language","text":"language : str = None","title":"language"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.options","text":"options : dict = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.size","text":"size : str = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.type","text":"type : str = 'editor'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex","text":"Bases: MSAUINode","title":"Flex"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.alignItems","text":"alignItems : str = None","title":"alignItems"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.items","text":"items : List [ MSAUISchemaNode ] = None","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.justify","text":"justify : str = None","title":"justify"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.style","text":"style : dict = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.type","text":"type : str = 'flex'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form","text":"Bases: MSAUINode \u8868\u5355","title":"Form"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.actions","text":"actions : List [ Action ] = None","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.actionsClassName","text":"actionsClassName : str = None","title":"actionsClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.api","text":"api : MSA_UI_API = None","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.asyncApi","text":"asyncApi : MSA_UI_API = None","title":"asyncApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.autoFocus","text":"autoFocus : bool = None","title":"autoFocus"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.body","text":"body : List [ Union [ FormItem , MSAUISchemaNode ]] = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.canAccessSuperData","text":"canAccessSuperData : bool = None","title":"canAccessSuperData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.checkInterval","text":"checkInterval : int = None","title":"checkInterval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.clearPersistDataAfterSubmit","text":"clearPersistDataAfterSubmit : bool = None","title":"clearPersistDataAfterSubmit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.columnCount","text":"columnCount : int = None","title":"columnCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.debug","text":"debug : bool = None","title":"debug"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.finishedField","text":"finishedField : Optional [ str ] = None","title":"finishedField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.horizontal","text":"horizontal : Horizontal = None","title":"horizontal"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initApi","text":"initApi : MSA_UI_API = None","title":"initApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initAsyncApi","text":"initAsyncApi : MSA_UI_API = None","title":"initAsyncApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initCheckInterval","text":"initCheckInterval : int = None","title":"initCheckInterval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initFetch","text":"initFetch : bool = None","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initFetchOn","text":"initFetchOn : str = None","title":"initFetchOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initFinishedField","text":"initFinishedField : Optional [ str ] = None","title":"initFinishedField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.interval","text":"interval : int = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.messages","text":"messages : Messages = None","title":"messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.mode","text":"mode : DisplayModeEnum = None","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.panelClassName","text":"panelClassName : str = None","title":"panelClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.persistData","text":"persistData : str = None","title":"persistData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.preventEnterSubmit","text":"preventEnterSubmit : bool = None","title":"preventEnterSubmit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.primaryField","text":"primaryField : str = None","title":"primaryField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.promptPageLeave","text":"promptPageLeave : bool = None","title":"promptPageLeave"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.redirect","text":"redirect : str = None","title":"redirect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.reload","text":"reload : str = None","title":"reload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.resetAfterSubmit","text":"resetAfterSubmit : bool = None","title":"resetAfterSubmit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.rules","text":"rules : list = None","title":"rules"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.silentPolling","text":"silentPolling : bool = False","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : str = None","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.submitOnChange","text":"submitOnChange : bool = None","title":"submitOnChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.submitOnInit","text":"submitOnInit : bool = None","title":"submitOnInit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.submitText","text":"submitText : Optional [ str ] = None","title":"submitText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.target","text":"target : str = None","title":"target"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.title","text":"title : Optional [ str ] = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.trimValues","text":"trimValues : bool = None","title":"trimValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.type","text":"type : str = 'form'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.wrapWithPanel","text":"wrapWithPanel : bool = None","title":"wrapWithPanel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.Messages","text":"Bases: MSAUINode","title":"Messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.Messages-attributes","text":"fetchFailed class-attribute \u00b6 fetchFailed : str = None fetchSuccess class-attribute \u00b6 fetchSuccess : str = None saveFailed class-attribute \u00b6 saveFailed : str = None saveSuccess class-attribute \u00b6 saveSuccess : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem","text":"Bases: MSAUINode \u8868\u5355\u9879\u901a\u7528","title":"FormItem"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.copyable","text":"copyable : Union [ bool , dict ] = None","title":"copyable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.description","text":"description : MSAUITemplate = None","title":"description"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.disabled","text":"disabled : bool = None","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.disabledOn","text":"disabledOn : MSAUIExpression = None","title":"disabledOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.inline","text":"inline : bool = None","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.inputClassName","text":"inputClassName : str = None","title":"inputClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.label","text":"label : MSAUITemplate = None","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.labelClassName","text":"labelClassName : str = None","title":"labelClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.labelRemark","text":"labelRemark : Remark = None","title":"labelRemark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.required","text":"required : bool = None","title":"required"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.requiredOn","text":"requiredOn : MSAUIExpression = None","title":"requiredOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.submitOnChange","text":"submitOnChange : bool = None","title":"submitOnChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.type","text":"type : str = 'input-text'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.validateApi","text":"validateApi : MSAUIExpression = None","title":"validateApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.validations","text":"validations : Union [ Validation , MSAUIExpression ] = None","title":"validations"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.value","text":"value : Union [ int , str ] = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.visible","text":"visible : MSAUIExpression = None","title":"visible"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.visibleOn","text":"visibleOn : MSAUIExpression = None","title":"visibleOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid","text":"Bases: MSAUINode","title":"Grid"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.align","text":"align : str = None","title":"align"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.columns","text":"columns : List [ MSAUISchemaNode ] = None","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.gap","text":"gap : str = None","title":"gap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.type","text":"type : str = 'grid'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.valign","text":"valign : str = None","title":"valign"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.Column","text":"Bases: MSAUINode","title":"Column"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.Column-attributes","text":"ClassName class-attribute \u00b6 ClassName : str = None body class-attribute \u00b6 body : List [ MSAUISchemaNode ] = None lg class-attribute \u00b6 lg : int = None md class-attribute \u00b6 md : int = None sm class-attribute \u00b6 sm : int = None valign class-attribute \u00b6 valign : str = None xs class-attribute \u00b6 xs : int = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group","text":"Bases: InputGroup \u8868\u5355\u9879\u7ec4","title":"Group"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.direction","text":"direction : str = None","title":"direction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.gap","text":"gap : str = None","title":"gap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.mode","text":"mode : DisplayModeEnum = None","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.type","text":"type : str = 'group'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Hidden","text":"Bases: FormItem \u9690\u85cf\u5b57\u6bb5","title":"Hidden"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Hidden-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Hidden.type","text":"type : str = 'hidden'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal","text":"Bases: MSAUINode","title":"Horizontal"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal.left","text":"left : int = None","title":"left"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal.offset","text":"offset : int = None","title":"offset"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal.right","text":"right : int = None","title":"right"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html","text":"Bases: MSAUINode Html Node","title":"Html"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html.html","text":"html : str","title":"html"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html.type","text":"type : str = 'html'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon","text":"Bases: MSAUINode \u56fe\u6807","title":"Icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon.icon","text":"icon : str = None","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon.type","text":"type : str = 'icon'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe","text":"Bases: MSAUINode Iframe","title":"Iframe"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.frameBorder","text":"frameBorder : list = None","title":"frameBorder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.height","text":"height : Union [ int , str ] = None","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.src","text":"src : str = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.style","text":"style : dict = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.type","text":"type : str = 'iframe'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.width","text":"width : Union [ int , str ] = None","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image","text":"Bases: MSAUINode \u56fe\u7247","title":"Image"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.defaultImage","text":"defaultImage : str = None","title":"defaultImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.enlargeAble","text":"enlargeAble : bool = None","title":"enlargeAble"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.enlargeCaption","text":"enlargeCaption : str = None","title":"enlargeCaption"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.enlargeTitle","text":"enlargeTitle : str = None","title":"enlargeTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.height","text":"height : int = None","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.href","text":"href : MSAUITemplate = None","title":"href"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.imageCaption","text":"imageCaption : str = None","title":"imageCaption"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.imageClassName","text":"imageClassName : str = None","title":"imageClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.imageMode","text":"imageMode : str = None","title":"imageMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.originalSrc","text":"originalSrc : str = None","title":"originalSrc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.src","text":"src : str = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.thumbClassName","text":"thumbClassName : str = None","title":"thumbClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.thumbMode","text":"thumbMode : str = None","title":"thumbMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.thumbRatio","text":"thumbRatio : str = None","title":"thumbRatio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.title","text":"title : str = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.type","text":"type : str = 'image'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.width","text":"width : int = None","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images","text":"Bases: MSAUINode \u56fe\u7247\u96c6","title":"Images"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.defaultImage","text":"defaultImage : str = None","title":"defaultImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.enlargeAble","text":"enlargeAble : bool = None","title":"enlargeAble"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.originalSrc","text":"originalSrc : str = None","title":"originalSrc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.source","text":"source : str = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.src","text":"src : str = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.thumbMode","text":"thumbMode : str = None","title":"thumbMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.thumbRatio","text":"thumbRatio : str = None","title":"thumbRatio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.type","text":"type : str = 'images'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.value","text":"value : Union [ str , List [ str ], List [ dict ]] = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray","text":"Bases: FormItem \u6570\u7ec4\u8f93\u5165\u6846","title":"InputArray"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.addButtonText","text":"addButtonText : str = None","title":"addButtonText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.addable","text":"addable : bool = None","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.draggable","text":"draggable : bool = False","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.draggableTip","text":"draggableTip : str = None","title":"draggableTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.items","text":"items : FormItem = None","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.minLength","text":"minLength : int = None","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.removable","text":"removable : bool = None","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.type","text":"type : str = 'input-array'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity","text":"Bases: FormItem \u57ce\u5e02\u9009\u62e9\u5668","title":"InputCity"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.allowCity","text":"allowCity : bool = None","title":"allowCity"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.allowDistrict","text":"allowDistrict : bool = None","title":"allowDistrict"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.searchable","text":"searchable : bool = None","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.type","text":"type : str = 'location-city'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor","text":"Bases: FormItem \u989c\u8272\u9009\u62e9\u5668","title":"InputColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.allowCustomColor","text":"allowCustomColor : bool = None","title":"allowCustomColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.format","text":"format : str = None","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.presetColors","text":"presetColors : List [ str ] = None","title":"presetColors"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.resetValue","text":"resetValue : str = None","title":"resetValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.type","text":"type : str = 'input-color'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate","text":"Bases: FormItem \u65e5\u671f","title":"InputDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.closeOnSelect","text":"closeOnSelect : bool = None","title":"closeOnSelect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.embed","text":"embed : bool = None","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.format","text":"format : str = None","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.inputFormat","text":"inputFormat : str = None","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.largeMode","text":"largeMode : bool = None","title":"largeMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.maxDate","text":"maxDate : str = None","title":"maxDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.minDate","text":"minDate : str = None","title":"minDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.scheduleAction","text":"scheduleAction : MSAUISchemaNode = None","title":"scheduleAction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.scheduleClassNames","text":"scheduleClassNames : List [ str ] = None","title":"scheduleClassNames"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.schedules","text":"schedules : Union [ list , str ] = None","title":"schedules"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.shortcuts","text":"shortcuts : str = None","title":"shortcuts"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.timeConstraints","text":"timeConstraints : dict = None","title":"timeConstraints"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.type","text":"type : str = 'input-date'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.utc","text":"utc : bool = None","title":"utc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.value","text":"value : str = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange","text":"Bases: InputDatetimeRange \u65e5\u671f\u8303\u56f4","title":"InputDateRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange.maxDuration","text":"maxDuration : str = None","title":"maxDuration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange.minDuration","text":"minDuration : str = None","title":"minDuration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange.type","text":"type : str = 'input-date-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime","text":"Bases: FormItem \u65e5\u671f","title":"InputDatetime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.embed","text":"embed : bool = None","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.format","text":"format : str = None","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.inputFormat","text":"inputFormat : str = None","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.maxDate","text":"maxDate : str = None","title":"maxDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.minDate","text":"minDate : str = None","title":"minDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.shortcuts","text":"shortcuts : str = None","title":"shortcuts"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.timeConstraints","text":"timeConstraints : dict = None","title":"timeConstraints"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.type","text":"type : str = 'input-datetime'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.utc","text":"utc : bool = None","title":"utc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.value","text":"value : str = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange","text":"Bases: InputTimeRange \u65e5\u671f\u65f6\u95f4\u8303\u56f4","title":"InputDatetimeRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.maxDate","text":"maxDate : str = None","title":"maxDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.minDate","text":"minDate : str = None","title":"minDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.ranges","text":"ranges : Union [ str , List [ str ]] = None","title":"ranges"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.type","text":"type : str = 'input-datetime-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.utc","text":"utc : bool = None","title":"utc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel","text":"Bases: FormItem \u89e3\u6790 Excel","title":"InputExcel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.allSheets","text":"allSheets : bool = None","title":"allSheets"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.includeEmpty","text":"includeEmpty : bool = None","title":"includeEmpty"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.parseMode","text":"parseMode : str = None","title":"parseMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.plainText","text":"plainText : bool = None","title":"plainText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.type","text":"type : str = 'input-excel'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile","text":"Bases: FormItem \u6587\u4ef6\u4e0a\u4f20","title":"InputFile"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.accept","text":"accept : str = None","title":"accept"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.asBase64","text":"asBase64 : bool = None","title":"asBase64"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.asBlob","text":"asBlob : bool = None","title":"asBlob"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.autoFill","text":"autoFill : Dict [ str , str ] = None","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.autoUpload","text":"autoUpload : bool = None","title":"autoUpload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.btnLabel","text":"btnLabel : str = None","title":"btnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.chunkApi","text":"chunkApi : MSA_UI_API = None","title":"chunkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.chunkSize","text":"chunkSize : int = None","title":"chunkSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.downloadUrl","text":"downloadUrl : Union [ str , bool ] = None","title":"downloadUrl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.fileField","text":"fileField : str = None","title":"fileField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.finishChunkApi","text":"finishChunkApi : MSA_UI_API = None","title":"finishChunkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.hideUploadButton","text":"hideUploadButton : bool = None","title":"hideUploadButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.maxSize","text":"maxSize : int = None","title":"maxSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.multiple","text":"multiple : bool = None","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.nameField","text":"nameField : str = None","title":"nameField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.receiver","text":"receiver : MSA_UI_API = None","title":"receiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.startChunkApi","text":"startChunkApi : MSA_UI_API = None","title":"startChunkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.stateTextMap","text":"stateTextMap : dict = None","title":"stateTextMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.type","text":"type : str = 'input-file'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.urlField","text":"urlField : str = None","title":"urlField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.useChunk","text":"useChunk : bool = None","title":"useChunk"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.valueField","text":"valueField : str = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup","text":"Bases: FormItem \u8f93\u5165\u6846\u7ec4\u5408","title":"InputGroup"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup.body","text":"body : List [ FormItem ] = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup.type","text":"type : str = 'input-group'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage","text":"Bases: FormItem \u56fe\u7247\u4e0a\u4f20","title":"InputImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.accept","text":"accept : str = None","title":"accept"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.autoFill","text":"autoFill : Dict [ str , str ] = None","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.autoUpload","text":"autoUpload : bool = None","title":"autoUpload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.crop","text":"crop : Union [ bool , CropInfo ] = None","title":"crop"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.cropFormat","text":"cropFormat : str = None","title":"cropFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.cropQuality","text":"cropQuality : int = None","title":"cropQuality"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.fileField","text":"fileField : str = None","title":"fileField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.fixedSize","text":"fixedSize : bool = None","title":"fixedSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.fixedSizeClassName","text":"fixedSizeClassName : str = None","title":"fixedSizeClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.frameImage","text":"frameImage : str = None","title":"frameImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.hideUploadButton","text":"hideUploadButton : bool = None","title":"hideUploadButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.limit","text":"limit : Limit = None","title":"limit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.maxSize","text":"maxSize : int = None","title":"maxSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.multiple","text":"multiple : bool = None","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.receiver","text":"receiver : MSA_UI_API = None","title":"receiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.type","text":"type : str = 'input-image'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.CropInfo","text":"Bases: MSABaseUIModel","title":"CropInfo"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.CropInfo-attributes","text":"aspectRatio class-attribute \u00b6 aspectRatio : float = None rotatable class-attribute \u00b6 rotatable : bool = None scalable class-attribute \u00b6 scalable : bool = None viewMode class-attribute \u00b6 viewMode : int = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.Limit","text":"Bases: MSABaseUIModel","title":"Limit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.Limit-attributes","text":"aspectRatio class-attribute \u00b6 aspectRatio : float = None height class-attribute \u00b6 height : int = None maxHeight class-attribute \u00b6 maxHeight : int = None maxWidth class-attribute \u00b6 maxWidth : int = None minHeight class-attribute \u00b6 minHeight : int = None minWidth class-attribute \u00b6 minWidth : int = None width class-attribute \u00b6 width : int = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth","text":"Bases: FormItem \u6708\u4efd","title":"InputMonth"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.format","text":"format : str = None","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.inputFormat","text":"inputFormat : str = None","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.type","text":"type : str = 'input-month'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.value","text":"value : str = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonthRange","text":"Bases: InputDateRange \u6708\u4efd\u8303\u56f4","title":"InputMonthRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonthRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonthRange.type","text":"type : str = 'input-month-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber","text":"Bases: FormItem \u6570\u5b57\u8f93\u5165\u6846","title":"InputNumber"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.kilobitSeparator","text":"kilobitSeparator : bool = None","title":"kilobitSeparator"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.max","text":"max : Union [ int , MSAUITemplate ] = None","title":"max"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.min","text":"min : Union [ int , MSAUITemplate ] = None","title":"min"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.precision","text":"precision : int = None","title":"precision"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.prefix","text":"prefix : str = None","title":"prefix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.showSteps","text":"showSteps : bool = None","title":"showSteps"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.step","text":"step : int = None","title":"step"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.suffix","text":"suffix : str = None","title":"suffix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.type","text":"type : str = 'input-number'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputPassword","text":"Bases: InputText \u5bc6\u7801\u8f93\u6846","title":"InputPassword"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputPassword-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputPassword.type","text":"type : str = 'input-password'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText","text":"Bases: FormItem \u5bcc\u6587\u672c\u7f16\u8f91\u5668","title":"InputRichText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.buttons","text":"buttons : List [ str ] = None","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.options","text":"options : dict = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.receiver","text":"receiver : MSA_UI_API = None","title":"receiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.saveAsUbb","text":"saveAsUbb : bool = None","title":"saveAsUbb"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.size","text":"size : str = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.type","text":"type : str = 'input-rich-text'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.vendor","text":"vendor : str = None","title":"vendor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.videoReceiver","text":"videoReceiver : MSA_UI_API = None","title":"videoReceiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable","text":"Bases: FormItem \u8868\u683c","title":"InputTable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addApi","text":"addApi : MSA_UI_API = None","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addBtnIcon","text":"addBtnIcon : str = None","title":"addBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addBtnLabel","text":"addBtnLabel : str = None","title":"addBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addable","text":"addable : bool = None","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.canAccessSuperData","text":"canAccessSuperData : bool = None","title":"canAccessSuperData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.cancelBtnIcon","text":"cancelBtnIcon : str = None","title":"cancelBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.cancelBtnLabel","text":"cancelBtnLabel : str = None","title":"cancelBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.columns","text":"columns : list = None","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.confirmBtnIcon","text":"confirmBtnIcon : str = None","title":"confirmBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.confirmBtnLabel","text":"confirmBtnLabel : str = None","title":"confirmBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.copyBtnIcon","text":"copyBtnIcon : str = None","title":"copyBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.copyBtnLabel","text":"copyBtnLabel : str = None","title":"copyBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.deleteApi","text":"deleteApi : MSA_UI_API = None","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.deleteBtnIcon","text":"deleteBtnIcon : str = None","title":"deleteBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.deleteBtnLabel","text":"deleteBtnLabel : str = None","title":"deleteBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.editBtnIcon","text":"editBtnIcon : str = None","title":"editBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.editBtnLabel","text":"editBtnLabel : str = None","title":"editBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.editable","text":"editable : bool = None","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.needConfirm","text":"needConfirm : bool = None","title":"needConfirm"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.perPage","text":"perPage : int = None","title":"perPage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.removable","text":"removable : bool = None","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.showAddBtn","text":"showAddBtn : bool = None","title":"showAddBtn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.showIndex","text":"showIndex : bool = None","title":"showIndex"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.strictMode","text":"strictMode : bool = None","title":"strictMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.type","text":"type : str = 'input-table'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.updateApi","text":"updateApi : MSA_UI_API = None","title":"updateApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText","text":"Bases: FormItem \u8f93\u5165\u6846","title":"InputText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.addOn","text":"addOn : MSAUISchemaNode = None","title":"addOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.autoComplete","text":"autoComplete : Union [ str , MSA_UI_API ] = None","title":"autoComplete"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.creatable","text":"creatable : bool = None","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.labelField","text":"labelField : str = None","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.minLength","text":"minLength : int = None","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.multiple","text":"multiple : bool = None","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.options","text":"options : Union [ List [ str ], List [ dict ]] = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.prefix","text":"prefix : str = None","title":"prefix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.resetValue","text":"resetValue : str = None","title":"resetValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.showCounter","text":"showCounter : bool = None","title":"showCounter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.source","text":"source : Union [ str , MSA_UI_API ] = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.suffix","text":"suffix : str = None","title":"suffix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.trimContents","text":"trimContents : bool = None","title":"trimContents"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.type","text":"type : str = 'input-text'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.valueField","text":"valueField : str = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime","text":"Bases: FormItem \u65f6\u95f4","title":"InputTime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.format","text":"format : str = None","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.inputFormat","text":"inputFormat : str = None","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.timeConstraints","text":"timeConstraints : dict = None","title":"timeConstraints"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.timeFormat","text":"timeFormat : str = None","title":"timeFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.type","text":"type : str = 'input-time'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.value","text":"value : str = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange","text":"Bases: FormItem \u65f6\u95f4\u8303\u56f4","title":"InputTimeRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.embed","text":"embed : bool = None","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.format","text":"format : str = None","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.inputFormat","text":"inputFormat : str = None","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.timeFormat","text":"timeFormat : str = None","title":"timeFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.type","text":"type : str = 'input-time-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree","text":"Bases: FormItem \u6811\u5f62\u9009\u62e9\u6846","title":"InputTree"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.addApi","text":"addApi : MSA_UI_API = None","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.addControls","text":"addControls : List [ FormItem ] = None","title":"addControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.autoComplete","text":"autoComplete : MSA_UI_API = None","title":"autoComplete"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.cascade","text":"cascade : bool = None","title":"cascade"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.creatable","text":"creatable : bool = None","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.deferApi","text":"deferApi : MSA_UI_API = None","title":"deferApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.deleteApi","text":"deleteApi : MSA_UI_API = None","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.editApi","text":"editApi : MSA_UI_API = None","title":"editApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.editControls","text":"editControls : List [ FormItem ] = None","title":"editControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.editable","text":"editable : bool = None","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.enableNodePath","text":"enableNodePath : bool = None","title":"enableNodePath"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.hideRoot","text":"hideRoot : bool = None","title":"hideRoot"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.iconField","text":"iconField : str = None","title":"iconField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.initiallyOpen","text":"initiallyOpen : bool = None","title":"initiallyOpen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.labelField","text":"labelField : str = None","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.minLength","text":"minLength : int = None","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.multiple","text":"multiple : bool = None","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.onlyChildren","text":"onlyChildren : bool = None","title":"onlyChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.options","text":"options : MSAOptionsNode = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.pathSeparator","text":"pathSeparator : str = None","title":"pathSeparator"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.removable","text":"removable : bool = None","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.rootCreatable","text":"rootCreatable : bool = None","title":"rootCreatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.rootCreateTip","text":"rootCreateTip : str = None","title":"rootCreateTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.rootLabel","text":"rootLabel : bool = None","title":"rootLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.searchable","text":"searchable : bool = None","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.selectFirst","text":"selectFirst : bool = None","title":"selectFirst"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.showIcon","text":"showIcon : bool = None","title":"showIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.showRadio","text":"showRadio : bool = None","title":"showRadio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.treeContainerClassName","text":"treeContainerClassName : str = None","title":"treeContainerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.type","text":"type : str = 'input-tree'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.unfoldedLevel","text":"unfoldedLevel : int = None","title":"unfoldedLevel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.valueField","text":"valueField : str = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.withChildren","text":"withChildren : bool = None","title":"withChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json","text":"Bases: MSAUINode JSON \u5c55\u793a\u7ec4\u4ef6","title":"Json"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.displayDataTypes","text":"displayDataTypes : bool = None","title":"displayDataTypes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.jsonTheme","text":"jsonTheme : str = None","title":"jsonTheme"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.levelExpand","text":"levelExpand : int = None","title":"levelExpand"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.mutable","text":"mutable : bool = None","title":"mutable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.source","text":"source : str = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.type","text":"type : str = 'json'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.value","text":"value : Union [ dict , str ] = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link","text":"Bases: MSAUINode \u94fe\u63a5","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.blank","text":"blank : bool = None","title":"blank"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.body","text":"body : str = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.disabled","text":"disabled : bool = None","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.href","text":"href : str = None","title":"href"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.htmlTarget","text":"htmlTarget : str = None","title":"htmlTarget"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.icon","text":"icon : str = None","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.rightIcon","text":"rightIcon : str = None","title":"rightIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.title","text":"title : str = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.type","text":"type : str = 'link'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker","text":"Bases: FormItem \u5730\u7406\u4f4d\u7f6e","title":"LocationPicker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.ak","text":"ak : str = Ellipsis","title":"ak"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.coordinatesType","text":"coordinatesType : str = None","title":"coordinatesType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.type","text":"type : str = 'location-picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.vendor","text":"vendor : str = 'baidu'","title":"vendor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log","text":"Bases: MSAUINode \u5b9e\u65f6\u65e5\u5fd7","title":"Log"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.autoScroll","text":"autoScroll : bool = None","title":"autoScroll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.encoding","text":"encoding : str = None","title":"encoding"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.height","text":"height : int = None","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.type","text":"type : str = 'log'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping","text":"Bases: MSAUINode \u6620\u5c04","title":"Mapping"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.map","text":"map : dict = None","title":"map"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.type","text":"type : str = 'mapping'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown","text":"Bases: MSAUINode Markdown\u6e32\u67d3","title":"Markdown"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.options","text":"options : dict = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.src","text":"src : MSA_UI_API = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.type","text":"type : str = 'markdown'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.value","text":"value : Union [ int , str ] = None","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav","text":"Bases: MSAUINode \u5bfc\u822a","title":"Nav"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.deferApi","text":"deferApi : MSA_UI_API = None","title":"deferApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.dragOnSameLevel","text":"dragOnSameLevel : bool = None","title":"dragOnSameLevel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.draggable","text":"draggable : bool = None","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.itemActions","text":"itemActions : MSAUISchemaNode = None","title":"itemActions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.itemBadge","text":"itemBadge : Badge = None","title":"itemBadge"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.links","text":"links : list = None","title":"links"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.saveOrderApi","text":"saveOrderApi : MSA_UI_API = None","title":"saveOrderApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.stacked","text":"stacked : bool = True","title":"stacked"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.type","text":"type : str = 'nav'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.Link","text":"Bases: MSAUINode","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.Link-attributes","text":"active class-attribute \u00b6 active : bool = None activeOn class-attribute \u00b6 activeOn : MSAUIExpression = None children class-attribute \u00b6 children : List [ Link ] = None defer class-attribute \u00b6 defer : bool = None deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None icon class-attribute \u00b6 icon : str = None label class-attribute \u00b6 label : str = None target class-attribute \u00b6 target : str = None to class-attribute \u00b6 to : MSAUITemplate = None unfolded class-attribute \u00b6 unfolded : bool = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect","text":"Bases: Select \u7ea7\u8054\u9009\u62e9\u5668","title":"NestedSelect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.cascade","text":"cascade : bool = None","title":"cascade"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.hideNodePathLabel","text":"hideNodePathLabel : bool = None","title":"hideNodePathLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.noResultsText","text":"noResultsText : str = None","title":"noResultsText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.onlyChildren","text":"onlyChildren : bool = None","title":"onlyChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.onlyLeaf","text":"onlyLeaf : bool = None","title":"onlyLeaf"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.searchPromptText","text":"searchPromptText : str = None","title":"searchPromptText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.type","text":"type : str = 'nested-select'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.withChildren","text":"withChildren : bool = None","title":"withChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page","text":"Bases: MSAUINode \u9875\u9762","title":"Page"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.__default_template_path__","text":"__default_template_path__ : str = ( f \" { BASE_DIR } /templates/page.html\" )","title":"__default_template_path__"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.aside","text":"aside : MSAUISchemaNode = None","title":"aside"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideClassName","text":"asideClassName : str = None","title":"asideClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideMaxWidth","text":"asideMaxWidth : int = None","title":"asideMaxWidth"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideMinWidth","text":"asideMinWidth : int = None","title":"asideMinWidth"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideResizor","text":"asideResizor : bool = None","title":"asideResizor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.bodyClassName","text":"bodyClassName : str = None","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.cssVars","text":"cssVars : dict = None","title":"cssVars"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.headerClassName","text":"headerClassName : str = None","title":"headerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.initApi","text":"initApi : MSA_UI_API = None","title":"initApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.initFetch","text":"initFetch : bool = None","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.initFetchOn","text":"initFetchOn : MSAUIExpression = None","title":"initFetchOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.interval","text":"interval : int = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.regions","text":"regions : List [ str ] = None","title":"regions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.remark","text":"remark : Remark = None","title":"remark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.silentPolling","text":"silentPolling : bool = None","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : MSAUIExpression = None","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.subTitle","text":"subTitle : MSAUISchemaNode = None","title":"subTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.title","text":"title : MSAUISchemaNode = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.toolbar","text":"toolbar : MSAUISchemaNode = None","title":"toolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.toolbarClassName","text":"toolbarClassName : str = None","title":"toolbarClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.type","text":"type : str = 'page'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.msa_ui_html","text":"msa_ui_html ( template_path : str = \"\" , locale : str = \"zh_CN\" , site_title : str = \"Admin\" , site_icon : str = \"\" , )","title":"msa_ui_html()"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema","text":"Bases: MSAUINode","title":"PageSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.children","text":"children : List [ PageSchema ] = None","title":"children"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.icon","text":"icon : str = 'fa fa-flash'","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.isDefaultPage","text":"isDefaultPage : Union [ str , bool ] = None","title":"isDefaultPage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.label","text":"label : str = None","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.link","text":"link : str = None","title":"link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.redirect","text":"redirect : str = None","title":"redirect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.rewrite","text":"rewrite : str = None","title":"rewrite"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.schemaApi","text":"schemaApi : MSA_UI_API = None","title":"schemaApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.schema_","text":"schema_ : Union [ Page , Iframe ] = Field ( None , alias = 'schema' )","title":"schema_"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.sort","text":"sort : int = None","title":"sort"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.url","text":"url : str = None","title":"url"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.visible","text":"visible : str = None","title":"visible"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.as_tabs_item","text":"as_tabs_item ( tabs_extra : Dict [ str , Any ] = None , item_extra : Dict [ str , Any ] = None , )","title":"as_tabs_item()"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel","text":"Bases: MSAUINode","title":"Panel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.actions","text":"actions : List [ Action ] = None","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.actionsClassName","text":"actionsClassName : str = None","title":"actionsClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.affixFooter","text":"affixFooter : bool = None","title":"affixFooter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.bodyClassName","text":"bodyClassName : str = None","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.footer","text":"footer : MSAUISchemaNode = None","title":"footer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.footerClassName","text":"footerClassName : str = None","title":"footerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.header","text":"header : MSAUISchemaNode = None","title":"header"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.headerClassName","text":"headerClassName : str = None","title":"headerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.title","text":"title : MSAUISchemaNode = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.type","text":"type : str = 'panel'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker","text":"Bases: FormItem \u5217\u8868\u9009\u62e9\u5668","title":"Picker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.autoFill","text":"autoFill : dict = None","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.delimiter","text":"delimiter : bool = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.embed","text":"embed : bool = None","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.labelField","text":"labelField : str = None","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.modalMode","text":"modalMode : Literal [ dialog , drawer ] = None","title":"modalMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.multiple","text":"multiple : bool = None","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.options","text":"options : MSAOptionsNode = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.pickerSchema","text":"pickerSchema : Union [ CRUD , MSAUISchemaNode ] = None","title":"pickerSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.size","text":"size : Union [ str , SizeEnum ] = None","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.type","text":"type : str = 'picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.valueField","text":"valueField : str = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet","text":"Bases: Tabs","title":"Portlet"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.contentClassName","text":"contentClassName : str = None","title":"contentClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.description","text":"description : MSAUITemplate = None","title":"description"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.divider","text":"divider : bool = None","title":"divider"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.hideHeader","text":"hideHeader : bool = None","title":"hideHeader"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.style","text":"style : Union [ str , dict ] = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.tabs","text":"tabs : List [ Item ] = None","title":"tabs"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.type","text":"type : str = 'portlet'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.Item","text":"Bases: Tabs . Item","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.Item-attributes","text":"toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property","text":"Bases: MSAUINode \u5c5e\u6027\u8868","title":"Property"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.column","text":"column : int = None","title":"column"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.contentStyle","text":"contentStyle : dict = None","title":"contentStyle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.items","text":"items : List [ Item ] = None","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.labelStyle","text":"labelStyle : dict = None","title":"labelStyle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.mode","text":"mode : str = None","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.separator","text":"separator : str = None","title":"separator"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.source","text":"source : MSAUITemplate = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.style","text":"style : dict = None","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.title","text":"title : str = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.type","text":"type : str = 'property'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.Item-attributes","text":"content class-attribute \u00b6 content : MSAUITemplate = None hiddenOn class-attribute \u00b6 hiddenOn : MSAUIExpression = None label class-attribute \u00b6 label : MSAUITemplate = None span class-attribute \u00b6 span : int = None visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode","text":"Bases: MSAUINode \u4e8c\u7ef4\u7801","title":"QRCode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.backgroundColor","text":"backgroundColor : str = None","title":"backgroundColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.codeSize","text":"codeSize : int = None","title":"codeSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.foregroundColor","text":"foregroundColor : str = None","title":"foregroundColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.level","text":"level : str = None","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.qrcodeClassName","text":"qrcodeClassName : str = None","title":"qrcodeClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.type","text":"type : str = 'qr-code'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.value","text":"value : MSAUITemplate","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios","text":"Bases: FormItem \u5355\u9009\u6846","title":"Radios"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.autoFill","text":"autoFill : dict = None","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.columnsCount","text":"columnsCount : int = None","title":"columnsCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.inline","text":"inline : bool = None","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.labelField","text":"labelField : bool = None","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.options","text":"options : List [ Union [ dict , str ]] = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.selectFirst","text":"selectFirst : bool = None","title":"selectFirst"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.type","text":"type : str = 'radios'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.valueField","text":"valueField : bool = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark","text":"Bases: MSAUINode \u6807\u8bb0","title":"Remark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.content","text":"content : str = None","title":"content"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.icon","text":"icon : str = None","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.placement","text":"placement : str = None","title":"placement"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.trigger","text":"trigger : str = None","title":"trigger"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.type","text":"type : str = 'remark'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select","text":"Bases: FormItem \u4e0b\u62c9\u6846","title":"Select"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.addApi","text":"addApi : MSA_UI_API = None","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.addControls","text":"addControls : List [ FormItem ] = None","title":"addControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.autoComplete","text":"autoComplete : MSA_UI_API = None","title":"autoComplete"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.autoFill","text":"autoFill : dict = None","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.checkAll","text":"checkAll : bool = None","title":"checkAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.checkAllBySearch","text":"checkAllBySearch : bool = None","title":"checkAllBySearch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.checkAllLabel","text":"checkAllLabel : str = None","title":"checkAllLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.clearable","text":"clearable : bool = None","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.columns","text":"columns : List [ dict ] = None","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.creatable","text":"creatable : bool = None","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.createBtnLabel","text":"createBtnLabel : str = None","title":"createBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.defaultCheckAll","text":"defaultCheckAll : bool = None","title":"defaultCheckAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.deleteApi","text":"deleteApi : MSA_UI_API = None","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.delimiter","text":"delimiter : Union [ bool , str ] = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.editApi","text":"editApi : MSA_UI_API = None","title":"editApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.editControls","text":"editControls : List [ FormItem ] = None","title":"editControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.editable","text":"editable : bool = None","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.hideSelected","text":"hideSelected : bool = None","title":"hideSelected"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.labelField","text":"labelField : str = None","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.leftMode","text":"leftMode : str = None","title":"leftMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.leftOptions","text":"leftOptions : List [ dict ] = None","title":"leftOptions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.menuTpl","text":"menuTpl : str = None","title":"menuTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.mobileClassName","text":"mobileClassName : str = None","title":"mobileClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.multiple","text":"multiple : bool = None","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.options","text":"options : MSAOptionsNode = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.removable","text":"removable : bool = None","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.rightMode","text":"rightMode : str = None","title":"rightMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.searchResultMode","text":"searchResultMode : str = None","title":"searchResultMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.searchable","text":"searchable : bool = None","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.selectMode","text":"selectMode : str = None","title":"selectMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.type","text":"type : str = 'select'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.valueField","text":"valueField : str = None","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service","text":"Bases: MSAUINode \u529f\u80fd\u578b\u5bb9\u5668","title":"Service"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.api","text":"api : MSA_UI_API = None","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.body","text":"body : MSAUISchemaNode = None","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.data","text":"data : dict = None","title":"data"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.dataProvider","text":"dataProvider : str = None","title":"dataProvider"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.initFetch","text":"initFetch : bool = None","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.initFetchSchema","text":"initFetchSchema : bool = None","title":"initFetchSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.interval","text":"interval : int = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.messages","text":"messages : dict = None","title":"messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.schemaApi","text":"schemaApi : MSA_UI_API = None","title":"schemaApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.silentPolling","text":"silentPolling : bool = None","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : MSAUIExpression = None","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.type","text":"type : str = 'service'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.ws","text":"ws : str = None","title":"ws"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Spinner","text":"Bases: MSAUINode \u52a0\u8f7d\u4e2d","title":"Spinner"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Spinner-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Spinner.type","text":"type : str = 'spinner'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static","text":"Bases: FormItem \u9759\u6001\u5c55\u793a/\u6807\u7b7e","title":"Static"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.type","text":"type : str = 'static'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Datetime","text":"Bases: FormItem \u663e\u793a\u65e5\u671f","title":"Datetime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Datetime-attributes","text":"type class-attribute \u00b6 type : str = 'static-datetime' value class-attribute \u00b6 value : Union [ int , str ]","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Json","text":"Bases: FormItem","title":"Json"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Json-attributes","text":"type class-attribute \u00b6 type : str = 'static-json' value class-attribute \u00b6 value : Union [ dict , str ]","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status","text":"Bases: MSAUINode \u72b6\u6001","title":"Status"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.labelMap","text":"labelMap : dict = None","title":"labelMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.map","text":"map : dict = None","title":"map"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.type","text":"type : str = 'status'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch","text":"Bases: FormItem \u5f00\u5173","title":"Switch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.falseValue","text":"falseValue : Any = None","title":"falseValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.offText","text":"offText : str = None","title":"offText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.onText","text":"onText : str = None","title":"onText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.option","text":"option : str = None","title":"option"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.trueValue","text":"trueValue : Any = None","title":"trueValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.type","text":"type : str = 'switch'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table","text":"Bases: MSAUINode \u8868\u683c","title":"Table"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.affixHeader","text":"affixHeader : bool = None","title":"affixHeader"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.affixRow","text":"affixRow : list = None","title":"affixRow"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.autoFillHeight","text":"autoFillHeight : bool = None","title":"autoFillHeight"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.checkOnItemClick","text":"checkOnItemClick : bool = None","title":"checkOnItemClick"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.columns","text":"columns : List [ Union [ TableColumn , MSAUISchemaNode ]] = None","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.columnsTogglable","text":"columnsTogglable : Union [ str , bool ] = None","title":"columnsTogglable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.combineNum","text":"combineNum : int = None","title":"combineNum"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.footable","text":"footable : Union [ bool , dict ] = None","title":"footable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.footerClassName","text":"footerClassName : str = None","title":"footerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.headerClassName","text":"headerClassName : str = None","title":"headerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemActions","text":"itemActions : List [ Action ] = None","title":"itemActions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemBadge","text":"itemBadge : Badge = None","title":"itemBadge"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemCheckableOn","text":"itemCheckableOn : MSAUIExpression = None","title":"itemCheckableOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemDraggableOn","text":"itemDraggableOn : MSAUIExpression = None","title":"itemDraggableOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.placeholder","text":"placeholder : str = None","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.prefixRow","text":"prefixRow : list = None","title":"prefixRow"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.rowClassName","text":"rowClassName : str = None","title":"rowClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.rowClassNameExpr","text":"rowClassNameExpr : MSAUITemplate = None","title":"rowClassNameExpr"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.source","text":"source : str = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.tableClassName","text":"tableClassName : str = None","title":"tableClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.title","text":"title : str = None","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.toolbarClassName","text":"toolbarClassName : str = None","title":"toolbarClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.type","text":"type : str = 'table'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableCRUD","text":"Bases: CRUD , Table \u8868\u683cCRUD","title":"TableCRUD"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn","text":"Bases: MSAUINode \u5217\u914d\u7f6e","title":"TableColumn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.breakpoint","text":"breakpoint : str = None","title":"breakpoint"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.copyable","text":"copyable : Union [ bool , dict ] = None","title":"copyable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.fixed","text":"fixed : str = None","title":"fixed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.label","text":"label : MSAUITemplate = None","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.name","text":"name : str = None","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.popOver","text":"popOver : Union [ bool , dict ] = None","title":"popOver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.quickEdit","text":"quickEdit : Union [ bool , dict ] = None","title":"quickEdit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.remark","text":"remark : Remark = None","title":"remark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.searchable","text":"searchable : Union [ bool , MSAUISchemaNode ] = None","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.sortable","text":"sortable : bool = None","title":"sortable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.tpl","text":"tpl : MSAUITemplate = None","title":"tpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.type","text":"type : str = None","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.width","text":"width : Union [ str , int ] = None","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs","text":"Bases: MSAUINode","title":"Tabs"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.addBtnText","text":"addBtnText : str = None","title":"addBtnText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.addable","text":"addable : bool = None","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.closable","text":"closable : bool = None","title":"closable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.draggable","text":"draggable : bool = None","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.editable","text":"editable : bool = None","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.mode","text":"mode : str = None","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.mountOnEnter","text":"mountOnEnter : bool = None","title":"mountOnEnter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.scrollable","text":"scrollable : bool = None","title":"scrollable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.showTip","text":"showTip : bool = None","title":"showTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.showTipClassName","text":"showTipClassName : str = None","title":"showTipClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.sidePosition","text":"sidePosition : str = None","title":"sidePosition"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.source","text":"source : str = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.tabs","text":"tabs : List [ Item ] = None","title":"tabs"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.tabsClassName","text":"tabsClassName : str = None","title":"tabsClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.tabsMode","text":"tabsMode : TabsModeEnum = None","title":"tabsMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.toolbar","text":"toolbar : MSAUISchemaNode = None","title":"toolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.toolbarClassName","text":"toolbarClassName : str = None","title":"toolbarClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.type","text":"type : str = 'tabs'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.unmountOnExit","text":"unmountOnExit : bool = None","title":"unmountOnExit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.Item-attributes","text":"className class-attribute \u00b6 className : str = None closable class-attribute \u00b6 closable : bool = None disabled class-attribute \u00b6 disabled : bool = None hash class-attribute \u00b6 hash : str = None icon class-attribute \u00b6 icon : Union [ str , Icon ] = None iconPosition class-attribute \u00b6 iconPosition : str = None reload class-attribute \u00b6 reload : bool = None tab class-attribute \u00b6 tab : MSAUISchemaNode = None title class-attribute \u00b6 title : str = None unmountOnExit class-attribute \u00b6 unmountOnExit : bool = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransfer","text":"Bases: Transfer \u7ec4\u5408\u7a7f\u68ad\u5668","title":"TabsTransfer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransfer-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransfer.type","text":"type : str = 'tabs-transfer'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransferPicker","text":"Bases: Transfer \u7ec4\u5408\u7a7f\u68ad\u9009\u62e9\u5668","title":"TabsTransferPicker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransferPicker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransferPicker.type","text":"type : str = 'tabs-transfer-picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks","text":"Bases: MSAUINode \u4efb\u52a1\u64cd\u4f5c\u96c6\u5408","title":"Tasks"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.btnClassName","text":"btnClassName : str = None","title":"btnClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.btnText","text":"btnText : str = None","title":"btnText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.checkApi","text":"checkApi : MSA_UI_API = None","title":"checkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.interval","text":"interval : int = None","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.items","text":"items : List [ Item ] = None","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.operationLabel","text":"operationLabel : str = None","title":"operationLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.reSubmitApi","text":"reSubmitApi : MSA_UI_API = None","title":"reSubmitApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.remarkLabel","text":"remarkLabel : str = None","title":"remarkLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.retryBtnClassName","text":"retryBtnClassName : str = None","title":"retryBtnClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.retryBtnText","text":"retryBtnText : str = None","title":"retryBtnText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.statusLabel","text":"statusLabel : str = None","title":"statusLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.statusLabelMap","text":"statusLabelMap : List [ str ] = None","title":"statusLabelMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.statusTextMap","text":"statusTextMap : List [ str ] = None","title":"statusTextMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.submitApi","text":"submitApi : MSA_UI_API = None","title":"submitApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.tableClassName","text":"tableClassName : str = None","title":"tableClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.taskNameLabel","text":"taskNameLabel : str = None","title":"taskNameLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.type","text":"type : str = 'tasks'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.Item-attributes","text":"key class-attribute \u00b6 key : str = None label class-attribute \u00b6 label : str = None remark class-attribute \u00b6 remark : str = None status class-attribute \u00b6 status : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea","text":"Bases: FormItem \u591a\u884c\u6587\u672c\u8f93\u5165\u6846","title":"Textarea"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.maxRows","text":"maxRows : int = None","title":"maxRows"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.minLength","text":"minLength : int = None","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.minRows","text":"minRows : int = None","title":"minRows"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.readOnly","text":"readOnly : bool = None","title":"readOnly"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.showCounter","text":"showCounter : bool = True","title":"showCounter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.trimContents","text":"trimContents : bool = None","title":"trimContents"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.type","text":"type : str = 'textarea'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer","text":"Bases: FormItem \u7a7f\u68ad\u5668","title":"Transfer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.columns","text":"columns : List [ dict ] = None","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.delimiter","text":"delimiter : str = None","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.extractValue","text":"extractValue : bool = None","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.joinValues","text":"joinValues : bool = None","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.leftMode","text":"leftMode : str = None","title":"leftMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.leftOptions","text":"leftOptions : List [ dict ] = None","title":"leftOptions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.menuTpl","text":"menuTpl : MSAUISchemaNode = None","title":"menuTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.options","text":"options : MSAOptionsNode = None","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.resultTitle","text":"resultTitle : str = None","title":"resultTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.rightMode","text":"rightMode : str = None","title":"rightMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.searchApi","text":"searchApi : MSA_UI_API = None","title":"searchApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.searchResultMode","text":"searchResultMode : str = None","title":"searchResultMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.searchable","text":"searchable : bool = None","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.selectMode","text":"selectMode : str = None","title":"selectMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.selectTitle","text":"selectTitle : str = None","title":"selectTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.sortable","text":"sortable : bool = None","title":"sortable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.source","text":"source : MSA_UI_API = None","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.statistics","text":"statistics : bool = None","title":"statistics"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.type","text":"type : Literal [ transfer , transfer - picker , tabs - transfer , tabs - transfer - picker , ] = \"transfer\"","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.valueTpl","text":"valueTpl : MSAUISchemaNode = None","title":"valueTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TransferPicker","text":"Bases: Transfer \u7a7f\u68ad\u9009\u62e9\u5668","title":"TransferPicker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TransferPicker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TransferPicker.type","text":"type : str = 'transfer-picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect","text":"Bases: InputTree \u6811\u5f62\u9009\u62e9\u5668","title":"TreeSelect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect.hideNodePathLabel","text":"hideNodePathLabel : bool = None","title":"hideNodePathLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect.type","text":"type : str = 'tree-select'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation","text":"Bases: MSABaseUIModel","title":"Validation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.equals","text":"equals : str = None","title":"equals"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.equalsField","text":"equalsField : str = None","title":"equalsField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isAlpha","text":"isAlpha : bool = None","title":"isAlpha"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isAlphanumeric","text":"isAlphanumeric : bool = None","title":"isAlphanumeric"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isEmail","text":"isEmail : bool = None","title":"isEmail"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isFloat","text":"isFloat : bool = None","title":"isFloat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isId","text":"isId : bool = None","title":"isId"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isInt","text":"isInt : bool = None","title":"isInt"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isJson","text":"isJson : bool = None","title":"isJson"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isLength","text":"isLength : int = None","title":"isLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isNumeric","text":"isNumeric : bool = None","title":"isNumeric"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isPhoneNumber","text":"isPhoneNumber : bool = None","title":"isPhoneNumber"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isTelNumber","text":"isTelNumber : bool = None","title":"isTelNumber"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isUrl","text":"isUrl : bool = None","title":"isUrl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isUrlPath","text":"isUrlPath : bool = None","title":"isUrlPath"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isZipcode","text":"isZipcode : bool = None","title":"isZipcode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.matchRegexp","text":"matchRegexp : str = None","title":"matchRegexp"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.maxLength","text":"maxLength : int = None","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.maximum","text":"maximum : int = None","title":"maximum"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.minLength","text":"minLength : int = None","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.minimum","text":"minimum : int = None","title":"minimum"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video","text":"Bases: MSAUINode \u89c6\u9891","title":"Video"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.autoPlay","text":"autoPlay : bool = None","title":"autoPlay"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.isLive","text":"isLive : bool = None","title":"isLive"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.muted","text":"muted : bool = None","title":"muted"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.poster","text":"poster : str = None","title":"poster"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.rates","text":"rates : List [ float ] = None","title":"rates"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.src","text":"src : str = None","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.type","text":"type : str = 'video'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.videoType","text":"videoType : str = None","title":"videoType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard","text":"Bases: MSAUINode \u5411\u5bfc","title":"Wizard"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionClassName","text":"actionClassName : str = None","title":"actionClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionFinishLabel","text":"actionFinishLabel : str = None","title":"actionFinishLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionNextLabel","text":"actionNextLabel : str = None","title":"actionNextLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionNextSaveLabel","text":"actionNextSaveLabel : str = None","title":"actionNextSaveLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionPrevLabel","text":"actionPrevLabel : str = None","title":"actionPrevLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.api","text":"api : MSA_UI_API = None","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.className","text":"className : str = None","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.initApi","text":"initApi : MSA_UI_API = None","title":"initApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.initFetch","text":"initFetch : MSA_UI_API = None","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.initFetchOn","text":"initFetchOn : MSAUIExpression = None","title":"initFetchOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.mode","text":"mode : str = None","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.redirect","text":"redirect : MSAUITemplate = None","title":"redirect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.reload","text":"reload : str = None","title":"reload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.startStep","text":"startStep : int = None","title":"startStep"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.steps","text":"steps : List [ Step ] = None","title":"steps"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.target","text":"target : str = None","title":"target"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.type","text":"type : str = 'wizard'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.Step","text":"Bases: MSAUINode","title":"Step"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.Step-attributes","text":"api class-attribute \u00b6 api : MSA_UI_API = None body class-attribute \u00b6 body : List [ FormItem ] = None horizontal class-attribute \u00b6 horizontal : Horizontal = None initApi class-attribute \u00b6 initApi : MSA_UI_API = None initFetch class-attribute \u00b6 initFetch : bool = None initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None mode class-attribute \u00b6 mode : str = None title class-attribute \u00b6 title : str = None","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/constants/","text":"msaSDK Module \u00b6 .admin.frontend.constants \u00b6 Classes \u00b6 DisplayModeEnum \u00b6 Bases: str , Enum \u8868\u5355\u5c55\u793a\u6a21\u5f0f Attributes \u00b6 horizontal class-attribute \u00b6 horizontal = 'horizontal' inline class-attribute \u00b6 inline = 'inline' normal class-attribute \u00b6 normal = 'normal' LabelEnum \u00b6 Bases: str , Enum \u6807\u7b7e\u6837\u5f0f Attributes \u00b6 danger class-attribute \u00b6 danger = 'danger' default class-attribute \u00b6 default = 'default' info class-attribute \u00b6 info = 'info' primary class-attribute \u00b6 primary = 'primary' success class-attribute \u00b6 success = 'success' warning class-attribute \u00b6 warning = 'warning' LevelEnum \u00b6 Bases: str , Enum \u6309\u94ae\u7b49\u7ea7 Attributes \u00b6 danger class-attribute \u00b6 danger = 'danger' dark class-attribute \u00b6 dark = 'dark' default class-attribute \u00b6 default = 'default' info class-attribute \u00b6 info = 'info' light class-attribute \u00b6 light = 'light' link class-attribute \u00b6 link = 'link' primary class-attribute \u00b6 primary = 'primary' secondary class-attribute \u00b6 secondary = 'secondary' success class-attribute \u00b6 success = 'success' warning class-attribute \u00b6 warning = 'warning' SizeEnum \u00b6 Bases: str , Enum \u7a97\u53e3\u5c3a\u5bf8 Attributes \u00b6 full class-attribute \u00b6 full = 'full' lg class-attribute \u00b6 lg = 'lg' md class-attribute \u00b6 md = 'md' sm class-attribute \u00b6 sm = 'sm' xl class-attribute \u00b6 xl = 'xl' xs class-attribute \u00b6 xs = 'xs' StatusEnum \u00b6 Bases: str , Enum \u9ed8\u8ba4\u72b6\u6001 Attributes \u00b6 fail class-attribute \u00b6 fail = 'fail' pending class-attribute \u00b6 pending = 'pending' queue class-attribute \u00b6 queue = 'queue' schedule class-attribute \u00b6 schedule = 'schedule' success class-attribute \u00b6 success = 'success' TabsModeEnum \u00b6 Bases: str , Enum \u9009\u9879\u5361\u6a21\u5f0f Attributes \u00b6 card class-attribute \u00b6 card = 'card' chrome class-attribute \u00b6 chrome = 'chrome' line class-attribute \u00b6 line = 'line' radio class-attribute \u00b6 radio = 'radio' sidebar class-attribute \u00b6 sidebar = 'sidebar' simple class-attribute \u00b6 simple = 'simple' strong class-attribute \u00b6 strong = 'strong' tiled class-attribute \u00b6 tiled = 'tiled' vertical class-attribute \u00b6 vertical = 'vertical'","title":"constants"},{"location":"reference/admin/frontend/constants/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/constants/#adminfrontendconstants","text":"","title":".admin.frontend.constants"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum","text":"Bases: str , Enum \u8868\u5355\u5c55\u793a\u6a21\u5f0f","title":"DisplayModeEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum.horizontal","text":"horizontal = 'horizontal'","title":"horizontal"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum.inline","text":"inline = 'inline'","title":"inline"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum.normal","text":"normal = 'normal'","title":"normal"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum","text":"Bases: str , Enum \u6807\u7b7e\u6837\u5f0f","title":"LabelEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.danger","text":"danger = 'danger'","title":"danger"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.default","text":"default = 'default'","title":"default"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.info","text":"info = 'info'","title":"info"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.primary","text":"primary = 'primary'","title":"primary"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.success","text":"success = 'success'","title":"success"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.warning","text":"warning = 'warning'","title":"warning"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum","text":"Bases: str , Enum \u6309\u94ae\u7b49\u7ea7","title":"LevelEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.danger","text":"danger = 'danger'","title":"danger"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.dark","text":"dark = 'dark'","title":"dark"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.default","text":"default = 'default'","title":"default"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.info","text":"info = 'info'","title":"info"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.light","text":"light = 'light'","title":"light"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.link","text":"link = 'link'","title":"link"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.primary","text":"primary = 'primary'","title":"primary"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.secondary","text":"secondary = 'secondary'","title":"secondary"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.success","text":"success = 'success'","title":"success"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.warning","text":"warning = 'warning'","title":"warning"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum","text":"Bases: str , Enum \u7a97\u53e3\u5c3a\u5bf8","title":"SizeEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.full","text":"full = 'full'","title":"full"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.lg","text":"lg = 'lg'","title":"lg"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.md","text":"md = 'md'","title":"md"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.sm","text":"sm = 'sm'","title":"sm"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.xl","text":"xl = 'xl'","title":"xl"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.xs","text":"xs = 'xs'","title":"xs"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum","text":"Bases: str , Enum \u9ed8\u8ba4\u72b6\u6001","title":"StatusEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.fail","text":"fail = 'fail'","title":"fail"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.pending","text":"pending = 'pending'","title":"pending"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.queue","text":"queue = 'queue'","title":"queue"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.schedule","text":"schedule = 'schedule'","title":"schedule"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.success","text":"success = 'success'","title":"success"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum","text":"Bases: str , Enum \u9009\u9879\u5361\u6a21\u5f0f","title":"TabsModeEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.card","text":"card = 'card'","title":"card"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.chrome","text":"chrome = 'chrome'","title":"chrome"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.line","text":"line = 'line'","title":"line"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.radio","text":"radio = 'radio'","title":"radio"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.sidebar","text":"sidebar = 'sidebar'","title":"sidebar"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.simple","text":"simple = 'simple'","title":"simple"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.strong","text":"strong = 'strong'","title":"strong"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.tiled","text":"tiled = 'tiled'","title":"tiled"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.vertical","text":"vertical = 'vertical'","title":"vertical"},{"location":"reference/admin/frontend/types/","text":"msaSDK Module \u00b6 .admin.frontend.types \u00b6 Attributes \u00b6 MSAOptionsNode module-attribute \u00b6 MSAOptionsNode = Union [ List [ Dict [ str , Any ]], List [ str ]] MSAUIExpression module-attribute \u00b6 MSAUIExpression = str MSAUISchemaNode module-attribute \u00b6 MSAUISchemaNode = Union [ MSAUITemplate , \"MSAUINode\" , List [ \"MSAUINode\" ], Dict [ str , Any ], List [ Dict [ str , Any ]], ] MSAUITemplate module-attribute \u00b6 MSAUITemplate = Union [ str , 'MSAUITpl' ] MSA_UI_API module-attribute \u00b6 MSA_UI_API = Union [ str , MSAUIAPI , dict ] Classes \u00b6 MSABaseUIApiOut \u00b6 Bases: MSABaseUIModel MSA UI Api interface output data model Attributes \u00b6 data class-attribute \u00b6 data : dict = None msg class-attribute \u00b6 msg : str = '' status class-attribute \u00b6 status : int = 0 MSABaseUIModel \u00b6 Bases: BaseModel Core Pydantic Base UI Model. Classes \u00b6 Config \u00b6 Attributes \u00b6 extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads Functions \u00b6 msa_ui_dict \u00b6 msa_ui_dict () msa_ui_json \u00b6 msa_ui_json () update_from_dict \u00b6 update_from_dict ( kwargs : Dict [ str , Any ]) update_from_kwargs \u00b6 update_from_kwargs ( ** kwargs ) MSAUIAPI \u00b6 Bases: MSABaseUIModel Core MSA UI API Attributes \u00b6 adaptor class-attribute \u00b6 adaptor : str = None Receive adapter, if the interface does not meet the requirements, you can configure an adapter to handle it as msa_ui needs. Also supports Function or string function styles autoRefresh class-attribute \u00b6 autoRefresh : bool = None Configure whether the interface needs to be automatically refreshed. cache class-attribute \u00b6 cache : int = None Set cache to set the cache time in milliseconds, within the set cache time, the same request will not be repeatedly initiated, but will get the cached request response data. data class-attribute \u00b6 data : Union [ str , dict ] = None Data body of the request, supports data mapping dataType class-attribute \u00b6 dataType : str = None Default is json can be configured as form or form-data. When the data contains a file, the form-data (multipart/form-data) format is automatically used. The application/x-www-form-urlencoded format when configured as form. headers class-attribute \u00b6 headers : Dict [ str , Any ] = None The requested headers method class-attribute \u00b6 method : str = None GET holds request method (get, post, put, delete) qsOptions class-attribute \u00b6 qsOptions : Union [ str , dict ] = None Useful when dataType is form or form-data. Specific parameters, set by default to: { arrayFormat: 'indices', encodeValuesOnly: true } replaceData class-attribute \u00b6 replaceData : bool = None Whether the returned data replaces the current data, the default is false, i.e., append, set to true is a complete replacement. requestAdaptor class-attribute \u00b6 requestAdaptor : str = None send adapter , msa_ui's API configuration, if you can not configure the request structure you want, then you can configure the requestAdaptor send adapter responseData class-attribute \u00b6 responseData : Dict [ str , Any ] = None If the data structure returned by the interface does not meet expectations, you can modify it by configuring responseData, which also supports data mapping. The data available for mapping is the actual data of the interface (the data part returned by the interface), with additional api variables. where api.query is the query parameter sent by the interface, and api.body is the raw data of the content body sent by the interface. responseType class-attribute \u00b6 responseType : str = None Return type, if it is a download it needs to be set to blob sendOn class-attribute \u00b6 sendOn : MSAUIExpression = None Configure the request conditions trackExpression class-attribute \u00b6 trackExpression : str = None Configure track variable expression, when autoRefresh is enabled, the default is the url of the api to automatically track variable changes. If you want to monitor variables outside of the url, configure traceExpression. url class-attribute \u00b6 url : MSAUITemplate Current interface Api address MSAUIEvent \u00b6 Bases: MSABaseUIModel MSA UI Event Pydantic Model Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = None Action name args class-attribute \u00b6 args : dict = None Action parameter {key:value}, supports data mapping expression class-attribute \u00b6 expression : Union [ bool , MSAUIExpression ] = None Execution condition, not set means default execution outputVar class-attribute \u00b6 outputVar : str = None Output data variable name preventDefault class-attribute \u00b6 preventDefault : Union [ bool , MSAUIExpression ] = None False = prevent event default behavior stopPropagation class-attribute \u00b6 stopPropagation : Union [ bool , MSAUIExpression ] = None False = Stop the execution of subsequent actions MSAUINode \u00b6 Bases: MSABaseUIModel UI Node Component Configuration Attributes \u00b6 hidden class-attribute \u00b6 hidden : bool = None Hide this node hiddenOn class-attribute \u00b6 hiddenOn : MSAUIExpression = None Condition for Hiding id class-attribute \u00b6 id : str = None ID of the Node name class-attribute \u00b6 name : str = None Name of the Node onEvent class-attribute \u00b6 onEvent : dict = None On MSAUIEvent Handler type class-attribute \u00b6 type : str = None Component Type visible class-attribute \u00b6 visible : bool = None Enable Visible/Show visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Condition for Visibility MSAUITpl \u00b6 Bases: MSAUINode MSAUITpl component Attributes \u00b6 className class-attribute \u00b6 className : str = None Class name of the outer Dom tpl class-attribute \u00b6 tpl : str Configuration template type class-attribute \u00b6 type : str = 'tpl' Specify as MSAUITpl component","title":"types"},{"location":"reference/admin/frontend/types/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/types/#adminfrontendtypes","text":"","title":".admin.frontend.types"},{"location":"reference/admin/frontend/types/#admin.frontend.types-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAOptionsNode","text":"MSAOptionsNode = Union [ List [ Dict [ str , Any ]], List [ str ]]","title":"MSAOptionsNode"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIExpression","text":"MSAUIExpression = str","title":"MSAUIExpression"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUISchemaNode","text":"MSAUISchemaNode = Union [ MSAUITemplate , \"MSAUINode\" , List [ \"MSAUINode\" ], Dict [ str , Any ], List [ Dict [ str , Any ]], ]","title":"MSAUISchemaNode"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITemplate","text":"MSAUITemplate = Union [ str , 'MSAUITpl' ]","title":"MSAUITemplate"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSA_UI_API","text":"MSA_UI_API = Union [ str , MSAUIAPI , dict ]","title":"MSA_UI_API"},{"location":"reference/admin/frontend/types/#admin.frontend.types-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut","text":"Bases: MSABaseUIModel MSA UI Api interface output data model","title":"MSABaseUIApiOut"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut.data","text":"data : dict = None","title":"data"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut.msg","text":"msg : str = ''","title":"msg"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut.status","text":"status : int = 0","title":"status"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel","text":"Bases: BaseModel Core Pydantic Base UI Model.","title":"MSABaseUIModel"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.Config","text":"","title":"Config"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.Config-attributes","text":"extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.msa_ui_dict","text":"msa_ui_dict ()","title":"msa_ui_dict()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.msa_ui_json","text":"msa_ui_json ()","title":"msa_ui_json()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.update_from_dict","text":"update_from_dict ( kwargs : Dict [ str , Any ])","title":"update_from_dict()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.update_from_kwargs","text":"update_from_kwargs ( ** kwargs )","title":"update_from_kwargs()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI","text":"Bases: MSABaseUIModel Core MSA UI API","title":"MSAUIAPI"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.adaptor","text":"adaptor : str = None Receive adapter, if the interface does not meet the requirements, you can configure an adapter to handle it as msa_ui needs. Also supports Function or string function styles","title":"adaptor"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.autoRefresh","text":"autoRefresh : bool = None Configure whether the interface needs to be automatically refreshed.","title":"autoRefresh"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.cache","text":"cache : int = None Set cache to set the cache time in milliseconds, within the set cache time, the same request will not be repeatedly initiated, but will get the cached request response data.","title":"cache"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.data","text":"data : Union [ str , dict ] = None Data body of the request, supports data mapping","title":"data"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.dataType","text":"dataType : str = None Default is json can be configured as form or form-data. When the data contains a file, the form-data (multipart/form-data) format is automatically used. The application/x-www-form-urlencoded format when configured as form.","title":"dataType"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.headers","text":"headers : Dict [ str , Any ] = None The requested headers","title":"headers"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.method","text":"method : str = None GET holds request method (get, post, put, delete)","title":"method"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.qsOptions","text":"qsOptions : Union [ str , dict ] = None Useful when dataType is form or form-data. Specific parameters, set by default to: { arrayFormat: 'indices', encodeValuesOnly: true }","title":"qsOptions"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.replaceData","text":"replaceData : bool = None Whether the returned data replaces the current data, the default is false, i.e., append, set to true is a complete replacement.","title":"replaceData"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.requestAdaptor","text":"requestAdaptor : str = None send adapter , msa_ui's API configuration, if you can not configure the request structure you want, then you can configure the requestAdaptor send adapter","title":"requestAdaptor"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.responseData","text":"responseData : Dict [ str , Any ] = None If the data structure returned by the interface does not meet expectations, you can modify it by configuring responseData, which also supports data mapping. The data available for mapping is the actual data of the interface (the data part returned by the interface), with additional api variables. where api.query is the query parameter sent by the interface, and api.body is the raw data of the content body sent by the interface.","title":"responseData"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.responseType","text":"responseType : str = None Return type, if it is a download it needs to be set to blob","title":"responseType"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.sendOn","text":"sendOn : MSAUIExpression = None Configure the request conditions","title":"sendOn"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.trackExpression","text":"trackExpression : str = None Configure track variable expression, when autoRefresh is enabled, the default is the url of the api to automatically track variable changes. If you want to monitor variables outside of the url, configure traceExpression.","title":"trackExpression"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.url","text":"url : MSAUITemplate Current interface Api address","title":"url"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent","text":"Bases: MSABaseUIModel MSA UI Event Pydantic Model","title":"MSAUIEvent"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.actionType","text":"actionType : str = None Action name","title":"actionType"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.args","text":"args : dict = None Action parameter {key:value}, supports data mapping","title":"args"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.expression","text":"expression : Union [ bool , MSAUIExpression ] = None Execution condition, not set means default execution","title":"expression"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.outputVar","text":"outputVar : str = None Output data variable name","title":"outputVar"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.preventDefault","text":"preventDefault : Union [ bool , MSAUIExpression ] = None False = prevent event default behavior","title":"preventDefault"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.stopPropagation","text":"stopPropagation : Union [ bool , MSAUIExpression ] = None False = Stop the execution of subsequent actions","title":"stopPropagation"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode","text":"Bases: MSABaseUIModel UI Node Component Configuration","title":"MSAUINode"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.hidden","text":"hidden : bool = None Hide this node","title":"hidden"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.hiddenOn","text":"hiddenOn : MSAUIExpression = None Condition for Hiding","title":"hiddenOn"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.id","text":"id : str = None ID of the Node","title":"id"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.name","text":"name : str = None Name of the Node","title":"name"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.onEvent","text":"onEvent : dict = None On MSAUIEvent Handler","title":"onEvent"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.type","text":"type : str = None Component Type","title":"type"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.visible","text":"visible : bool = None Enable Visible/Show","title":"visible"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.visibleOn","text":"visibleOn : MSAUIExpression = None Condition for Visibility","title":"visibleOn"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl","text":"Bases: MSAUINode MSAUITpl component","title":"MSAUITpl"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl.tpl","text":"tpl : str Configuration template","title":"tpl"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl.type","text":"type : str = 'tpl' Specify as MSAUITpl component","title":"type"},{"location":"reference/admin/frontend/utils/","text":"msaSDK Module \u00b6 .admin.frontend.utils \u00b6 Functions \u00b6 msa_ui_templates cached \u00b6 msa_ui_templates ( template_path : str , encoding = \"utf8\" ) -> Template Page UI Templates This function returns a cached instance of the Template object. Note Caching is used to prevent re-reading the environment every time the Template is used.","title":"utils"},{"location":"reference/admin/frontend/utils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/utils/#adminfrontendutils","text":"","title":".admin.frontend.utils"},{"location":"reference/admin/frontend/utils/#admin.frontend.utils-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/utils/#admin.frontend.utils.msa_ui_templates","text":"msa_ui_templates ( template_path : str , encoding = \"utf8\" ) -> Template Page UI Templates This function returns a cached instance of the Template object. Note Caching is used to prevent re-reading the environment every time the Template is used.","title":"msa_ui_templates()"},{"location":"reference/admin/utils/choices/","text":"msaSDK Module \u00b6 .admin.utils.choices \u00b6 Attributes \u00b6 __all__ module-attribute \u00b6 __all__ = [ \"MSAChoices\" , \"MSAIntegerChoices\" , \"MSATextChoices\" , ] Classes \u00b6 MSAChoices \u00b6 Bases: enum . Enum Class for creating enumerated choices. Functions \u00b6 __str__ \u00b6 __str__ () Use value when cast to str, so that MSAChoices set as model instance attributes are rendered as expected in templates and similar contexts. MSAChoicesMeta \u00b6 Bases: enum . EnumMeta A metaclass for creating a enum choices. Functions \u00b6 __contains__ \u00b6 __contains__ ( member ) __new__ \u00b6 __new__ ( metacls , classname , bases , classdict , ** kwds ) choices property \u00b6 choices () labels property \u00b6 labels () names property \u00b6 names () values property \u00b6 values () MSAIntegerChoices \u00b6 Bases: int , MSAChoices Class for creating enumerated integer choices. MSATextChoices \u00b6 Bases: str , MSAChoices Class for creating enumerated string choices. Promise \u00b6 Base class for the proxy class created in the closure of the lazy function. It's used to recognize promises in code.","title":"choices"},{"location":"reference/admin/utils/choices/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/choices/#adminutilschoices","text":"","title":".admin.utils.choices"},{"location":"reference/admin/utils/choices/#admin.utils.choices-attributes","text":"","title":"Attributes"},{"location":"reference/admin/utils/choices/#admin.utils.choices.__all__","text":"__all__ = [ \"MSAChoices\" , \"MSAIntegerChoices\" , \"MSATextChoices\" , ]","title":"__all__"},{"location":"reference/admin/utils/choices/#admin.utils.choices-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoices","text":"Bases: enum . Enum Class for creating enumerated choices.","title":"MSAChoices"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoices-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoices.__str__","text":"__str__ () Use value when cast to str, so that MSAChoices set as model instance attributes are rendered as expected in templates and similar contexts.","title":"__str__()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta","text":"Bases: enum . EnumMeta A metaclass for creating a enum choices.","title":"MSAChoicesMeta"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.__contains__","text":"__contains__ ( member )","title":"__contains__()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.__new__","text":"__new__ ( metacls , classname , bases , classdict , ** kwds )","title":"__new__()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.choices","text":"choices ()","title":"choices()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.labels","text":"labels ()","title":"labels()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.names","text":"names ()","title":"names()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.values","text":"values ()","title":"values()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAIntegerChoices","text":"Bases: int , MSAChoices Class for creating enumerated integer choices.","title":"MSAIntegerChoices"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSATextChoices","text":"Bases: str , MSAChoices Class for creating enumerated string choices.","title":"MSATextChoices"},{"location":"reference/admin/utils/choices/#admin.utils.choices.Promise","text":"Base class for the proxy class created in the closure of the lazy function. It's used to recognize promises in code.","title":"Promise"},{"location":"reference/admin/utils/fields/","text":"msaSDK Module \u00b6 .admin.utils.fields \u00b6 Classes \u00b6 Functions \u00b6 Field \u00b6 Field ( default : Any = Undefined , * , default_factory : Optional [ NoArgAnyCallable ] = None , alias : str = None , title : str = None , description : str = None , exclude : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , include : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , const : bool = None , gt : float = None , ge : float = None , lt : float = None , le : float = None , multiple_of : float = None , min_items : int = None , max_items : int = None , min_length : int = None , max_length : int = None , allow_mutation : bool = True , regex : str = None , primary_key : bool = False , foreign_key : Optional [ Any ] = None , unique : bool = False , nullable : Union [ bool , UndefinedType ] = Undefined , index : Union [ bool , UndefinedType ] = Undefined , sa_column : Union [ Column , UndefinedType ] = Undefined , sa_column_args : Union [ Sequence [ Any ], UndefinedType ] = Undefined , sa_column_kwargs : Union [ Mapping [ str , Any ], UndefinedType ] = Undefined , schema_extra : Optional [ Dict [ str , Any ]] = None , msa_ui_form_item : Union [ FormItem , dict , str ] = None , msa_ui_filter_item : Union [ FormItem , dict , str ] = None , msa_ui_table_column : Union [ TableColumn , dict , str ] = None ) -> Any","title":"fields"},{"location":"reference/admin/utils/fields/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/fields/#adminutilsfields","text":"","title":".admin.utils.fields"},{"location":"reference/admin/utils/fields/#admin.utils.fields-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/fields/#admin.utils.fields-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/fields/#admin.utils.fields.Field","text":"Field ( default : Any = Undefined , * , default_factory : Optional [ NoArgAnyCallable ] = None , alias : str = None , title : str = None , description : str = None , exclude : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , include : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , const : bool = None , gt : float = None , ge : float = None , lt : float = None , le : float = None , multiple_of : float = None , min_items : int = None , max_items : int = None , min_length : int = None , max_length : int = None , allow_mutation : bool = True , regex : str = None , primary_key : bool = False , foreign_key : Optional [ Any ] = None , unique : bool = False , nullable : Union [ bool , UndefinedType ] = Undefined , index : Union [ bool , UndefinedType ] = Undefined , sa_column : Union [ Column , UndefinedType ] = Undefined , sa_column_args : Union [ Sequence [ Any ], UndefinedType ] = Undefined , sa_column_kwargs : Union [ Mapping [ str , Any ], UndefinedType ] = Undefined , schema_extra : Optional [ Dict [ str , Any ]] = None , msa_ui_form_item : Union [ FormItem , dict , str ] = None , msa_ui_filter_item : Union [ FormItem , dict , str ] = None , msa_ui_table_column : Union [ TableColumn , dict , str ] = None ) -> Any","title":"Field()"},{"location":"reference/admin/utils/functools/","text":"msaSDK Module \u00b6 .admin.utils.functools \u00b6 Classes \u00b6 cached_property \u00b6 Attributes \u00b6 __doc__ instance-attribute \u00b6 __doc__ = func . __doc__ attrname instance-attribute \u00b6 attrname = None func instance-attribute \u00b6 func = func lock instance-attribute \u00b6 lock = RLock () Functions \u00b6 __get__ \u00b6 __get__ ( instance , owner = None ) Get the cached_property RAISES DESCRIPTION TypeError Cannot use cached_property instance without calling set_name on it. TypeError No ' dict ' attribute on... TypeError The ' dict ' attribute on ... does not support item assignment for caching... __init__ \u00b6 __init__ ( func ) __set_name__ \u00b6 __set_name__ ( owner , name ) Set the cached_property name RAISES DESCRIPTION TypeError Cannot assign the same cached_property to two different names","title":"functools"},{"location":"reference/admin/utils/functools/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/functools/#adminutilsfunctools","text":"","title":".admin.utils.functools"},{"location":"reference/admin/utils/functools/#admin.utils.functools-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property","text":"","title":"cached_property"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property-attributes","text":"","title":"Attributes"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__doc__","text":"__doc__ = func . __doc__","title":"__doc__"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.attrname","text":"attrname = None","title":"attrname"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.func","text":"func = func","title":"func"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.lock","text":"lock = RLock ()","title":"lock"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__get__","text":"__get__ ( instance , owner = None ) Get the cached_property RAISES DESCRIPTION TypeError Cannot use cached_property instance without calling set_name on it. TypeError No ' dict ' attribute on... TypeError The ' dict ' attribute on ... does not support item assignment for caching...","title":"__get__()"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__init__","text":"__init__ ( func )","title":"__init__()"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__set_name__","text":"__set_name__ ( owner , name ) Set the cached_property name RAISES DESCRIPTION TypeError Cannot assign the same cached_property to two different names","title":"__set_name__()"},{"location":"reference/admin/utils/translation/","text":"msaSDK Module \u00b6 .admin.utils.translation \u00b6 Attributes \u00b6 i18n module-attribute \u00b6 i18n = I18N () Classes \u00b6 I18N \u00b6 Functions \u00b6 __call__ \u00b6 __call__ ( value , language : str = None ) -> str __init__ \u00b6 __init__ () get_language \u00b6 get_language () gettext cached \u00b6 gettext ( value : str , language : str = None ) -> str This function returns a cached instance of the translated str object. Note Caching is used to prevent re-reading the environment every time the translated str object is used. load_translations \u00b6 load_translations ( translations : Dict [ str , GNUTranslations ]) Load the GNUTranslations. PARAMETER DESCRIPTION translations the dict with the GNU Translations TYPE: Dict [ str , GNUTranslations ] set_language \u00b6 set_language ( language : str = None ) -> str Set the i18n localization language. If it is empty, try to read the environment variable LANGUAGE / LANG , the system default language, in turn. PARAMETER DESCRIPTION language the language to try to set TYPE: str DEFAULT: None RETURNS DESCRIPTION str the language after the successful setting","title":"translation"},{"location":"reference/admin/utils/translation/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/translation/#adminutilstranslation","text":"","title":".admin.utils.translation"},{"location":"reference/admin/utils/translation/#admin.utils.translation-attributes","text":"","title":"Attributes"},{"location":"reference/admin/utils/translation/#admin.utils.translation.i18n","text":"i18n = I18N ()","title":"i18n"},{"location":"reference/admin/utils/translation/#admin.utils.translation-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N","text":"","title":"I18N"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.__call__","text":"__call__ ( value , language : str = None ) -> str","title":"__call__()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.__init__","text":"__init__ ()","title":"__init__()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.get_language","text":"get_language ()","title":"get_language()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.gettext","text":"gettext ( value : str , language : str = None ) -> str This function returns a cached instance of the translated str object. Note Caching is used to prevent re-reading the environment every time the translated str object is used.","title":"gettext()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.load_translations","text":"load_translations ( translations : Dict [ str , GNUTranslations ]) Load the GNUTranslations. PARAMETER DESCRIPTION translations the dict with the GNU Translations TYPE: Dict [ str , GNUTranslations ]","title":"load_translations()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.set_language","text":"set_language ( language : str = None ) -> str Set the i18n localization language. If it is empty, try to read the environment variable LANGUAGE / LANG , the system default language, in turn. PARAMETER DESCRIPTION language the language to try to set TYPE: str DEFAULT: None RETURNS DESCRIPTION str the language after the successful setting","title":"set_language()"},{"location":"reference/auth/admin/","text":"msaSDK Module \u00b6 .auth.admin \u00b6 Classes \u00b6 GroupAdmin \u00b6 Bases: ModelAdmin Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None link_model_fields class-attribute \u00b6 link_model_fields = [ Group . roles ] model class-attribute \u00b6 model = Group page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Group\" ), icon = \"fa fa-group\" ) readonly_fields class-attribute \u00b6 readonly_fields = [ 'key' ] PermissionAdmin \u00b6 Bases: ModelAdmin Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None model class-attribute \u00b6 model = Permission page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Permission\" ), icon = \"fa fa-lock\" ) readonly_fields class-attribute \u00b6 readonly_fields = [ 'key' ] RoleAdmin \u00b6 Bases: ModelAdmin Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None link_model_fields class-attribute \u00b6 link_model_fields = [ Role . permissions ] model class-attribute \u00b6 model = Role page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Role\" ), icon = \"fa fa-group\" ) readonly_fields class-attribute \u00b6 readonly_fields = [ 'key' ] UserAdmin \u00b6 Bases: ModelAdmin Attributes \u00b6 exclude class-attribute \u00b6 exclude = [ 'password' ] group_schema class-attribute \u00b6 group_schema = None link_model_fields class-attribute \u00b6 link_model_fields = [ User . roles , User . groups ] model class-attribute \u00b6 model : Type [ BaseUser ] = None page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"User\" ), icon = \"fa fa-user\" ) search_fields class-attribute \u00b6 search_fields = [ User . username ] Functions \u00b6 on_create_pre async \u00b6 on_create_pre ( request : Request , obj , ** kwargs ) -> Dict [ str , Any ] on_update_pre async \u00b6 on_update_pre ( request : Request , obj , item_id : List [ int ], ** kwargs ) -> Dict [ str , Any ] UserInfoFormAdmin \u00b6 Bases: FormAdmin Attributes \u00b6 form class-attribute \u00b6 form = Form ( mode = DisplayModeEnum . horizontal ) form_init class-attribute \u00b6 form_init = True group_schema class-attribute \u00b6 group_schema = None page class-attribute \u00b6 page = Page ( title = _ ( 'User Profile' )) page_path class-attribute \u00b6 page_path = '/userinfo' page_route_kwargs class-attribute \u00b6 page_route_kwargs = { 'name' : 'userinfo' } page_schema class-attribute \u00b6 page_schema = None schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ BaseUser ] = None user_model class-attribute \u00b6 user_model : Type [ BaseUser ] = User Functions \u00b6 get_form async \u00b6 get_form ( request : Request ) -> Form get_init_data async \u00b6 get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ] handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ] has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool UserLoginFormAdmin \u00b6 Bases: FormAdmin , ABC Attributes \u00b6 page class-attribute \u00b6 page = Page ( title = _ ( 'User Login' )) page_parser_mode class-attribute \u00b6 page_parser_mode = 'html' page_path class-attribute \u00b6 page_path = '/login' page_route_kwargs class-attribute \u00b6 page_route_kwargs = { 'name' : 'login' } page_schema class-attribute \u00b6 page_schema = None schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ UserLoginOut ] = None Functions \u00b6 get_form async \u00b6 get_form ( request : Request ) -> Form get_page async \u00b6 get_page ( request : Request ) -> Page handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ] has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool route_page property \u00b6 route_page () -> Callable route_submit property \u00b6 route_submit () UserRegFormAdmin \u00b6 Bases: FormAdmin , ABC Attributes \u00b6 page class-attribute \u00b6 page = Page ( title = _ ( 'User Register' )) page_parser_mode class-attribute \u00b6 page_parser_mode = 'html' page_path class-attribute \u00b6 page_path = '/reg' page_route_kwargs class-attribute \u00b6 page_route_kwargs = { 'name' : 'reg' } page_schema class-attribute \u00b6 page_schema = None schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ UserLoginOut ] = None user_model class-attribute \u00b6 user_model : Type [ BaseUser ] = User Functions \u00b6 get_form async \u00b6 get_form ( request : Request ) -> Form get_page async \u00b6 get_page ( request : Request ) -> Page handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ] has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool route_submit property \u00b6 route_submit () Functions \u00b6 attach_page_head \u00b6 attach_page_head ( page : Page ) -> Page","title":"admin"},{"location":"reference/auth/admin/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/admin/#authadmin","text":"","title":".auth.admin"},{"location":"reference/auth/admin/#auth.admin-classes","text":"","title":"Classes"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin","text":"Bases: ModelAdmin","title":"GroupAdmin"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.link_model_fields","text":"link_model_fields = [ Group . roles ]","title":"link_model_fields"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.model","text":"model = Group","title":"model"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Group\" ), icon = \"fa fa-group\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.readonly_fields","text":"readonly_fields = [ 'key' ]","title":"readonly_fields"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin","text":"Bases: ModelAdmin","title":"PermissionAdmin"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.model","text":"model = Permission","title":"model"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Permission\" ), icon = \"fa fa-lock\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.readonly_fields","text":"readonly_fields = [ 'key' ]","title":"readonly_fields"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin","text":"Bases: ModelAdmin","title":"RoleAdmin"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.link_model_fields","text":"link_model_fields = [ Role . permissions ]","title":"link_model_fields"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.model","text":"model = Role","title":"model"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Role\" ), icon = \"fa fa-group\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.readonly_fields","text":"readonly_fields = [ 'key' ]","title":"readonly_fields"},{"location":"reference/auth/admin/#auth.admin.UserAdmin","text":"Bases: ModelAdmin","title":"UserAdmin"},{"location":"reference/auth/admin/#auth.admin.UserAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.exclude","text":"exclude = [ 'password' ]","title":"exclude"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.link_model_fields","text":"link_model_fields = [ User . roles , User . groups ]","title":"link_model_fields"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.model","text":"model : Type [ BaseUser ] = None","title":"model"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"User\" ), icon = \"fa fa-user\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.search_fields","text":"search_fields = [ User . username ]","title":"search_fields"},{"location":"reference/auth/admin/#auth.admin.UserAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.on_create_pre","text":"on_create_pre ( request : Request , obj , ** kwargs ) -> Dict [ str , Any ]","title":"on_create_pre()"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.on_update_pre","text":"on_update_pre ( request : Request , obj , item_id : List [ int ], ** kwargs ) -> Dict [ str , Any ]","title":"on_update_pre()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin","text":"Bases: FormAdmin","title":"UserInfoFormAdmin"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.form","text":"form = Form ( mode = DisplayModeEnum . horizontal )","title":"form"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.form_init","text":"form_init = True","title":"form_init"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page","text":"page = Page ( title = _ ( 'User Profile' ))","title":"page"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page_path","text":"page_path = '/userinfo'","title":"page_path"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page_route_kwargs","text":"page_route_kwargs = { 'name' : 'userinfo' }","title":"page_route_kwargs"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page_schema","text":"page_schema = None","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ BaseUser ] = None","title":"schema_submit_out"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.user_model","text":"user_model : Type [ BaseUser ] = User","title":"user_model"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.get_init_data","text":"get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ]","title":"get_init_data()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ]","title":"handle()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin","text":"Bases: FormAdmin , ABC","title":"UserLoginFormAdmin"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page","text":"page = Page ( title = _ ( 'User Login' ))","title":"page"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_parser_mode","text":"page_parser_mode = 'html'","title":"page_parser_mode"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_path","text":"page_path = '/login'","title":"page_path"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_route_kwargs","text":"page_route_kwargs = { 'name' : 'login' }","title":"page_route_kwargs"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_schema","text":"page_schema = None","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ UserLoginOut ] = None","title":"schema_submit_out"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ]","title":"handle()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.route_page","text":"route_page () -> Callable","title":"route_page()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin","text":"Bases: FormAdmin , ABC","title":"UserRegFormAdmin"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page","text":"page = Page ( title = _ ( 'User Register' ))","title":"page"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_parser_mode","text":"page_parser_mode = 'html'","title":"page_parser_mode"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_path","text":"page_path = '/reg'","title":"page_path"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_route_kwargs","text":"page_route_kwargs = { 'name' : 'reg' }","title":"page_route_kwargs"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_schema","text":"page_schema = None","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ UserLoginOut ] = None","title":"schema_submit_out"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.user_model","text":"user_model : Type [ BaseUser ] = User","title":"user_model"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ]","title":"handle()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/auth/admin/#auth.admin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.attach_page_head","text":"attach_page_head ( page : Page ) -> Page","title":"attach_page_head()"},{"location":"reference/auth/app/","text":"msaSDK Module \u00b6 .auth.app \u00b6 Classes \u00b6 UserAuthApp \u00b6 Bases: AdminApp , AuthRouter Attributes \u00b6 GroupAdmin class-attribute \u00b6 GroupAdmin : Type [ ModelAdmin ] = GroupAdmin PermissionAdmin class-attribute \u00b6 PermissionAdmin : Type [ ModelAdmin ] = PermissionAdmin RoleAdmin class-attribute \u00b6 RoleAdmin : Type [ ModelAdmin ] = RoleAdmin UserAdmin class-attribute \u00b6 UserAdmin : Type [ UserAdmin ] = UserAdmin UserInfoFormAdmin class-attribute \u00b6 UserInfoFormAdmin : Type [ UserInfoFormAdmin ] = UserInfoFormAdmin UserLoginFormAdmin class-attribute \u00b6 UserLoginFormAdmin : Type [ UserLoginFormAdmin ] = UserLoginFormAdmin UserRegFormAdmin class-attribute \u00b6 UserRegFormAdmin : Type [ UserRegFormAdmin ] = UserRegFormAdmin msa_app instance-attribute \u00b6 msa_app = msa_app page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"User Authentication\" ), icon = \"fa fa-lock\" , sort = 99 , ) router_prefix class-attribute \u00b6 router_prefix = '/auth' Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , msa_app = None ) has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool","title":"app"},{"location":"reference/auth/app/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/app/#authapp","text":"","title":".auth.app"},{"location":"reference/auth/app/#auth.app-classes","text":"","title":"Classes"},{"location":"reference/auth/app/#auth.app.UserAuthApp","text":"Bases: AdminApp , AuthRouter","title":"UserAuthApp"},{"location":"reference/auth/app/#auth.app.UserAuthApp-attributes","text":"","title":"Attributes"},{"location":"reference/auth/app/#auth.app.UserAuthApp.GroupAdmin","text":"GroupAdmin : Type [ ModelAdmin ] = GroupAdmin","title":"GroupAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.PermissionAdmin","text":"PermissionAdmin : Type [ ModelAdmin ] = PermissionAdmin","title":"PermissionAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.RoleAdmin","text":"RoleAdmin : Type [ ModelAdmin ] = RoleAdmin","title":"RoleAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserAdmin","text":"UserAdmin : Type [ UserAdmin ] = UserAdmin","title":"UserAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserInfoFormAdmin","text":"UserInfoFormAdmin : Type [ UserInfoFormAdmin ] = UserInfoFormAdmin","title":"UserInfoFormAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserLoginFormAdmin","text":"UserLoginFormAdmin : Type [ UserLoginFormAdmin ] = UserLoginFormAdmin","title":"UserLoginFormAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserRegFormAdmin","text":"UserRegFormAdmin : Type [ UserRegFormAdmin ] = UserRegFormAdmin","title":"UserRegFormAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.msa_app","text":"msa_app = msa_app","title":"msa_app"},{"location":"reference/auth/app/#auth.app.UserAuthApp.page_schema","text":"page_schema = PageSchema ( label = _ ( \"User Authentication\" ), icon = \"fa fa-lock\" , sort = 99 , )","title":"page_schema"},{"location":"reference/auth/app/#auth.app.UserAuthApp.router_prefix","text":"router_prefix = '/auth'","title":"router_prefix"},{"location":"reference/auth/app/#auth.app.UserAuthApp-functions","text":"","title":"Functions"},{"location":"reference/auth/app/#auth.app.UserAuthApp.__init__","text":"__init__ ( app : AdminApp , msa_app = None )","title":"__init__()"},{"location":"reference/auth/app/#auth.app.UserAuthApp.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/site/","text":"msaSDK Module \u00b6 .auth.site \u00b6 Classes \u00b6 AuthAdminSite \u00b6 Bases: AdminSite Attributes \u00b6 UserAuthApp class-attribute \u00b6 UserAuthApp : Type [ UserAuthApp ] = UserAuthApp auth instance-attribute \u00b6 auth = auth or self . auth or Auth ( db = self . db ) Functions \u00b6 __init__ \u00b6 __init__ ( msa_app : MSAApp = None , auth : Auth = None ) get_page async \u00b6 get_page ( request : Request ) -> App has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool","title":"site"},{"location":"reference/auth/site/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/site/#authsite","text":"","title":".auth.site"},{"location":"reference/auth/site/#auth.site-classes","text":"","title":"Classes"},{"location":"reference/auth/site/#auth.site.AuthAdminSite","text":"Bases: AdminSite","title":"AuthAdminSite"},{"location":"reference/auth/site/#auth.site.AuthAdminSite-attributes","text":"","title":"Attributes"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.UserAuthApp","text":"UserAuthApp : Type [ UserAuthApp ] = UserAuthApp","title":"UserAuthApp"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.auth","text":"auth = auth or self . auth or Auth ( db = self . db )","title":"auth"},{"location":"reference/auth/site/#auth.site.AuthAdminSite-functions","text":"","title":"Functions"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.__init__","text":"__init__ ( msa_app : MSAApp = None , auth : Auth = None )","title":"__init__()"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.get_page","text":"get_page ( request : Request ) -> App","title":"get_page()"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/auth/auth/","text":"msaSDK Module \u00b6 .auth.auth.auth \u00b6 Classes \u00b6 Auth \u00b6 Bases: Generic [ _UserModelT ] Attributes \u00b6 backend instance-attribute \u00b6 backend = self . backend or AuthBackend ( self , token_store or DbTokenStore ( self . db ) ) db instance-attribute \u00b6 db = db or self . db pwd_context instance-attribute \u00b6 pwd_context = pwd_context user_model instance-attribute \u00b6 user_model = user_model or self . user_model Functions \u00b6 __init__ \u00b6 __init__ ( db : Union [ AsyncDatabase , Database ], token_store : BaseTokenStore = None , user_model : Type [ _UserModelT ] = User , pwd_context : CryptContext = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ), ) authenticate_user async \u00b6 authenticate_user ( username : str , password : Union [ str , SecretStr ] ) -> Optional [ _UserModelT ] create_role_user async \u00b6 create_role_user ( role_key : str = 'admin' ) -> User get_current_user \u00b6 get_current_user () requires \u00b6 requires ( roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None , status_code : int = 403 , redirect : str = None , response : Union [ bool , Response ] = None , ) -> Callable AuthBackend \u00b6 Bases: AuthenticationBackend , Generic [ _UserModelT ] Attributes \u00b6 auth instance-attribute \u00b6 auth = auth token_store instance-attribute \u00b6 token_store = token_store Functions \u00b6 __init__ \u00b6 __init__ ( auth : Auth , token_store : BaseTokenStore ) attach_middleware \u00b6 attach_middleware ( app : FastAPI ) authenticate async \u00b6 authenticate ( request : Request , ) -> Tuple [ Auth , Optional [ _UserModelT ]] get_user_token staticmethod \u00b6 get_user_token ( request : Request ) -> Optional [ str ] AuthRouter \u00b6 Bases: MSARouterMixin Attributes \u00b6 auth instance-attribute \u00b6 auth = auth or self . auth router_prefix class-attribute \u00b6 router_prefix = '/auth' schema_user_info instance-attribute \u00b6 schema_user_info = ( self . schema_user_info or schema_create_by_schema ( self . auth . user_model , \"UserInfo\" , exclude = { \"password\" }, ) ) schema_user_login_out class-attribute \u00b6 schema_user_login_out : Type [ UserLoginOut ] = UserLoginOut Classes \u00b6 OAuth2 \u00b6 Bases: OAuth2PasswordBearer Functions \u00b6 __call__ async \u00b6 __call__ ( request : Request ) -> Optional [ str ] Functions \u00b6 __init__ \u00b6 __init__ ( auth : Auth = None ) route_gettoken property \u00b6 route_gettoken () route_logout property \u00b6 route_logout () route_userinfo property \u00b6 route_userinfo () router_path \u00b6 router_path () -> str","title":"auth"},{"location":"reference/auth/auth/auth/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/auth/#authauthauth","text":"","title":".auth.auth.auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth","text":"Bases: Generic [ _UserModelT ]","title":"Auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.backend","text":"backend = self . backend or AuthBackend ( self , token_store or DbTokenStore ( self . db ) )","title":"backend"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.db","text":"db = db or self . db","title":"db"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.pwd_context","text":"pwd_context = pwd_context","title":"pwd_context"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.user_model","text":"user_model = user_model or self . user_model","title":"user_model"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.__init__","text":"__init__ ( db : Union [ AsyncDatabase , Database ], token_store : BaseTokenStore = None , user_model : Type [ _UserModelT ] = User , pwd_context : CryptContext = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ), )","title":"__init__()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.authenticate_user","text":"authenticate_user ( username : str , password : Union [ str , SecretStr ] ) -> Optional [ _UserModelT ]","title":"authenticate_user()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.create_role_user","text":"create_role_user ( role_key : str = 'admin' ) -> User","title":"create_role_user()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.get_current_user","text":"get_current_user ()","title":"get_current_user()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.requires","text":"requires ( roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None , status_code : int = 403 , redirect : str = None , response : Union [ bool , Response ] = None , ) -> Callable","title":"requires()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend","text":"Bases: AuthenticationBackend , Generic [ _UserModelT ]","title":"AuthBackend"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.auth","text":"auth = auth","title":"auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.token_store","text":"token_store = token_store","title":"token_store"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.__init__","text":"__init__ ( auth : Auth , token_store : BaseTokenStore )","title":"__init__()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.attach_middleware","text":"attach_middleware ( app : FastAPI )","title":"attach_middleware()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.authenticate","text":"authenticate ( request : Request , ) -> Tuple [ Auth , Optional [ _UserModelT ]]","title":"authenticate()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.get_user_token","text":"get_user_token ( request : Request ) -> Optional [ str ]","title":"get_user_token()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter","text":"Bases: MSARouterMixin","title":"AuthRouter"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.auth","text":"auth = auth or self . auth","title":"auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.router_prefix","text":"router_prefix = '/auth'","title":"router_prefix"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.schema_user_info","text":"schema_user_info = ( self . schema_user_info or schema_create_by_schema ( self . auth . user_model , \"UserInfo\" , exclude = { \"password\" }, ) )","title":"schema_user_info"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.schema_user_login_out","text":"schema_user_login_out : Type [ UserLoginOut ] = UserLoginOut","title":"schema_user_login_out"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.OAuth2","text":"Bases: OAuth2PasswordBearer","title":"OAuth2"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.OAuth2-functions","text":"__call__ async \u00b6 __call__ ( request : Request ) -> Optional [ str ]","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.__init__","text":"__init__ ( auth : Auth = None )","title":"__init__()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.route_gettoken","text":"route_gettoken ()","title":"route_gettoken()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.route_logout","text":"route_logout ()","title":"route_logout()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.route_userinfo","text":"route_userinfo ()","title":"route_userinfo()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/auth/auth/models/","text":"msaSDK Module \u00b6 .auth.auth.models \u00b6 Classes \u00b6 BaseGroup \u00b6 Bases: BaseRBAC Attributes \u00b6 __tablename__ class-attribute \u00b6 __tablename__ = 'auth_group' parent_id class-attribute \u00b6 parent_id : int = Field ( None , title = _ ( \"Parent\" ), foreign_key = \"auth_group.id\" ) BaseRBAC \u00b6 Bases: PkMixin Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } desc class-attribute \u00b6 desc : str = Field ( default = \"\" , title = _ ( \"Description\" ), max_length = 400 , msa_ui_form_item = \"textarea\" , ) key class-attribute \u00b6 key : str = Field ( Ellipsis , title = _ ( \"Identify\" ), max_length = 20 , sa_column = Column ( String ( 20 ), unique = True , index = True , nullable = False ), ) name class-attribute \u00b6 name : str = Field ( Ellipsis , title = _ ( 'Name' ), max_length = 20 ) BaseUser \u00b6 Bases: PkMixin , UsernameMixin , PasswordMixin , EmailMixin , CreateTimeMixin Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user' avatar class-attribute \u00b6 avatar : str = Field ( None , title = _ ( \"Avatar\" ), max_length = 100 , msa_ui_form_item = InputImage ( maxLength = 1 , maxSize = 2 * 1024 * 1024 , receiver = \"post:/admin/file/upload\" , ), msa_ui_table_column = ColumnImage ( width = 50 , height = 50 , enlargeAble = True ), ) is_active class-attribute \u00b6 is_active : bool = Field ( default = True , title = _ ( 'Is Active' )) nickname class-attribute \u00b6 nickname : str = Field ( None , title = _ ( \"Nickname\" ), max_length = 32 ) Classes \u00b6 Config \u00b6 Attributes \u00b6 use_enum_values class-attribute \u00b6 use_enum_values = True Functions \u00b6 display_name property \u00b6 display_name () -> str has_requires \u00b6 has_requires ( session : Session , * , roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None ) -> bool \u68c0\u67e5\u7528\u6237\u662f\u5426\u5c5e\u4e8e\u62e5\u6709\u6307\u5b9a\u7684RBAC\u6743\u9650 PARAMETER DESCRIPTION session sqlalchemy Session ;\u5f02\u6b65 AsyncSession ,\u8bf7\u4f7f\u7528 run_sync \u65b9\u6cd5. TYPE: Session roles \u89d2\u8272\u5217\u8868 TYPE: Union [ str , Sequence [ str ]] DEFAULT: None groups \u7528\u6237\u7ec4\u5217\u8868 TYPE: Union [ str , Sequence [ str ]] DEFAULT: None permissions \u6743\u9650\u5217\u8868 TYPE: Union [ str , Sequence [ str ]] DEFAULT: None RETURNS DESCRIPTION bool \u68c0\u6d4b\u6210\u529f\u8fd4\u56de True identity property \u00b6 identity () -> str is_authenticated property \u00b6 is_authenticated () -> bool CreateTimeMixin \u00b6 Bases: SQLModel Attributes \u00b6 create_time class-attribute \u00b6 create_time : datetime = Field ( default_factory = datetime . now , title = _ ( \"Create Time\" ) ) EmailMixin \u00b6 Bases: SQLModel Attributes \u00b6 email class-attribute \u00b6 email : EmailStr = Field ( None , title = _ ( \"Email\" ), sa_column = Column ( String ( 50 ), unique = True , index = True , nullable = True ), msa_ui_form_item = \"input-email\" , ) Group \u00b6 Bases: BaseGroup \u7528\u6237\u7ec4 Attributes \u00b6 roles class-attribute \u00b6 roles : List [ Role ] = Relationship ( back_populates = \"groups\" , link_model = GroupRoleLink ) GroupRoleLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_group_roles' group_id class-attribute \u00b6 group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , ) role_id class-attribute \u00b6 role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , ) PasswordMixin \u00b6 Bases: SQLModel Attributes \u00b6 password class-attribute \u00b6 password : PasswordStr = Field ( title = _ ( \"Password\" ), max_length = 128 , sa_column = Column ( String ( 128 ), nullable = False ), msa_ui_form_item = \"input-password\" , ) PasswordStr \u00b6 Bases: SecretStr , str Permission \u00b6 Bases: BaseRBAC \u6743\u9650 Attributes \u00b6 __tablename__ class-attribute \u00b6 __tablename__ = 'auth_permission' roles class-attribute \u00b6 roles : List [ Role ] = Relationship ( back_populates = \"permissions\" , link_model = RolePermissionLink , ) PkMixin \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = Field ( default = None , primary_key = True , nullable = False ) Role \u00b6 Bases: BaseRBAC \u89d2\u8272 Attributes \u00b6 __tablename__ class-attribute \u00b6 __tablename__ = 'auth_role' groups class-attribute \u00b6 groups : List [ Group ] = Relationship ( back_populates = \"roles\" , link_model = GroupRoleLink ) permissions class-attribute \u00b6 permissions : List [ Permission ] = Relationship ( back_populates = \"roles\" , link_model = RolePermissionLink ) RolePermissionLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_role_permissions' permission_id class-attribute \u00b6 permission_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_permission.id\" , primary_key = True , nullable = False , ) role_id class-attribute \u00b6 role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , ) User \u00b6 Bases: BaseUser Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user' groups class-attribute \u00b6 groups : List [ Group ] = Relationship ( link_model = UserGroupLink ) roles class-attribute \u00b6 roles : List [ Role ] = Relationship ( link_model = UserRoleLink ) UserGroupLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user_groups' group_id class-attribute \u00b6 group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , ) user_id class-attribute \u00b6 user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , ) UserRoleLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user_roles' role_id class-attribute \u00b6 role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , ) user_id class-attribute \u00b6 user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , ) UsernameMixin \u00b6 Bases: SQLModel Attributes \u00b6 username class-attribute \u00b6 username : str = Field ( title = _ ( \"Username\" ), max_length = 32 , sa_column = Column ( String ( 32 ), unique = True , index = True , nullable = False ), )","title":"models"},{"location":"reference/auth/auth/models/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/models/#authauthmodels","text":"","title":".auth.auth.models"},{"location":"reference/auth/auth/models/#auth.auth.models-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup","text":"Bases: BaseRBAC","title":"BaseGroup"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup.__tablename__","text":"__tablename__ = 'auth_group'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup.parent_id","text":"parent_id : int = Field ( None , title = _ ( \"Parent\" ), foreign_key = \"auth_group.id\" )","title":"parent_id"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC","text":"Bases: PkMixin","title":"BaseRBAC"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.desc","text":"desc : str = Field ( default = \"\" , title = _ ( \"Description\" ), max_length = 400 , msa_ui_form_item = \"textarea\" , )","title":"desc"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.key","text":"key : str = Field ( Ellipsis , title = _ ( \"Identify\" ), max_length = 20 , sa_column = Column ( String ( 20 ), unique = True , index = True , nullable = False ), )","title":"key"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.name","text":"name : str = Field ( Ellipsis , title = _ ( 'Name' ), max_length = 20 )","title":"name"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser","text":"Bases: PkMixin , UsernameMixin , PasswordMixin , EmailMixin , CreateTimeMixin","title":"BaseUser"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.__tablename__","text":"__tablename__ = 'auth_user'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.avatar","text":"avatar : str = Field ( None , title = _ ( \"Avatar\" ), max_length = 100 , msa_ui_form_item = InputImage ( maxLength = 1 , maxSize = 2 * 1024 * 1024 , receiver = \"post:/admin/file/upload\" , ), msa_ui_table_column = ColumnImage ( width = 50 , height = 50 , enlargeAble = True ), )","title":"avatar"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.is_active","text":"is_active : bool = Field ( default = True , title = _ ( 'Is Active' ))","title":"is_active"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.nickname","text":"nickname : str = Field ( None , title = _ ( \"Nickname\" ), max_length = 32 )","title":"nickname"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.Config","text":"","title":"Config"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.Config-attributes","text":"use_enum_values class-attribute \u00b6 use_enum_values = True","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.display_name","text":"display_name () -> str","title":"display_name()"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.has_requires","text":"has_requires ( session : Session , * , roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None ) -> bool \u68c0\u67e5\u7528\u6237\u662f\u5426\u5c5e\u4e8e\u62e5\u6709\u6307\u5b9a\u7684RBAC\u6743\u9650 PARAMETER DESCRIPTION session sqlalchemy Session ;\u5f02\u6b65 AsyncSession ,\u8bf7\u4f7f\u7528 run_sync \u65b9\u6cd5. TYPE: Session roles \u89d2\u8272\u5217\u8868 TYPE: Union [ str , Sequence [ str ]] DEFAULT: None groups \u7528\u6237\u7ec4\u5217\u8868 TYPE: Union [ str , Sequence [ str ]] DEFAULT: None permissions \u6743\u9650\u5217\u8868 TYPE: Union [ str , Sequence [ str ]] DEFAULT: None RETURNS DESCRIPTION bool \u68c0\u6d4b\u6210\u529f\u8fd4\u56de True","title":"has_requires()"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.identity","text":"identity () -> str","title":"identity()"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.is_authenticated","text":"is_authenticated () -> bool","title":"is_authenticated()"},{"location":"reference/auth/auth/models/#auth.auth.models.CreateTimeMixin","text":"Bases: SQLModel","title":"CreateTimeMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.CreateTimeMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.CreateTimeMixin.create_time","text":"create_time : datetime = Field ( default_factory = datetime . now , title = _ ( \"Create Time\" ) )","title":"create_time"},{"location":"reference/auth/auth/models/#auth.auth.models.EmailMixin","text":"Bases: SQLModel","title":"EmailMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.EmailMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.EmailMixin.email","text":"email : EmailStr = Field ( None , title = _ ( \"Email\" ), sa_column = Column ( String ( 50 ), unique = True , index = True , nullable = True ), msa_ui_form_item = \"input-email\" , )","title":"email"},{"location":"reference/auth/auth/models/#auth.auth.models.Group","text":"Bases: BaseGroup \u7528\u6237\u7ec4","title":"Group"},{"location":"reference/auth/auth/models/#auth.auth.models.Group-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.Group.roles","text":"roles : List [ Role ] = Relationship ( back_populates = \"groups\" , link_model = GroupRoleLink )","title":"roles"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink","text":"Bases: SQLModel","title":"GroupRoleLink"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.__tablename__","text":"__tablename__ = 'auth_group_roles'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.group_id","text":"group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , )","title":"group_id"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.role_id","text":"role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , )","title":"role_id"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordMixin","text":"Bases: SQLModel","title":"PasswordMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordMixin.password","text":"password : PasswordStr = Field ( title = _ ( \"Password\" ), max_length = 128 , sa_column = Column ( String ( 128 ), nullable = False ), msa_ui_form_item = \"input-password\" , )","title":"password"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordStr","text":"Bases: SecretStr , str","title":"PasswordStr"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission","text":"Bases: BaseRBAC \u6743\u9650","title":"Permission"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission.__tablename__","text":"__tablename__ = 'auth_permission'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission.roles","text":"roles : List [ Role ] = Relationship ( back_populates = \"permissions\" , link_model = RolePermissionLink , )","title":"roles"},{"location":"reference/auth/auth/models/#auth.auth.models.PkMixin","text":"Bases: SQLModel","title":"PkMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.PkMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.PkMixin.id","text":"id : int = Field ( default = None , primary_key = True , nullable = False )","title":"id"},{"location":"reference/auth/auth/models/#auth.auth.models.Role","text":"Bases: BaseRBAC \u89d2\u8272","title":"Role"},{"location":"reference/auth/auth/models/#auth.auth.models.Role-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.Role.__tablename__","text":"__tablename__ = 'auth_role'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.Role.groups","text":"groups : List [ Group ] = Relationship ( back_populates = \"roles\" , link_model = GroupRoleLink )","title":"groups"},{"location":"reference/auth/auth/models/#auth.auth.models.Role.permissions","text":"permissions : List [ Permission ] = Relationship ( back_populates = \"roles\" , link_model = RolePermissionLink )","title":"permissions"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink","text":"Bases: SQLModel","title":"RolePermissionLink"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.__tablename__","text":"__tablename__ = 'auth_role_permissions'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.permission_id","text":"permission_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_permission.id\" , primary_key = True , nullable = False , )","title":"permission_id"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.role_id","text":"role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , )","title":"role_id"},{"location":"reference/auth/auth/models/#auth.auth.models.User","text":"Bases: BaseUser","title":"User"},{"location":"reference/auth/auth/models/#auth.auth.models.User-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.User.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.User.__tablename__","text":"__tablename__ = 'auth_user'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.User.groups","text":"groups : List [ Group ] = Relationship ( link_model = UserGroupLink )","title":"groups"},{"location":"reference/auth/auth/models/#auth.auth.models.User.roles","text":"roles : List [ Role ] = Relationship ( link_model = UserRoleLink )","title":"roles"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink","text":"Bases: SQLModel","title":"UserGroupLink"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.__tablename__","text":"__tablename__ = 'auth_user_groups'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.group_id","text":"group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , )","title":"group_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.user_id","text":"user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , )","title":"user_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink","text":"Bases: SQLModel","title":"UserRoleLink"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.__tablename__","text":"__tablename__ = 'auth_user_roles'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.role_id","text":"role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , )","title":"role_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.user_id","text":"user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , )","title":"user_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UsernameMixin","text":"Bases: SQLModel","title":"UsernameMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.UsernameMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.UsernameMixin.username","text":"username : str = Field ( title = _ ( \"Username\" ), max_length = 32 , sa_column = Column ( String ( 32 ), unique = True , index = True , nullable = False ), )","title":"username"},{"location":"reference/auth/auth/schemas/","text":"msaSDK Module \u00b6 .auth.auth.schemas \u00b6 Classes \u00b6 BaseTokenData \u00b6 Bases: BaseModel Attributes \u00b6 id class-attribute \u00b6 id : int username class-attribute \u00b6 username : str UserLoginOut \u00b6 Bases: BaseUser Attributes \u00b6 access_token class-attribute \u00b6 access_token : str = None password class-attribute \u00b6 password : SecretStr = None token_type class-attribute \u00b6 token_type : str = 'bearer' UserRegIn \u00b6 Bases: UsernameMixin , PasswordMixin , EmailMixin Attributes \u00b6 password2 class-attribute \u00b6 password2 : str = Field ( title = _ ( \"Confirm Password\" ), max_length = 128 ) Functions \u00b6 passwords_match \u00b6 passwords_match ( v , values , ** kwargs )","title":"schemas"},{"location":"reference/auth/auth/schemas/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/schemas/#authauthschemas","text":"","title":".auth.auth.schemas"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData","text":"Bases: BaseModel","title":"BaseTokenData"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData.id","text":"id : int","title":"id"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData.username","text":"username : str","title":"username"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut","text":"Bases: BaseUser","title":"UserLoginOut"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut.access_token","text":"access_token : str = None","title":"access_token"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut.password","text":"password : SecretStr = None","title":"password"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut.token_type","text":"token_type : str = 'bearer'","title":"token_type"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn","text":"Bases: UsernameMixin , PasswordMixin , EmailMixin","title":"UserRegIn"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn.password2","text":"password2 : str = Field ( title = _ ( \"Confirm Password\" ), max_length = 128 )","title":"password2"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn.passwords_match","text":"passwords_match ( v , values , ** kwargs )","title":"passwords_match()"},{"location":"reference/auth/auth/backends/base/","text":"msaSDK Module \u00b6 .auth.auth.backends.base \u00b6 Classes \u00b6 BaseTokenStore \u00b6 Bases: Generic [ _TokenDataSchemaT ] Attributes \u00b6 TokenDataSchema instance-attribute \u00b6 TokenDataSchema = TokenDataSchema or BaseTokenData expire_seconds instance-attribute \u00b6 expire_seconds = expire_seconds Functions \u00b6 __init__ \u00b6 __init__ ( expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) -> None destroy_token async \u00b6 destroy_token ( token : str ) -> None read_token async \u00b6 read_token ( token : Optional [ str ], ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"base"},{"location":"reference/auth/auth/backends/base/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/base/#authauthbackendsbase","text":"","title":".auth.auth.backends.base"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore","text":"Bases: Generic [ _TokenDataSchemaT ]","title":"BaseTokenStore"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.TokenDataSchema","text":"TokenDataSchema = TokenDataSchema or BaseTokenData","title":"TokenDataSchema"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.expire_seconds","text":"expire_seconds = expire_seconds","title":"expire_seconds"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.__init__","text":"__init__ ( expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) -> None","title":"__init__()"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.read_token","text":"read_token ( token : Optional [ str ], ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/auth/auth/backends/db/","text":"msaSDK Module \u00b6 .auth.auth.backends.db \u00b6 Classes \u00b6 DbTokenStore \u00b6 Bases: BaseTokenStore Attributes \u00b6 db instance-attribute \u00b6 db = db Functions \u00b6 __init__ \u00b6 __init__ ( db : Union [ AsyncDatabase , Database ], expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) destroy_token async \u00b6 destroy_token ( token : str ) -> None read_token async \u00b6 read_token ( token : str ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str TokenStoreModel \u00b6 Bases: PkMixin , CreateTimeMixin Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_token' data class-attribute \u00b6 data : str = Field ( default = '' ) token class-attribute \u00b6 token : str = Field ( Ellipsis , max_length = 48 , sa_column = Column ( String ( 48 ), unique = True , index = True , nullable = False ), )","title":"db"},{"location":"reference/auth/auth/backends/db/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/db/#authauthbackendsdb","text":"","title":".auth.auth.backends.db"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore","text":"Bases: BaseTokenStore","title":"DbTokenStore"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.db","text":"db = db","title":"db"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.__init__","text":"__init__ ( db : Union [ AsyncDatabase , Database ], expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , )","title":"__init__()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.read_token","text":"read_token ( token : str ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel","text":"Bases: PkMixin , CreateTimeMixin","title":"TokenStoreModel"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.__tablename__","text":"__tablename__ = 'auth_token'","title":"__tablename__"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.data","text":"data : str = Field ( default = '' )","title":"data"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.token","text":"token : str = Field ( Ellipsis , max_length = 48 , sa_column = Column ( String ( 48 ), unique = True , index = True , nullable = False ), )","title":"token"},{"location":"reference/auth/auth/backends/jwt/","text":"msaSDK Module \u00b6 .auth.auth.backends.jwt \u00b6 Classes \u00b6 JwtTokenStore \u00b6 Bases: BaseTokenStore Attributes \u00b6 algorithm instance-attribute \u00b6 algorithm = algorithm secret_key instance-attribute \u00b6 secret_key = secret_key Functions \u00b6 __init__ \u00b6 __init__ ( secret_key : str , algorithm : str = \"HS256\" , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) destroy_token async \u00b6 destroy_token ( token : str ) -> None read_token async \u00b6 read_token ( token : str ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"jwt"},{"location":"reference/auth/auth/backends/jwt/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/jwt/#authauthbackendsjwt","text":"","title":".auth.auth.backends.jwt"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore","text":"Bases: BaseTokenStore","title":"JwtTokenStore"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.algorithm","text":"algorithm = algorithm","title":"algorithm"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.secret_key","text":"secret_key = secret_key","title":"secret_key"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.__init__","text":"__init__ ( secret_key : str , algorithm : str = \"HS256\" , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , )","title":"__init__()"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.read_token","text":"read_token ( token : str ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/auth/auth/backends/redis/","text":"msaSDK Module \u00b6 .auth.auth.backends.redis \u00b6 Classes \u00b6 RedisTokenStore \u00b6 Bases: BaseTokenStore Attributes \u00b6 redis instance-attribute \u00b6 redis = redis Functions \u00b6 __init__ \u00b6 __init__ ( redis : Redis , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) destroy_token async \u00b6 destroy_token ( token : str ) -> None get_key \u00b6 get_key ( token : str ) read_token async \u00b6 read_token ( token : str ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"redis"},{"location":"reference/auth/auth/backends/redis/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/redis/#authauthbackendsredis","text":"","title":".auth.auth.backends.redis"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore","text":"Bases: BaseTokenStore","title":"RedisTokenStore"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.redis","text":"redis = redis","title":"redis"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.__init__","text":"__init__ ( redis : Redis , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , )","title":"__init__()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.get_key","text":"get_key ( token : str )","title":"get_key()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.read_token","text":"read_token ( token : str ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/db/crud/_sqlmodel/","text":"msaSDK Module \u00b6 .db.crud._sqlmodel \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' sql_operator_map module-attribute \u00b6 sql_operator_map : Dict [ str , str ] = { \"=\" : \"__eq__\" , \"<=\" : \"__le__\" , \"<\" : \"__lt__\" , \">\" : \"__gt__\" , \">=\" : \"__ge__\" , \"!\" : \"__ne__\" , \"!=\" : \"__ne__\" , \"<>\" : \"__ne__\" , \"*\" : \"in_\" , \"!*\" : \"not_in\" , \"~\" : \"like\" , \"!~\" : \"not_like\" , \"-\" : \"between\" , } sql_operator_pattern module-attribute \u00b6 sql_operator_pattern : Pattern = re . compile ( \"^ \\\\ [(=|<=|<|>|>=|!|!=|<>| \\\\ *|! \\\\ *|~|!~|-)]\" ) Classes \u00b6 MSASQLModelCrud \u00b6 Bases: MSABaseCrud , MSASQLModelSelector Attributes \u00b6 create_fields class-attribute \u00b6 create_fields : List [ SQLModelField ] = [] db instance-attribute \u00b6 db = ( AsyncDatabase ( self . engine ) if isinstance ( self . engine , AsyncEngine ) else Database ( self . engine ) ) engine instance-attribute \u00b6 engine = engine or self . engine list_filter class-attribute \u00b6 list_filter : List [ SQLModelListField ] = [] readonly_fields class-attribute \u00b6 readonly_fields : List [ SQLModelListField ] = [] update_fields class-attribute \u00b6 update_fields : List [ SQLModelListField ] = [] Functions \u00b6 __init__ \u00b6 __init__ ( model : Type [ SQLModel ], engine : Union [ Engine , AsyncEngine ], fields : List [ SQLModelListField ] = None , router : APIRouter = None , ) -> None on_create_pre async \u00b6 on_create_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ] on_filter_pre async \u00b6 on_filter_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ] on_update_pre async \u00b6 on_update_pre ( request : Request , obj : BaseModel , item_id : Union [ List [ str ], List [ int ]], ** kwargs ) -> Dict [ str , Any ] route_create property \u00b6 route_create () -> Callable route_delete property \u00b6 route_delete () -> Callable route_list property \u00b6 route_list () -> Callable route_read property \u00b6 route_read () -> Callable route_update property \u00b6 route_update () -> Callable schema_name_prefix property \u00b6 schema_name_prefix () MSASQLModelSelector \u00b6 SQLModel Selector PARAMETER DESCRIPTION model The SQLModel to use TYPE: Type [ SQLModel ] DEFAULT: None fields List of the SQlModelListFields TYPE: List [ SQLModelListField ] DEFAULT: None Attributes \u00b6 exclude class-attribute \u00b6 exclude : List [ SQLModelListField ] = [] Excluded fields list. A list of fields to exclude from the current model. Supports current SQLModel model fields, current model database table field names Default: [] fields instance-attribute \u00b6 fields = list ( filter ( lambda x : x not in self . parser . filter_insfield ( self . exclude ), self . parser . filter_insfield ( self . fields ), ) ) link_models class-attribute \u00b6 link_models : Dict [ str , Tuple [ Type [ Table ], Column , Column ] ] = {} Dictionary of link models. More complex, detailed parsing to be done. model instance-attribute \u00b6 model = model or self . model ordering class-attribute \u00b6 ordering : List [ Union [ SQLModelListField , UnaryExpression ] ] = [] List of fields sorted by selector. Default: [] parser instance-attribute \u00b6 parser = MSASQLModelFieldParser ( self . model ) pk instance-attribute \u00b6 pk : InstrumentedAttribute = self . model . __dict__ [ self . pk_name ] pk_name instance-attribute \u00b6 pk_name : str = ( self . pk_name or self . model . __table__ . primary_key . columns . keys ()[ 0 ] ) Functions \u00b6 __init__ \u00b6 __init__ ( model : Type [ SQLModel ] = None , fields : List [ SQLModelListField ] = None , ) -> None calc_filter_clause \u00b6 calc_filter_clause ( data : Dict [ str , Any ] ) -> List [ BinaryExpression ] get_link_clause async \u00b6 get_link_clause ( request : Request , link_model : str = None , link_item_id : Union [ int , str ] = Query ( None , title = \"pk\" , example = \"1,2,3\" , description = \"Link Model Primary key or list of primary keys\" , ), ) -> Optional [ Any ] get_select async \u00b6 get_select ( request : Request ) -> Select Functions \u00b6","title":"_sqlmodel"},{"location":"reference/db/crud/_sqlmodel/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/_sqlmodel/#dbcrud_sqlmodel","text":"","title":".db.crud._sqlmodel"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.sql_operator_map","text":"sql_operator_map : Dict [ str , str ] = { \"=\" : \"__eq__\" , \"<=\" : \"__le__\" , \"<\" : \"__lt__\" , \">\" : \"__gt__\" , \">=\" : \"__ge__\" , \"!\" : \"__ne__\" , \"!=\" : \"__ne__\" , \"<>\" : \"__ne__\" , \"*\" : \"in_\" , \"!*\" : \"not_in\" , \"~\" : \"like\" , \"!~\" : \"not_like\" , \"-\" : \"between\" , }","title":"sql_operator_map"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.sql_operator_pattern","text":"sql_operator_pattern : Pattern = re . compile ( \"^ \\\\ [(=|<=|<|>|>=|!|!=|<>| \\\\ *|! \\\\ *|~|!~|-)]\" )","title":"sql_operator_pattern"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel-classes","text":"","title":"Classes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud","text":"Bases: MSABaseCrud , MSASQLModelSelector","title":"MSASQLModelCrud"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.create_fields","text":"create_fields : List [ SQLModelField ] = []","title":"create_fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.db","text":"db = ( AsyncDatabase ( self . engine ) if isinstance ( self . engine , AsyncEngine ) else Database ( self . engine ) )","title":"db"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.engine","text":"engine = engine or self . engine","title":"engine"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.list_filter","text":"list_filter : List [ SQLModelListField ] = []","title":"list_filter"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.readonly_fields","text":"readonly_fields : List [ SQLModelListField ] = []","title":"readonly_fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.update_fields","text":"update_fields : List [ SQLModelListField ] = []","title":"update_fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud-functions","text":"","title":"Functions"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.__init__","text":"__init__ ( model : Type [ SQLModel ], engine : Union [ Engine , AsyncEngine ], fields : List [ SQLModelListField ] = None , router : APIRouter = None , ) -> None","title":"__init__()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.on_create_pre","text":"on_create_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ]","title":"on_create_pre()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.on_filter_pre","text":"on_filter_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ]","title":"on_filter_pre()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.on_update_pre","text":"on_update_pre ( request : Request , obj : BaseModel , item_id : Union [ List [ str ], List [ int ]], ** kwargs ) -> Dict [ str , Any ]","title":"on_update_pre()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_create","text":"route_create () -> Callable","title":"route_create()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_delete","text":"route_delete () -> Callable","title":"route_delete()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_list","text":"route_list () -> Callable","title":"route_list()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_read","text":"route_read () -> Callable","title":"route_read()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_update","text":"route_update () -> Callable","title":"route_update()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.schema_name_prefix","text":"schema_name_prefix ()","title":"schema_name_prefix()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector","text":"SQLModel Selector PARAMETER DESCRIPTION model The SQLModel to use TYPE: Type [ SQLModel ] DEFAULT: None fields List of the SQlModelListFields TYPE: List [ SQLModelListField ] DEFAULT: None","title":"MSASQLModelSelector"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.exclude","text":"exclude : List [ SQLModelListField ] = [] Excluded fields list. A list of fields to exclude from the current model. Supports current SQLModel model fields, current model database table field names Default: []","title":"exclude"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.fields","text":"fields = list ( filter ( lambda x : x not in self . parser . filter_insfield ( self . exclude ), self . parser . filter_insfield ( self . fields ), ) )","title":"fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.link_models","text":"link_models : Dict [ str , Tuple [ Type [ Table ], Column , Column ] ] = {} Dictionary of link models. More complex, detailed parsing to be done.","title":"link_models"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.model","text":"model = model or self . model","title":"model"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.ordering","text":"ordering : List [ Union [ SQLModelListField , UnaryExpression ] ] = [] List of fields sorted by selector. Default: []","title":"ordering"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.parser","text":"parser = MSASQLModelFieldParser ( self . model )","title":"parser"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.pk","text":"pk : InstrumentedAttribute = self . model . __dict__ [ self . pk_name ]","title":"pk"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.pk_name","text":"pk_name : str = ( self . pk_name or self . model . __table__ . primary_key . columns . keys ()[ 0 ] )","title":"pk_name"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector-functions","text":"","title":"Functions"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.__init__","text":"__init__ ( model : Type [ SQLModel ] = None , fields : List [ SQLModelListField ] = None , ) -> None","title":"__init__()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.calc_filter_clause","text":"calc_filter_clause ( data : Dict [ str , Any ] ) -> List [ BinaryExpression ]","title":"calc_filter_clause()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.get_link_clause","text":"get_link_clause ( request : Request , link_model : str = None , link_item_id : Union [ int , str ] = Query ( None , title = \"pk\" , example = \"1,2,3\" , description = \"Link Model Primary key or list of primary keys\" , ), ) -> Optional [ Any ]","title":"get_link_clause()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.get_select","text":"get_select ( request : Request ) -> Select","title":"get_select()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel-functions","text":"","title":"Functions"},{"location":"reference/db/crud/base/","text":"msaSDK Module \u00b6 .db.crud.base \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSABaseCrud \u00b6 Bases: MSARouterMixin Register Router Base Class Note Database tables have and can only have one self-adding primary key. Attributes \u00b6 list_per_page_max class-attribute \u00b6 list_per_page_max : int = None Maximum number of data per page to read in batches. Default: None, no limit. paginator instance-attribute \u00b6 paginator : Type [ MSACRUDPaginator ] = MSACRUDPaginator pk_name class-attribute \u00b6 pk_name : str = 'id' Current model primary key string, default: id. Note: Database tables have and can only have one self-adding primary key. router instance-attribute \u00b6 router = router schema_create class-attribute \u00b6 schema_create : Type [ BaseModel ] = None Create data submission protocol, default: self.schema_model schema_filter class-attribute \u00b6 schema_filter : Type [ BaseModel ] = None Batch query data filter submission protocol, default: self.schema_model schema_list class-attribute \u00b6 schema_list : Type [ BaseModel ] = None Batch query data return protocol, default: self.schema_model schema_model instance-attribute \u00b6 schema_model = schema_model or self . schema_model schema_read class-attribute \u00b6 schema_read : Type [ BaseModel ] = None Read data return protocol, default: self.schema_model schema_update class-attribute \u00b6 schema_update : Type [ BaseModel ] = None Update data submission protocol, default: self.schema_model Functions \u00b6 __init__ \u00b6 __init__ ( schema_model : Type [ BaseModel ], router : APIRouter = None ) error_data_handle \u00b6 error_data_handle ( request : Request ) error_execute_sql \u00b6 error_execute_sql ( request : Request , error : Exception ) has_create_permission async \u00b6 has_create_permission ( request : Request , obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single create permission. has_delete_permission async \u00b6 has_delete_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single delete permission. has_list_permission async \u00b6 has_list_permission ( request : Request , paginator : Optional [ MSACRUDPaginator ], filters : Optional [ BaseModel ], ** kwargs ) -> bool Check for bulk query permission. has_read_permission async \u00b6 has_read_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single read permission. has_update_permission async \u00b6 has_update_permission ( request : Request , item_id : Optional [ List [ str ]], obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single update permission. register_crud \u00b6 register_crud ( schema_list : Type [ BaseModel ] = None , schema_filter : Type [ BaseModel ] = None , schema_create : Type [ BaseModel ] = None , schema_read : Type [ BaseModel ] = None , schema_update : Type [ BaseModel ] = None , list_max_per_page : int = None , depends_list : List [ Depends ] = None , depends_read : List [ Depends ] = None , depends_create : List [ Depends ] = None , depends_update : List [ Depends ] = None , depends_delete : List [ Depends ] = None , ) -> MSABaseCrud Register Crud routing. route_create property \u00b6 route_create () -> Callable [ ... , Any ] Single/batch creation of routing functions. Support for synchronous/asynchronous functions. route_delete property \u00b6 route_delete () -> Callable [ ... , Any ] Single/batch delete routing functions. Support for synchronous/asynchronous functions. route_list property \u00b6 route_list () -> Callable [ ... , Any ] Batch read routing functions. Support for synchronous/asynchronous functions. route_read property \u00b6 route_read () -> Callable [ ... , Any ] Single/batch read routing functions. Support for synchronous/asynchronous functions. route_update property \u00b6 route_update () -> Callable [ ... , Any ] Single/batch update routing functions. Support for synchronous/asynchronous functions. router_prefix property \u00b6 router_prefix () schema_name_prefix property \u00b6 schema_name_prefix () MSARouterMixin \u00b6 Register Router Attributes \u00b6 router instance-attribute \u00b6 router = self . get_router () router_permission_depend class-attribute \u00b6 router_permission_depend : Callable = None router_prefix class-attribute \u00b6 router_prefix : Optional [ str ] = None Functions \u00b6 __init__ \u00b6 __init__ () error_no_router_permission \u00b6 error_no_router_permission ( request : Request ) get_router \u00b6 get_router () -> APIRouter Functions \u00b6","title":"base"},{"location":"reference/db/crud/base/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/base/#dbcrudbase","text":"","title":".db.crud.base"},{"location":"reference/db/crud/base/#db.crud.base-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/base/#db.crud.base.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/db/crud/base/#db.crud.base-classes","text":"","title":"Classes"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud","text":"Bases: MSARouterMixin Register Router Base Class Note Database tables have and can only have one self-adding primary key.","title":"MSABaseCrud"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.list_per_page_max","text":"list_per_page_max : int = None Maximum number of data per page to read in batches. Default: None, no limit.","title":"list_per_page_max"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.paginator","text":"paginator : Type [ MSACRUDPaginator ] = MSACRUDPaginator","title":"paginator"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.pk_name","text":"pk_name : str = 'id' Current model primary key string, default: id. Note: Database tables have and can only have one self-adding primary key.","title":"pk_name"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.router","text":"router = router","title":"router"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_create","text":"schema_create : Type [ BaseModel ] = None Create data submission protocol, default: self.schema_model","title":"schema_create"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_filter","text":"schema_filter : Type [ BaseModel ] = None Batch query data filter submission protocol, default: self.schema_model","title":"schema_filter"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_list","text":"schema_list : Type [ BaseModel ] = None Batch query data return protocol, default: self.schema_model","title":"schema_list"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_model","text":"schema_model = schema_model or self . schema_model","title":"schema_model"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_read","text":"schema_read : Type [ BaseModel ] = None Read data return protocol, default: self.schema_model","title":"schema_read"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_update","text":"schema_update : Type [ BaseModel ] = None Update data submission protocol, default: self.schema_model","title":"schema_update"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud-functions","text":"","title":"Functions"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.__init__","text":"__init__ ( schema_model : Type [ BaseModel ], router : APIRouter = None )","title":"__init__()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.error_data_handle","text":"error_data_handle ( request : Request )","title":"error_data_handle()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.error_execute_sql","text":"error_execute_sql ( request : Request , error : Exception )","title":"error_execute_sql()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_create_permission","text":"has_create_permission ( request : Request , obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single create permission.","title":"has_create_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_delete_permission","text":"has_delete_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single delete permission.","title":"has_delete_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_list_permission","text":"has_list_permission ( request : Request , paginator : Optional [ MSACRUDPaginator ], filters : Optional [ BaseModel ], ** kwargs ) -> bool Check for bulk query permission.","title":"has_list_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_read_permission","text":"has_read_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single read permission.","title":"has_read_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_update_permission","text":"has_update_permission ( request : Request , item_id : Optional [ List [ str ]], obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single update permission.","title":"has_update_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.register_crud","text":"register_crud ( schema_list : Type [ BaseModel ] = None , schema_filter : Type [ BaseModel ] = None , schema_create : Type [ BaseModel ] = None , schema_read : Type [ BaseModel ] = None , schema_update : Type [ BaseModel ] = None , list_max_per_page : int = None , depends_list : List [ Depends ] = None , depends_read : List [ Depends ] = None , depends_create : List [ Depends ] = None , depends_update : List [ Depends ] = None , depends_delete : List [ Depends ] = None , ) -> MSABaseCrud Register Crud routing.","title":"register_crud()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_create","text":"route_create () -> Callable [ ... , Any ] Single/batch creation of routing functions. Support for synchronous/asynchronous functions.","title":"route_create()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_delete","text":"route_delete () -> Callable [ ... , Any ] Single/batch delete routing functions. Support for synchronous/asynchronous functions.","title":"route_delete()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_list","text":"route_list () -> Callable [ ... , Any ] Batch read routing functions. Support for synchronous/asynchronous functions.","title":"route_list()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_read","text":"route_read () -> Callable [ ... , Any ] Single/batch read routing functions. Support for synchronous/asynchronous functions.","title":"route_read()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_update","text":"route_update () -> Callable [ ... , Any ] Single/batch update routing functions. Support for synchronous/asynchronous functions.","title":"route_update()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.router_prefix","text":"router_prefix ()","title":"router_prefix()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_name_prefix","text":"schema_name_prefix ()","title":"schema_name_prefix()"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin","text":"Register Router","title":"MSARouterMixin"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.router","text":"router = self . get_router ()","title":"router"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.router_permission_depend","text":"router_permission_depend : Callable = None","title":"router_permission_depend"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.router_prefix","text":"router_prefix : Optional [ str ] = None","title":"router_prefix"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin-functions","text":"","title":"Functions"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.__init__","text":"__init__ ()","title":"__init__()"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.error_no_router_permission","text":"error_no_router_permission ( request : Request )","title":"error_no_router_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.get_router","text":"get_router () -> APIRouter","title":"get_router()"},{"location":"reference/db/crud/base/#db.crud.base-functions","text":"","title":"Functions"},{"location":"reference/db/crud/parser/","text":"msaSDK Module \u00b6 .db.crud.parser \u00b6 Attributes \u00b6 SQLModelField module-attribute \u00b6 SQLModelField = Union [ str , InstrumentedAttribute ] SQLModelListField module-attribute \u00b6 SQLModelListField = Union [ Type [ SQLModel ], SQLModelField ] __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSASQLModelFieldParser \u00b6 Attributes \u00b6 default_model instance-attribute \u00b6 default_model = default_model Functions \u00b6 __init__ \u00b6 __init__ ( default_model : Type [ SQLModel ]) conv_row_to_dict \u00b6 conv_row_to_dict ( rows : Union [ Row , List [ Row ]] ) -> Union [ None , Dict [ str , Any ], List [ Dict [ str , Any ]]] sqlalchemy row to dict filter_insfield \u00b6 filter_insfield ( fields : Iterable [ Union [ SQLModelListField , Any ]], save_class : Tuple [ type ] = None , ) -> List [ Union [ InstrumentedAttribute , Any ]] get_alias \u00b6 get_alias ( field : Union [ Column , SQLModelField , Label ] ) -> str get_column \u00b6 get_column ( field : SQLModelField ) -> Optional [ Column ] sqlalchemy Column get_insfield \u00b6 get_insfield ( field : SQLModelField , ) -> Optional [ InstrumentedAttribute ] get_modelfield \u00b6 get_modelfield ( field : Union [ ModelField , SQLModelField ], deepcopy : bool = False , ) -> Optional [ ModelField ] pydantic ModelField get_name \u00b6 get_name ( field : InstrumentedAttribute ) -> str get_row_keys \u00b6 get_row_keys ( row : Row ) -> List [ str ] sqlalchemy row keys get_select_keys \u00b6 get_select_keys ( stmt : Select ) -> List [ str ] sqlalchemy select keys get_sqlmodel_insfield \u00b6 get_sqlmodel_insfield ( model : Type [ SQLModel ], ) -> List [ InstrumentedAttribute ] Functions \u00b6 get_python_type_parse cached \u00b6 get_python_type_parse ( field : Union [ InstrumentedAttribute , Column ] ) -> Callable This function returns a cached instance of the Python Type Callable object. Note Caching is used to prevent re-reading the environment every time the object is used.","title":"parser"},{"location":"reference/db/crud/parser/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/parser/#dbcrudparser","text":"","title":".db.crud.parser"},{"location":"reference/db/crud/parser/#db.crud.parser-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/parser/#db.crud.parser.SQLModelField","text":"SQLModelField = Union [ str , InstrumentedAttribute ]","title":"SQLModelField"},{"location":"reference/db/crud/parser/#db.crud.parser.SQLModelListField","text":"SQLModelListField = Union [ Type [ SQLModel ], SQLModelField ]","title":"SQLModelListField"},{"location":"reference/db/crud/parser/#db.crud.parser.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/db/crud/parser/#db.crud.parser-classes","text":"","title":"Classes"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser","text":"","title":"MSASQLModelFieldParser"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.default_model","text":"default_model = default_model","title":"default_model"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser-functions","text":"","title":"Functions"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.__init__","text":"__init__ ( default_model : Type [ SQLModel ])","title":"__init__()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.conv_row_to_dict","text":"conv_row_to_dict ( rows : Union [ Row , List [ Row ]] ) -> Union [ None , Dict [ str , Any ], List [ Dict [ str , Any ]]] sqlalchemy row to dict","title":"conv_row_to_dict()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.filter_insfield","text":"filter_insfield ( fields : Iterable [ Union [ SQLModelListField , Any ]], save_class : Tuple [ type ] = None , ) -> List [ Union [ InstrumentedAttribute , Any ]]","title":"filter_insfield()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_alias","text":"get_alias ( field : Union [ Column , SQLModelField , Label ] ) -> str","title":"get_alias()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_column","text":"get_column ( field : SQLModelField ) -> Optional [ Column ] sqlalchemy Column","title":"get_column()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_insfield","text":"get_insfield ( field : SQLModelField , ) -> Optional [ InstrumentedAttribute ]","title":"get_insfield()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_modelfield","text":"get_modelfield ( field : Union [ ModelField , SQLModelField ], deepcopy : bool = False , ) -> Optional [ ModelField ] pydantic ModelField","title":"get_modelfield()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_name","text":"get_name ( field : InstrumentedAttribute ) -> str","title":"get_name()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_row_keys","text":"get_row_keys ( row : Row ) -> List [ str ] sqlalchemy row keys","title":"get_row_keys()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_select_keys","text":"get_select_keys ( stmt : Select ) -> List [ str ] sqlalchemy select keys","title":"get_select_keys()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_sqlmodel_insfield","text":"get_sqlmodel_insfield ( model : Type [ SQLModel ], ) -> List [ InstrumentedAttribute ]","title":"get_sqlmodel_insfield()"},{"location":"reference/db/crud/parser/#db.crud.parser-functions","text":"","title":"Functions"},{"location":"reference/db/crud/parser/#db.crud.parser.get_python_type_parse","text":"get_python_type_parse ( field : Union [ InstrumentedAttribute , Column ] ) -> Callable This function returns a cached instance of the Python Type Callable object. Note Caching is used to prevent re-reading the environment every time the object is used.","title":"get_python_type_parse()"},{"location":"reference/db/crud/schema/","text":"msaSDK Module \u00b6 .db.crud.schema \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSACRUDEnum \u00b6 Bases: str , Enum Attributes \u00b6 create class-attribute \u00b6 create = 'create' delete class-attribute \u00b6 delete = 'delete' list class-attribute \u00b6 list = 'list' read class-attribute \u00b6 read = 'read' update class-attribute \u00b6 update = 'update' MSACRUDListSchema \u00b6 Bases: GenericModel , Generic [ _T ] , MSACRUDSchema Attributes \u00b6 filter class-attribute \u00b6 filter : Dict [ str , Any ] = None items class-attribute \u00b6 items : List [ _T ] query class-attribute \u00b6 query : Dict [ str , Any ] = None total class-attribute \u00b6 total : int = None MSACRUDOut \u00b6 Bases: GenericModel , Generic [ _T ] , MSACRUDSchema Attributes \u00b6 data class-attribute \u00b6 data : Optional [ _T ] = None msg class-attribute \u00b6 msg : str = 'success' status class-attribute \u00b6 status : int = 0 MSACRUDPaginator \u00b6 Attributes \u00b6 orderBy instance-attribute \u00b6 orderBy = orderBy orderDir instance-attribute \u00b6 orderDir = orderDir page instance-attribute \u00b6 page = page if page and page > 0 else 1 perPage instance-attribute \u00b6 perPage = perPage if perPage and perPage > 0 else 10 perPageMax class-attribute \u00b6 perPageMax : int = None show_total instance-attribute \u00b6 show_total = show_total Functions \u00b6 __init__ \u00b6 __init__ ( page : Union [ int , str ] = 1 , perPage : Union [ int , str ] = 10 , show_total : int = 1 , orderBy : str = None , orderDir : str = \"asc\" , ) MSACRUDSchema \u00b6 Bases: BaseModel Classes \u00b6 Config \u00b6 Attributes \u00b6 extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads","title":"schema"},{"location":"reference/db/crud/schema/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/schema/#dbcrudschema","text":"","title":".db.crud.schema"},{"location":"reference/db/crud/schema/#db.crud.schema-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/db/crud/schema/#db.crud.schema-classes","text":"","title":"Classes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum","text":"Bases: str , Enum","title":"MSACRUDEnum"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.create","text":"create = 'create'","title":"create"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.delete","text":"delete = 'delete'","title":"delete"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.list","text":"list = 'list'","title":"list"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.read","text":"read = 'read'","title":"read"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.update","text":"update = 'update'","title":"update"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema","text":"Bases: GenericModel , Generic [ _T ] , MSACRUDSchema","title":"MSACRUDListSchema"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.filter","text":"filter : Dict [ str , Any ] = None","title":"filter"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.items","text":"items : List [ _T ]","title":"items"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.query","text":"query : Dict [ str , Any ] = None","title":"query"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.total","text":"total : int = None","title":"total"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut","text":"Bases: GenericModel , Generic [ _T ] , MSACRUDSchema","title":"MSACRUDOut"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut.data","text":"data : Optional [ _T ] = None","title":"data"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut.msg","text":"msg : str = 'success'","title":"msg"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut.status","text":"status : int = 0","title":"status"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator","text":"","title":"MSACRUDPaginator"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.orderBy","text":"orderBy = orderBy","title":"orderBy"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.orderDir","text":"orderDir = orderDir","title":"orderDir"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.page","text":"page = page if page and page > 0 else 1","title":"page"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.perPage","text":"perPage = perPage if perPage and perPage > 0 else 10","title":"perPage"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.perPageMax","text":"perPageMax : int = None","title":"perPageMax"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.show_total","text":"show_total = show_total","title":"show_total"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator-functions","text":"","title":"Functions"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.__init__","text":"__init__ ( page : Union [ int , str ] = 1 , perPage : Union [ int , str ] = 10 , show_total : int = 1 , orderBy : str = None , orderDir : str = \"asc\" , )","title":"__init__()"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema","text":"Bases: BaseModel","title":"MSACRUDSchema"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema-classes","text":"","title":"Classes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema.Config","text":"","title":"Config"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema.Config-attributes","text":"extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads","title":"Attributes"},{"location":"reference/db/crud/utils/","text":"msaSDK Module \u00b6 .db.crud.utils \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 Functions \u00b6 paginator_factory \u00b6 paginator_factory ( perPage_max : Optional [ int ] = None , ) -> Type [ MSACRUDPaginator ] parser_item_id \u00b6 parser_item_id ( item_id : str = Path ( Ellipsis , min_length = 1 , title = \"pk\" , example = \"1,2,3\" , description = \"Primary key or list of primary keys\" , ) ) -> List [ str ] parser_str_set_list \u00b6 parser_str_set_list ( set_str : Union [ int , str ]) -> List [ str ] schema_create_by_modelfield \u00b6 schema_create_by_modelfield ( schema_name : str , modelfields : Iterable [ ModelField ], * , set_none : bool = False , namespaces : Dict [ str , Any ] = None , extra : Extra = Extra . ignore , ** kwargs ) -> Type [ BaseModel ] schema_create_by_schema \u00b6 schema_create_by_schema ( schema_cls : Type [ BaseModel ], schema_name : str , * , include : Set [ str ] = None , exclude : Set [ str ] = None , set_none : bool = False , ** kwargs ) -> Type [ BaseModel ] validator_skip_blank \u00b6 validator_skip_blank ( cls , v , config : BaseConfig , field : ModelField , * args , ** kwargs )","title":"utils"},{"location":"reference/db/crud/utils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/utils/#dbcrudutils","text":"","title":".db.crud.utils"},{"location":"reference/db/crud/utils/#db.crud.utils-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/utils/#db.crud.utils.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/db/crud/utils/#db.crud.utils-classes","text":"","title":"Classes"},{"location":"reference/db/crud/utils/#db.crud.utils-functions","text":"","title":"Functions"},{"location":"reference/db/crud/utils/#db.crud.utils.paginator_factory","text":"paginator_factory ( perPage_max : Optional [ int ] = None , ) -> Type [ MSACRUDPaginator ]","title":"paginator_factory()"},{"location":"reference/db/crud/utils/#db.crud.utils.parser_item_id","text":"parser_item_id ( item_id : str = Path ( Ellipsis , min_length = 1 , title = \"pk\" , example = \"1,2,3\" , description = \"Primary key or list of primary keys\" , ) ) -> List [ str ]","title":"parser_item_id()"},{"location":"reference/db/crud/utils/#db.crud.utils.parser_str_set_list","text":"parser_str_set_list ( set_str : Union [ int , str ]) -> List [ str ]","title":"parser_str_set_list()"},{"location":"reference/db/crud/utils/#db.crud.utils.schema_create_by_modelfield","text":"schema_create_by_modelfield ( schema_name : str , modelfields : Iterable [ ModelField ], * , set_none : bool = False , namespaces : Dict [ str , Any ] = None , extra : Extra = Extra . ignore , ** kwargs ) -> Type [ BaseModel ]","title":"schema_create_by_modelfield()"},{"location":"reference/db/crud/utils/#db.crud.utils.schema_create_by_schema","text":"schema_create_by_schema ( schema_cls : Type [ BaseModel ], schema_name : str , * , include : Set [ str ] = None , exclude : Set [ str ] = None , set_none : bool = False , ** kwargs ) -> Type [ BaseModel ]","title":"schema_create_by_schema()"},{"location":"reference/db/crud/utils/#db.crud.utils.validator_skip_blank","text":"validator_skip_blank ( cls , v , config : BaseConfig , field : ModelField , * args , ** kwargs )","title":"validator_skip_blank()"},{"location":"reference/models/files/","text":"msaSDK Module \u00b6 .models.files \u00b6 Module for the MSAFile Pydantic Model. Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAFile \u00b6 Bases: SQLModel MSAFile Model, used for File Import/Upload. Attributes \u00b6 content_type class-attribute \u00b6 content_type : Optional [ str ] = None Content Mime Type pdf etc. filename class-attribute \u00b6 filename : Optional [ str ] = None Internal Safe Name of the file. size class-attribute \u00b6 size : int = 0 Filesize in bytes. type_description class-attribute \u00b6 type_description : Optional [ str ] = None Raw Mime Type description. type_raw class-attribute \u00b6 type_raw : Optional [ str ] = None Raw Mime Type. uid class-attribute \u00b6 uid : Optional [ str ] = None GUID for the file. upload_filename class-attribute \u00b6 upload_filename : Optional [ str ] = None Upload Filename.","title":"files"},{"location":"reference/models/files/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/files/#modelsfiles","text":"Module for the MSAFile Pydantic Model.","title":".models.files"},{"location":"reference/models/files/#models.files-attributes","text":"","title":"Attributes"},{"location":"reference/models/files/#models.files.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/models/files/#models.files-classes","text":"","title":"Classes"},{"location":"reference/models/files/#models.files.MSAFile","text":"Bases: SQLModel MSAFile Model, used for File Import/Upload.","title":"MSAFile"},{"location":"reference/models/files/#models.files.MSAFile-attributes","text":"","title":"Attributes"},{"location":"reference/models/files/#models.files.MSAFile.content_type","text":"content_type : Optional [ str ] = None Content Mime Type pdf etc.","title":"content_type"},{"location":"reference/models/files/#models.files.MSAFile.filename","text":"filename : Optional [ str ] = None Internal Safe Name of the file.","title":"filename"},{"location":"reference/models/files/#models.files.MSAFile.size","text":"size : int = 0 Filesize in bytes.","title":"size"},{"location":"reference/models/files/#models.files.MSAFile.type_description","text":"type_description : Optional [ str ] = None Raw Mime Type description.","title":"type_description"},{"location":"reference/models/files/#models.files.MSAFile.type_raw","text":"type_raw : Optional [ str ] = None Raw Mime Type.","title":"type_raw"},{"location":"reference/models/files/#models.files.MSAFile.uid","text":"uid : Optional [ str ] = None GUID for the file.","title":"uid"},{"location":"reference/models/files/#models.files.MSAFile.upload_filename","text":"upload_filename : Optional [ str ] = None Upload Filename.","title":"upload_filename"},{"location":"reference/models/health/","text":"msaSDK Module \u00b6 .models.health \u00b6 Healthcheck Pydantic Models Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' module_var module-attribute \u00b6 module_var : str = '' str: Module Vars Classes \u00b6 MSAHealthDefinition \u00b6 Bases: SQLModel Health Service Definition Attributes \u00b6 enabled class-attribute \u00b6 enabled : bool = True Is the healtcheck enabled True/False interval class-attribute \u00b6 interval : Optional [ int ] = 60 Interval the Healtchcheck Thread sleeps and checks path class-attribute \u00b6 path : str = '/healthcheck' Path in URL for the API MSAHealthMessage \u00b6 Bases: SQLModel Health Pydantic Response Service Message Attributes \u00b6 error class-attribute \u00b6 error : Optional [ str ] healthy class-attribute \u00b6 healthy : bool = False message class-attribute \u00b6 message : Optional [ str ]","title":"health"},{"location":"reference/models/health/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/health/#modelshealth","text":"Healthcheck Pydantic Models","title":".models.health"},{"location":"reference/models/health/#models.health-attributes","text":"","title":"Attributes"},{"location":"reference/models/health/#models.health.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/models/health/#models.health.module_var","text":"module_var : str = '' str: Module Vars","title":"module_var"},{"location":"reference/models/health/#models.health-classes","text":"","title":"Classes"},{"location":"reference/models/health/#models.health.MSAHealthDefinition","text":"Bases: SQLModel Health Service Definition","title":"MSAHealthDefinition"},{"location":"reference/models/health/#models.health.MSAHealthDefinition-attributes","text":"","title":"Attributes"},{"location":"reference/models/health/#models.health.MSAHealthDefinition.enabled","text":"enabled : bool = True Is the healtcheck enabled True/False","title":"enabled"},{"location":"reference/models/health/#models.health.MSAHealthDefinition.interval","text":"interval : Optional [ int ] = 60 Interval the Healtchcheck Thread sleeps and checks","title":"interval"},{"location":"reference/models/health/#models.health.MSAHealthDefinition.path","text":"path : str = '/healthcheck' Path in URL for the API","title":"path"},{"location":"reference/models/health/#models.health.MSAHealthMessage","text":"Bases: SQLModel Health Pydantic Response Service Message","title":"MSAHealthMessage"},{"location":"reference/models/health/#models.health.MSAHealthMessage-attributes","text":"","title":"Attributes"},{"location":"reference/models/health/#models.health.MSAHealthMessage.error","text":"error : Optional [ str ]","title":"error"},{"location":"reference/models/health/#models.health.MSAHealthMessage.healthy","text":"healthy : bool = False","title":"healthy"},{"location":"reference/models/health/#models.health.MSAHealthMessage.message","text":"message : Optional [ str ]","title":"message"},{"location":"reference/models/sdu/","text":"msaSDK Module \u00b6 .models.sdu \u00b6 Module for the Semantic Document Understanding - Content Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 SDUAttachment \u00b6 Bases: SQLModel Attributes \u00b6 binary class-attribute \u00b6 binary : bool = False charset class-attribute \u00b6 charset : str = '' content_type class-attribute \u00b6 content_type : str = '' disposition class-attribute \u00b6 disposition : str = '' encoding class-attribute \u00b6 encoding : str = '' id class-attribute \u00b6 id : str = '' metadata class-attribute \u00b6 metadata : Dict = {} name class-attribute \u00b6 name : str = '' path class-attribute \u00b6 path : str = '' payload class-attribute \u00b6 payload : str = '' status class-attribute \u00b6 status : str = '' text class-attribute \u00b6 text : SDUText = SDUText () Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUBBox \u00b6 Bases: SQLModel Attributes \u00b6 x0 class-attribute \u00b6 x0 : float = - 1 x1 class-attribute \u00b6 x1 : float = - 1 y0 class-attribute \u00b6 y0 : float = - 1 y1 class-attribute \u00b6 y1 : float = - 1 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUContent \u00b6 Bases: SQLModel Attributes \u00b6 attachments class-attribute \u00b6 attachments : List [ SDUAttachment ] = [] layouts class-attribute \u00b6 layouts : List [ SDULayout ] = [] Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUData \u00b6 Bases: SQLModel Attributes \u00b6 converter class-attribute \u00b6 converter : List [ str ] = [] email class-attribute \u00b6 email : SDUEmail = SDUEmail () images class-attribute \u00b6 images : List [ SDUPageImage ] = [] npages class-attribute \u00b6 npages : int = 0 pages class-attribute \u00b6 pages : List [ SDUPage ] = [] stats class-attribute \u00b6 stats : SDUStatistic = SDUStatistic () text class-attribute \u00b6 text : SDUText = SDUText () Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 addPagePreProcessing \u00b6 addPagePreProcessing ( pagepre : SDUPage ) escaped \u00b6 escaped () sanitized async \u00b6 sanitized () SDUDimensions \u00b6 Bases: SQLModel Attributes \u00b6 factor_x class-attribute \u00b6 factor_x : float = 0.0 factor_y class-attribute \u00b6 factor_y : float = 0.0 height class-attribute \u00b6 height : float = 0.0 id class-attribute \u00b6 id : int = - 1 rotation class-attribute \u00b6 rotation : int = 0 width class-attribute \u00b6 width : float = 0.0 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUElement \u00b6 Bases: SQLModel Attributes \u00b6 end class-attribute \u00b6 end : int = - 1 id class-attribute \u00b6 id : int start class-attribute \u00b6 start : int = - 1 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUEmail \u00b6 Bases: SQLModel Parsed EMail Pydantic Model. Attributes \u00b6 msg_bcc class-attribute \u00b6 msg_bcc : str = '' msg_body class-attribute \u00b6 msg_body : str = '' msg_cc class-attribute \u00b6 msg_cc : str = '' msg_from class-attribute \u00b6 msg_from : str = '' msg_headers class-attribute \u00b6 msg_headers : Dict = {} msg_id class-attribute \u00b6 msg_id : str = '' msg_received class-attribute \u00b6 msg_received : List = [] msg_reply_to class-attribute \u00b6 msg_reply_to : str = '' msg_sender_ip class-attribute \u00b6 msg_sender_ip : str = '' msg_sent_date class-attribute \u00b6 msg_sent_date : str = '' msg_subject class-attribute \u00b6 msg_subject : str = '' msg_timezone class-attribute \u00b6 msg_timezone : str = '' msg_to class-attribute \u00b6 msg_to : str = '' msg_to_domains class-attribute \u00b6 msg_to_domains : str = '' seg_body class-attribute \u00b6 seg_body : str = '' seg_sign class-attribute \u00b6 seg_sign : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUFonts \u00b6 Bases: SQLModel Attributes \u00b6 avg_fontsize class-attribute \u00b6 avg_fontsize : int = 14 fonts class-attribute \u00b6 fonts : List = [] fontsizes class-attribute \u00b6 fontsizes : Dict = {} id class-attribute \u00b6 id : int = - 1 small_fontsize class-attribute \u00b6 small_fontsize : int = 10000 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDULanguage \u00b6 Bases: SQLModel Detected Language Pydantic Model. Attributes \u00b6 bytes class-attribute \u00b6 bytes : int = - 1 code class-attribute \u00b6 code : str = 'unknown' confidence class-attribute \u00b6 confidence : float = - 1 details class-attribute \u00b6 details : Optional [ Tuple ] = tuple () lang class-attribute \u00b6 lang : str = 'unknown' proportion class-attribute \u00b6 proportion : int = - 1 reliable class-attribute \u00b6 reliable : bool = False winner class-attribute \u00b6 winner : Optional [ str ] = None Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDULayout \u00b6 Bases: SQLModel Attributes \u00b6 bjson class-attribute \u00b6 bjson : Dict = {} blocks class-attribute \u00b6 blocks : List [ tuple ] = [] body class-attribute \u00b6 body : SDUBBox = SDUBBox () columns class-attribute \u00b6 columns : List [ SDUBBox ] = [] dimensions class-attribute \u00b6 dimensions : SDUDimensions = SDUDimensions () drawings class-attribute \u00b6 drawings : List = [] fonts class-attribute \u00b6 fonts : SDUFonts = SDUFonts () footer class-attribute \u00b6 footer : SDUBBox = SDUBBox () header class-attribute \u00b6 header : SDUBBox = SDUBBox () id class-attribute \u00b6 id : int = - 1 images class-attribute \u00b6 images : List = [] layouts class-attribute \u00b6 layouts : List = [] margin_left class-attribute \u00b6 margin_left : SDUBBox = SDUBBox () margin_right class-attribute \u00b6 margin_right : SDUBBox = SDUBBox () rows class-attribute \u00b6 rows : List [ SDUBBox ] = [] texttrace class-attribute \u00b6 texttrace : List = [] Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDULearnset \u00b6 Bases: SQLModel Attributes \u00b6 emb class-attribute \u00b6 emb : Dict = {} nlp class-attribute \u00b6 nlp : Dict = {} nlu class-attribute \u00b6 nlu : Dict = {} text class-attribute \u00b6 text : Dict = {} vec_sent class-attribute \u00b6 vec_sent : Dict = {} vec_words class-attribute \u00b6 vec_words : Dict = {} version class-attribute \u00b6 version : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 reset \u00b6 reset () set_version \u00b6 set_version ( version : str ) SDUPDFElement \u00b6 Bases: SQLModel Attributes \u00b6 bold class-attribute \u00b6 bold : bool = False color class-attribute \u00b6 color : int = 0 flags class-attribute \u00b6 flags : int = 0 font class-attribute \u00b6 font : str = '' fontsize class-attribute \u00b6 fontsize : float = 0.0 italic class-attribute \u00b6 italic : bool = False line_id class-attribute \u00b6 line_id : int = - 1 span_id class-attribute \u00b6 span_id : int = - 1 SDUPage \u00b6 Bases: SQLModel Attributes \u00b6 has_en class-attribute \u00b6 has_en : bool = False input class-attribute \u00b6 input : str = '' npar class-attribute \u00b6 npar : int = 0 page class-attribute \u00b6 page : int = - 1 text class-attribute \u00b6 text : SDUText = SDUText () Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 getAllSentencesTextList \u00b6 getAllSentencesTextList () getAllSentencesTextListLF \u00b6 getAllSentencesTextListLF () getAllSentencesTextListNoTableAndLists \u00b6 getAllSentencesTextListNoTableAndLists () getAllSentencesTextList_en \u00b6 getAllSentencesTextList_en () getTextDefault \u00b6 getTextDefault () getTextForDisplay \u00b6 getTextForDisplay () getTextForNLP \u00b6 getTextForNLP () getTextLF \u00b6 getTextLF ( space_before_lf : bool = False ) getTextLF_Paragraph \u00b6 getTextLF_Paragraph ( space_before_lf : bool = False ) getTextNoLF \u00b6 getTextNoLF () getTextNoLF_EN \u00b6 getTextNoLF_EN () getTextNoLF_Paragraph \u00b6 getTextNoLF_Paragraph () hasText \u00b6 hasText () setInput \u00b6 setInput ( inputText : str ) SDUPageImage \u00b6 Bases: SQLModel Page Image Pydantic Model. Storing the information about the Image representation of a Page. Attributes \u00b6 dpi class-attribute \u00b6 dpi : float = 0.0 filepath_name class-attribute \u00b6 filepath_name : str = '' format class-attribute \u00b6 format : str = '' height class-attribute \u00b6 height : float = 0.0 id class-attribute \u00b6 id : int = - 1 layout class-attribute \u00b6 layout : List = [] mode class-attribute \u00b6 mode : str = '' width class-attribute \u00b6 width : float = 0.0 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUParagraph \u00b6 Bases: SQLModel Attributes \u00b6 clean class-attribute \u00b6 clean : str = '' elements class-attribute \u00b6 elements : List [ SDUPDFElement ] = [] id class-attribute \u00b6 id : int = - 1 lang class-attribute \u00b6 lang : SDULanguage = SDULanguage () nsen class-attribute \u00b6 nsen : int = 0 section class-attribute \u00b6 section : str = 'body' semantic_type class-attribute \u00b6 semantic_type : str = 'text' sentences class-attribute \u00b6 sentences : List [ SDUSentence ] = [] sentences_en class-attribute \u00b6 sentences_en : List [ SDUSentence ] = [] size_type class-attribute \u00b6 size_type : str = 'body' sort class-attribute \u00b6 sort : int = - 1 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 getText \u00b6 getText () -> str getTextLF \u00b6 getTextLF () -> str getTextNoLF \u00b6 getTextNoLF () -> str hasText \u00b6 hasText () -> bool SDUSentence \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = - 1 text class-attribute \u00b6 text : str = '' tokens class-attribute \u00b6 tokens : List [ str ] = [] upos class-attribute \u00b6 upos : List [ str ] = [] xpos class-attribute \u00b6 xpos : List [ str ] = [] Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUStatistic \u00b6 Bases: SQLModel Text Statistics Pydantic Model. Attributes \u00b6 avg_character_per_word class-attribute \u00b6 avg_character_per_word : float = 0 avg_letter_per_word class-attribute \u00b6 avg_letter_per_word : float = 0 avg_sentence_length class-attribute \u00b6 avg_sentence_length : float = 0 avg_sentence_per_word class-attribute \u00b6 avg_sentence_per_word : float = 0 avg_syllables_per_word class-attribute \u00b6 avg_syllables_per_word : float = 0 coleman class-attribute \u00b6 coleman : float = 0 crawford class-attribute \u00b6 crawford : float = 0 difficult_words class-attribute \u00b6 difficult_words : int = 0 fog class-attribute \u00b6 fog : float = 0 grade class-attribute \u00b6 grade : float = 0 gulpease_index class-attribute \u00b6 gulpease_index : float = 0 lexicon_count class-attribute \u00b6 lexicon_count : int = 0 long_word_count class-attribute \u00b6 long_word_count : int = 0 osman class-attribute \u00b6 osman : float = 0 paragraph_count class-attribute \u00b6 paragraph_count : int = 0 reading_ease class-attribute \u00b6 reading_ease : str = '' reading_ease_score class-attribute \u00b6 reading_ease_score : float = 0 reading_index class-attribute \u00b6 reading_index : float = 0 reading_score class-attribute \u00b6 reading_score : float = 0 reading_time_s class-attribute \u00b6 reading_time_s : float = 0 sentence_count class-attribute \u00b6 sentence_count : int = 0 smog class-attribute \u00b6 smog : float = 0 standard class-attribute \u00b6 standard : str = '' write_formula class-attribute \u00b6 write_formula : float = 0 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUText \u00b6 Bases: SQLModel Attributes \u00b6 clean class-attribute \u00b6 clean : str = '' html_content class-attribute \u00b6 html_content : str = '' lang class-attribute \u00b6 lang : SDULanguage = SDULanguage () paragraphs class-attribute \u00b6 paragraphs : List [ SDUParagraph ] = [] raw class-attribute \u00b6 raw : str = '' structured_content class-attribute \u00b6 structured_content : Dict = {} Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUVersion \u00b6 Bases: SQLModel Attributes \u00b6 creation_date class-attribute \u00b6 creation_date : str = '' version class-attribute \u00b6 version : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 getCRLF \u00b6 getCRLF () -> str get's the OS Environment Variable for CR_LF . Default: \\n getCRParagraph \u00b6 getCRParagraph () -> str get's the OS Environment Variable for CR_PARAGRAPH . Default: \\n\\n getSentenceSeperator \u00b6 getSentenceSeperator () -> str get's the OS Environment Variable for SENTENCE_SEPARATOR . Default: (Space/Blank)","title":"sdu"},{"location":"reference/models/sdu/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/sdu/#modelssdu","text":"Module for the Semantic Document Understanding - Content","title":".models.sdu"},{"location":"reference/models/sdu/#models.sdu-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/models/sdu/#models.sdu-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment","text":"Bases: SQLModel","title":"SDUAttachment"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.binary","text":"binary : bool = False","title":"binary"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.charset","text":"charset : str = ''","title":"charset"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.content_type","text":"content_type : str = ''","title":"content_type"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.disposition","text":"disposition : str = ''","title":"disposition"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.encoding","text":"encoding : str = ''","title":"encoding"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.id","text":"id : str = ''","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.metadata","text":"metadata : Dict = {}","title":"metadata"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.name","text":"name : str = ''","title":"name"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.path","text":"path : str = ''","title":"path"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.payload","text":"payload : str = ''","title":"payload"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.status","text":"status : str = ''","title":"status"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.text","text":"text : SDUText = SDUText ()","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUBBox","text":"Bases: SQLModel","title":"SDUBBox"},{"location":"reference/models/sdu/#models.sdu.SDUBBox-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.x0","text":"x0 : float = - 1","title":"x0"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.x1","text":"x1 : float = - 1","title":"x1"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.y0","text":"y0 : float = - 1","title":"y0"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.y1","text":"y1 : float = - 1","title":"y1"},{"location":"reference/models/sdu/#models.sdu.SDUBBox-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUContent","text":"Bases: SQLModel","title":"SDUContent"},{"location":"reference/models/sdu/#models.sdu.SDUContent-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUContent.attachments","text":"attachments : List [ SDUAttachment ] = []","title":"attachments"},{"location":"reference/models/sdu/#models.sdu.SDUContent.layouts","text":"layouts : List [ SDULayout ] = []","title":"layouts"},{"location":"reference/models/sdu/#models.sdu.SDUContent-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUContent.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUContent.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUData","text":"Bases: SQLModel","title":"SDUData"},{"location":"reference/models/sdu/#models.sdu.SDUData-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUData.converter","text":"converter : List [ str ] = []","title":"converter"},{"location":"reference/models/sdu/#models.sdu.SDUData.email","text":"email : SDUEmail = SDUEmail ()","title":"email"},{"location":"reference/models/sdu/#models.sdu.SDUData.images","text":"images : List [ SDUPageImage ] = []","title":"images"},{"location":"reference/models/sdu/#models.sdu.SDUData.npages","text":"npages : int = 0","title":"npages"},{"location":"reference/models/sdu/#models.sdu.SDUData.pages","text":"pages : List [ SDUPage ] = []","title":"pages"},{"location":"reference/models/sdu/#models.sdu.SDUData.stats","text":"stats : SDUStatistic = SDUStatistic ()","title":"stats"},{"location":"reference/models/sdu/#models.sdu.SDUData.text","text":"text : SDUText = SDUText ()","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUData-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUData.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUData.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUData-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDUData.addPagePreProcessing","text":"addPagePreProcessing ( pagepre : SDUPage )","title":"addPagePreProcessing()"},{"location":"reference/models/sdu/#models.sdu.SDUData.escaped","text":"escaped ()","title":"escaped()"},{"location":"reference/models/sdu/#models.sdu.SDUData.sanitized","text":"sanitized ()","title":"sanitized()"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions","text":"Bases: SQLModel","title":"SDUDimensions"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.factor_x","text":"factor_x : float = 0.0","title":"factor_x"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.factor_y","text":"factor_y : float = 0.0","title":"factor_y"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.height","text":"height : float = 0.0","title":"height"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.rotation","text":"rotation : int = 0","title":"rotation"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.width","text":"width : float = 0.0","title":"width"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUElement","text":"Bases: SQLModel","title":"SDUElement"},{"location":"reference/models/sdu/#models.sdu.SDUElement-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUElement.end","text":"end : int = - 1","title":"end"},{"location":"reference/models/sdu/#models.sdu.SDUElement.id","text":"id : int","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUElement.start","text":"start : int = - 1","title":"start"},{"location":"reference/models/sdu/#models.sdu.SDUElement-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUElement.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUElement.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUEmail","text":"Bases: SQLModel Parsed EMail Pydantic Model.","title":"SDUEmail"},{"location":"reference/models/sdu/#models.sdu.SDUEmail-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_bcc","text":"msg_bcc : str = ''","title":"msg_bcc"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_body","text":"msg_body : str = ''","title":"msg_body"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_cc","text":"msg_cc : str = ''","title":"msg_cc"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_from","text":"msg_from : str = ''","title":"msg_from"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_headers","text":"msg_headers : Dict = {}","title":"msg_headers"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_id","text":"msg_id : str = ''","title":"msg_id"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_received","text":"msg_received : List = []","title":"msg_received"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_reply_to","text":"msg_reply_to : str = ''","title":"msg_reply_to"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_sender_ip","text":"msg_sender_ip : str = ''","title":"msg_sender_ip"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_sent_date","text":"msg_sent_date : str = ''","title":"msg_sent_date"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_subject","text":"msg_subject : str = ''","title":"msg_subject"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_timezone","text":"msg_timezone : str = ''","title":"msg_timezone"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_to","text":"msg_to : str = ''","title":"msg_to"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_to_domains","text":"msg_to_domains : str = ''","title":"msg_to_domains"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.seg_body","text":"seg_body : str = ''","title":"seg_body"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.seg_sign","text":"seg_sign : str = ''","title":"seg_sign"},{"location":"reference/models/sdu/#models.sdu.SDUEmail-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts","text":"Bases: SQLModel","title":"SDUFonts"},{"location":"reference/models/sdu/#models.sdu.SDUFonts-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.avg_fontsize","text":"avg_fontsize : int = 14","title":"avg_fontsize"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.fonts","text":"fonts : List = []","title":"fonts"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.fontsizes","text":"fontsizes : Dict = {}","title":"fontsizes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.small_fontsize","text":"small_fontsize : int = 10000","title":"small_fontsize"},{"location":"reference/models/sdu/#models.sdu.SDUFonts-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage","text":"Bases: SQLModel Detected Language Pydantic Model.","title":"SDULanguage"},{"location":"reference/models/sdu/#models.sdu.SDULanguage-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.bytes","text":"bytes : int = - 1","title":"bytes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.code","text":"code : str = 'unknown'","title":"code"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.confidence","text":"confidence : float = - 1","title":"confidence"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.details","text":"details : Optional [ Tuple ] = tuple ()","title":"details"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.lang","text":"lang : str = 'unknown'","title":"lang"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.proportion","text":"proportion : int = - 1","title":"proportion"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.reliable","text":"reliable : bool = False","title":"reliable"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.winner","text":"winner : Optional [ str ] = None","title":"winner"},{"location":"reference/models/sdu/#models.sdu.SDULanguage-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULayout","text":"Bases: SQLModel","title":"SDULayout"},{"location":"reference/models/sdu/#models.sdu.SDULayout-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULayout.bjson","text":"bjson : Dict = {}","title":"bjson"},{"location":"reference/models/sdu/#models.sdu.SDULayout.blocks","text":"blocks : List [ tuple ] = []","title":"blocks"},{"location":"reference/models/sdu/#models.sdu.SDULayout.body","text":"body : SDUBBox = SDUBBox ()","title":"body"},{"location":"reference/models/sdu/#models.sdu.SDULayout.columns","text":"columns : List [ SDUBBox ] = []","title":"columns"},{"location":"reference/models/sdu/#models.sdu.SDULayout.dimensions","text":"dimensions : SDUDimensions = SDUDimensions ()","title":"dimensions"},{"location":"reference/models/sdu/#models.sdu.SDULayout.drawings","text":"drawings : List = []","title":"drawings"},{"location":"reference/models/sdu/#models.sdu.SDULayout.fonts","text":"fonts : SDUFonts = SDUFonts ()","title":"fonts"},{"location":"reference/models/sdu/#models.sdu.SDULayout.footer","text":"footer : SDUBBox = SDUBBox ()","title":"footer"},{"location":"reference/models/sdu/#models.sdu.SDULayout.header","text":"header : SDUBBox = SDUBBox ()","title":"header"},{"location":"reference/models/sdu/#models.sdu.SDULayout.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDULayout.images","text":"images : List = []","title":"images"},{"location":"reference/models/sdu/#models.sdu.SDULayout.layouts","text":"layouts : List = []","title":"layouts"},{"location":"reference/models/sdu/#models.sdu.SDULayout.margin_left","text":"margin_left : SDUBBox = SDUBBox ()","title":"margin_left"},{"location":"reference/models/sdu/#models.sdu.SDULayout.margin_right","text":"margin_right : SDUBBox = SDUBBox ()","title":"margin_right"},{"location":"reference/models/sdu/#models.sdu.SDULayout.rows","text":"rows : List [ SDUBBox ] = []","title":"rows"},{"location":"reference/models/sdu/#models.sdu.SDULayout.texttrace","text":"texttrace : List = []","title":"texttrace"},{"location":"reference/models/sdu/#models.sdu.SDULayout-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDULayout.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDULayout.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset","text":"Bases: SQLModel","title":"SDULearnset"},{"location":"reference/models/sdu/#models.sdu.SDULearnset-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.emb","text":"emb : Dict = {}","title":"emb"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.nlp","text":"nlp : Dict = {}","title":"nlp"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.nlu","text":"nlu : Dict = {}","title":"nlu"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.text","text":"text : Dict = {}","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.vec_sent","text":"vec_sent : Dict = {}","title":"vec_sent"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.vec_words","text":"vec_words : Dict = {}","title":"vec_words"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.version","text":"version : str = ''","title":"version"},{"location":"reference/models/sdu/#models.sdu.SDULearnset-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.reset","text":"reset ()","title":"reset()"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.set_version","text":"set_version ( version : str )","title":"set_version()"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement","text":"Bases: SQLModel","title":"SDUPDFElement"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.bold","text":"bold : bool = False","title":"bold"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.color","text":"color : int = 0","title":"color"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.flags","text":"flags : int = 0","title":"flags"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.font","text":"font : str = ''","title":"font"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.fontsize","text":"fontsize : float = 0.0","title":"fontsize"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.italic","text":"italic : bool = False","title":"italic"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.line_id","text":"line_id : int = - 1","title":"line_id"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.span_id","text":"span_id : int = - 1","title":"span_id"},{"location":"reference/models/sdu/#models.sdu.SDUPage","text":"Bases: SQLModel","title":"SDUPage"},{"location":"reference/models/sdu/#models.sdu.SDUPage-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPage.has_en","text":"has_en : bool = False","title":"has_en"},{"location":"reference/models/sdu/#models.sdu.SDUPage.input","text":"input : str = ''","title":"input"},{"location":"reference/models/sdu/#models.sdu.SDUPage.npar","text":"npar : int = 0","title":"npar"},{"location":"reference/models/sdu/#models.sdu.SDUPage.page","text":"page : int = - 1","title":"page"},{"location":"reference/models/sdu/#models.sdu.SDUPage.text","text":"text : SDUText = SDUText ()","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUPage-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUPage.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUPage.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPage-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextList","text":"getAllSentencesTextList ()","title":"getAllSentencesTextList()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextListLF","text":"getAllSentencesTextListLF ()","title":"getAllSentencesTextListLF()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextListNoTableAndLists","text":"getAllSentencesTextListNoTableAndLists ()","title":"getAllSentencesTextListNoTableAndLists()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextList_en","text":"getAllSentencesTextList_en ()","title":"getAllSentencesTextList_en()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextDefault","text":"getTextDefault ()","title":"getTextDefault()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextForDisplay","text":"getTextForDisplay ()","title":"getTextForDisplay()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextForNLP","text":"getTextForNLP ()","title":"getTextForNLP()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextLF","text":"getTextLF ( space_before_lf : bool = False )","title":"getTextLF()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextLF_Paragraph","text":"getTextLF_Paragraph ( space_before_lf : bool = False )","title":"getTextLF_Paragraph()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextNoLF","text":"getTextNoLF ()","title":"getTextNoLF()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextNoLF_EN","text":"getTextNoLF_EN ()","title":"getTextNoLF_EN()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextNoLF_Paragraph","text":"getTextNoLF_Paragraph ()","title":"getTextNoLF_Paragraph()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.hasText","text":"hasText ()","title":"hasText()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.setInput","text":"setInput ( inputText : str )","title":"setInput()"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage","text":"Bases: SQLModel Page Image Pydantic Model. Storing the information about the Image representation of a Page.","title":"SDUPageImage"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.dpi","text":"dpi : float = 0.0","title":"dpi"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.filepath_name","text":"filepath_name : str = ''","title":"filepath_name"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.format","text":"format : str = ''","title":"format"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.height","text":"height : float = 0.0","title":"height"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.layout","text":"layout : List = []","title":"layout"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.mode","text":"mode : str = ''","title":"mode"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.width","text":"width : float = 0.0","title":"width"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph","text":"Bases: SQLModel","title":"SDUParagraph"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.clean","text":"clean : str = ''","title":"clean"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.elements","text":"elements : List [ SDUPDFElement ] = []","title":"elements"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.lang","text":"lang : SDULanguage = SDULanguage ()","title":"lang"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.nsen","text":"nsen : int = 0","title":"nsen"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.section","text":"section : str = 'body'","title":"section"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.semantic_type","text":"semantic_type : str = 'text'","title":"semantic_type"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.sentences","text":"sentences : List [ SDUSentence ] = []","title":"sentences"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.sentences_en","text":"sentences_en : List [ SDUSentence ] = []","title":"sentences_en"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.size_type","text":"size_type : str = 'body'","title":"size_type"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.sort","text":"sort : int = - 1","title":"sort"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.getText","text":"getText () -> str","title":"getText()"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.getTextLF","text":"getTextLF () -> str","title":"getTextLF()"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.getTextNoLF","text":"getTextNoLF () -> str","title":"getTextNoLF()"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.hasText","text":"hasText () -> bool","title":"hasText()"},{"location":"reference/models/sdu/#models.sdu.SDUSentence","text":"Bases: SQLModel","title":"SDUSentence"},{"location":"reference/models/sdu/#models.sdu.SDUSentence-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.text","text":"text : str = ''","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.tokens","text":"tokens : List [ str ] = []","title":"tokens"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.upos","text":"upos : List [ str ] = []","title":"upos"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.xpos","text":"xpos : List [ str ] = []","title":"xpos"},{"location":"reference/models/sdu/#models.sdu.SDUSentence-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic","text":"Bases: SQLModel Text Statistics Pydantic Model.","title":"SDUStatistic"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_character_per_word","text":"avg_character_per_word : float = 0","title":"avg_character_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_letter_per_word","text":"avg_letter_per_word : float = 0","title":"avg_letter_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_sentence_length","text":"avg_sentence_length : float = 0","title":"avg_sentence_length"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_sentence_per_word","text":"avg_sentence_per_word : float = 0","title":"avg_sentence_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_syllables_per_word","text":"avg_syllables_per_word : float = 0","title":"avg_syllables_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.coleman","text":"coleman : float = 0","title":"coleman"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.crawford","text":"crawford : float = 0","title":"crawford"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.difficult_words","text":"difficult_words : int = 0","title":"difficult_words"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.fog","text":"fog : float = 0","title":"fog"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.grade","text":"grade : float = 0","title":"grade"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.gulpease_index","text":"gulpease_index : float = 0","title":"gulpease_index"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.lexicon_count","text":"lexicon_count : int = 0","title":"lexicon_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.long_word_count","text":"long_word_count : int = 0","title":"long_word_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.osman","text":"osman : float = 0","title":"osman"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.paragraph_count","text":"paragraph_count : int = 0","title":"paragraph_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_ease","text":"reading_ease : str = ''","title":"reading_ease"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_ease_score","text":"reading_ease_score : float = 0","title":"reading_ease_score"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_index","text":"reading_index : float = 0","title":"reading_index"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_score","text":"reading_score : float = 0","title":"reading_score"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_time_s","text":"reading_time_s : float = 0","title":"reading_time_s"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.sentence_count","text":"sentence_count : int = 0","title":"sentence_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.smog","text":"smog : float = 0","title":"smog"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.standard","text":"standard : str = ''","title":"standard"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.write_formula","text":"write_formula : float = 0","title":"write_formula"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUText","text":"Bases: SQLModel","title":"SDUText"},{"location":"reference/models/sdu/#models.sdu.SDUText-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUText.clean","text":"clean : str = ''","title":"clean"},{"location":"reference/models/sdu/#models.sdu.SDUText.html_content","text":"html_content : str = ''","title":"html_content"},{"location":"reference/models/sdu/#models.sdu.SDUText.lang","text":"lang : SDULanguage = SDULanguage ()","title":"lang"},{"location":"reference/models/sdu/#models.sdu.SDUText.paragraphs","text":"paragraphs : List [ SDUParagraph ] = []","title":"paragraphs"},{"location":"reference/models/sdu/#models.sdu.SDUText.raw","text":"raw : str = ''","title":"raw"},{"location":"reference/models/sdu/#models.sdu.SDUText.structured_content","text":"structured_content : Dict = {}","title":"structured_content"},{"location":"reference/models/sdu/#models.sdu.SDUText-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUText.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUText.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUVersion","text":"Bases: SQLModel","title":"SDUVersion"},{"location":"reference/models/sdu/#models.sdu.SDUVersion-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.creation_date","text":"creation_date : str = ''","title":"creation_date"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.version","text":"version : str = ''","title":"version"},{"location":"reference/models/sdu/#models.sdu.SDUVersion-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.getCRLF","text":"getCRLF () -> str get's the OS Environment Variable for CR_LF . Default: \\n","title":"getCRLF()"},{"location":"reference/models/sdu/#models.sdu.getCRParagraph","text":"getCRParagraph () -> str get's the OS Environment Variable for CR_PARAGRAPH . Default: \\n\\n","title":"getCRParagraph()"},{"location":"reference/models/sdu/#models.sdu.getSentenceSeperator","text":"getSentenceSeperator () -> str get's the OS Environment Variable for SENTENCE_SEPARATOR . Default: (Space/Blank)","title":"getSentenceSeperator()"},{"location":"reference/models/service/","text":"msaSDK Module \u00b6 .models.service \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAServiceDefinition \u00b6 Bases: APISettings , SQLModel MSAApp Settings (Service Definitions) This class enables the configuration of your MSAApp instance through the use of environment variables. Any of the instance attributes can be overridden upon instantiation by either passing the desired value to the initializer, or by setting the corresponding environment variable. Attribute xxx_yyy corresponds to environment variable API_XXX_YYY . So, for example, to override openapi_prefix , you would set the environment variable API_OPENAPI_PREFIX . Note that assignments to variables are also validated, ensuring that even if you make runtime-modifications to the config, they should have the correct types. Attributes \u00b6 allow_credentials class-attribute \u00b6 allow_credentials : bool = True CORSMiddleware. Bool. Allow (True) Credentials (Authorization headers, Cookies, etc). allow_headers class-attribute \u00b6 allow_headers : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP headers or all of them with the wildcard * . allow_methods class-attribute \u00b6 allow_methods : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP methods (POST, PUT) or all of them with the wildcard * . allow_origins class-attribute \u00b6 allow_origins : List [ str ] = [ '*' ] CORSMiddleware. List[str]. List of allowed origins (as strings) or all of them with the wildcard * . context class-attribute \u00b6 context : bool = False Enable Context Middleware. cors class-attribute \u00b6 cors : bool = True Enable CORS Middleware. csrf class-attribute \u00b6 csrf : bool = True Enable CSRF Forms Protection Middleware. db class-attribute \u00b6 db : bool = True Enables internal Asynchron SQLite DB. db_crud class-attribute \u00b6 db_crud : bool = True Enables CRUD API creation of the provided SQLModels. db_debug class-attribute \u00b6 db_debug : bool = False Enables internal DB Debug output. db_meta_create class-attribute \u00b6 db_meta_create : bool = True Enables internal DB Metadata creation from defined SQLModels at Startup. db_meta_drop class-attribute \u00b6 db_meta_drop : bool = False If True, all existing Data and Schemas in internal DB get's deleted at Startup. db_url class-attribute \u00b6 db_url : str = ( \"sqlite+aiosqlite:///msa_sdk.db?check_same_thread=True\" ) Set's DB URL, compatibility with async and SQLModel/SQLAlchemy is required. graphql class-attribute \u00b6 graphql : bool = False Enable initiation of Strawberry GraphQLRouter (/graphql). gzip class-attribute \u00b6 gzip : bool = False Enable GZIP Middleware. healthdefinition class-attribute \u00b6 healthdefinition : MSAHealthDefinition = ( MSAHealthDefinition () ) Healthdefinition Instance. host class-attribute \u00b6 host : str = '127.0.0.1' Host/IP which the service runs on. httpception class-attribute \u00b6 httpception : bool = True Enable the HTTP Exception Handler, which provides HTML Error Pages instead of JSONResponse. httpception_exclude class-attribute \u00b6 httpception_exclude : List [ int ] = [ 307 ] List of HTTP Exception Codes which are excluded and just forwarded by the HTTP Exception Handler. httpsredirect class-attribute \u00b6 httpsredirect : bool = False Enable HTTPS Redirect Middleware. instrument class-attribute \u00b6 instrument : bool = True Enable Prometheus Instrumentation for the instance. language class-attribute \u00b6 language : str = '' Set's internal Admin Dashboard language ( zh_CN or en_US =default if empty). limiter class-attribute \u00b6 limiter : bool = False Enables Rate Limiter (slowapi). msgpack class-attribute \u00b6 msgpack : bool = False Enable Messagepack Negotiation Middleware. name class-attribute \u00b6 name : str = 'msaSDK Service' Service Name, also used as Title. pages class-attribute \u00b6 pages : bool = True Enable the Pages Routes (/profiler, /testpage), if site is Off also (/, /monitor, /monitor_inline). pagination class-attribute \u00b6 pagination : bool = False Enable FastAPI Pagination. port class-attribute \u00b6 port : int = 8090 Port which the service binds to. profiler class-attribute \u00b6 profiler : bool = False Enable Profiler Middleware. profiler_output_type class-attribute \u00b6 profiler_output_type : str = 'html' Set the Profiler Output Type, should be html or text, html is needed if you want to use the profiler on the Admin Site. profiler_single_calls class-attribute \u00b6 profiler_single_calls : bool = True Enable to Track each Request by the Profiler. profiler_url class-attribute \u00b6 profiler_url : str = '/profiler' Set the URL to reach the profiler result html, /profiler. root_path class-attribute \u00b6 root_path : str = '/admin' Set's internal Admin Dashboard Root Path, normally /admin . scheduler class-attribute \u00b6 scheduler : bool = True Enables MSA Scheduler Engine. scheduler_poll_millis class-attribute \u00b6 scheduler_poll_millis : int = 1000 Set's Scheduler Poll Minimum. servicerouter class-attribute \u00b6 servicerouter : bool = True Enable the Service Routes defined by the MSAApp (/scheduler, /status, /defintion, /settings, /schema, /info, ...). session class-attribute \u00b6 session : bool = False Enable Session Middleware. site class-attribute \u00b6 site : bool = True Enables internal Admin Site Dashboard. site_auth class-attribute \u00b6 site_auth : bool = False Extends internal Admin Dashboard with Auth. site_copyright class-attribute \u00b6 site_copyright : str = 'Copyright \u00a9 2022 by u2d.ai' Set's internal Admin Dashboard copyright information. site_icon class-attribute \u00b6 site_icon : str = '/msastatic/img/favicon.png' Set's internal Admin Dashboard Favicon. site_title class-attribute \u00b6 site_title : str = 'Admin' Set's internal Admin Dashboard Titel. site_url class-attribute \u00b6 site_url : str = '' Set's internal Admin Dashboard Site URL, normally empty. starception class-attribute \u00b6 starception : bool = True Enable Starception Middleware. static class-attribute \u00b6 static : bool = True Enable the internal Static Folder ( msastatic ) and Mount to instance. sysrouter class-attribute \u00b6 sysrouter : bool = True Enable the System Routes defined by router.system module (/sysinfo, /sysgpuinfo, /syserror, ...). tags class-attribute \u00b6 tags : List [ str ] = [] Optional Metadata: Use this to carry some variables through the service instance. templates class-attribute \u00b6 templates : bool = True Enable the internal Templates and mount the directory. templates_dir class-attribute \u00b6 templates_dir : List [ str ] = [ \"msatemplates\" , \"msatemplates/errors\" , ] Set the List of Directories for the MSAUITemplate Engine to look for the requested template. timing class-attribute \u00b6 timing : bool = False Enables Timing Middleware, reports timing data at the granularity of individual endpoint calls. uvloop class-attribute \u00b6 uvloop : bool = True Use UVLoop instead of asyncio loop. validationception class-attribute \u00b6 validationception : bool = True Enable Validation Exception Handler. version class-attribute \u00b6 version : str = '0.0.0' Version of the Service. Functions \u00b6 valid_url \u00b6 valid_url ( url : str ) Internal Validator for root_path and site_url to remove ending / . Functions \u00b6 get_msa_app_settings cached \u00b6 get_msa_app_settings () -> MSAServiceDefinition This function returns a cached instance of the MSAServiceDefinition object. Note Caching is used to prevent re-reading the environment every time the API settings are used in an endpoint.","title":"service"},{"location":"reference/models/service/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/service/#modelsservice","text":"","title":".models.service"},{"location":"reference/models/service/#models.service-attributes","text":"","title":"Attributes"},{"location":"reference/models/service/#models.service.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/models/service/#models.service-classes","text":"","title":"Classes"},{"location":"reference/models/service/#models.service.MSAServiceDefinition","text":"Bases: APISettings , SQLModel MSAApp Settings (Service Definitions) This class enables the configuration of your MSAApp instance through the use of environment variables. Any of the instance attributes can be overridden upon instantiation by either passing the desired value to the initializer, or by setting the corresponding environment variable. Attribute xxx_yyy corresponds to environment variable API_XXX_YYY . So, for example, to override openapi_prefix , you would set the environment variable API_OPENAPI_PREFIX . Note that assignments to variables are also validated, ensuring that even if you make runtime-modifications to the config, they should have the correct types.","title":"MSAServiceDefinition"},{"location":"reference/models/service/#models.service.MSAServiceDefinition-attributes","text":"","title":"Attributes"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_credentials","text":"allow_credentials : bool = True CORSMiddleware. Bool. Allow (True) Credentials (Authorization headers, Cookies, etc).","title":"allow_credentials"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_headers","text":"allow_headers : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP headers or all of them with the wildcard * .","title":"allow_headers"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_methods","text":"allow_methods : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP methods (POST, PUT) or all of them with the wildcard * .","title":"allow_methods"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_origins","text":"allow_origins : List [ str ] = [ '*' ] CORSMiddleware. List[str]. List of allowed origins (as strings) or all of them with the wildcard * .","title":"allow_origins"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.context","text":"context : bool = False Enable Context Middleware.","title":"context"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.cors","text":"cors : bool = True Enable CORS Middleware.","title":"cors"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.csrf","text":"csrf : bool = True Enable CSRF Forms Protection Middleware.","title":"csrf"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db","text":"db : bool = True Enables internal Asynchron SQLite DB.","title":"db"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_crud","text":"db_crud : bool = True Enables CRUD API creation of the provided SQLModels.","title":"db_crud"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_debug","text":"db_debug : bool = False Enables internal DB Debug output.","title":"db_debug"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_meta_create","text":"db_meta_create : bool = True Enables internal DB Metadata creation from defined SQLModels at Startup.","title":"db_meta_create"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_meta_drop","text":"db_meta_drop : bool = False If True, all existing Data and Schemas in internal DB get's deleted at Startup.","title":"db_meta_drop"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_url","text":"db_url : str = ( \"sqlite+aiosqlite:///msa_sdk.db?check_same_thread=True\" ) Set's DB URL, compatibility with async and SQLModel/SQLAlchemy is required.","title":"db_url"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.graphql","text":"graphql : bool = False Enable initiation of Strawberry GraphQLRouter (/graphql).","title":"graphql"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.gzip","text":"gzip : bool = False Enable GZIP Middleware.","title":"gzip"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.healthdefinition","text":"healthdefinition : MSAHealthDefinition = ( MSAHealthDefinition () ) Healthdefinition Instance.","title":"healthdefinition"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.host","text":"host : str = '127.0.0.1' Host/IP which the service runs on.","title":"host"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.httpception","text":"httpception : bool = True Enable the HTTP Exception Handler, which provides HTML Error Pages instead of JSONResponse.","title":"httpception"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.httpception_exclude","text":"httpception_exclude : List [ int ] = [ 307 ] List of HTTP Exception Codes which are excluded and just forwarded by the HTTP Exception Handler.","title":"httpception_exclude"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.httpsredirect","text":"httpsredirect : bool = False Enable HTTPS Redirect Middleware.","title":"httpsredirect"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.instrument","text":"instrument : bool = True Enable Prometheus Instrumentation for the instance.","title":"instrument"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.language","text":"language : str = '' Set's internal Admin Dashboard language ( zh_CN or en_US =default if empty).","title":"language"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.limiter","text":"limiter : bool = False Enables Rate Limiter (slowapi).","title":"limiter"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.msgpack","text":"msgpack : bool = False Enable Messagepack Negotiation Middleware.","title":"msgpack"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.name","text":"name : str = 'msaSDK Service' Service Name, also used as Title.","title":"name"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.pages","text":"pages : bool = True Enable the Pages Routes (/profiler, /testpage), if site is Off also (/, /monitor, /monitor_inline).","title":"pages"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.pagination","text":"pagination : bool = False Enable FastAPI Pagination.","title":"pagination"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.port","text":"port : int = 8090 Port which the service binds to.","title":"port"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler","text":"profiler : bool = False Enable Profiler Middleware.","title":"profiler"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler_output_type","text":"profiler_output_type : str = 'html' Set the Profiler Output Type, should be html or text, html is needed if you want to use the profiler on the Admin Site.","title":"profiler_output_type"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler_single_calls","text":"profiler_single_calls : bool = True Enable to Track each Request by the Profiler.","title":"profiler_single_calls"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler_url","text":"profiler_url : str = '/profiler' Set the URL to reach the profiler result html, /profiler.","title":"profiler_url"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.root_path","text":"root_path : str = '/admin' Set's internal Admin Dashboard Root Path, normally /admin .","title":"root_path"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.scheduler","text":"scheduler : bool = True Enables MSA Scheduler Engine.","title":"scheduler"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.scheduler_poll_millis","text":"scheduler_poll_millis : int = 1000 Set's Scheduler Poll Minimum.","title":"scheduler_poll_millis"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.servicerouter","text":"servicerouter : bool = True Enable the Service Routes defined by the MSAApp (/scheduler, /status, /defintion, /settings, /schema, /info, ...).","title":"servicerouter"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.session","text":"session : bool = False Enable Session Middleware.","title":"session"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site","text":"site : bool = True Enables internal Admin Site Dashboard.","title":"site"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_auth","text":"site_auth : bool = False Extends internal Admin Dashboard with Auth.","title":"site_auth"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_copyright","text":"site_copyright : str = 'Copyright \u00a9 2022 by u2d.ai' Set's internal Admin Dashboard copyright information.","title":"site_copyright"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_icon","text":"site_icon : str = '/msastatic/img/favicon.png' Set's internal Admin Dashboard Favicon.","title":"site_icon"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_title","text":"site_title : str = 'Admin' Set's internal Admin Dashboard Titel.","title":"site_title"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_url","text":"site_url : str = '' Set's internal Admin Dashboard Site URL, normally empty.","title":"site_url"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.starception","text":"starception : bool = True Enable Starception Middleware.","title":"starception"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.static","text":"static : bool = True Enable the internal Static Folder ( msastatic ) and Mount to instance.","title":"static"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.sysrouter","text":"sysrouter : bool = True Enable the System Routes defined by router.system module (/sysinfo, /sysgpuinfo, /syserror, ...).","title":"sysrouter"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.tags","text":"tags : List [ str ] = [] Optional Metadata: Use this to carry some variables through the service instance.","title":"tags"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.templates","text":"templates : bool = True Enable the internal Templates and mount the directory.","title":"templates"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.templates_dir","text":"templates_dir : List [ str ] = [ \"msatemplates\" , \"msatemplates/errors\" , ] Set the List of Directories for the MSAUITemplate Engine to look for the requested template.","title":"templates_dir"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.timing","text":"timing : bool = False Enables Timing Middleware, reports timing data at the granularity of individual endpoint calls.","title":"timing"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.uvloop","text":"uvloop : bool = True Use UVLoop instead of asyncio loop.","title":"uvloop"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.validationception","text":"validationception : bool = True Enable Validation Exception Handler.","title":"validationception"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.version","text":"version : str = '0.0.0' Version of the Service.","title":"version"},{"location":"reference/models/service/#models.service.MSAServiceDefinition-functions","text":"","title":"Functions"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.valid_url","text":"valid_url ( url : str ) Internal Validator for root_path and site_url to remove ending / .","title":"valid_url()"},{"location":"reference/models/service/#models.service-functions","text":"","title":"Functions"},{"location":"reference/models/service/#models.service.get_msa_app_settings","text":"get_msa_app_settings () -> MSAServiceDefinition This function returns a cached instance of the MSAServiceDefinition object. Note Caching is used to prevent re-reading the environment every time the API settings are used in an endpoint.","title":"get_msa_app_settings()"},{"location":"reference/models/wdc/","text":"msaSDK Module \u00b6 .models.wdc \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 WDCDocument \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' entities class-attribute \u00b6 entities : List [ WDCSpan ] = [] meanings class-attribute \u00b6 meanings : List [ WDCMeaning ] = [] ndepends class-attribute \u00b6 ndepends : int = 0 nentities class-attribute \u00b6 nentities : int = 0 nmeanings class-attribute \u00b6 nmeanings : int = 0 npages class-attribute \u00b6 npages : int = 0 nparagraphs class-attribute \u00b6 nparagraphs : int = 0 nsentences class-attribute \u00b6 nsentences : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 ntriples class-attribute \u00b6 ntriples : int = 0 nwords class-attribute \u00b6 nwords : int = 0 pages class-attribute \u00b6 pages : List [ WDCPage ] = [] Functions \u00b6 addEntity \u00b6 addEntity ( entity : WDCSpan ) addMeaning \u00b6 addMeaning ( meaning : WDCMeaning , pos : WDCPosition ) addPage \u00b6 addPage ( page : WDCPage ) getCurrentPageID \u00b6 getCurrentPageID () WDCItem \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = - 1 pos class-attribute \u00b6 pos : List [ Tuple ] = [] pos_text class-attribute \u00b6 pos_text : List [ str ] = [] score class-attribute \u00b6 score : float = 0.0 text class-attribute \u00b6 text : str = '' type class-attribute \u00b6 type : str = '' WDCMLDocument \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' df_data class-attribute \u00b6 df_data : List = [] entries class-attribute \u00b6 entries : List [ WDCMLEntry ] = [] leaderboard_html class-attribute \u00b6 leaderboard_html : str = '' nentries class-attribute \u00b6 nentries : int = 0 prediction_html class-attribute \u00b6 prediction_html : str = '' profile_html class-attribute \u00b6 profile_html : str = '' profile_learn_html class-attribute \u00b6 profile_learn_html : str = '' raw_json class-attribute \u00b6 raw_json : List [ Dict ] = [] targetsList class-attribute \u00b6 targetsList : List = [] trainList class-attribute \u00b6 trainList : List = [] Functions \u00b6 addEntry \u00b6 addEntry ( entry : WDCMLEntry ) get_leaderboard_html \u00b6 get_leaderboard_html () -> str get_prediction_html \u00b6 get_prediction_html () -> str get_profile_html \u00b6 get_profile_html () -> str get_profile_learn_html \u00b6 get_profile_learn_html () -> str set_leaderboard_html \u00b6 set_leaderboard_html ( strHTML : str ) set_prediction_html \u00b6 set_prediction_html ( strHTML : str ) set_profile_html \u00b6 set_profile_html ( strHTML : str ) set_profile_learn_html \u00b6 set_profile_learn_html ( strHTML : str ) WDCMLEntry \u00b6 Bases: SQLModel Attributes \u00b6 density class-attribute \u00b6 density : float = 0.0 en_tokens class-attribute \u00b6 en_tokens : List [ str ] = [] en_upos class-attribute \u00b6 en_upos : List [ str ] = [] en_xpos class-attribute \u00b6 en_xpos : List [ str ] = [] entities class-attribute \u00b6 entities : List [ WDCSpan ] = [] id class-attribute \u00b6 id : int = - 1 lng_tokens class-attribute \u00b6 lng_tokens : List [ str ] = [] lng_upos class-attribute \u00b6 lng_upos : List [ str ] = [] lng_xpos class-attribute \u00b6 lng_xpos : List [ str ] = [] meanings class-attribute \u00b6 meanings : List [ WDCMeaning ] = [] misc class-attribute \u00b6 misc : Dict = {} nentities class-attribute \u00b6 nentities : int = 0 nmeanings class-attribute \u00b6 nmeanings : int = 0 sentiment class-attribute \u00b6 sentiment : str = '' text class-attribute \u00b6 text : str = '' text_en class-attribute \u00b6 text_en : str = '' Functions \u00b6 addEntity \u00b6 addEntity ( entity : WDCSpan ) addMeaning \u00b6 addMeaning ( meaning : WDCMeaning , pos : WDCPosition ) WDCMeaning \u00b6 Bases: SQLModel Attributes \u00b6 Dict class-attribute \u00b6 Dict = {} context class-attribute \u00b6 context : List [ str ] = [] description class-attribute \u00b6 description : str = '' domains class-attribute \u00b6 domains : List [ str ] = [] entailments class-attribute \u00b6 entailments : List [ str ] = [] frames class-attribute \u00b6 frames : List [ str ] = [] frames_id class-attribute \u00b6 frames_id : List [ int ] = [] frames_set class-attribute \u00b6 frames_set : List [ str ] = [] frames_set_id class-attribute \u00b6 frames_set_id : List [ int ] = [] hits class-attribute \u00b6 hits : int = 1 holonyms class-attribute \u00b6 holonyms : List [ str ] = [] hypernyms class-attribute \u00b6 hypernyms : List [ str ] = [] hyponyms class-attribute \u00b6 hyponyms : List [ str ] = [] id class-attribute \u00b6 id : int = - 1 lemmas class-attribute \u00b6 lemmas : List [ str ] = [] lexname class-attribute \u00b6 lexname : str = '' meronyms class-attribute \u00b6 meronyms : List [ str ] = [] misc class-attribute \u00b6 misc = {} name class-attribute \u00b6 name : str = '' offset class-attribute \u00b6 offset : int = 0 pos class-attribute \u00b6 pos : str = '' positions class-attribute \u00b6 positions : List [ WDCPosition ] = [] root class-attribute \u00b6 root : str = '' root_tree class-attribute \u00b6 root_tree : List [ str ] = [] root_tree_names class-attribute \u00b6 root_tree_names : List [ str ] = [] sees class-attribute \u00b6 sees : List [ str ] = [] similar class-attribute \u00b6 similar : List [ str ] = [] ssid class-attribute \u00b6 ssid : str = '' synset class-attribute \u00b6 synset : str = '' token class-attribute \u00b6 token : str = '' tree class-attribute \u00b6 tree : List [ str ] = [] tree_names class-attribute \u00b6 tree_names : List [ str ] = [] type class-attribute \u00b6 type : str = '' Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) get_domains \u00b6 get_domains () -> str get_entailments \u00b6 get_entailments () -> str get_frames \u00b6 get_frames () -> str get_frames_set \u00b6 get_frames_set () -> str get_holonyms \u00b6 get_holonyms () -> str get_hypernyms \u00b6 get_hypernyms () -> str get_hyponyms \u00b6 get_hyponyms () -> str get_lemmas \u00b6 get_lemmas () -> str get_meronyms \u00b6 get_meronyms () -> str get_root_tree \u00b6 get_root_tree () -> str get_root_tree_names \u00b6 get_root_tree_names () -> str get_sees \u00b6 get_sees () -> str get_similar \u00b6 get_similar () -> str get_synset_list_names \u00b6 get_synset_list_names ( lst_syn : List , sep : str = \", \" ) -> str get_tooltip \u00b6 get_tooltip () -> str get_tree \u00b6 get_tree () -> str processSynset \u00b6 processSynset ( syn , type : str ) WDCPage \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' e class-attribute \u00b6 e : int = - 1 id class-attribute \u00b6 id : int = - 1 nparagraphs class-attribute \u00b6 nparagraphs : int = 0 paragraphs class-attribute \u00b6 paragraphs : List [ WDCParagraph ] = [] s class-attribute \u00b6 s : int = - 1 Functions \u00b6 addParagraph \u00b6 addParagraph ( paragraph : WDCParagraph ) WDCParagraph \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' id class-attribute \u00b6 id : int = - 1 lang class-attribute \u00b6 lang : Optional [ str ] = None ndepends class-attribute \u00b6 ndepends : int = 0 nentities class-attribute \u00b6 nentities : int = 0 nsentences class-attribute \u00b6 nsentences : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 nwords class-attribute \u00b6 nwords : int = 0 position class-attribute \u00b6 position : WDCPosition = WDCPosition () semantic class-attribute \u00b6 semantic : str = '' sentences class-attribute \u00b6 sentences : List [ WDCSentence ] = [] Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) addSentence \u00b6 addSentence ( sentence : WDCSentence ) getTextNoLF \u00b6 getTextNoLF () WDCPosition \u00b6 Bases: SQLModel Attributes \u00b6 e class-attribute \u00b6 e : int = - 1 id class-attribute \u00b6 id : int = 0 pageid class-attribute \u00b6 pageid : int = - 1 paraid class-attribute \u00b6 paraid : int = - 1 s class-attribute \u00b6 s : int = - 1 senid class-attribute \u00b6 senid : int = - 1 WDCSentence \u00b6 Bases: SQLModel Attributes \u00b6 density class-attribute \u00b6 density : float = 0.0 dependencies class-attribute \u00b6 dependencies : List = [] en_tokens class-attribute \u00b6 en_tokens : List [ str ] = [] en_upos class-attribute \u00b6 en_upos : List [ str ] = [] en_xpos class-attribute \u00b6 en_xpos : List [ str ] = [] id class-attribute \u00b6 id : int = - 1 lng_tokens class-attribute \u00b6 lng_tokens : List [ str ] = [] lng_upos class-attribute \u00b6 lng_upos : List [ str ] = [] lng_xpos class-attribute \u00b6 lng_xpos : List [ str ] = [] misc class-attribute \u00b6 misc : Dict = {} ndepends class-attribute \u00b6 ndepends : int = 0 nentities class-attribute \u00b6 nentities : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 ntriples class-attribute \u00b6 ntriples : int = 0 nwords class-attribute \u00b6 nwords : int = 0 position class-attribute \u00b6 position : WDCPosition = WDCPosition () sentiment class-attribute \u00b6 sentiment : str = '' text class-attribute \u00b6 text : str = '' text_en class-attribute \u00b6 text_en : str = '' tokens class-attribute \u00b6 tokens : List [ WDCToken ] = [] triples class-attribute \u00b6 triples : List [ WDCTriple ] = [] Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) addToken \u00b6 addToken ( tok : WDCToken ) addTriple \u00b6 addTriple ( triple : WDCTriple ) WDCSpan \u00b6 Bases: SQLModel Attributes \u00b6 Dict class-attribute \u00b6 Dict = {} id class-attribute \u00b6 id : int = - 1 misc class-attribute \u00b6 misc = {} npos class-attribute \u00b6 npos : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 positions class-attribute \u00b6 positions : List [ WDCPosition ] = [] text class-attribute \u00b6 text : str = '' tokens class-attribute \u00b6 tokens : List [ WDCToken ] = [] type class-attribute \u00b6 type : str = '' Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) WDCToken \u00b6 Bases: SQLModel Attributes \u00b6 density class-attribute \u00b6 density : float = 0.0 id class-attribute \u00b6 id : int = - 1 misc class-attribute \u00b6 misc : Dict = {} ner class-attribute \u00b6 ner : str = '' nwords class-attribute \u00b6 nwords : int = 0 position class-attribute \u00b6 position : WDCPosition = WDCPosition () text class-attribute \u00b6 text : str = '' words class-attribute \u00b6 words : List [ WDCWord ] = [] Functions \u00b6 addWord \u00b6 addWord ( wrd : WDCWord ) WDCTriple \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = - 1 object class-attribute \u00b6 object : Dict = {} perspective class-attribute \u00b6 perspective : Dict = {} position class-attribute \u00b6 position : WDCPosition = WDCPosition () predicate class-attribute \u00b6 predicate : Dict = {} score class-attribute \u00b6 score : float = 0.0 subject class-attribute \u00b6 subject : Dict = {} utterance class-attribute \u00b6 utterance : str = '' WDCWord \u00b6 Bases: SQLModel Attributes \u00b6 deps class-attribute \u00b6 deps : str = '' head class-attribute \u00b6 head : int = - 1 id class-attribute \u00b6 id : int = - 1 label class-attribute \u00b6 label : str = '' lemma class-attribute \u00b6 lemma : str = '' misc class-attribute \u00b6 misc : Optional [ str ] = None morph class-attribute \u00b6 morph : str = '' pos class-attribute \u00b6 pos : str = '' role class-attribute \u00b6 role : str = '' text class-attribute \u00b6 text : str = '' type class-attribute \u00b6 type : Optional [ str ] = ''","title":"wdc"},{"location":"reference/models/wdc/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/wdc/#modelswdc","text":"","title":".models.wdc"},{"location":"reference/models/wdc/#models.wdc-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/models/wdc/#models.wdc-classes","text":"","title":"Classes"},{"location":"reference/models/wdc/#models.wdc.WDCDocument","text":"Bases: SQLModel","title":"WDCDocument"},{"location":"reference/models/wdc/#models.wdc.WDCDocument-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.entities","text":"entities : List [ WDCSpan ] = []","title":"entities"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.meanings","text":"meanings : List [ WDCMeaning ] = []","title":"meanings"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.ndepends","text":"ndepends : int = 0","title":"ndepends"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nmeanings","text":"nmeanings : int = 0","title":"nmeanings"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.npages","text":"npages : int = 0","title":"npages"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nparagraphs","text":"nparagraphs : int = 0","title":"nparagraphs"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nsentences","text":"nsentences : int = 0","title":"nsentences"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.ntriples","text":"ntriples : int = 0","title":"ntriples"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.pages","text":"pages : List [ WDCPage ] = []","title":"pages"},{"location":"reference/models/wdc/#models.wdc.WDCDocument-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.addEntity","text":"addEntity ( entity : WDCSpan )","title":"addEntity()"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.addMeaning","text":"addMeaning ( meaning : WDCMeaning , pos : WDCPosition )","title":"addMeaning()"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.addPage","text":"addPage ( page : WDCPage )","title":"addPage()"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.getCurrentPageID","text":"getCurrentPageID ()","title":"getCurrentPageID()"},{"location":"reference/models/wdc/#models.wdc.WDCItem","text":"Bases: SQLModel","title":"WDCItem"},{"location":"reference/models/wdc/#models.wdc.WDCItem-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCItem.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCItem.pos","text":"pos : List [ Tuple ] = []","title":"pos"},{"location":"reference/models/wdc/#models.wdc.WDCItem.pos_text","text":"pos_text : List [ str ] = []","title":"pos_text"},{"location":"reference/models/wdc/#models.wdc.WDCItem.score","text":"score : float = 0.0","title":"score"},{"location":"reference/models/wdc/#models.wdc.WDCItem.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCItem.type","text":"type : str = ''","title":"type"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument","text":"Bases: SQLModel","title":"WDCMLDocument"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.df_data","text":"df_data : List = []","title":"df_data"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.entries","text":"entries : List [ WDCMLEntry ] = []","title":"entries"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.leaderboard_html","text":"leaderboard_html : str = ''","title":"leaderboard_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.nentries","text":"nentries : int = 0","title":"nentries"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.prediction_html","text":"prediction_html : str = ''","title":"prediction_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.profile_html","text":"profile_html : str = ''","title":"profile_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.profile_learn_html","text":"profile_learn_html : str = ''","title":"profile_learn_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.raw_json","text":"raw_json : List [ Dict ] = []","title":"raw_json"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.targetsList","text":"targetsList : List = []","title":"targetsList"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.trainList","text":"trainList : List = []","title":"trainList"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.addEntry","text":"addEntry ( entry : WDCMLEntry )","title":"addEntry()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_leaderboard_html","text":"get_leaderboard_html () -> str","title":"get_leaderboard_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_prediction_html","text":"get_prediction_html () -> str","title":"get_prediction_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_profile_html","text":"get_profile_html () -> str","title":"get_profile_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_profile_learn_html","text":"get_profile_learn_html () -> str","title":"get_profile_learn_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_leaderboard_html","text":"set_leaderboard_html ( strHTML : str )","title":"set_leaderboard_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_prediction_html","text":"set_prediction_html ( strHTML : str )","title":"set_prediction_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_profile_html","text":"set_profile_html ( strHTML : str )","title":"set_profile_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_profile_learn_html","text":"set_profile_learn_html ( strHTML : str )","title":"set_profile_learn_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry","text":"Bases: SQLModel","title":"WDCMLEntry"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.density","text":"density : float = 0.0","title":"density"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.en_tokens","text":"en_tokens : List [ str ] = []","title":"en_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.en_upos","text":"en_upos : List [ str ] = []","title":"en_upos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.en_xpos","text":"en_xpos : List [ str ] = []","title":"en_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.entities","text":"entities : List [ WDCSpan ] = []","title":"entities"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.lng_tokens","text":"lng_tokens : List [ str ] = []","title":"lng_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.lng_upos","text":"lng_upos : List [ str ] = []","title":"lng_upos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.lng_xpos","text":"lng_xpos : List [ str ] = []","title":"lng_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.meanings","text":"meanings : List [ WDCMeaning ] = []","title":"meanings"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.misc","text":"misc : Dict = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.nmeanings","text":"nmeanings : int = 0","title":"nmeanings"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.sentiment","text":"sentiment : str = ''","title":"sentiment"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.text_en","text":"text_en : str = ''","title":"text_en"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.addEntity","text":"addEntity ( entity : WDCSpan )","title":"addEntity()"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.addMeaning","text":"addMeaning ( meaning : WDCMeaning , pos : WDCPosition )","title":"addMeaning()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning","text":"Bases: SQLModel","title":"WDCMeaning"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.Dict","text":"Dict = {}","title":"Dict"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.context","text":"context : List [ str ] = []","title":"context"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.description","text":"description : str = ''","title":"description"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.domains","text":"domains : List [ str ] = []","title":"domains"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.entailments","text":"entailments : List [ str ] = []","title":"entailments"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames","text":"frames : List [ str ] = []","title":"frames"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames_id","text":"frames_id : List [ int ] = []","title":"frames_id"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames_set","text":"frames_set : List [ str ] = []","title":"frames_set"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames_set_id","text":"frames_set_id : List [ int ] = []","title":"frames_set_id"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.hits","text":"hits : int = 1","title":"hits"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.holonyms","text":"holonyms : List [ str ] = []","title":"holonyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.hypernyms","text":"hypernyms : List [ str ] = []","title":"hypernyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.hyponyms","text":"hyponyms : List [ str ] = []","title":"hyponyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.lemmas","text":"lemmas : List [ str ] = []","title":"lemmas"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.lexname","text":"lexname : str = ''","title":"lexname"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.meronyms","text":"meronyms : List [ str ] = []","title":"meronyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.misc","text":"misc = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.name","text":"name : str = ''","title":"name"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.offset","text":"offset : int = 0","title":"offset"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.pos","text":"pos : str = ''","title":"pos"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.positions","text":"positions : List [ WDCPosition ] = []","title":"positions"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.root","text":"root : str = ''","title":"root"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.root_tree","text":"root_tree : List [ str ] = []","title":"root_tree"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.root_tree_names","text":"root_tree_names : List [ str ] = []","title":"root_tree_names"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.sees","text":"sees : List [ str ] = []","title":"sees"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.similar","text":"similar : List [ str ] = []","title":"similar"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.ssid","text":"ssid : str = ''","title":"ssid"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.synset","text":"synset : str = ''","title":"synset"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.token","text":"token : str = ''","title":"token"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.tree","text":"tree : List [ str ] = []","title":"tree"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.tree_names","text":"tree_names : List [ str ] = []","title":"tree_names"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.type","text":"type : str = ''","title":"type"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_domains","text":"get_domains () -> str","title":"get_domains()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_entailments","text":"get_entailments () -> str","title":"get_entailments()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_frames","text":"get_frames () -> str","title":"get_frames()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_frames_set","text":"get_frames_set () -> str","title":"get_frames_set()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_holonyms","text":"get_holonyms () -> str","title":"get_holonyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_hypernyms","text":"get_hypernyms () -> str","title":"get_hypernyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_hyponyms","text":"get_hyponyms () -> str","title":"get_hyponyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_lemmas","text":"get_lemmas () -> str","title":"get_lemmas()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_meronyms","text":"get_meronyms () -> str","title":"get_meronyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_root_tree","text":"get_root_tree () -> str","title":"get_root_tree()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_root_tree_names","text":"get_root_tree_names () -> str","title":"get_root_tree_names()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_sees","text":"get_sees () -> str","title":"get_sees()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_similar","text":"get_similar () -> str","title":"get_similar()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_synset_list_names","text":"get_synset_list_names ( lst_syn : List , sep : str = \", \" ) -> str","title":"get_synset_list_names()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_tooltip","text":"get_tooltip () -> str","title":"get_tooltip()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_tree","text":"get_tree () -> str","title":"get_tree()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.processSynset","text":"processSynset ( syn , type : str )","title":"processSynset()"},{"location":"reference/models/wdc/#models.wdc.WDCPage","text":"Bases: SQLModel","title":"WDCPage"},{"location":"reference/models/wdc/#models.wdc.WDCPage-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCPage.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCPage.e","text":"e : int = - 1","title":"e"},{"location":"reference/models/wdc/#models.wdc.WDCPage.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCPage.nparagraphs","text":"nparagraphs : int = 0","title":"nparagraphs"},{"location":"reference/models/wdc/#models.wdc.WDCPage.paragraphs","text":"paragraphs : List [ WDCParagraph ] = []","title":"paragraphs"},{"location":"reference/models/wdc/#models.wdc.WDCPage.s","text":"s : int = - 1","title":"s"},{"location":"reference/models/wdc/#models.wdc.WDCPage-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCPage.addParagraph","text":"addParagraph ( paragraph : WDCParagraph )","title":"addParagraph()"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph","text":"Bases: SQLModel","title":"WDCParagraph"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.lang","text":"lang : Optional [ str ] = None","title":"lang"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.ndepends","text":"ndepends : int = 0","title":"ndepends"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.nsentences","text":"nsentences : int = 0","title":"nsentences"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.semantic","text":"semantic : str = ''","title":"semantic"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.sentences","text":"sentences : List [ WDCSentence ] = []","title":"sentences"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.addSentence","text":"addSentence ( sentence : WDCSentence )","title":"addSentence()"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.getTextNoLF","text":"getTextNoLF ()","title":"getTextNoLF()"},{"location":"reference/models/wdc/#models.wdc.WDCPosition","text":"Bases: SQLModel","title":"WDCPosition"},{"location":"reference/models/wdc/#models.wdc.WDCPosition-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.e","text":"e : int = - 1","title":"e"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.id","text":"id : int = 0","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.pageid","text":"pageid : int = - 1","title":"pageid"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.paraid","text":"paraid : int = - 1","title":"paraid"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.s","text":"s : int = - 1","title":"s"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.senid","text":"senid : int = - 1","title":"senid"},{"location":"reference/models/wdc/#models.wdc.WDCSentence","text":"Bases: SQLModel","title":"WDCSentence"},{"location":"reference/models/wdc/#models.wdc.WDCSentence-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.density","text":"density : float = 0.0","title":"density"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.dependencies","text":"dependencies : List = []","title":"dependencies"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.en_tokens","text":"en_tokens : List [ str ] = []","title":"en_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.en_upos","text":"en_upos : List [ str ] = []","title":"en_upos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.en_xpos","text":"en_xpos : List [ str ] = []","title":"en_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.lng_tokens","text":"lng_tokens : List [ str ] = []","title":"lng_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.lng_upos","text":"lng_upos : List [ str ] = []","title":"lng_upos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.lng_xpos","text":"lng_xpos : List [ str ] = []","title":"lng_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.misc","text":"misc : Dict = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.ndepends","text":"ndepends : int = 0","title":"ndepends"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.ntriples","text":"ntriples : int = 0","title":"ntriples"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.sentiment","text":"sentiment : str = ''","title":"sentiment"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.text_en","text":"text_en : str = ''","title":"text_en"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.tokens","text":"tokens : List [ WDCToken ] = []","title":"tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.triples","text":"triples : List [ WDCTriple ] = []","title":"triples"},{"location":"reference/models/wdc/#models.wdc.WDCSentence-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.addToken","text":"addToken ( tok : WDCToken )","title":"addToken()"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.addTriple","text":"addTriple ( triple : WDCTriple )","title":"addTriple()"},{"location":"reference/models/wdc/#models.wdc.WDCSpan","text":"Bases: SQLModel","title":"WDCSpan"},{"location":"reference/models/wdc/#models.wdc.WDCSpan-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.Dict","text":"Dict = {}","title":"Dict"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.misc","text":"misc = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.npos","text":"npos : int = 0","title":"npos"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.positions","text":"positions : List [ WDCPosition ] = []","title":"positions"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.tokens","text":"tokens : List [ WDCToken ] = []","title":"tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.type","text":"type : str = ''","title":"type"},{"location":"reference/models/wdc/#models.wdc.WDCSpan-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCToken","text":"Bases: SQLModel","title":"WDCToken"},{"location":"reference/models/wdc/#models.wdc.WDCToken-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCToken.density","text":"density : float = 0.0","title":"density"},{"location":"reference/models/wdc/#models.wdc.WDCToken.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCToken.misc","text":"misc : Dict = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCToken.ner","text":"ner : str = ''","title":"ner"},{"location":"reference/models/wdc/#models.wdc.WDCToken.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCToken.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCToken.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCToken.words","text":"words : List [ WDCWord ] = []","title":"words"},{"location":"reference/models/wdc/#models.wdc.WDCToken-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCToken.addWord","text":"addWord ( wrd : WDCWord )","title":"addWord()"},{"location":"reference/models/wdc/#models.wdc.WDCTriple","text":"Bases: SQLModel","title":"WDCTriple"},{"location":"reference/models/wdc/#models.wdc.WDCTriple-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.object","text":"object : Dict = {}","title":"object"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.perspective","text":"perspective : Dict = {}","title":"perspective"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.predicate","text":"predicate : Dict = {}","title":"predicate"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.score","text":"score : float = 0.0","title":"score"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.subject","text":"subject : Dict = {}","title":"subject"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.utterance","text":"utterance : str = ''","title":"utterance"},{"location":"reference/models/wdc/#models.wdc.WDCWord","text":"Bases: SQLModel","title":"WDCWord"},{"location":"reference/models/wdc/#models.wdc.WDCWord-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCWord.deps","text":"deps : str = ''","title":"deps"},{"location":"reference/models/wdc/#models.wdc.WDCWord.head","text":"head : int = - 1","title":"head"},{"location":"reference/models/wdc/#models.wdc.WDCWord.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCWord.label","text":"label : str = ''","title":"label"},{"location":"reference/models/wdc/#models.wdc.WDCWord.lemma","text":"lemma : str = ''","title":"lemma"},{"location":"reference/models/wdc/#models.wdc.WDCWord.misc","text":"misc : Optional [ str ] = None","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCWord.morph","text":"morph : str = ''","title":"morph"},{"location":"reference/models/wdc/#models.wdc.WDCWord.pos","text":"pos : str = ''","title":"pos"},{"location":"reference/models/wdc/#models.wdc.WDCWord.role","text":"role : str = ''","title":"role"},{"location":"reference/models/wdc/#models.wdc.WDCWord.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCWord.type","text":"type : Optional [ str ] = ''","title":"type"},{"location":"reference/models/wfl/","text":"msaSDK Module \u00b6 .models.wfl \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' list_node_modules module-attribute \u00b6 list_node_modules : List [ WFLModule ] = [] list_node_types module-attribute \u00b6 list_node_types : List [ WFLNodeType ] = [] Classes \u00b6 WFLModule \u00b6 Bases: SQLModel Attributes \u00b6 description class-attribute \u00b6 description : str = '' id class-attribute \u00b6 id : int = - 1 name class-attribute \u00b6 name : str = '' short class-attribute \u00b6 short : str = '' step class-attribute \u00b6 step : str = '00000' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False WFLNodeType \u00b6 Bases: SQLModel Attributes \u00b6 description class-attribute \u00b6 description : str = '' grp class-attribute \u00b6 grp : str = '00000' icon class-attribute \u00b6 icon : str = 'input' id class-attribute \u00b6 id : int = - 1 name class-attribute \u00b6 name : str = '' short class-attribute \u00b6 short : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False","title":"wfl"},{"location":"reference/models/wfl/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/wfl/#modelswfl","text":"","title":".models.wfl"},{"location":"reference/models/wfl/#models.wfl-attributes","text":"","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/models/wfl/#models.wfl.list_node_modules","text":"list_node_modules : List [ WFLModule ] = []","title":"list_node_modules"},{"location":"reference/models/wfl/#models.wfl.list_node_types","text":"list_node_types : List [ WFLNodeType ] = []","title":"list_node_types"},{"location":"reference/models/wfl/#models.wfl-classes","text":"","title":"Classes"},{"location":"reference/models/wfl/#models.wfl.WFLModule","text":"Bases: SQLModel","title":"WFLModule"},{"location":"reference/models/wfl/#models.wfl.WFLModule-attributes","text":"","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.WFLModule.description","text":"description : str = ''","title":"description"},{"location":"reference/models/wfl/#models.wfl.WFLModule.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wfl/#models.wfl.WFLModule.name","text":"name : str = ''","title":"name"},{"location":"reference/models/wfl/#models.wfl.WFLModule.short","text":"short : str = ''","title":"short"},{"location":"reference/models/wfl/#models.wfl.WFLModule.step","text":"step : str = '00000'","title":"step"},{"location":"reference/models/wfl/#models.wfl.WFLModule-classes","text":"","title":"Classes"},{"location":"reference/models/wfl/#models.wfl.WFLModule.Config","text":"","title":"Config"},{"location":"reference/models/wfl/#models.wfl.WFLModule.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType","text":"Bases: SQLModel","title":"WFLNodeType"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType-attributes","text":"","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.description","text":"description : str = ''","title":"description"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.grp","text":"grp : str = '00000'","title":"grp"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.icon","text":"icon : str = 'input'","title":"icon"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.name","text":"name : str = ''","title":"name"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.short","text":"short : str = ''","title":"short"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType-classes","text":"","title":"Classes"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.Config","text":"","title":"Config"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/router/system/","text":"msaSDK Module \u00b6 .router.system \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' sys_router module-attribute \u00b6 sys_router = APIRouter ( prefix = \"\" , tags = [ \"system\" ], include_in_schema = True ) Functions \u00b6 system_gpu_info \u00b6 system_gpu_info ( request : Request ) -> MSASystemGPUInfo Get System Nvidia GPU's Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysgpuinfo MSASystemGPUInfo Pydantic Model TYPE: MSASystemGPUInfo system_info \u00b6 system_info ( request : Request ) -> MSASystemInfo Get System Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysinfo MSASystemInfo Pydantic Model TYPE: MSASystemInfo system_test_error \u00b6 system_test_error ( request : Request ) -> TypeError Create an Error to test the interception middleware. With an HTTP request it replies with an HTML Interception Page PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RAISES DESCRIPTION TypeError TypeError('msaSDK System Test error...')","title":"system"},{"location":"reference/router/system/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/router/system/#routersystem","text":"","title":".router.system"},{"location":"reference/router/system/#router.system-attributes","text":"","title":"Attributes"},{"location":"reference/router/system/#router.system.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/router/system/#router.system.sys_router","text":"sys_router = APIRouter ( prefix = \"\" , tags = [ \"system\" ], include_in_schema = True )","title":"sys_router"},{"location":"reference/router/system/#router.system-functions","text":"","title":"Functions"},{"location":"reference/router/system/#router.system.system_gpu_info","text":"system_gpu_info ( request : Request ) -> MSASystemGPUInfo Get System Nvidia GPU's Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysgpuinfo MSASystemGPUInfo Pydantic Model TYPE: MSASystemGPUInfo","title":"system_gpu_info()"},{"location":"reference/router/system/#router.system.system_info","text":"system_info ( request : Request ) -> MSASystemInfo Get System Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysinfo MSASystemInfo Pydantic Model TYPE: MSASystemInfo","title":"system_info()"},{"location":"reference/router/system/#router.system.system_test_error","text":"system_test_error ( request : Request ) -> TypeError Create an Error to test the interception middleware. With an HTTP request it replies with an HTML Interception Page PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RAISES DESCRIPTION TypeError TypeError('msaSDK System Test error...')","title":"system_test_error()"},{"location":"reference/server/srv_gunicorn/","text":"msaSDK Module \u00b6 .server.srv_gunicorn \u00b6 Attributes \u00b6 JSON_LOGS module-attribute \u00b6 JSON_LOGS = ( True if os . environ . get ( \"JSON_LOGS\" , \"0\" ) == \"1\" else False ) __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 InterceptHandler \u00b6 Bases: logging . Handler Functions \u00b6 emit \u00b6 emit ( record ) MSAServerGunicorn \u00b6 Attributes \u00b6 app instance-attribute \u00b6 app : MSAApp = app app_dir instance-attribute \u00b6 app_dir : str = app_dir host instance-attribute \u00b6 host : str = host intercept_handler instance-attribute \u00b6 intercept_handler = InterceptHandler () log_level instance-attribute \u00b6 log_level : str = log_level port instance-attribute \u00b6 port : int = port reload instance-attribute \u00b6 reload : bool = reload seen instance-attribute \u00b6 seen = set () workers instance-attribute \u00b6 workers : int = workers Functions \u00b6 __init__ \u00b6 __init__ ( app : MSAApp , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = - 1 , ) -> None run \u00b6 run () StandaloneApplication \u00b6 Bases: BaseApplication , ABC Attributes \u00b6 application instance-attribute \u00b6 application : MSAApp = app options instance-attribute \u00b6 options = options or {} Functions \u00b6 __init__ \u00b6 __init__ ( app : MSAApp , options = None ) load \u00b6 load () load_config \u00b6 load_config () StubbedGunicornLogger \u00b6 Bases: Logger Attributes \u00b6 access_logger instance-attribute \u00b6 access_logger = logging . getLogger ( 'gunicorn.access' ) error_logger instance-attribute \u00b6 error_logger = logging . getLogger ( 'gunicorn.error' ) handler instance-attribute \u00b6 handler = logging . NullHandler () log_level instance-attribute \u00b6 log_level : str = log_level Functions \u00b6 __init__ \u00b6 __init__ ( cfg , log_level : str = 'info' ) Functions \u00b6 number_of_workers \u00b6 number_of_workers ()","title":"srv_gunicorn"},{"location":"reference/server/srv_gunicorn/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/server/srv_gunicorn/#serversrv_gunicorn","text":"","title":".server.srv_gunicorn"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.JSON_LOGS","text":"JSON_LOGS = ( True if os . environ . get ( \"JSON_LOGS\" , \"0\" ) == \"1\" else False )","title":"JSON_LOGS"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn-classes","text":"","title":"Classes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.InterceptHandler","text":"Bases: logging . Handler","title":"InterceptHandler"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.InterceptHandler-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.InterceptHandler.emit","text":"emit ( record )","title":"emit()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn","text":"","title":"MSAServerGunicorn"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.app","text":"app : MSAApp = app","title":"app"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.app_dir","text":"app_dir : str = app_dir","title":"app_dir"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.host","text":"host : str = host","title":"host"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.intercept_handler","text":"intercept_handler = InterceptHandler ()","title":"intercept_handler"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.log_level","text":"log_level : str = log_level","title":"log_level"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.port","text":"port : int = port","title":"port"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.reload","text":"reload : bool = reload","title":"reload"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.seen","text":"seen = set ()","title":"seen"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.workers","text":"workers : int = workers","title":"workers"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.__init__","text":"__init__ ( app : MSAApp , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = - 1 , ) -> None","title":"__init__()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.run","text":"run ()","title":"run()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication","text":"Bases: BaseApplication , ABC","title":"StandaloneApplication"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.application","text":"application : MSAApp = app","title":"application"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.options","text":"options = options or {}","title":"options"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.__init__","text":"__init__ ( app : MSAApp , options = None )","title":"__init__()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.load","text":"load ()","title":"load()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.load_config","text":"load_config ()","title":"load_config()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger","text":"Bases: Logger","title":"StubbedGunicornLogger"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.access_logger","text":"access_logger = logging . getLogger ( 'gunicorn.access' )","title":"access_logger"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.error_logger","text":"error_logger = logging . getLogger ( 'gunicorn.error' )","title":"error_logger"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.handler","text":"handler = logging . NullHandler ()","title":"handler"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.log_level","text":"log_level : str = log_level","title":"log_level"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.__init__","text":"__init__ ( cfg , log_level : str = 'info' )","title":"__init__()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.number_of_workers","text":"number_of_workers ()","title":"number_of_workers()"},{"location":"reference/server/srv_uvicorn/","text":"msaSDK Module \u00b6 .server.srv_uvicorn \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAServerUvicorn \u00b6 Attributes \u00b6 app instance-attribute \u00b6 app : str = app app_dir instance-attribute \u00b6 app_dir : str = app_dir host instance-attribute \u00b6 host : str = host log_config instance-attribute \u00b6 log_config = uvicorn . config . LOGGING_CONFIG log_level instance-attribute \u00b6 log_level : str = log_level port instance-attribute \u00b6 port : int = port reload instance-attribute \u00b6 reload : bool = reload workers instance-attribute \u00b6 workers : int = workers Functions \u00b6 __init__ \u00b6 __init__ ( app : str , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = 1 , ) -> None run \u00b6 run ()","title":"srv_uvicorn"},{"location":"reference/server/srv_uvicorn/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/server/srv_uvicorn/#serversrv_uvicorn","text":"","title":".server.srv_uvicorn"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn-classes","text":"","title":"Classes"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn","text":"","title":"MSAServerUvicorn"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.app","text":"app : str = app","title":"app"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.app_dir","text":"app_dir : str = app_dir","title":"app_dir"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.host","text":"host : str = host","title":"host"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.log_config","text":"log_config = uvicorn . config . LOGGING_CONFIG","title":"log_config"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.log_level","text":"log_level : str = log_level","title":"log_level"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.port","text":"port : int = port","title":"port"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.reload","text":"reload : bool = reload","title":"reload"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.workers","text":"workers : int = workers","title":"workers"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn-functions","text":"","title":"Functions"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.__init__","text":"__init__ ( app : str , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = 1 , ) -> None","title":"__init__()"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.run","text":"run ()","title":"run()"},{"location":"reference/services/wdc/","text":"msaSDK Module \u00b6 .services.wdc \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Functions \u00b6 createEntity async \u00b6 createEntity ( paragraph : WDCParagraph , ent , optionCountry : bool , optionOrg : bool , optionDensity : bool , optionNatural : bool , langcode : str , ) createEntityOnly async \u00b6 createEntityOnly ( text : str , type : str , start : int , end : int , pageid : int = - 1 , paraid : int = - 1 , senid : int = - 1 , misc = None , ) createEntitySimple async \u00b6 createEntitySimple ( paragraph : WDCParagraph , text , type , start , end , misc , x , senx , ) createNewDoc async \u00b6 createNewDoc ( inputText : str , langcode : str = 'en' ) createNewMLDoc async \u00b6 createNewMLDoc ( data : dict , langcode : str = \"en\" , optionTargetFields : str = \"IMPULSKATEGORIE, IMPULSART\" , optionTrainFields : str = \"SACHVERHALT\" , ) createNewParagraphs async \u00b6 createNewParagraphs ( page : WDCPage , sdu_page : SDUPage , parmove : int , optionSentiment : bool , langcode : str , ) createParagraph async \u00b6 createParagraph ( par , x ) createToken async \u00b6 createToken ( tok , optionDensity : bool , optionNatural : bool , langcode : str , ) createTriple async \u00b6 createTriple ( triple : Dict , x ) createWord async \u00b6 createWord ( wrd ) getCompleteRoleFromDep async \u00b6 getCompleteRoleFromDep ( dep ) -> str getResultDependencies async \u00b6 getResultDependencies ( doc : WDCDocument ) getResultEntities async \u00b6 getResultEntities ( doc : WDCDocument ) getResultEntitiesGroups async \u00b6 getResultEntitiesGroups ( doc : WDCDocument ) getResultPages async \u00b6 getResultPages ( doc : WDCDocument ) getResultParagraphs async \u00b6 getResultParagraphs ( doc : WDCDocument ) getResultSentences async \u00b6 getResultSentences ( doc : WDCDocument ) getResultTokens async \u00b6 getResultTokens ( doc : WDCDocument ) getResultTriples async \u00b6 getResultTriples ( doc : WDCDocument ) getResultWords async \u00b6 getResultWords ( doc : WDCDocument )","title":"wdc"},{"location":"reference/services/wdc/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/services/wdc/#serviceswdc","text":"","title":".services.wdc"},{"location":"reference/services/wdc/#services.wdc-attributes","text":"","title":"Attributes"},{"location":"reference/services/wdc/#services.wdc.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/services/wdc/#services.wdc-functions","text":"","title":"Functions"},{"location":"reference/services/wdc/#services.wdc.createEntity","text":"createEntity ( paragraph : WDCParagraph , ent , optionCountry : bool , optionOrg : bool , optionDensity : bool , optionNatural : bool , langcode : str , )","title":"createEntity()"},{"location":"reference/services/wdc/#services.wdc.createEntityOnly","text":"createEntityOnly ( text : str , type : str , start : int , end : int , pageid : int = - 1 , paraid : int = - 1 , senid : int = - 1 , misc = None , )","title":"createEntityOnly()"},{"location":"reference/services/wdc/#services.wdc.createEntitySimple","text":"createEntitySimple ( paragraph : WDCParagraph , text , type , start , end , misc , x , senx , )","title":"createEntitySimple()"},{"location":"reference/services/wdc/#services.wdc.createNewDoc","text":"createNewDoc ( inputText : str , langcode : str = 'en' )","title":"createNewDoc()"},{"location":"reference/services/wdc/#services.wdc.createNewMLDoc","text":"createNewMLDoc ( data : dict , langcode : str = \"en\" , optionTargetFields : str = \"IMPULSKATEGORIE, IMPULSART\" , optionTrainFields : str = \"SACHVERHALT\" , )","title":"createNewMLDoc()"},{"location":"reference/services/wdc/#services.wdc.createNewParagraphs","text":"createNewParagraphs ( page : WDCPage , sdu_page : SDUPage , parmove : int , optionSentiment : bool , langcode : str , )","title":"createNewParagraphs()"},{"location":"reference/services/wdc/#services.wdc.createParagraph","text":"createParagraph ( par , x )","title":"createParagraph()"},{"location":"reference/services/wdc/#services.wdc.createToken","text":"createToken ( tok , optionDensity : bool , optionNatural : bool , langcode : str , )","title":"createToken()"},{"location":"reference/services/wdc/#services.wdc.createTriple","text":"createTriple ( triple : Dict , x )","title":"createTriple()"},{"location":"reference/services/wdc/#services.wdc.createWord","text":"createWord ( wrd )","title":"createWord()"},{"location":"reference/services/wdc/#services.wdc.getCompleteRoleFromDep","text":"getCompleteRoleFromDep ( dep ) -> str","title":"getCompleteRoleFromDep()"},{"location":"reference/services/wdc/#services.wdc.getResultDependencies","text":"getResultDependencies ( doc : WDCDocument )","title":"getResultDependencies()"},{"location":"reference/services/wdc/#services.wdc.getResultEntities","text":"getResultEntities ( doc : WDCDocument )","title":"getResultEntities()"},{"location":"reference/services/wdc/#services.wdc.getResultEntitiesGroups","text":"getResultEntitiesGroups ( doc : WDCDocument )","title":"getResultEntitiesGroups()"},{"location":"reference/services/wdc/#services.wdc.getResultPages","text":"getResultPages ( doc : WDCDocument )","title":"getResultPages()"},{"location":"reference/services/wdc/#services.wdc.getResultParagraphs","text":"getResultParagraphs ( doc : WDCDocument )","title":"getResultParagraphs()"},{"location":"reference/services/wdc/#services.wdc.getResultSentences","text":"getResultSentences ( doc : WDCDocument )","title":"getResultSentences()"},{"location":"reference/services/wdc/#services.wdc.getResultTokens","text":"getResultTokens ( doc : WDCDocument )","title":"getResultTokens()"},{"location":"reference/services/wdc/#services.wdc.getResultTriples","text":"getResultTriples ( doc : WDCDocument )","title":"getResultTriples()"},{"location":"reference/services/wdc/#services.wdc.getResultWords","text":"getResultWords ( doc : WDCDocument )","title":"getResultWords()"},{"location":"reference/utils/constants/","text":"msaSDK Module \u00b6 .utils.constants \u00b6 Attributes \u00b6 ERROR module-attribute \u00b6 ERROR = 'SPK_V1_ERROR' ERROR_NO_FILE module-attribute \u00b6 ERROR_NO_FILE = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' ) ERROR_NO_FILES module-attribute \u00b6 ERROR_NO_FILES = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' ) ERROR_NO_TEXT module-attribute \u00b6 ERROR_NO_TEXT = ( '{\"' + ERROR + '\": \"' + \"InputText empty\" + '\"}' ) ERROR_NO_UID module-attribute \u00b6 ERROR_NO_UID = ( '{\"' + ERROR + '\": \"' + \"No UID provided\" + '\"}' )","title":"constants"},{"location":"reference/utils/constants/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/constants/#utilsconstants","text":"","title":".utils.constants"},{"location":"reference/utils/constants/#utils.constants-attributes","text":"","title":"Attributes"},{"location":"reference/utils/constants/#utils.constants.ERROR","text":"ERROR = 'SPK_V1_ERROR'","title":"ERROR"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_FILE","text":"ERROR_NO_FILE = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' )","title":"ERROR_NO_FILE"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_FILES","text":"ERROR_NO_FILES = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' )","title":"ERROR_NO_FILES"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_TEXT","text":"ERROR_NO_TEXT = ( '{\"' + ERROR + '\": \"' + \"InputText empty\" + '\"}' )","title":"ERROR_NO_TEXT"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_UID","text":"ERROR_NO_UID = ( '{\"' + ERROR + '\": \"' + \"No UID provided\" + '\"}' )","title":"ERROR_NO_UID"},{"location":"reference/utils/doc_code_ref/","text":"msaSDK Module \u00b6 .utils.doc_code_ref \u00b6 Generate the code reference pages and navigation. Functions \u00b6 generate_code_reference_documentation \u00b6 generate_code_reference_documentation ( virtual_ref_nav_path : str = \"reference\" , ref_md_file : str = \"SUMMARY.md\" , virtual_requirements_nav_path : str = \"requirements\" , req_md_file : str = \"requirements.md\" , source_path : str = \"msaSDK\" , source_file_type_filter : str = \"*.py\" , requirement_file : str = \"requirements.txt\" , md_file_type : str = \".md\" , recreate_pip_info : bool = False , exclude_functions : List [ str ] = [ \"__init__\" , \"__main__\" , \"main\" , \"run\" , ], pkl_info_file : str = \"docs/saved_req_package_pip_info.pkl\" , ) Generates the virtual mkdocs md files and adds them to the navigation. Scans the requirement file and gets pip show info for each package and stores it to a pickle file. Copy this to your project and use in mkdocs.yml with the mkdocs-gen-files plugin to execute the script. Ensure to call the function at the end, add generate_code_reference_documentation() at the end of your file.","title":"doc_code_ref"},{"location":"reference/utils/doc_code_ref/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/doc_code_ref/#utilsdoc_code_ref","text":"Generate the code reference pages and navigation.","title":".utils.doc_code_ref"},{"location":"reference/utils/doc_code_ref/#utils.doc_code_ref-functions","text":"","title":"Functions"},{"location":"reference/utils/doc_code_ref/#utils.doc_code_ref.generate_code_reference_documentation","text":"generate_code_reference_documentation ( virtual_ref_nav_path : str = \"reference\" , ref_md_file : str = \"SUMMARY.md\" , virtual_requirements_nav_path : str = \"requirements\" , req_md_file : str = \"requirements.md\" , source_path : str = \"msaSDK\" , source_file_type_filter : str = \"*.py\" , requirement_file : str = \"requirements.txt\" , md_file_type : str = \".md\" , recreate_pip_info : bool = False , exclude_functions : List [ str ] = [ \"__init__\" , \"__main__\" , \"main\" , \"run\" , ], pkl_info_file : str = \"docs/saved_req_package_pip_info.pkl\" , ) Generates the virtual mkdocs md files and adds them to the navigation. Scans the requirement file and gets pip show info for each package and stores it to a pickle file. Copy this to your project and use in mkdocs.yml with the mkdocs-gen-files plugin to execute the script. Ensure to call the function at the end, add generate_code_reference_documentation() at the end of your file.","title":"generate_code_reference_documentation()"},{"location":"reference/utils/email/","text":"msaSDK Module \u00b6 .utils.email \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSASendEmail \u00b6 Attributes \u00b6 host instance-attribute \u00b6 host : str = smtp_host password instance-attribute \u00b6 password : str = smtp_password port instance-attribute \u00b6 port : int = smtp_port testmode instance-attribute \u00b6 testmode : bool = testmode Testmode True doesnt send the email out through SMTP Server timeout instance-attribute \u00b6 timeout : int = timeout username instance-attribute \u00b6 username : str = smtp_username Functions \u00b6 __init__ \u00b6 __init__ ( smtp_host : str , smtp_port : int , smtp_username : str , smtp_password : str , timeout : int = 60 , testmode : bool = False , ) send_email async \u00b6 send_email ( from_email : str , to_email : str , subject : str , body : str , jinja_template_path_html : str = \"\" , ) Send an email. RAISES DESCRIPTION TypeError Error: MSASendEmail: HTML Templatefile ... not exists TypeError Error: MSASendEmail: SMTP Server Login failed for User","title":"email"},{"location":"reference/utils/email/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/email/#utilsemail","text":"","title":".utils.email"},{"location":"reference/utils/email/#utils.email-attributes","text":"","title":"Attributes"},{"location":"reference/utils/email/#utils.email.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/email/#utils.email-classes","text":"","title":"Classes"},{"location":"reference/utils/email/#utils.email.MSASendEmail","text":"","title":"MSASendEmail"},{"location":"reference/utils/email/#utils.email.MSASendEmail-attributes","text":"","title":"Attributes"},{"location":"reference/utils/email/#utils.email.MSASendEmail.host","text":"host : str = smtp_host","title":"host"},{"location":"reference/utils/email/#utils.email.MSASendEmail.password","text":"password : str = smtp_password","title":"password"},{"location":"reference/utils/email/#utils.email.MSASendEmail.port","text":"port : int = smtp_port","title":"port"},{"location":"reference/utils/email/#utils.email.MSASendEmail.testmode","text":"testmode : bool = testmode Testmode True doesnt send the email out through SMTP Server","title":"testmode"},{"location":"reference/utils/email/#utils.email.MSASendEmail.timeout","text":"timeout : int = timeout","title":"timeout"},{"location":"reference/utils/email/#utils.email.MSASendEmail.username","text":"username : str = smtp_username","title":"username"},{"location":"reference/utils/email/#utils.email.MSASendEmail-functions","text":"","title":"Functions"},{"location":"reference/utils/email/#utils.email.MSASendEmail.__init__","text":"__init__ ( smtp_host : str , smtp_port : int , smtp_username : str , smtp_password : str , timeout : int = 60 , testmode : bool = False , )","title":"__init__()"},{"location":"reference/utils/email/#utils.email.MSASendEmail.send_email","text":"send_email ( from_email : str , to_email : str , subject : str , body : str , jinja_template_path_html : str = \"\" , ) Send an email. RAISES DESCRIPTION TypeError Error: MSASendEmail: HTML Templatefile ... not exists TypeError Error: MSASendEmail: SMTP Server Login failed for User","title":"send_email()"},{"location":"reference/utils/errorhandling/","text":"msaSDK Module \u00b6 .utils.errorhandling \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSABaseExceptionHandler \u00b6 Attributes \u00b6 stack_trace instance-attribute \u00b6 stack_trace = list () Functions \u00b6 __init__ \u00b6 __init__ () -> None handle \u00b6 handle ( ex : Exception , * args ) handle Exception Get the current system exception, extract unformatter stack traces as tuples. flowchart LR system_exception -. n:m .-> Exceptions Exceptions -. m:m .-> Extract Extract -. m:m .-> Formatted Formats stacktrace to: File : %s , Line : %d, Func.Name : %s, Message : %s Logs the information with logger.error() str, args, type, value, stack_trace RAISES DESCRIPTION TypeError Exception: ... Arguments: ... Message: ... Stack trace: ... Functions \u00b6 getMSABaseExceptionHandler cached \u00b6 getMSABaseExceptionHandler () -> MSABaseExceptionHandler This function returns a cached instance of the MSABaseExceptionHandler object. Note Caching is used to prevent re-reading the environment every time the MSABaseExceptionHandler is used.","title":"errorhandling"},{"location":"reference/utils/errorhandling/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/errorhandling/#utilserrorhandling","text":"","title":".utils.errorhandling"},{"location":"reference/utils/errorhandling/#utils.errorhandling-attributes","text":"","title":"Attributes"},{"location":"reference/utils/errorhandling/#utils.errorhandling.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/errorhandling/#utils.errorhandling-classes","text":"","title":"Classes"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler","text":"","title":"MSABaseExceptionHandler"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler-attributes","text":"","title":"Attributes"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler.stack_trace","text":"stack_trace = list ()","title":"stack_trace"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler-functions","text":"","title":"Functions"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler.__init__","text":"__init__ () -> None","title":"__init__()"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler.handle","text":"handle ( ex : Exception , * args ) handle Exception Get the current system exception, extract unformatter stack traces as tuples. flowchart LR system_exception -. n:m .-> Exceptions Exceptions -. m:m .-> Extract Extract -. m:m .-> Formatted Formats stacktrace to: File : %s , Line : %d, Func.Name : %s, Message : %s Logs the information with logger.error() str, args, type, value, stack_trace RAISES DESCRIPTION TypeError Exception: ... Arguments: ... Message: ... Stack trace: ...","title":"handle()"},{"location":"reference/utils/errorhandling/#utils.errorhandling-functions","text":"","title":"Functions"},{"location":"reference/utils/errorhandling/#utils.errorhandling.getMSABaseExceptionHandler","text":"getMSABaseExceptionHandler () -> MSABaseExceptionHandler This function returns a cached instance of the MSABaseExceptionHandler object. Note Caching is used to prevent re-reading the environment every time the MSABaseExceptionHandler is used.","title":"getMSABaseExceptionHandler()"},{"location":"reference/utils/example_google_doc_style/","text":"msaSDK Module \u00b6 .utils.example_google_doc_style \u00b6 Example Google style docstrings. This module demonstrates documentation as specified by the Google Python Style Guide _. Docstrings may extend over multiple lines. Sections are created with a section header and a colon followed by a block of indented text. Example Examples can be given using either the Example or Examples sections. Sections support any reStructuredText formatting, including literal blocks:: $ python example_google.py Section breaks are created by resuming unindented text. Section breaks are also implicitly created anytime a new section starts. ATTRIBUTE DESCRIPTION module_level_variable1 Module level variables may be documented in either the Attributes section of the module docstring, or in an inline docstring immediately following the variable. Either form is acceptable, but the two should not be mixed. Choose one convention to document module level variables and be consistent with it. TYPE: int Todo For module TODOs You have to also use sphinx.ext.todo extension .. _Google Python Style Guide: http://google.github.io/styleguide/pyguide.html Attributes \u00b6 module_level_variable1 module-attribute \u00b6 module_level_variable1 = 12345 module_level_variable2 module-attribute \u00b6 module_level_variable2 = 98765 int: Module level variable documented inline. The docstring may span multiple lines. The type may optionally be specified on the first line, separated by a colon. Classes \u00b6 ExampleClass \u00b6 Bases: object The summary line for a class docstring should fit on one line. If the class has public attributes, they may be documented here in an Attributes section and follow the same formatting as a function's Args section. Alternatively, attributes may be documented inline with the attribute's declaration (see init method below). Properties created with the @property decorator should be documented in the property's getter method. ATTRIBUTE DESCRIPTION attr1 Description of attr1 . TYPE: str attr2 obj: int , optional): Description of attr2 . Attributes \u00b6 attr1 instance-attribute \u00b6 attr1 = param1 attr2 instance-attribute \u00b6 attr2 = param2 attr3 instance-attribute \u00b6 attr3 = param3 attr4 instance-attribute \u00b6 attr4 = [ 'attr4' ] attr5 instance-attribute \u00b6 attr5 = None str: Docstring after attribute, with type specified. Functions \u00b6 __init__ \u00b6 __init__ ( param1 , param2 , param3 ) Example of docstring on the init method. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 Description of param1 . TYPE: str param2 obj: int , optional): Description of param2 . Multiple lines are supported. param3 obj: list of :obj: str ): Description of param3 . __special__ \u00b6 __special__ () By default special members with docstrings are not included. Special members are any methods or attributes that start with and end with a double underscore. Any special member with a docstring will be included in the output, if napoleon_include_special_with_doc is set to True. This behavior can be enabled by changing the following setting in Sphinx's conf.py:: napoleon_include_special_with_doc = True __special_without_docstring__ \u00b6 __special_without_docstring__ () example_method \u00b6 example_method ( param1 , param2 ) Class methods are similar to regular functions. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 The first parameter. param2 The second parameter. RETURNS DESCRIPTION True if successful, False otherwise. readonly_property property \u00b6 readonly_property () str: Properties should be documented in their getter method. readwrite_property writable property \u00b6 readwrite_property () :obj: list of :obj: str : Properties with both a getter and setter should only be documented in their getter method. If the setter method contains notable behavior, it should be mentioned here. ExampleError \u00b6 Bases: Exception Exceptions are documented in the same way as classes. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION msg Human readable string describing the exception. TYPE: str code obj: int , optional): Error code. ATTRIBUTE DESCRIPTION msg Human readable string describing the exception. TYPE: str code Exception error code. TYPE: int Attributes \u00b6 code instance-attribute \u00b6 code = code msg instance-attribute \u00b6 msg = msg Functions \u00b6 __init__ \u00b6 __init__ ( msg , code ) Functions \u00b6 example_generator \u00b6 example_generator ( n ) Generators have a Yields section instead of a Returns section. PARAMETER DESCRIPTION n The upper limit of the range to generate, from 0 to n - 1. TYPE: int YIELDS DESCRIPTION int The next number in the range of 0 to n - 1. Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> print ([ i for i in example_generator ( 4 )]) [0, 1, 2, 3] function_with_pep484_type_annotations \u00b6 function_with_pep484_type_annotations ( param1 : int , param2 : str ) -> bool Example function with PEP 484 type annotations. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise. function_with_types_in_docstring \u00b6 function_with_types_in_docstring ( param1 , param2 ) Example function with types documented in the docstring. PEP 484 _ type annotations are supported. If attribute, parameter, and return types are annotated according to PEP 484 _, they do not need to be included in the docstring: PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise. .. _PEP 484: https://www.python.org/dev/peps/pep-0484/ module_level_function \u00b6 module_level_function ( param1 , param2 = None , * args , ** kwargs ) This is an example of a module level function. Function parameters should be documented in the Args section. The name of each parameter is required. The type and description of each parameter is optional, but should be included if not obvious. If *args or **kwargs are accepted, they should be listed as *args and **kwargs . The format for a parameter is:: name (type): description The description may span multiple lines. Following lines should be indented. The \"(type)\" is optional. Multiple paragraphs are supported in parameter descriptions. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 obj: str , optional): The second parameter. Defaults to None. Second line of description should be indented. DEFAULT: None *args Variable length argument list. DEFAULT: () **kwargs Arbitrary keyword arguments. DEFAULT: {} RETURNS DESCRIPTION bool True if successful, False otherwise. The return type is optional and may be specified at the beginning of the Returns section followed by a colon. The Returns section may span multiple lines and paragraphs. Following lines should be indented to match the first line. The Returns section supports any reStructuredText formatting, including literal blocks:: { 'param1': param1, 'param2': param2 } RAISES DESCRIPTION AttributeError The Raises section is a list of all exceptions that are relevant to the interface. ValueError If param2 is equal to param1 .","title":"example_google_doc_style"},{"location":"reference/utils/example_google_doc_style/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/example_google_doc_style/#utilsexample_google_doc_style","text":"Example Google style docstrings. This module demonstrates documentation as specified by the Google Python Style Guide _. Docstrings may extend over multiple lines. Sections are created with a section header and a colon followed by a block of indented text. Example Examples can be given using either the Example or Examples sections. Sections support any reStructuredText formatting, including literal blocks:: $ python example_google.py Section breaks are created by resuming unindented text. Section breaks are also implicitly created anytime a new section starts. ATTRIBUTE DESCRIPTION module_level_variable1 Module level variables may be documented in either the Attributes section of the module docstring, or in an inline docstring immediately following the variable. Either form is acceptable, but the two should not be mixed. Choose one convention to document module level variables and be consistent with it. TYPE: int Todo For module TODOs You have to also use sphinx.ext.todo extension .. _Google Python Style Guide: http://google.github.io/styleguide/pyguide.html","title":".utils.example_google_doc_style"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style-attributes","text":"","title":"Attributes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.module_level_variable1","text":"module_level_variable1 = 12345","title":"module_level_variable1"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.module_level_variable2","text":"module_level_variable2 = 98765 int: Module level variable documented inline. The docstring may span multiple lines. The type may optionally be specified on the first line, separated by a colon.","title":"module_level_variable2"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style-classes","text":"","title":"Classes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass","text":"Bases: object The summary line for a class docstring should fit on one line. If the class has public attributes, they may be documented here in an Attributes section and follow the same formatting as a function's Args section. Alternatively, attributes may be documented inline with the attribute's declaration (see init method below). Properties created with the @property decorator should be documented in the property's getter method. ATTRIBUTE DESCRIPTION attr1 Description of attr1 . TYPE: str attr2 obj: int , optional): Description of attr2 .","title":"ExampleClass"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass-attributes","text":"","title":"Attributes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr1","text":"attr1 = param1","title":"attr1"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr2","text":"attr2 = param2","title":"attr2"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr3","text":"attr3 = param3","title":"attr3"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr4","text":"attr4 = [ 'attr4' ]","title":"attr4"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr5","text":"attr5 = None str: Docstring after attribute, with type specified.","title":"attr5"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass-functions","text":"","title":"Functions"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.__init__","text":"__init__ ( param1 , param2 , param3 ) Example of docstring on the init method. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 Description of param1 . TYPE: str param2 obj: int , optional): Description of param2 . Multiple lines are supported. param3 obj: list of :obj: str ): Description of param3 .","title":"__init__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.__special__","text":"__special__ () By default special members with docstrings are not included. Special members are any methods or attributes that start with and end with a double underscore. Any special member with a docstring will be included in the output, if napoleon_include_special_with_doc is set to True. This behavior can be enabled by changing the following setting in Sphinx's conf.py:: napoleon_include_special_with_doc = True","title":"__special__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.__special_without_docstring__","text":"__special_without_docstring__ ()","title":"__special_without_docstring__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.example_method","text":"example_method ( param1 , param2 ) Class methods are similar to regular functions. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 The first parameter. param2 The second parameter. RETURNS DESCRIPTION True if successful, False otherwise.","title":"example_method()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.readonly_property","text":"readonly_property () str: Properties should be documented in their getter method.","title":"readonly_property()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.readwrite_property","text":"readwrite_property () :obj: list of :obj: str : Properties with both a getter and setter should only be documented in their getter method. If the setter method contains notable behavior, it should be mentioned here.","title":"readwrite_property()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError","text":"Bases: Exception Exceptions are documented in the same way as classes. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION msg Human readable string describing the exception. TYPE: str code obj: int , optional): Error code. ATTRIBUTE DESCRIPTION msg Human readable string describing the exception. TYPE: str code Exception error code. TYPE: int","title":"ExampleError"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError-attributes","text":"","title":"Attributes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError.code","text":"code = code","title":"code"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError.msg","text":"msg = msg","title":"msg"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError-functions","text":"","title":"Functions"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError.__init__","text":"__init__ ( msg , code )","title":"__init__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style-functions","text":"","title":"Functions"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.example_generator","text":"example_generator ( n ) Generators have a Yields section instead of a Returns section. PARAMETER DESCRIPTION n The upper limit of the range to generate, from 0 to n - 1. TYPE: int YIELDS DESCRIPTION int The next number in the range of 0 to n - 1. Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> print ([ i for i in example_generator ( 4 )]) [0, 1, 2, 3]","title":"example_generator()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.function_with_pep484_type_annotations","text":"function_with_pep484_type_annotations ( param1 : int , param2 : str ) -> bool Example function with PEP 484 type annotations. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise.","title":"function_with_pep484_type_annotations()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.function_with_types_in_docstring","text":"function_with_types_in_docstring ( param1 , param2 ) Example function with types documented in the docstring. PEP 484 _ type annotations are supported. If attribute, parameter, and return types are annotated according to PEP 484 _, they do not need to be included in the docstring: PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise. .. _PEP 484: https://www.python.org/dev/peps/pep-0484/","title":"function_with_types_in_docstring()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.module_level_function","text":"module_level_function ( param1 , param2 = None , * args , ** kwargs ) This is an example of a module level function. Function parameters should be documented in the Args section. The name of each parameter is required. The type and description of each parameter is optional, but should be included if not obvious. If *args or **kwargs are accepted, they should be listed as *args and **kwargs . The format for a parameter is:: name (type): description The description may span multiple lines. Following lines should be indented. The \"(type)\" is optional. Multiple paragraphs are supported in parameter descriptions. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 obj: str , optional): The second parameter. Defaults to None. Second line of description should be indented. DEFAULT: None *args Variable length argument list. DEFAULT: () **kwargs Arbitrary keyword arguments. DEFAULT: {} RETURNS DESCRIPTION bool True if successful, False otherwise. The return type is optional and may be specified at the beginning of the Returns section followed by a colon. The Returns section may span multiple lines and paragraphs. Following lines should be indented to match the first line. The Returns section supports any reStructuredText formatting, including literal blocks:: { 'param1': param1, 'param2': param2 } RAISES DESCRIPTION AttributeError The Raises section is a list of all exceptions that are relevant to the interface. ValueError If param2 is equal to param1 .","title":"module_level_function()"},{"location":"reference/utils/fileupload/","text":"msaSDK Module \u00b6 .utils.fileupload \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' archive_pack_formats module-attribute \u00b6 archive_pack_formats = shutil . get_archive_formats () archive_unpack_formats module-attribute \u00b6 archive_unpack_formats = shutil . get_unpack_formats () Classes \u00b6 FileDelete \u00b6 File Delete Class PARAMETER DESCRIPTION uid str , the GUID of the file TYPE: str root_path str, dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str, the folder the file was uploaded to. TYPE: str DEFAULT: 'data/uploads' Attributes \u00b6 root_path instance-attribute \u00b6 root_path = root_path uid instance-attribute \u00b6 uid = uid uploads_dir instance-attribute \u00b6 uploads_dir = uploads_dir Functions \u00b6 __init__ \u00b6 __init__ ( uid : str , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , ) delete_files async \u00b6 delete_files () FileExtNotAllowed \u00b6 Bases: ServerHTTPException raise when the upload file ext not allowed FileMaxSizeLimit \u00b6 Bases: ServerHTTPException raise when the upload file exceeds the max size FileUpload \u00b6 FileUpload Class PARAMETER DESCRIPTION filesize int, size in bytes TYPE: int root_path str = dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str = \"data/uploads\", where to store the file TYPE: str DEFAULT: 'data/uploads' not_allow_extensions Optional[List[str]] = None, exclude file extensions from upload ability TYPE: Optional [ List [ str ]] DEFAULT: None max_size int = 150000000, max allowed filesize in bytes for upload TYPE: int DEFAULT: 150000000 createUIDSubFolders bool = False, if enabled the system creates Subfolders by the UID TYPE: bool DEFAULT: False Attributes \u00b6 content_type instance-attribute \u00b6 content_type = '' createSubFolders instance-attribute \u00b6 createSubFolders = createUIDSubFolders file_size instance-attribute \u00b6 file_size = filesize filename_generator instance-attribute \u00b6 filename_generator = nameGen fullpath instance-attribute \u00b6 fullpath = '' magic_desc instance-attribute \u00b6 magic_desc = '' magic_type instance-attribute \u00b6 magic_type = '' max_size instance-attribute \u00b6 max_size = max_size name instance-attribute \u00b6 name = '' not_allow_extensions instance-attribute \u00b6 not_allow_extensions = not_allow_extensions root_path instance-attribute \u00b6 root_path = root_path uid instance-attribute \u00b6 uid = str ( uuid4 ()) uploads_dir instance-attribute \u00b6 uploads_dir = uploads_dir Functions \u00b6 __init__ \u00b6 __init__ ( filesize : int , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , not_allow_extensions : Optional [ List [ str ]] = None , max_size : int = 150000000 , createUIDSubFolders : bool = False , ) save_file async \u00b6 save_file ( filename : str , ufile : UploadFile ) Save the file PARAMETER DESCRIPTION filename the name of the file it should be saved uner TYPE: str ufile UploadFile instance of the file to save TYPE: UploadFile upload async \u00b6 upload ( file : UploadFile ) upload the file PARAMETER DESCRIPTION file The UploadFile instance of the file for upload. TYPE: UploadFile InvalidResource \u00b6 Bases: ServerHTTPException raise when has invalid resource NoSuchFieldFound \u00b6 Bases: ServerHTTPException raise when no such field for the given ServerHTTPException \u00b6 Bases: HTTPException Functions \u00b6 __init__ \u00b6 __init__ ( error : str = None ) Functions \u00b6 checkIfFileIsArchive async \u00b6 checkIfFileIsArchive ( file : UploadFile ) Check if File is an Archive like zip or tar createMSAFile async \u00b6 createMSAFile ( file : UploadFile , up : FileUpload ) -> MSAFile Create an MSAFile Instance for the provided file PARAMETER DESCRIPTION file is the UploadFile TYPE: UploadFile up is the FileUpload Instance TYPE: FileUpload RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile createMSAFileFromUnpacked async \u00b6 createMSAFileFromUnpacked ( filepath : str , processuid : str ) -> MSAFile Create an MSAFile Instance for a file from an archive, and keep them under one group by the processuid PARAMETER DESCRIPTION filepath str of the file path TYPE: str processuid str of the group process id (GUID) TYPE: str RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile nameGen \u00b6 nameGen ( uid , file ) secure_filename \u00b6 secure_filename ( filename : str ) -> str Pass it a filename and it will return a secure version of it. This filename can then safely be stored on a regular file system and passed to :func: os.path.join . The filename returned is an ASCII only string for maximum portability. On windows systems the function also makes sure that the file is not named after one of the special device files. Example secure_filename ( \"My cool movie.mov\" ) 'My_cool_movie.mov' secure_filename ( \"../../../etc/passwd\" ) 'etc_passwd' secure_filename ( 'i contain cool \\xfc ml \\xe4 uts.txt' ) 'i_contain_cool_umlauts.txt' The function might return an empty filename. It's your responsibility to ensure that the filename is unique and that you abort or generate a random filename if the function returned an empty one. .. versionadded:: 0.5 PARAMETER DESCRIPTION filename the filename to secure TYPE: str","title":"fileupload"},{"location":"reference/utils/fileupload/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/fileupload/#utilsfileupload","text":"","title":".utils.fileupload"},{"location":"reference/utils/fileupload/#utils.fileupload-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileupload/#utils.fileupload.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/fileupload/#utils.fileupload.archive_pack_formats","text":"archive_pack_formats = shutil . get_archive_formats ()","title":"archive_pack_formats"},{"location":"reference/utils/fileupload/#utils.fileupload.archive_unpack_formats","text":"archive_unpack_formats = shutil . get_unpack_formats ()","title":"archive_unpack_formats"},{"location":"reference/utils/fileupload/#utils.fileupload-classes","text":"","title":"Classes"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete","text":"File Delete Class PARAMETER DESCRIPTION uid str , the GUID of the file TYPE: str root_path str, dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str, the folder the file was uploaded to. TYPE: str DEFAULT: 'data/uploads'","title":"FileDelete"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.root_path","text":"root_path = root_path","title":"root_path"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.uid","text":"uid = uid","title":"uid"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.uploads_dir","text":"uploads_dir = uploads_dir","title":"uploads_dir"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.__init__","text":"__init__ ( uid : str , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , )","title":"__init__()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.delete_files","text":"delete_files ()","title":"delete_files()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileExtNotAllowed","text":"Bases: ServerHTTPException raise when the upload file ext not allowed","title":"FileExtNotAllowed"},{"location":"reference/utils/fileupload/#utils.fileupload.FileMaxSizeLimit","text":"Bases: ServerHTTPException raise when the upload file exceeds the max size","title":"FileMaxSizeLimit"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload","text":"FileUpload Class PARAMETER DESCRIPTION filesize int, size in bytes TYPE: int root_path str = dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str = \"data/uploads\", where to store the file TYPE: str DEFAULT: 'data/uploads' not_allow_extensions Optional[List[str]] = None, exclude file extensions from upload ability TYPE: Optional [ List [ str ]] DEFAULT: None max_size int = 150000000, max allowed filesize in bytes for upload TYPE: int DEFAULT: 150000000 createUIDSubFolders bool = False, if enabled the system creates Subfolders by the UID TYPE: bool DEFAULT: False","title":"FileUpload"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.content_type","text":"content_type = ''","title":"content_type"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.createSubFolders","text":"createSubFolders = createUIDSubFolders","title":"createSubFolders"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.file_size","text":"file_size = filesize","title":"file_size"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.filename_generator","text":"filename_generator = nameGen","title":"filename_generator"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.fullpath","text":"fullpath = ''","title":"fullpath"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.magic_desc","text":"magic_desc = ''","title":"magic_desc"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.magic_type","text":"magic_type = ''","title":"magic_type"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.max_size","text":"max_size = max_size","title":"max_size"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.name","text":"name = ''","title":"name"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.not_allow_extensions","text":"not_allow_extensions = not_allow_extensions","title":"not_allow_extensions"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.root_path","text":"root_path = root_path","title":"root_path"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.uid","text":"uid = str ( uuid4 ())","title":"uid"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.uploads_dir","text":"uploads_dir = uploads_dir","title":"uploads_dir"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.__init__","text":"__init__ ( filesize : int , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , not_allow_extensions : Optional [ List [ str ]] = None , max_size : int = 150000000 , createUIDSubFolders : bool = False , )","title":"__init__()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.save_file","text":"save_file ( filename : str , ufile : UploadFile ) Save the file PARAMETER DESCRIPTION filename the name of the file it should be saved uner TYPE: str ufile UploadFile instance of the file to save TYPE: UploadFile","title":"save_file()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.upload","text":"upload ( file : UploadFile ) upload the file PARAMETER DESCRIPTION file The UploadFile instance of the file for upload. TYPE: UploadFile","title":"upload()"},{"location":"reference/utils/fileupload/#utils.fileupload.InvalidResource","text":"Bases: ServerHTTPException raise when has invalid resource","title":"InvalidResource"},{"location":"reference/utils/fileupload/#utils.fileupload.NoSuchFieldFound","text":"Bases: ServerHTTPException raise when no such field for the given","title":"NoSuchFieldFound"},{"location":"reference/utils/fileupload/#utils.fileupload.ServerHTTPException","text":"Bases: HTTPException","title":"ServerHTTPException"},{"location":"reference/utils/fileupload/#utils.fileupload.ServerHTTPException-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.ServerHTTPException.__init__","text":"__init__ ( error : str = None )","title":"__init__()"},{"location":"reference/utils/fileupload/#utils.fileupload-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.checkIfFileIsArchive","text":"checkIfFileIsArchive ( file : UploadFile ) Check if File is an Archive like zip or tar","title":"checkIfFileIsArchive()"},{"location":"reference/utils/fileupload/#utils.fileupload.createMSAFile","text":"createMSAFile ( file : UploadFile , up : FileUpload ) -> MSAFile Create an MSAFile Instance for the provided file PARAMETER DESCRIPTION file is the UploadFile TYPE: UploadFile up is the FileUpload Instance TYPE: FileUpload RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile","title":"createMSAFile()"},{"location":"reference/utils/fileupload/#utils.fileupload.createMSAFileFromUnpacked","text":"createMSAFileFromUnpacked ( filepath : str , processuid : str ) -> MSAFile Create an MSAFile Instance for a file from an archive, and keep them under one group by the processuid PARAMETER DESCRIPTION filepath str of the file path TYPE: str processuid str of the group process id (GUID) TYPE: str RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile","title":"createMSAFileFromUnpacked()"},{"location":"reference/utils/fileupload/#utils.fileupload.nameGen","text":"nameGen ( uid , file )","title":"nameGen()"},{"location":"reference/utils/fileupload/#utils.fileupload.secure_filename","text":"secure_filename ( filename : str ) -> str Pass it a filename and it will return a secure version of it. This filename can then safely be stored on a regular file system and passed to :func: os.path.join . The filename returned is an ASCII only string for maximum portability. On windows systems the function also makes sure that the file is not named after one of the special device files. Example secure_filename ( \"My cool movie.mov\" ) 'My_cool_movie.mov' secure_filename ( \"../../../etc/passwd\" ) 'etc_passwd' secure_filename ( 'i contain cool \\xfc ml \\xe4 uts.txt' ) 'i_contain_cool_umlauts.txt' The function might return an empty filename. It's your responsibility to ensure that the filename is unique and that you abort or generate a random filename if the function returned an empty one. .. versionadded:: 0.5 PARAMETER DESCRIPTION filename the filename to secure TYPE: str","title":"secure_filename()"},{"location":"reference/utils/fileutils/","text":"msaSDK Module \u00b6 .utils.fileutils \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Functions \u00b6 all_dirs_with_subdirs async \u00b6 all_dirs_with_subdirs ( path , subdirs ) -> List get_directory_listing async \u00b6 get_directory_listing ( path ) -> Dict load_content_from_file async \u00b6 load_content_from_file ( file_name : str ) -> str save_binary_to_file async \u00b6 save_binary_to_file ( file_name : str , content : bytes ) -> None save_content_to_file async \u00b6 save_content_to_file ( file_name : str , content : str ) -> None","title":"fileutils"},{"location":"reference/utils/fileutils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/fileutils/#utilsfileutils","text":"","title":".utils.fileutils"},{"location":"reference/utils/fileutils/#utils.fileutils-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileutils/#utils.fileutils.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/fileutils/#utils.fileutils-functions","text":"","title":"Functions"},{"location":"reference/utils/fileutils/#utils.fileutils.all_dirs_with_subdirs","text":"all_dirs_with_subdirs ( path , subdirs ) -> List","title":"all_dirs_with_subdirs()"},{"location":"reference/utils/fileutils/#utils.fileutils.get_directory_listing","text":"get_directory_listing ( path ) -> Dict","title":"get_directory_listing()"},{"location":"reference/utils/fileutils/#utils.fileutils.load_content_from_file","text":"load_content_from_file ( file_name : str ) -> str","title":"load_content_from_file()"},{"location":"reference/utils/fileutils/#utils.fileutils.save_binary_to_file","text":"save_binary_to_file ( file_name : str , content : bytes ) -> None","title":"save_binary_to_file()"},{"location":"reference/utils/fileutils/#utils.fileutils.save_content_to_file","text":"save_content_to_file ( file_name : str , content : str ) -> None","title":"save_content_to_file()"},{"location":"reference/utils/fonts/","text":"msaSDK Module \u00b6 .utils.fonts \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Functions \u00b6 findSystemFonts async \u00b6 findSystemFonts ( fontpaths = None , fontext = \"ttf\" ) -> List [ str ] Search for fonts in the specified font paths. If no paths are given, will use a standard set of system paths, as well as the list of fonts tracked by fontconfig if fontconfig is installed and available. A list of TrueType fonts are returned by default with AFM fonts as an option. RETURNS DESCRIPTION ret List[str] of fname of fontfiles in path TYPE: List [ str ]","title":"fonts"},{"location":"reference/utils/fonts/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/fonts/#utilsfonts","text":"","title":".utils.fonts"},{"location":"reference/utils/fonts/#utils.fonts-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fonts/#utils.fonts.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/fonts/#utils.fonts-functions","text":"","title":"Functions"},{"location":"reference/utils/fonts/#utils.fonts.findSystemFonts","text":"findSystemFonts ( fontpaths = None , fontext = \"ttf\" ) -> List [ str ] Search for fonts in the specified font paths. If no paths are given, will use a standard set of system paths, as well as the list of fonts tracked by fontconfig if fontconfig is installed and available. A list of TrueType fonts are returned by default with AFM fonts as an option. RETURNS DESCRIPTION ret List[str] of fname of fontfiles in path TYPE: List [ str ]","title":"findSystemFonts()"},{"location":"reference/utils/healthcheck/","text":"msaSDK Module \u00b6 .utils.healthcheck \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAHealthCheck \u00b6 Bases: Thread Attributes \u00b6 error instance-attribute \u00b6 error : str = '' healthy instance-attribute \u00b6 healthy : str = 'No Healthcheck executed yet:400' interval instance-attribute \u00b6 interval = healthdefinition . interval is_healthy instance-attribute \u00b6 is_healthy : bool = False url instance-attribute \u00b6 url = 'http:// {} : {} /' . format ( host , port ) Functions \u00b6 __init__ \u00b6 __init__ ( healthdefinition : MSAHealthDefinition , host : str , port : int , ) MSAHealthCheckObject, provides a thread to give a healthcheck. PARAMETER DESCRIPTION healthdefinition The MSAHealthDefinition instance TYPE: MSAHealthDefinition host IP/URl to call the healtcheck endpoint TYPE: str port Port of the healtcheck endpoint server listener/endpoint TYPE: int get_health async \u00b6 get_health () -> str Get the last health check result The string is \"positiv: status_code\" or \"negative: status_code\" run \u00b6 run () Run the Healthcheck Thread Sleeps by the interval provided by the MSAHealthDefinition. Uses httpx to call the healthcheck endpoint which is http://{}:{}/\".format(host, port) Any 200 <= response.status_code < 300 is healthy, rest is not healthy stop async \u00b6 stop () Stops the Healthcheck Thread.","title":"healthcheck"},{"location":"reference/utils/healthcheck/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/healthcheck/#utilshealthcheck","text":"","title":".utils.healthcheck"},{"location":"reference/utils/healthcheck/#utils.healthcheck-attributes","text":"","title":"Attributes"},{"location":"reference/utils/healthcheck/#utils.healthcheck.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/healthcheck/#utils.healthcheck-classes","text":"","title":"Classes"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck","text":"Bases: Thread","title":"MSAHealthCheck"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck-attributes","text":"","title":"Attributes"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.error","text":"error : str = ''","title":"error"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.healthy","text":"healthy : str = 'No Healthcheck executed yet:400'","title":"healthy"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.interval","text":"interval = healthdefinition . interval","title":"interval"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.is_healthy","text":"is_healthy : bool = False","title":"is_healthy"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.url","text":"url = 'http:// {} : {} /' . format ( host , port )","title":"url"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck-functions","text":"","title":"Functions"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.__init__","text":"__init__ ( healthdefinition : MSAHealthDefinition , host : str , port : int , ) MSAHealthCheckObject, provides a thread to give a healthcheck. PARAMETER DESCRIPTION healthdefinition The MSAHealthDefinition instance TYPE: MSAHealthDefinition host IP/URl to call the healtcheck endpoint TYPE: str port Port of the healtcheck endpoint server listener/endpoint TYPE: int","title":"__init__()"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.get_health","text":"get_health () -> str Get the last health check result The string is \"positiv: status_code\" or \"negative: status_code\"","title":"get_health()"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.run","text":"run () Run the Healthcheck Thread Sleeps by the interval provided by the MSAHealthDefinition. Uses httpx to call the healthcheck endpoint which is http://{}:{}/\".format(host, port) Any 200 <= response.status_code < 300 is healthy, rest is not healthy","title":"run()"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.stop","text":"stop () Stops the Healthcheck Thread.","title":"stop()"},{"location":"reference/utils/htmlutils/","text":"msaSDK Module \u00b6 .utils.htmlutils \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Functions \u00b6 sanitize async \u00b6 sanitize ( dirty_html : Any ) -> Optional [ str ] Clean/Sanitize HTML using lxml.html.clean.Cleaner Cleans the following: Removes any <meta> tags Removes any embedded objects (flash, iframes) Removes any <link> tags Removes any style tags. Removes any processing instructions. Removes any style attributes. Defaults to the value of the style option. Removes any <script> tags. Removes any Javascript, like an onclick attribute. Also removes stylesheets as they could contain Javascript. Removes any comments. Removes any frame-related tags Removes any form tags Removes Tags that aren't wrong , but are annoying. <blink> and <marquee> Remove any tags that aren't standard parts of HTML. Remove any attributes which are not frozenset(['src', 'color', 'href', 'title', 'class', 'name', 'id']), Remove Tags ('span', 'font', 'div'), their content will get pulled up into the parent tag. PARAMETER DESCRIPTION dirty_html Any, usually a html str TYPE: Any RETURNS DESCRIPTION clean_html Optional[str] cleaned html TYPE: Optional [ str ]","title":"htmlutils"},{"location":"reference/utils/htmlutils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/htmlutils/#utilshtmlutils","text":"","title":".utils.htmlutils"},{"location":"reference/utils/htmlutils/#utils.htmlutils-attributes","text":"","title":"Attributes"},{"location":"reference/utils/htmlutils/#utils.htmlutils.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/htmlutils/#utils.htmlutils-functions","text":"","title":"Functions"},{"location":"reference/utils/htmlutils/#utils.htmlutils.sanitize","text":"sanitize ( dirty_html : Any ) -> Optional [ str ] Clean/Sanitize HTML using lxml.html.clean.Cleaner Cleans the following: Removes any <meta> tags Removes any embedded objects (flash, iframes) Removes any <link> tags Removes any style tags. Removes any processing instructions. Removes any style attributes. Defaults to the value of the style option. Removes any <script> tags. Removes any Javascript, like an onclick attribute. Also removes stylesheets as they could contain Javascript. Removes any comments. Removes any frame-related tags Removes any form tags Removes Tags that aren't wrong , but are annoying. <blink> and <marquee> Remove any tags that aren't standard parts of HTML. Remove any attributes which are not frozenset(['src', 'color', 'href', 'title', 'class', 'name', 'id']), Remove Tags ('span', 'font', 'div'), their content will get pulled up into the parent tag. PARAMETER DESCRIPTION dirty_html Any, usually a html str TYPE: Any RETURNS DESCRIPTION clean_html Optional[str] cleaned html TYPE: Optional [ str ]","title":"sanitize()"},{"location":"reference/utils/logger/","text":"msaSDK Module \u00b6 .utils.logger \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 InterceptHandler \u00b6 Bases: logging . Handler Default handler from examples in loguru documentaion. See https://loguru.readthedocs.io/en/stable/overview.html#entirely-compatible-with-standard-logging Functions \u00b6 emit \u00b6 emit ( record : logging . LogRecord ) Functions \u00b6 format_record \u00b6 format_record ( record : dict ) -> str Custom format for loguru loggers. Uses pformat for log any data like request/response body during debug. Works with logging if loguru handler it. Example payload = [{ \"users\" :[{ \"name\" : \"Nick\" , \"age\" : 87 , \"is_active\" : True }, { \"name\" : \"Alex\" , \"age\" : 27 , \"is_active\" : True }], \"count\" : 2 }] logger . bind ( payload = ) . debug ( \"users payload\" ) [ { 'count' : 2 , 'users' : [ { 'age' : 87 , 'is_active' : True , 'name' : 'Nick' }, { 'age' : 27 , 'is_active' : True , 'name' : 'Alex' }]}] init_logging \u00b6 init_logging () Replaces logging handlers with a handler for using the custom handler. WARNING! if you call the init_logging in startup event function, then the first logs before the application start will be in the old format Example app . add_event_handler ( \"startup\" , init_logging ) stdout : INFO : Uvicorn running on http : // 127.0.0.1 : 8000 ( Press CTRL + C to quit ) INFO : Started reloader process [ 11528 ] using statreload INFO : Started server process [ 6036 ] INFO : Waiting for application startup . 2020 - 07 - 25 02 : 19 : 21.357 | INFO | uvicorn . lifespan . on : startup : 34 - Application startup complete .","title":"logger"},{"location":"reference/utils/logger/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/logger/#utilslogger","text":"","title":".utils.logger"},{"location":"reference/utils/logger/#utils.logger-attributes","text":"","title":"Attributes"},{"location":"reference/utils/logger/#utils.logger.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/logger/#utils.logger-classes","text":"","title":"Classes"},{"location":"reference/utils/logger/#utils.logger.InterceptHandler","text":"Bases: logging . Handler Default handler from examples in loguru documentaion. See https://loguru.readthedocs.io/en/stable/overview.html#entirely-compatible-with-standard-logging","title":"InterceptHandler"},{"location":"reference/utils/logger/#utils.logger.InterceptHandler-functions","text":"","title":"Functions"},{"location":"reference/utils/logger/#utils.logger.InterceptHandler.emit","text":"emit ( record : logging . LogRecord )","title":"emit()"},{"location":"reference/utils/logger/#utils.logger-functions","text":"","title":"Functions"},{"location":"reference/utils/logger/#utils.logger.format_record","text":"format_record ( record : dict ) -> str Custom format for loguru loggers. Uses pformat for log any data like request/response body during debug. Works with logging if loguru handler it. Example payload = [{ \"users\" :[{ \"name\" : \"Nick\" , \"age\" : 87 , \"is_active\" : True }, { \"name\" : \"Alex\" , \"age\" : 27 , \"is_active\" : True }], \"count\" : 2 }] logger . bind ( payload = ) . debug ( \"users payload\" ) [ { 'count' : 2 , 'users' : [ { 'age' : 87 , 'is_active' : True , 'name' : 'Nick' }, { 'age' : 27 , 'is_active' : True , 'name' : 'Alex' }]}]","title":"format_record()"},{"location":"reference/utils/logger/#utils.logger.init_logging","text":"init_logging () Replaces logging handlers with a handler for using the custom handler. WARNING! if you call the init_logging in startup event function, then the first logs before the application start will be in the old format Example app . add_event_handler ( \"startup\" , init_logging ) stdout : INFO : Uvicorn running on http : // 127.0.0.1 : 8000 ( Press CTRL + C to quit ) INFO : Started reloader process [ 11528 ] using statreload INFO : Started server process [ 6036 ] INFO : Waiting for application startup . 2020 - 07 - 25 02 : 19 : 21.357 | INFO | uvicorn . lifespan . on : startup : 34 - Application startup complete .","title":"init_logging()"},{"location":"reference/utils/profiler/","text":"msaSDK Module \u00b6 .utils.profiler \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAProfilerMiddleware \u00b6 PyInstrument Profiler as Middleware Used to create a HTML from the Profiler result if enabled in the MSAServiceDefinition instance. PARAMETER DESCRIPTION msa_app Optional[Router] = None, Instance of the MSAApp TYPE: Optional [ Router ] DEFAULT: None profiler_interval float = 0.0001, TYPE: float DEFAULT: 0.0001 profiler_output_type str = \"html\", text or html should be html if Admin Site Profiler Page should be used. TYPE: str DEFAULT: 'html' track_each_request bool = True, Tracks each single request and profiles it immediatly, if off then profiler creates result while shutdwon event. TYPE: bool DEFAULT: True **profiler_kwargs other pyinstrument args like 'html_file_name' TYPE: Dict DEFAULT: {} Attributes \u00b6 app instance-attribute \u00b6 app = app Linked/Mounted MSAApp Instance Functions \u00b6 __call__ async \u00b6 __call__ ( scope : Scope , receive : Receive , send : Send ) -> None register an event handler for profiler stop __init__ \u00b6 __init__ ( app : ASGIApp , * , msa_app : Optional [ Router ] = None , profiler_interval : float = 0.0001 , profiler_output_type : str = \"html\" , track_each_request : bool = True , ** profiler_kwargs : Dict ) get_profiler_result async \u00b6 get_profiler_result () Produces the profiler result in the defined output type format, text or html","title":"profiler"},{"location":"reference/utils/profiler/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/profiler/#utilsprofiler","text":"","title":".utils.profiler"},{"location":"reference/utils/profiler/#utils.profiler-attributes","text":"","title":"Attributes"},{"location":"reference/utils/profiler/#utils.profiler.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/profiler/#utils.profiler-classes","text":"","title":"Classes"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware","text":"PyInstrument Profiler as Middleware Used to create a HTML from the Profiler result if enabled in the MSAServiceDefinition instance. PARAMETER DESCRIPTION msa_app Optional[Router] = None, Instance of the MSAApp TYPE: Optional [ Router ] DEFAULT: None profiler_interval float = 0.0001, TYPE: float DEFAULT: 0.0001 profiler_output_type str = \"html\", text or html should be html if Admin Site Profiler Page should be used. TYPE: str DEFAULT: 'html' track_each_request bool = True, Tracks each single request and profiles it immediatly, if off then profiler creates result while shutdwon event. TYPE: bool DEFAULT: True **profiler_kwargs other pyinstrument args like 'html_file_name' TYPE: Dict DEFAULT: {}","title":"MSAProfilerMiddleware"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware-attributes","text":"","title":"Attributes"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.app","text":"app = app Linked/Mounted MSAApp Instance","title":"app"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware-functions","text":"","title":"Functions"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.__call__","text":"__call__ ( scope : Scope , receive : Receive , send : Send ) -> None register an event handler for profiler stop","title":"__call__()"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.__init__","text":"__init__ ( app : ASGIApp , * , msa_app : Optional [ Router ] = None , profiler_interval : float = 0.0001 , profiler_output_type : str = \"html\" , track_each_request : bool = True , ** profiler_kwargs : Dict )","title":"__init__()"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.get_profiler_result","text":"get_profiler_result () Produces the profiler result in the defined output type format, text or html","title":"get_profiler_result()"},{"location":"reference/utils/scheduler/","text":"msaSDK Module \u00b6 .utils.scheduler \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAScheduler \u00b6 Attributes \u00b6 debug instance-attribute \u00b6 debug = debug Debug mode True/False enabled instance-attribute \u00b6 enabled : bool = False is_running instance-attribute \u00b6 is_running : bool = False jobs instance-attribute \u00b6 jobs = jobs dictionary MSATimers instances local_time_zone instance-attribute \u00b6 local_time_zone = local_time_zone logger instance-attribute \u00b6 logger = parent_logger if parent_logger else logger Functions \u00b6 __init__ \u00b6 __init__ ( jobs : dict , local_time_zone : str = \"UTC\" , poll_millis : float = 1000 , debug : bool = False , parent_logger = None , ) MSAScheduler object runs timers Standard Polling is 1 second PARAMETER DESCRIPTION jobs timer_jobs: dict[MSATimerEnum, list] = {... TYPE: dict local_time_zone str = 'UTC' TYPE: str DEFAULT: 'UTC' poll_millis float = 1000 TYPE: float DEFAULT: 1000 debug bool = False TYPE: bool DEFAULT: False parent_logger logger instance to use, if empty it creates a local loguru logger DEFAULT: None run_timers async \u00b6 run_timers ( poll_adjuster = 0.99 , debug = False ) runs timers as follows: Step 1: run every poll jobs Step 2: load timer queues for next poll Step 3: delay function which runs previous poll queues poll_adjustor allows time for other timing stop_timers async \u00b6 stop_timers () Stop all timers MSATimerEnum \u00b6 Bases: str , Enum Enum for the different timer Types Attributes \u00b6 every_hour class-attribute \u00b6 every_hour = 'every hour' every_minute class-attribute \u00b6 every_minute = 'every minute' every_poll class-attribute \u00b6 every_poll = 'every poll' every_second class-attribute \u00b6 every_second = 'every second' on_the_15_minute class-attribute \u00b6 on_the_15_minute = 'on the 15 minute' on_the_15_second class-attribute \u00b6 on_the_15_second = 'on the 15 second' on_the_30_minute class-attribute \u00b6 on_the_30_minute = 'on the 30 minute' on_the_30_second class-attribute \u00b6 on_the_30_second = 'on the 30 second' on_the_5_minute class-attribute \u00b6 on_the_5_minute = 'on the 5 minute' on_the_5_second class-attribute \u00b6 on_the_5_second = 'on the 5 second' schedule class-attribute \u00b6 schedule = 'schedule' MSATimers \u00b6 Class to create dictionary of timers for use in MSAScheduler. Attributes \u00b6 timer_jobs instance-attribute \u00b6 timer_jobs = { MSATimerEnum . every_poll : [], MSATimerEnum . every_second : [], MSATimerEnum . on_the_5_second : [], MSATimerEnum . on_the_15_second : [], MSATimerEnum . on_the_30_second : [], MSATimerEnum . every_minute : [], MSATimerEnum . on_the_5_minute : [], MSATimerEnum . on_the_15_minute : [], MSATimerEnum . on_the_30_minute : [], MSATimerEnum . every_hour : [], MSATimerEnum . schedule : [], } Functions \u00b6 __init__ \u00b6 __init__ () self.timer_jobs is the primary resource in MSATimers This is filled by MSATimers It is then accessed by the source and served to MSAScheduler create_timer \u00b6 create_timer ( T_mode : MSATimerEnum , func : typing . Callable , mark_HH_MM : str = None , ) Create a Timer PARAMETER DESCRIPTION T_mode MSATimerEnum TYPE: MSATimerEnum func the call handler for this timer TYPE: typing . Callable mark_HH_MM If scheduler type then this is the time for execution. TYPE: str DEFAULT: None Functions \u00b6 get_time \u00b6 get_time ( local_time_zone = 'UTC' ) get_time_stamp \u00b6 get_time_stamp ( local_time_zone = \"UTC\" , time_format = \"HMS\" )","title":"scheduler"},{"location":"reference/utils/scheduler/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/scheduler/#utilsscheduler","text":"","title":".utils.scheduler"},{"location":"reference/utils/scheduler/#utils.scheduler-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/scheduler/#utils.scheduler-classes","text":"","title":"Classes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler","text":"","title":"MSAScheduler"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.debug","text":"debug = debug Debug mode True/False","title":"debug"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.enabled","text":"enabled : bool = False","title":"enabled"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.is_running","text":"is_running : bool = False","title":"is_running"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.jobs","text":"jobs = jobs dictionary MSATimers instances","title":"jobs"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.local_time_zone","text":"local_time_zone = local_time_zone","title":"local_time_zone"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.logger","text":"logger = parent_logger if parent_logger else logger","title":"logger"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler-functions","text":"","title":"Functions"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.__init__","text":"__init__ ( jobs : dict , local_time_zone : str = \"UTC\" , poll_millis : float = 1000 , debug : bool = False , parent_logger = None , ) MSAScheduler object runs timers Standard Polling is 1 second PARAMETER DESCRIPTION jobs timer_jobs: dict[MSATimerEnum, list] = {... TYPE: dict local_time_zone str = 'UTC' TYPE: str DEFAULT: 'UTC' poll_millis float = 1000 TYPE: float DEFAULT: 1000 debug bool = False TYPE: bool DEFAULT: False parent_logger logger instance to use, if empty it creates a local loguru logger DEFAULT: None","title":"__init__()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.run_timers","text":"run_timers ( poll_adjuster = 0.99 , debug = False ) runs timers as follows: Step 1: run every poll jobs Step 2: load timer queues for next poll Step 3: delay function which runs previous poll queues poll_adjustor allows time for other timing","title":"run_timers()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.stop_timers","text":"stop_timers () Stop all timers","title":"stop_timers()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum","text":"Bases: str , Enum Enum for the different timer Types","title":"MSATimerEnum"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_hour","text":"every_hour = 'every hour'","title":"every_hour"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_minute","text":"every_minute = 'every minute'","title":"every_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_poll","text":"every_poll = 'every poll'","title":"every_poll"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_second","text":"every_second = 'every second'","title":"every_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_15_minute","text":"on_the_15_minute = 'on the 15 minute'","title":"on_the_15_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_15_second","text":"on_the_15_second = 'on the 15 second'","title":"on_the_15_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_30_minute","text":"on_the_30_minute = 'on the 30 minute'","title":"on_the_30_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_30_second","text":"on_the_30_second = 'on the 30 second'","title":"on_the_30_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_5_minute","text":"on_the_5_minute = 'on the 5 minute'","title":"on_the_5_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_5_second","text":"on_the_5_second = 'on the 5 second'","title":"on_the_5_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.schedule","text":"schedule = 'schedule'","title":"schedule"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers","text":"Class to create dictionary of timers for use in MSAScheduler.","title":"MSATimers"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers.timer_jobs","text":"timer_jobs = { MSATimerEnum . every_poll : [], MSATimerEnum . every_second : [], MSATimerEnum . on_the_5_second : [], MSATimerEnum . on_the_15_second : [], MSATimerEnum . on_the_30_second : [], MSATimerEnum . every_minute : [], MSATimerEnum . on_the_5_minute : [], MSATimerEnum . on_the_15_minute : [], MSATimerEnum . on_the_30_minute : [], MSATimerEnum . every_hour : [], MSATimerEnum . schedule : [], }","title":"timer_jobs"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers-functions","text":"","title":"Functions"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers.__init__","text":"__init__ () self.timer_jobs is the primary resource in MSATimers This is filled by MSATimers It is then accessed by the source and served to MSAScheduler","title":"__init__()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers.create_timer","text":"create_timer ( T_mode : MSATimerEnum , func : typing . Callable , mark_HH_MM : str = None , ) Create a Timer PARAMETER DESCRIPTION T_mode MSATimerEnum TYPE: MSATimerEnum func the call handler for this timer TYPE: typing . Callable mark_HH_MM If scheduler type then this is the time for execution. TYPE: str DEFAULT: None","title":"create_timer()"},{"location":"reference/utils/scheduler/#utils.scheduler-functions","text":"","title":"Functions"},{"location":"reference/utils/scheduler/#utils.scheduler.get_time","text":"get_time ( local_time_zone = 'UTC' )","title":"get_time()"},{"location":"reference/utils/scheduler/#utils.scheduler.get_time_stamp","text":"get_time_stamp ( local_time_zone = \"UTC\" , time_format = \"HMS\" )","title":"get_time_stamp()"},{"location":"reference/utils/sysinfo/","text":"msaSDK Module \u00b6 .utils.sysinfo \u00b6 Provides System Information about devices, OS etc. Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' str: Module Version Classes \u00b6 MSACPUFrequency \u00b6 Bases: SQLModel Pydantic CPU Frequency Info Model. Attributes \u00b6 current class-attribute \u00b6 current : Optional [ float ] max class-attribute \u00b6 max : Optional [ int ] min class-attribute \u00b6 min : Optional [ int ] MSACPUStats \u00b6 Bases: SQLModel Pydantic CPU Stats Info Model. Attributes \u00b6 ctx_switches class-attribute \u00b6 ctx_switches : Optional [ int ] number of context switches (voluntary + involuntary) since boot. interrupts class-attribute \u00b6 interrupts : Optional [ int ] number of interrupts since boot. soft_interrupts class-attribute \u00b6 soft_interrupts : Optional [ int ] number of software interrupts since boot. Always set to 0 on Windows and SunOS. syscalls class-attribute \u00b6 syscalls : Optional [ int ] number of system calls since boot. Always set to 0 on Linux. MSACPUTimes \u00b6 Bases: SQLModel Pydantic CPU Timings Info Model. Attributes \u00b6 guest class-attribute \u00b6 guest : Optional [ float ] (Linux 2.6.24+): time spent running a virtual CPU for guest operating systems under the control of the Linux kernel guest_nice class-attribute \u00b6 guest_nice : Optional [ int ] (Linux 3.2.0+): time spent running a niced guest (virtual CPU for guest operating systems under the control of the Linux kernel) idle class-attribute \u00b6 idle : Optional [ float ] time spent doing nothing iowait class-attribute \u00b6 iowait : Optional [ float ] (Linux): time spent waiting for I/O to complete. This is not accounted in idle time counter. irq class-attribute \u00b6 irq : Optional [ int ] (Linux, BSD): time spent for servicing hardware interrupts nice class-attribute \u00b6 nice : Optional [ int ] (UNIX): time spent by niced (prioritized) processes executing in user mode; on Linux this also includes guest_nice time softirq class-attribute \u00b6 softirq : Optional [ float ] (Linux): time spent for servicing software interrupts steal class-attribute \u00b6 steal : Optional [ int ] (Linux 2.6.11+): time spent by other operating systems running in a virtualized environment system class-attribute \u00b6 system : Optional [ float ] time spent by processes executing in kernel mode user class-attribute \u00b6 user : Optional [ float ] time spent by normal processes executing in user mode; on Linux this also includes guest time MSADiskIO \u00b6 Bases: SQLModel Pydantic Disk IO Info Model. ATTRIBUTE DESCRIPTION read_count number of reads TYPE: Optional [ int ] write_count number of writes TYPE: Optional [ int ] read_bytes number of bytes read TYPE: Optional [ int ] write_bytes number of bytes written TYPE: Optional [ int ] read_time (all except NetBSD and OpenBSD) time spent reading from disk (in milliseconds) TYPE: Optional [ int ] write_time (all except NetBSD and OpenBSD) time spent writing to disk (in milliseconds) TYPE: Optional [ int ] busy_time (Linux, FreeBSD) time spent doing actual I/Os (in milliseconds) TYPE: Optional [ int ] read_merged_count number of merged reads (see iostats doc) TYPE: Linux write_merged_count number of merged writes (see iostats doc) TYPE: Linux Attributes \u00b6 busy_time class-attribute \u00b6 busy_time : Optional [ int ] read_bytes class-attribute \u00b6 read_bytes : Optional [ int ] read_count class-attribute \u00b6 read_count : Optional [ int ] read_merged_count class-attribute \u00b6 read_merged_count : Optional [ int ] read_time class-attribute \u00b6 read_time : Optional [ int ] write_bytes class-attribute \u00b6 write_bytes : Optional [ int ] write_count class-attribute \u00b6 write_count : Optional [ int ] write_merged_count class-attribute \u00b6 write_merged_count : Optional [ int ] write_time class-attribute \u00b6 write_time : Optional [ int ] MSAGPUInfo \u00b6 Bases: SQLModel Pydantic GPU Info Model. Attributes \u00b6 free_memory class-attribute \u00b6 free_memory : Optional [ str ] id class-attribute \u00b6 id : Optional [ int ] load class-attribute \u00b6 load : Optional [ str ] name class-attribute \u00b6 name : Optional [ str ] temperature class-attribute \u00b6 temperature : Optional [ str ] total_memory class-attribute \u00b6 total_memory : Optional [ str ] used_memory class-attribute \u00b6 used_memory : Optional [ str ] uuid class-attribute \u00b6 uuid : Optional [ str ] MSAMemoryUsage \u00b6 Bases: SQLModel Pydantic Memory Usage Info Model. Attributes \u00b6 active class-attribute \u00b6 active : Optional [ float ] (UNIX): memory currently in use or very recently used, and so it is in RAM. available class-attribute \u00b6 available : Optional [ float ] the memory that can be given instantly to processes without the system going into swap. This is calculated by summing different memory values depending on the platform and it is supposed to be used to monitor actual memory usage in a cross platform fashion. buffers class-attribute \u00b6 buffers : Optional [ float ] (Linux, BSD): cache for things like file system metadata. cached class-attribute \u00b6 cached : Optional [ float ] (Linux, BSD): cache for various things. free class-attribute \u00b6 free : Optional [ float ] memory not being used at all (zeroed) that is readily available; note that this doesn\u2019t reflect the actual memory available (use available instead). total - used does not necessarily match free. inactive class-attribute \u00b6 inactive : Optional [ float ] (UNIX): memory that is marked as not used. percent class-attribute \u00b6 percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100 total class-attribute \u00b6 total : Optional [ float ] total physical memory (exclusive swap). used class-attribute \u00b6 used : Optional [ float ] memory used, calculated differently depending on the platform and designed for informational purposes only. total - free does not necessarily match used. MSANetworkAdapter \u00b6 Bases: SQLModel Pydantic Network Adapter Info Model. Attributes \u00b6 address class-attribute \u00b6 address : Optional [ str ] the primary NIC address (always set). broadcast class-attribute \u00b6 broadcast : Optional [ str ] the broadcast address (may be None). family class-attribute \u00b6 family : Optional [ int ] the address family, either AF_INET or AF_INET6 or psutil.AF_LINK, which refers to a MAC address. netmask class-attribute \u00b6 netmask : Optional [ str ] the netmask address (may be None). ptp class-attribute \u00b6 ptp : Optional [ int ] stands for \u201cpoint to point\u201d; it\u2019s the destination address on a point to point interface (typically a VPN). broadcast and ptp are mutually exclusive. May be None. MSANetworkAdapters \u00b6 Bases: SQLModel Pydantic Network Adapters List Model. Attributes \u00b6 adapters class-attribute \u00b6 adapters : List [ MSANetworkAdapter ] = [] name class-attribute \u00b6 name : str = '' MSANetworkConnection \u00b6 Bases: SQLModel Pydantic Network Connection Info Model. Attributes \u00b6 family class-attribute \u00b6 family : Optional [ int ] the address family, either AF_INET, AF_INET6 or AF_UNIX. file_descriptor class-attribute \u00b6 file_descriptor : Optional [ int ] the socket file descriptor. If the connection refers to the current process this may be passed to socket.fromfd to obtain a usable socket object. On Windows and SunOS this is always set to -1. index class-attribute \u00b6 index : Optional [ int ] local_addr class-attribute \u00b6 local_addr : Optional [ str ] the local address as a (ip, port) named tuple or a path in case of AF_UNIX sockets. For UNIX sockets see notes below. pid class-attribute \u00b6 pid : Optional [ int ] the PID of the process which opened the socket, if retrievable, else None . On some platforms (e.g. Linux) the availability of this field changes depending on process privileges (root is needed). remote_addr class-attribute \u00b6 remote_addr : Optional [ str ] the remote address as a (ip, port) named tuple or an absolute path in case of UNIX sockets. When the remote endpoint is not connected you\u2019ll get an empty tuple (AF_INET*) or \"\" (AF_UNIX). For UNIX sockets see notes below. status class-attribute \u00b6 status : str = '' represents the status of a TCP connection. The return value is one of the psutil.CONN_* constants (a string). For UDP and UNIX sockets this is always going to be psutil.CONN_NONE. type class-attribute \u00b6 type : Optional [ int ] the address type, either SOCK_STREAM , SOCK_DGRAM or SOCK_SEQPACKET . MSANetworkIO \u00b6 Bases: SQLModel Pydantic Network IO Info Model. ATTRIBUTE DESCRIPTION bytes_sent number of bytes sent TYPE: Optional [ int ] bytes_recv number of bytes received TYPE: Optional [ int ] packets_sent number of packets sent TYPE: Optional [ int ] packets_recv number of packets received TYPE: Optional [ int ] errin total number of errors while receiving TYPE: Optional [ int ] errout total number of errors while sending TYPE: Optional [ int ] dropin total number of incoming packets which were dropped TYPE: Optional [ int ] dropout total number of outgoing packets which were dropped (always 0 on macOS and BSD) TYPE: Optional [ int ] Attributes \u00b6 bytes_recv class-attribute \u00b6 bytes_recv : Optional [ int ] bytes_sent class-attribute \u00b6 bytes_sent : Optional [ int ] dropin class-attribute \u00b6 dropin : Optional [ int ] dropout class-attribute \u00b6 dropout : Optional [ int ] errin class-attribute \u00b6 errin : Optional [ int ] errout class-attribute \u00b6 errout : Optional [ int ] packets_recv class-attribute \u00b6 packets_recv : Optional [ int ] packets_sent class-attribute \u00b6 packets_sent : Optional [ int ] MSANetworkStat \u00b6 Bases: SQLModel Pydantic Network Stats Info Model. Attributes \u00b6 duplex class-attribute \u00b6 duplex : Optional [ int ] the duplex communication type; it can be either NIC_DUPLEX_FULL, NIC_DUPLEX_HALF or NIC_DUPLEX_UNKNOWN. isup class-attribute \u00b6 isup : Optional [ bool ] a bool indicating whether the NIC is up and running (meaning ethernet cable or Wi-Fi is connected). mtu class-attribute \u00b6 mtu : Optional [ int ] NIC\u2019s maximum transmission unit expressed in bytes. speed class-attribute \u00b6 speed : Optional [ int ] the NIC speed expressed in mega bits (MB), if it can\u2019t be determined (e.g. \u2018localhost\u2019) it will be set to 0. MSANetworkStats \u00b6 Bases: SQLModel Pydantic Network Stats List Info Model. Attributes \u00b6 adapters class-attribute \u00b6 adapters : List [ MSANetworkStat ] = [] name class-attribute \u00b6 name : str = '' MSASwap \u00b6 Bases: SQLModel Pydantic Swapfile Info Model. Attributes \u00b6 free class-attribute \u00b6 free : Optional [ float ] percent class-attribute \u00b6 percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100 total class-attribute \u00b6 total : Optional [ float ] used class-attribute \u00b6 used : Optional [ float ] MSASystemGPUInfo \u00b6 Bases: SQLModel Pydantic System GPU Info Model. Attributes \u00b6 CPU_Logical class-attribute \u00b6 CPU_Logical : Optional [ int ] CPU_Physical class-attribute \u00b6 CPU_Physical : Optional [ int ] GPUs class-attribute \u00b6 GPUs : Optional [ List [ MSAGPUInfo ]] HW_Identifier class-attribute \u00b6 HW_Identifier : str = '' Host_Name class-attribute \u00b6 Host_Name : str = '' IP_Address class-attribute \u00b6 IP_Address : str = '' MAC_Address class-attribute \u00b6 MAC_Address : str = '' Memory_Available class-attribute \u00b6 Memory_Available : str = '' Memory_Physical class-attribute \u00b6 Memory_Physical : str = '' Node_Name class-attribute \u00b6 Node_Name : str = '' OS_Name class-attribute \u00b6 OS_Name : str = '' OS_Release class-attribute \u00b6 OS_Release : str = '' OS_Version class-attribute \u00b6 OS_Version : str = '' PID class-attribute \u00b6 PID : Optional [ int ] Runtime_Cmd class-attribute \u00b6 Runtime_Cmd : List [ str ] = [] Runtime_Exe class-attribute \u00b6 Runtime_Exe : str = '' Runtime_Status class-attribute \u00b6 Runtime_Status : str = '' Service_Start class-attribute \u00b6 Service_Start : str = '' System_Boot class-attribute \u00b6 System_Boot : str = '' MSASystemInfo \u00b6 Bases: SQLModel Pydantic System Info Model. Attributes \u00b6 CPU_Affinity class-attribute \u00b6 CPU_Affinity : Optional [ int ] CPU_Current class-attribute \u00b6 CPU_Current : Optional [ int ] CPU_Frequency class-attribute \u00b6 CPU_Frequency : Optional [ MSACPUFrequency ] CPU_LoadAvg class-attribute \u00b6 CPU_LoadAvg : Optional [ List [ float ]] CPU_Logical class-attribute \u00b6 CPU_Logical : Optional [ int ] Amount of logical (each physical core doing 2 or more threads, hyperthreading) CPU's CPU_Physical class-attribute \u00b6 CPU_Physical : Optional [ int ] Amount of physical CPU's CPU_Stats class-attribute \u00b6 CPU_Stats : Optional [ MSACPUStats ] CPU_Times class-attribute \u00b6 CPU_Times : Optional [ MSACPUTimes ] CPU_Usage_Name class-attribute \u00b6 CPU_Usage_Name : str = '' CPU_Usage_Process class-attribute \u00b6 CPU_Usage_Process : Optional [ float ] CPU_Usage_Total class-attribute \u00b6 CPU_Usage_Total : Optional [ float ] Disk_IO class-attribute \u00b6 Disk_IO : Optional [ MSADiskIO ] HW_Identifier class-attribute \u00b6 HW_Identifier : str = '' Host_Name class-attribute \u00b6 Host_Name : str = '' IP_Address class-attribute \u00b6 IP_Address : str = '' MAC_Address class-attribute \u00b6 MAC_Address : str = '' Memory_Available class-attribute \u00b6 Memory_Available : str = '' Memory_Physical class-attribute \u00b6 Memory_Physical : str = '' Memory_Usage class-attribute \u00b6 Memory_Usage : Optional [ MSAMemoryUsage ] Network_Adapters class-attribute \u00b6 Network_Adapters : Optional [ List [ MSANetworkAdapters ]] Network_Connections class-attribute \u00b6 Network_Connections : Optional [ List [ MSANetworkConnection ]] Network_IO class-attribute \u00b6 Network_IO : Optional [ MSANetworkIO ] Network_Stats class-attribute \u00b6 Network_Stats : Optional [ List [ MSANetworkStats ]] Node_Name class-attribute \u00b6 Node_Name : str = '' OS_Name class-attribute \u00b6 OS_Name : str = '' OS_Release class-attribute \u00b6 OS_Release : str = '' OS_Version class-attribute \u00b6 OS_Version : str = '' PID class-attribute \u00b6 PID : Optional [ int ] Runtime_Cmd class-attribute \u00b6 Runtime_Cmd : List [ str ] = [] Runtime_Exe class-attribute \u00b6 Runtime_Exe : str = '' Runtime_Status class-attribute \u00b6 Runtime_Status : str = '' Service Status, running or stopped Service_Start class-attribute \u00b6 Service_Start : str = '' Swap class-attribute \u00b6 Swap : Optional [ MSASwap ] System_Boot class-attribute \u00b6 System_Boot : str = '' Temperatures class-attribute \u00b6 Temperatures : Optional [ List [ MSATemperatures ]] MSATemperature \u00b6 Bases: SQLModel Pydantic Temperature Info Model. Attributes \u00b6 critical class-attribute \u00b6 critical : Optional [ float ] current class-attribute \u00b6 current : Optional [ float ] high class-attribute \u00b6 high : Optional [ float ] label class-attribute \u00b6 label : Optional [ str ] MSATemperatures \u00b6 Bases: SQLModel Pydantic Temperatures List Model. Attributes \u00b6 device class-attribute \u00b6 device : str = '' temps class-attribute \u00b6 temps : List [ MSATemperature ] = [] Functions \u00b6 get_cpu_freq \u00b6 get_cpu_freq () -> MSACPUFrequency Get psutil.cpu_freq() RETURNS DESCRIPTION cpf MSACPUFrequency TYPE: MSACPUFrequency get_cpu_stats \u00b6 get_cpu_stats () -> MSACPUStats Get psutil.cpu_times() RETURNS DESCRIPTION cst MSACPUStats TYPE: MSACPUStats get_cpu_times \u00b6 get_cpu_times () -> MSACPUTimes Get psutil.cpu_times() RETURNS DESCRIPTION cti MSACPUTimes TYPE: MSACPUTimes get_cpu_usage \u00b6 get_cpu_usage ( user : str = None , ignore_self : bool = False ) -> tuple [ int , int , str ] Returns the total CPU usage for all available cores. PARAMETER DESCRIPTION user If given, returns only the total CPU usage of all processes for the given user. TYPE: str DEFAULT: None ignore_self If True the process that runs this script will be ignored. TYPE: bool DEFAULT: False RETURNS DESCRIPTION total total usage TYPE: int largest_process largest process usage TYPE: int largest_process_name name of the largest process TYPE: str get_disk_io \u00b6 get_disk_io () -> MSADiskIO Get psutil.disk_io_counters() RETURNS DESCRIPTION dio MSADiskIO TYPE: MSADiskIO get_gpus \u00b6 get_gpus () -> List [ MSAGPUInfo ] Get GPUtil.getGPUs() RETURNS DESCRIPTION list_gpus List[MSAGPUInfo] = [] TYPE: List [ MSAGPUInfo ] get_hostname \u00b6 get_hostname () -> str Get socket.gethostname() RETURNS DESCRIPTION hostname str TYPE: str get_list_partitions \u00b6 get_list_partitions () -> List Get psutil.disk_partitions() RETURNS DESCRIPTION partitions_list List = [] TYPE: List get_load_average \u00b6 get_load_average () -> tuple [ float , float , float ] Returns the CPU load average in tuple[1min, 5min, 15min]. RETURNS DESCRIPTION 1min total usage TYPE: float 5min largest process usage TYPE: float 15min name of the largest process TYPE: float get_map_disk_usage \u00b6 get_map_disk_usage () -> Dict Get get_partition_usage(get_list_partitions()) RETURNS DESCRIPTION rdict Dict TYPE: Dict get_memory_usage \u00b6 get_memory_usage () -> MSAMemoryUsage Get psutil.virtual_memory() RETURNS DESCRIPTION mu MSAMemoryUsage TYPE: MSAMemoryUsage get_network_adapters \u00b6 get_network_adapters () -> List [ MSANetworkAdapters ] Get psutil.net_if_addrs() RETURNS DESCRIPTION ret List[MSANetworkAdapters] = [] TYPE: List [ MSANetworkAdapters ] get_network_connections \u00b6 get_network_connections () -> List [ MSANetworkConnection ] Get psutil.net_connections() RETURNS DESCRIPTION rlist List[MSANetworkConnection] = [] TYPE: List [ MSANetworkConnection ] get_network_io \u00b6 get_network_io () -> MSANetworkIO Get psutil.net_io_counters() RETURNS DESCRIPTION nio MSANetworkIO TYPE: MSANetworkIO get_network_stats \u00b6 get_network_stats () -> List [ MSANetworkStats ] Get psutil.net_if_stats() RETURNS DESCRIPTION ret List[MSANetworkStats] = [] TYPE: List [ MSANetworkStats ] get_partition_usage \u00b6 get_partition_usage ( partitions ) -> Dict Get psutil.disk_usage(partition) RETURNS DESCRIPTION ret Dict = {\"partition\": list, \"total\": list, \"used\": list, \"free\": list, \"percent\": list} TYPE: Dict get_swap \u00b6 get_swap () -> MSASwap Get psutil.swap_memory() RETURNS DESCRIPTION sw MSASwap TYPE: MSASwap get_sysgpuinfo \u00b6 get_sysgpuinfo () -> MSASystemGPUInfo Get MSASystemGPUInfo RETURNS DESCRIPTION system_gpu_info Pydantic System GPU Info Model. TYPE: MSASystemGPUInfo get_sysinfo \u00b6 get_sysinfo () -> MSASystemInfo Get MSASystemInfo RETURNS DESCRIPTION system_info Pydantic System Info Model. TYPE: MSASystemInfo get_temperatures \u00b6 get_temperatures () -> List [ MSATemperatures ] Get psutil.sensors_temperatures() RETURNS DESCRIPTION ret List[MSATemperatures] = [] TYPE: List [ MSATemperatures ]","title":"sysinfo"},{"location":"reference/utils/sysinfo/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/sysinfo/#utilssysinfo","text":"Provides System Information about devices, OS etc.","title":".utils.sysinfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.__version__","text":"__version__ = '0.1.1' str: Module Version","title":"__version__"},{"location":"reference/utils/sysinfo/#utils.sysinfo-classes","text":"","title":"Classes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency","text":"Bases: SQLModel Pydantic CPU Frequency Info Model.","title":"MSACPUFrequency"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency.current","text":"current : Optional [ float ]","title":"current"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency.max","text":"max : Optional [ int ]","title":"max"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency.min","text":"min : Optional [ int ]","title":"min"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats","text":"Bases: SQLModel Pydantic CPU Stats Info Model.","title":"MSACPUStats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.ctx_switches","text":"ctx_switches : Optional [ int ] number of context switches (voluntary + involuntary) since boot.","title":"ctx_switches"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.interrupts","text":"interrupts : Optional [ int ] number of interrupts since boot.","title":"interrupts"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.soft_interrupts","text":"soft_interrupts : Optional [ int ] number of software interrupts since boot. Always set to 0 on Windows and SunOS.","title":"soft_interrupts"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.syscalls","text":"syscalls : Optional [ int ] number of system calls since boot. Always set to 0 on Linux.","title":"syscalls"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes","text":"Bases: SQLModel Pydantic CPU Timings Info Model.","title":"MSACPUTimes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.guest","text":"guest : Optional [ float ] (Linux 2.6.24+): time spent running a virtual CPU for guest operating systems under the control of the Linux kernel","title":"guest"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.guest_nice","text":"guest_nice : Optional [ int ] (Linux 3.2.0+): time spent running a niced guest (virtual CPU for guest operating systems under the control of the Linux kernel)","title":"guest_nice"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.idle","text":"idle : Optional [ float ] time spent doing nothing","title":"idle"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.iowait","text":"iowait : Optional [ float ] (Linux): time spent waiting for I/O to complete. This is not accounted in idle time counter.","title":"iowait"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.irq","text":"irq : Optional [ int ] (Linux, BSD): time spent for servicing hardware interrupts","title":"irq"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.nice","text":"nice : Optional [ int ] (UNIX): time spent by niced (prioritized) processes executing in user mode; on Linux this also includes guest_nice time","title":"nice"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.softirq","text":"softirq : Optional [ float ] (Linux): time spent for servicing software interrupts","title":"softirq"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.steal","text":"steal : Optional [ int ] (Linux 2.6.11+): time spent by other operating systems running in a virtualized environment","title":"steal"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.system","text":"system : Optional [ float ] time spent by processes executing in kernel mode","title":"system"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.user","text":"user : Optional [ float ] time spent by normal processes executing in user mode; on Linux this also includes guest time","title":"user"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO","text":"Bases: SQLModel Pydantic Disk IO Info Model. ATTRIBUTE DESCRIPTION read_count number of reads TYPE: Optional [ int ] write_count number of writes TYPE: Optional [ int ] read_bytes number of bytes read TYPE: Optional [ int ] write_bytes number of bytes written TYPE: Optional [ int ] read_time (all except NetBSD and OpenBSD) time spent reading from disk (in milliseconds) TYPE: Optional [ int ] write_time (all except NetBSD and OpenBSD) time spent writing to disk (in milliseconds) TYPE: Optional [ int ] busy_time (Linux, FreeBSD) time spent doing actual I/Os (in milliseconds) TYPE: Optional [ int ] read_merged_count number of merged reads (see iostats doc) TYPE: Linux write_merged_count number of merged writes (see iostats doc) TYPE: Linux","title":"MSADiskIO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.busy_time","text":"busy_time : Optional [ int ]","title":"busy_time"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_bytes","text":"read_bytes : Optional [ int ]","title":"read_bytes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_count","text":"read_count : Optional [ int ]","title":"read_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_merged_count","text":"read_merged_count : Optional [ int ]","title":"read_merged_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_time","text":"read_time : Optional [ int ]","title":"read_time"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_bytes","text":"write_bytes : Optional [ int ]","title":"write_bytes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_count","text":"write_count : Optional [ int ]","title":"write_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_merged_count","text":"write_merged_count : Optional [ int ]","title":"write_merged_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_time","text":"write_time : Optional [ int ]","title":"write_time"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo","text":"Bases: SQLModel Pydantic GPU Info Model.","title":"MSAGPUInfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.free_memory","text":"free_memory : Optional [ str ]","title":"free_memory"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.id","text":"id : Optional [ int ]","title":"id"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.load","text":"load : Optional [ str ]","title":"load"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.name","text":"name : Optional [ str ]","title":"name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.temperature","text":"temperature : Optional [ str ]","title":"temperature"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.total_memory","text":"total_memory : Optional [ str ]","title":"total_memory"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.used_memory","text":"used_memory : Optional [ str ]","title":"used_memory"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.uuid","text":"uuid : Optional [ str ]","title":"uuid"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage","text":"Bases: SQLModel Pydantic Memory Usage Info Model.","title":"MSAMemoryUsage"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.active","text":"active : Optional [ float ] (UNIX): memory currently in use or very recently used, and so it is in RAM.","title":"active"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.available","text":"available : Optional [ float ] the memory that can be given instantly to processes without the system going into swap. This is calculated by summing different memory values depending on the platform and it is supposed to be used to monitor actual memory usage in a cross platform fashion.","title":"available"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.buffers","text":"buffers : Optional [ float ] (Linux, BSD): cache for things like file system metadata.","title":"buffers"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.cached","text":"cached : Optional [ float ] (Linux, BSD): cache for various things.","title":"cached"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.free","text":"free : Optional [ float ] memory not being used at all (zeroed) that is readily available; note that this doesn\u2019t reflect the actual memory available (use available instead). total - used does not necessarily match free.","title":"free"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.inactive","text":"inactive : Optional [ float ] (UNIX): memory that is marked as not used.","title":"inactive"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.percent","text":"percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100","title":"percent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.total","text":"total : Optional [ float ] total physical memory (exclusive swap).","title":"total"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.used","text":"used : Optional [ float ] memory used, calculated differently depending on the platform and designed for informational purposes only. total - free does not necessarily match used.","title":"used"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter","text":"Bases: SQLModel Pydantic Network Adapter Info Model.","title":"MSANetworkAdapter"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.address","text":"address : Optional [ str ] the primary NIC address (always set).","title":"address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.broadcast","text":"broadcast : Optional [ str ] the broadcast address (may be None).","title":"broadcast"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.family","text":"family : Optional [ int ] the address family, either AF_INET or AF_INET6 or psutil.AF_LINK, which refers to a MAC address.","title":"family"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.netmask","text":"netmask : Optional [ str ] the netmask address (may be None).","title":"netmask"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.ptp","text":"ptp : Optional [ int ] stands for \u201cpoint to point\u201d; it\u2019s the destination address on a point to point interface (typically a VPN). broadcast and ptp are mutually exclusive. May be None.","title":"ptp"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters","text":"Bases: SQLModel Pydantic Network Adapters List Model.","title":"MSANetworkAdapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters.adapters","text":"adapters : List [ MSANetworkAdapter ] = []","title":"adapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters.name","text":"name : str = ''","title":"name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection","text":"Bases: SQLModel Pydantic Network Connection Info Model.","title":"MSANetworkConnection"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.family","text":"family : Optional [ int ] the address family, either AF_INET, AF_INET6 or AF_UNIX.","title":"family"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.file_descriptor","text":"file_descriptor : Optional [ int ] the socket file descriptor. If the connection refers to the current process this may be passed to socket.fromfd to obtain a usable socket object. On Windows and SunOS this is always set to -1.","title":"file_descriptor"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.index","text":"index : Optional [ int ]","title":"index"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.local_addr","text":"local_addr : Optional [ str ] the local address as a (ip, port) named tuple or a path in case of AF_UNIX sockets. For UNIX sockets see notes below.","title":"local_addr"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.pid","text":"pid : Optional [ int ] the PID of the process which opened the socket, if retrievable, else None . On some platforms (e.g. Linux) the availability of this field changes depending on process privileges (root is needed).","title":"pid"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.remote_addr","text":"remote_addr : Optional [ str ] the remote address as a (ip, port) named tuple or an absolute path in case of UNIX sockets. When the remote endpoint is not connected you\u2019ll get an empty tuple (AF_INET*) or \"\" (AF_UNIX). For UNIX sockets see notes below.","title":"remote_addr"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.status","text":"status : str = '' represents the status of a TCP connection. The return value is one of the psutil.CONN_* constants (a string). For UDP and UNIX sockets this is always going to be psutil.CONN_NONE.","title":"status"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.type","text":"type : Optional [ int ] the address type, either SOCK_STREAM , SOCK_DGRAM or SOCK_SEQPACKET .","title":"type"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO","text":"Bases: SQLModel Pydantic Network IO Info Model. ATTRIBUTE DESCRIPTION bytes_sent number of bytes sent TYPE: Optional [ int ] bytes_recv number of bytes received TYPE: Optional [ int ] packets_sent number of packets sent TYPE: Optional [ int ] packets_recv number of packets received TYPE: Optional [ int ] errin total number of errors while receiving TYPE: Optional [ int ] errout total number of errors while sending TYPE: Optional [ int ] dropin total number of incoming packets which were dropped TYPE: Optional [ int ] dropout total number of outgoing packets which were dropped (always 0 on macOS and BSD) TYPE: Optional [ int ]","title":"MSANetworkIO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.bytes_recv","text":"bytes_recv : Optional [ int ]","title":"bytes_recv"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.bytes_sent","text":"bytes_sent : Optional [ int ]","title":"bytes_sent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.dropin","text":"dropin : Optional [ int ]","title":"dropin"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.dropout","text":"dropout : Optional [ int ]","title":"dropout"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.errin","text":"errin : Optional [ int ]","title":"errin"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.errout","text":"errout : Optional [ int ]","title":"errout"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.packets_recv","text":"packets_recv : Optional [ int ]","title":"packets_recv"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.packets_sent","text":"packets_sent : Optional [ int ]","title":"packets_sent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat","text":"Bases: SQLModel Pydantic Network Stats Info Model.","title":"MSANetworkStat"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.duplex","text":"duplex : Optional [ int ] the duplex communication type; it can be either NIC_DUPLEX_FULL, NIC_DUPLEX_HALF or NIC_DUPLEX_UNKNOWN.","title":"duplex"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.isup","text":"isup : Optional [ bool ] a bool indicating whether the NIC is up and running (meaning ethernet cable or Wi-Fi is connected).","title":"isup"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.mtu","text":"mtu : Optional [ int ] NIC\u2019s maximum transmission unit expressed in bytes.","title":"mtu"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.speed","text":"speed : Optional [ int ] the NIC speed expressed in mega bits (MB), if it can\u2019t be determined (e.g. \u2018localhost\u2019) it will be set to 0.","title":"speed"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats","text":"Bases: SQLModel Pydantic Network Stats List Info Model.","title":"MSANetworkStats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats.adapters","text":"adapters : List [ MSANetworkStat ] = []","title":"adapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats.name","text":"name : str = ''","title":"name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap","text":"Bases: SQLModel Pydantic Swapfile Info Model.","title":"MSASwap"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.free","text":"free : Optional [ float ]","title":"free"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.percent","text":"percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100","title":"percent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.total","text":"total : Optional [ float ]","title":"total"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.used","text":"used : Optional [ float ]","title":"used"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo","text":"Bases: SQLModel Pydantic System GPU Info Model.","title":"MSASystemGPUInfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.CPU_Logical","text":"CPU_Logical : Optional [ int ]","title":"CPU_Logical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.CPU_Physical","text":"CPU_Physical : Optional [ int ]","title":"CPU_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.GPUs","text":"GPUs : Optional [ List [ MSAGPUInfo ]]","title":"GPUs"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.HW_Identifier","text":"HW_Identifier : str = ''","title":"HW_Identifier"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Host_Name","text":"Host_Name : str = ''","title":"Host_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.IP_Address","text":"IP_Address : str = ''","title":"IP_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.MAC_Address","text":"MAC_Address : str = ''","title":"MAC_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Memory_Available","text":"Memory_Available : str = ''","title":"Memory_Available"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Memory_Physical","text":"Memory_Physical : str = ''","title":"Memory_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Node_Name","text":"Node_Name : str = ''","title":"Node_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.OS_Name","text":"OS_Name : str = ''","title":"OS_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.OS_Release","text":"OS_Release : str = ''","title":"OS_Release"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.OS_Version","text":"OS_Version : str = ''","title":"OS_Version"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.PID","text":"PID : Optional [ int ]","title":"PID"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Runtime_Cmd","text":"Runtime_Cmd : List [ str ] = []","title":"Runtime_Cmd"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Runtime_Exe","text":"Runtime_Exe : str = ''","title":"Runtime_Exe"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Runtime_Status","text":"Runtime_Status : str = ''","title":"Runtime_Status"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Service_Start","text":"Service_Start : str = ''","title":"Service_Start"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.System_Boot","text":"System_Boot : str = ''","title":"System_Boot"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo","text":"Bases: SQLModel Pydantic System Info Model.","title":"MSASystemInfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Affinity","text":"CPU_Affinity : Optional [ int ]","title":"CPU_Affinity"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Current","text":"CPU_Current : Optional [ int ]","title":"CPU_Current"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Frequency","text":"CPU_Frequency : Optional [ MSACPUFrequency ]","title":"CPU_Frequency"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_LoadAvg","text":"CPU_LoadAvg : Optional [ List [ float ]]","title":"CPU_LoadAvg"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Logical","text":"CPU_Logical : Optional [ int ] Amount of logical (each physical core doing 2 or more threads, hyperthreading) CPU's","title":"CPU_Logical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Physical","text":"CPU_Physical : Optional [ int ] Amount of physical CPU's","title":"CPU_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Stats","text":"CPU_Stats : Optional [ MSACPUStats ]","title":"CPU_Stats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Times","text":"CPU_Times : Optional [ MSACPUTimes ]","title":"CPU_Times"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Usage_Name","text":"CPU_Usage_Name : str = ''","title":"CPU_Usage_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Usage_Process","text":"CPU_Usage_Process : Optional [ float ]","title":"CPU_Usage_Process"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Usage_Total","text":"CPU_Usage_Total : Optional [ float ]","title":"CPU_Usage_Total"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Disk_IO","text":"Disk_IO : Optional [ MSADiskIO ]","title":"Disk_IO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.HW_Identifier","text":"HW_Identifier : str = ''","title":"HW_Identifier"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Host_Name","text":"Host_Name : str = ''","title":"Host_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.IP_Address","text":"IP_Address : str = ''","title":"IP_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.MAC_Address","text":"MAC_Address : str = ''","title":"MAC_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Memory_Available","text":"Memory_Available : str = ''","title":"Memory_Available"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Memory_Physical","text":"Memory_Physical : str = ''","title":"Memory_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Memory_Usage","text":"Memory_Usage : Optional [ MSAMemoryUsage ]","title":"Memory_Usage"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_Adapters","text":"Network_Adapters : Optional [ List [ MSANetworkAdapters ]]","title":"Network_Adapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_Connections","text":"Network_Connections : Optional [ List [ MSANetworkConnection ]]","title":"Network_Connections"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_IO","text":"Network_IO : Optional [ MSANetworkIO ]","title":"Network_IO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_Stats","text":"Network_Stats : Optional [ List [ MSANetworkStats ]]","title":"Network_Stats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Node_Name","text":"Node_Name : str = ''","title":"Node_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.OS_Name","text":"OS_Name : str = ''","title":"OS_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.OS_Release","text":"OS_Release : str = ''","title":"OS_Release"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.OS_Version","text":"OS_Version : str = ''","title":"OS_Version"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.PID","text":"PID : Optional [ int ]","title":"PID"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Runtime_Cmd","text":"Runtime_Cmd : List [ str ] = []","title":"Runtime_Cmd"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Runtime_Exe","text":"Runtime_Exe : str = ''","title":"Runtime_Exe"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Runtime_Status","text":"Runtime_Status : str = '' Service Status, running or stopped","title":"Runtime_Status"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Service_Start","text":"Service_Start : str = ''","title":"Service_Start"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Swap","text":"Swap : Optional [ MSASwap ]","title":"Swap"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.System_Boot","text":"System_Boot : str = ''","title":"System_Boot"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Temperatures","text":"Temperatures : Optional [ List [ MSATemperatures ]]","title":"Temperatures"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature","text":"Bases: SQLModel Pydantic Temperature Info Model.","title":"MSATemperature"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.critical","text":"critical : Optional [ float ]","title":"critical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.current","text":"current : Optional [ float ]","title":"current"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.high","text":"high : Optional [ float ]","title":"high"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.label","text":"label : Optional [ str ]","title":"label"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures","text":"Bases: SQLModel Pydantic Temperatures List Model.","title":"MSATemperatures"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures.device","text":"device : str = ''","title":"device"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures.temps","text":"temps : List [ MSATemperature ] = []","title":"temps"},{"location":"reference/utils/sysinfo/#utils.sysinfo-functions","text":"","title":"Functions"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_freq","text":"get_cpu_freq () -> MSACPUFrequency Get psutil.cpu_freq() RETURNS DESCRIPTION cpf MSACPUFrequency TYPE: MSACPUFrequency","title":"get_cpu_freq()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_stats","text":"get_cpu_stats () -> MSACPUStats Get psutil.cpu_times() RETURNS DESCRIPTION cst MSACPUStats TYPE: MSACPUStats","title":"get_cpu_stats()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_times","text":"get_cpu_times () -> MSACPUTimes Get psutil.cpu_times() RETURNS DESCRIPTION cti MSACPUTimes TYPE: MSACPUTimes","title":"get_cpu_times()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_usage","text":"get_cpu_usage ( user : str = None , ignore_self : bool = False ) -> tuple [ int , int , str ] Returns the total CPU usage for all available cores. PARAMETER DESCRIPTION user If given, returns only the total CPU usage of all processes for the given user. TYPE: str DEFAULT: None ignore_self If True the process that runs this script will be ignored. TYPE: bool DEFAULT: False RETURNS DESCRIPTION total total usage TYPE: int largest_process largest process usage TYPE: int largest_process_name name of the largest process TYPE: str","title":"get_cpu_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_disk_io","text":"get_disk_io () -> MSADiskIO Get psutil.disk_io_counters() RETURNS DESCRIPTION dio MSADiskIO TYPE: MSADiskIO","title":"get_disk_io()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_gpus","text":"get_gpus () -> List [ MSAGPUInfo ] Get GPUtil.getGPUs() RETURNS DESCRIPTION list_gpus List[MSAGPUInfo] = [] TYPE: List [ MSAGPUInfo ]","title":"get_gpus()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_hostname","text":"get_hostname () -> str Get socket.gethostname() RETURNS DESCRIPTION hostname str TYPE: str","title":"get_hostname()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_list_partitions","text":"get_list_partitions () -> List Get psutil.disk_partitions() RETURNS DESCRIPTION partitions_list List = [] TYPE: List","title":"get_list_partitions()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_load_average","text":"get_load_average () -> tuple [ float , float , float ] Returns the CPU load average in tuple[1min, 5min, 15min]. RETURNS DESCRIPTION 1min total usage TYPE: float 5min largest process usage TYPE: float 15min name of the largest process TYPE: float","title":"get_load_average()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_map_disk_usage","text":"get_map_disk_usage () -> Dict Get get_partition_usage(get_list_partitions()) RETURNS DESCRIPTION rdict Dict TYPE: Dict","title":"get_map_disk_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_memory_usage","text":"get_memory_usage () -> MSAMemoryUsage Get psutil.virtual_memory() RETURNS DESCRIPTION mu MSAMemoryUsage TYPE: MSAMemoryUsage","title":"get_memory_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_adapters","text":"get_network_adapters () -> List [ MSANetworkAdapters ] Get psutil.net_if_addrs() RETURNS DESCRIPTION ret List[MSANetworkAdapters] = [] TYPE: List [ MSANetworkAdapters ]","title":"get_network_adapters()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_connections","text":"get_network_connections () -> List [ MSANetworkConnection ] Get psutil.net_connections() RETURNS DESCRIPTION rlist List[MSANetworkConnection] = [] TYPE: List [ MSANetworkConnection ]","title":"get_network_connections()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_io","text":"get_network_io () -> MSANetworkIO Get psutil.net_io_counters() RETURNS DESCRIPTION nio MSANetworkIO TYPE: MSANetworkIO","title":"get_network_io()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_stats","text":"get_network_stats () -> List [ MSANetworkStats ] Get psutil.net_if_stats() RETURNS DESCRIPTION ret List[MSANetworkStats] = [] TYPE: List [ MSANetworkStats ]","title":"get_network_stats()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_partition_usage","text":"get_partition_usage ( partitions ) -> Dict Get psutil.disk_usage(partition) RETURNS DESCRIPTION ret Dict = {\"partition\": list, \"total\": list, \"used\": list, \"free\": list, \"percent\": list} TYPE: Dict","title":"get_partition_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_swap","text":"get_swap () -> MSASwap Get psutil.swap_memory() RETURNS DESCRIPTION sw MSASwap TYPE: MSASwap","title":"get_swap()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_sysgpuinfo","text":"get_sysgpuinfo () -> MSASystemGPUInfo Get MSASystemGPUInfo RETURNS DESCRIPTION system_gpu_info Pydantic System GPU Info Model. TYPE: MSASystemGPUInfo","title":"get_sysgpuinfo()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_sysinfo","text":"get_sysinfo () -> MSASystemInfo Get MSASystemInfo RETURNS DESCRIPTION system_info Pydantic System Info Model. TYPE: MSASystemInfo","title":"get_sysinfo()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_temperatures","text":"get_temperatures () -> List [ MSATemperatures ] Get psutil.sensors_temperatures() RETURNS DESCRIPTION ret List[MSATemperatures] = [] TYPE: List [ MSATemperatures ]","title":"get_temperatures()"},{"location":"reference/utils/token/","text":"msaSDK Module \u00b6 .utils.token \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' oauth2_scheme module-attribute \u00b6 oauth2_scheme = OAuth2PasswordBearer ( tokenUrl = 'login' ) Classes \u00b6 MSAToken \u00b6 Attributes \u00b6 algorithm instance-attribute \u00b6 algorithm : str = algorithm credentials_exception instance-attribute \u00b6 credentials_exception = HTTPException ( status_code = status . HTTP_401_UNAUTHORIZED , detail = \"Could not validate credentials\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, ) secret_key instance-attribute \u00b6 secret_key : str = secret_key Functions \u00b6 __init__ \u00b6 __init__ ( secret_key : str , algorithm : str = 'HS256' ) create_token async \u00b6 create_token ( data : dict , expire_minutes : int = 100 ) get_current_user async \u00b6 get_current_user ( token : str = Depends ( oauth2_scheme )) verify_token async \u00b6 verify_token ( token : str ) MSATokenData \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : Optional [ str ]","title":"token"},{"location":"reference/utils/token/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/token/#utilstoken","text":"","title":".utils.token"},{"location":"reference/utils/token/#utils.token-attributes","text":"","title":"Attributes"},{"location":"reference/utils/token/#utils.token.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/token/#utils.token.oauth2_scheme","text":"oauth2_scheme = OAuth2PasswordBearer ( tokenUrl = 'login' )","title":"oauth2_scheme"},{"location":"reference/utils/token/#utils.token-classes","text":"","title":"Classes"},{"location":"reference/utils/token/#utils.token.MSAToken","text":"","title":"MSAToken"},{"location":"reference/utils/token/#utils.token.MSAToken-attributes","text":"","title":"Attributes"},{"location":"reference/utils/token/#utils.token.MSAToken.algorithm","text":"algorithm : str = algorithm","title":"algorithm"},{"location":"reference/utils/token/#utils.token.MSAToken.credentials_exception","text":"credentials_exception = HTTPException ( status_code = status . HTTP_401_UNAUTHORIZED , detail = \"Could not validate credentials\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, )","title":"credentials_exception"},{"location":"reference/utils/token/#utils.token.MSAToken.secret_key","text":"secret_key : str = secret_key","title":"secret_key"},{"location":"reference/utils/token/#utils.token.MSAToken-functions","text":"","title":"Functions"},{"location":"reference/utils/token/#utils.token.MSAToken.__init__","text":"__init__ ( secret_key : str , algorithm : str = 'HS256' )","title":"__init__()"},{"location":"reference/utils/token/#utils.token.MSAToken.create_token","text":"create_token ( data : dict , expire_minutes : int = 100 )","title":"create_token()"},{"location":"reference/utils/token/#utils.token.MSAToken.get_current_user","text":"get_current_user ( token : str = Depends ( oauth2_scheme ))","title":"get_current_user()"},{"location":"reference/utils/token/#utils.token.MSAToken.verify_token","text":"verify_token ( token : str )","title":"verify_token()"},{"location":"reference/utils/token/#utils.token.MSATokenData","text":"Bases: SQLModel","title":"MSATokenData"},{"location":"reference/utils/token/#utils.token.MSATokenData-attributes","text":"","title":"Attributes"},{"location":"reference/utils/token/#utils.token.MSATokenData.id","text":"id : Optional [ str ]","title":"id"},{"location":"sites/admin/","text":"Admin Site \u00b6 msaSDK - Admin Site Admin Site is an efficient and easily extensible MSAApp (FastAPI) admin framework. Inspired by Django-admin, and for a fast track through PoC's, MVP's to Production. msaSDK - Admin Site is an efficient Python 3.7+ based framework on top of msaSDK & fastapi & amis , and build with standard Python type hints. The original intention of the development is to improve the application ecology and to quickly generate a visual dashboard for API's and web application. It was build to support very quick PoC's, MVP's in AI Applications. It can be extended with Auth and Login for an MVP Phase with the Auth Module by just define a setting to True. Features \u00b6 Build connected distributed applications faster : Ready for Distributed Application Runtime (Dapr). Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces. Dependencies \u00b6 FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue.js / React - JSON based Frontend Composition \u00b6 msaSDK - Admin consists of three core modules, of which, amis , crud , which can be used as separate modules, and MSAApp as the core SDK part. amis : Based on the pydantic data model building library of baidu amis . To generate/parse data rapidly. crud : Based on FastAPI & SQLModel . To quickly build Create, Read, Update, Delete common API interfaces. admin : Inspired by Django-Admin . Combine amis with crud . To quickly build Web Admin dashboard . Simple Example \u00b6 # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" ) Interface Preview \u00b6 Home Screen with System Info \u00b6 Open http://127.0.0.1:8090/admin/ in your browser: CRUD of SQLModels Screen \u00b6 OpenAPI Interactive Documentation (Swagger) Screen \u00b6 Open http://127.0.0.1:8090/#/admin/docs in your browser: Profiler Screen \u00b6 Open http://127.0.0.1:8090/#/admin/profiler in your browser: License Agreement \u00b6 msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"Admin"},{"location":"sites/admin/#admin-site","text":"","title":"Admin Site"},{"location":"sites/admin/#features","text":"Build connected distributed applications faster : Ready for Distributed Application Runtime (Dapr). Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces.","title":"Features"},{"location":"sites/admin/#dependencies","text":"FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue.js / React - JSON based Frontend","title":"Dependencies"},{"location":"sites/admin/#composition","text":"msaSDK - Admin consists of three core modules, of which, amis , crud , which can be used as separate modules, and MSAApp as the core SDK part. amis : Based on the pydantic data model building library of baidu amis . To generate/parse data rapidly. crud : Based on FastAPI & SQLModel . To quickly build Create, Read, Update, Delete common API interfaces. admin : Inspired by Django-Admin . Combine amis with crud . To quickly build Web Admin dashboard .","title":"Composition"},{"location":"sites/admin/#simple-example","text":"# -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" )","title":"Simple Example"},{"location":"sites/admin/#interface-preview","text":"","title":"Interface Preview"},{"location":"sites/admin/#home-screen-with-system-info","text":"Open http://127.0.0.1:8090/admin/ in your browser:","title":"Home Screen with System Info"},{"location":"sites/admin/#crud-of-sqlmodels-screen","text":"","title":"CRUD of SQLModels Screen"},{"location":"sites/admin/#openapi-interactive-documentation-swagger-screen","text":"Open http://127.0.0.1:8090/#/admin/docs in your browser:","title":"OpenAPI Interactive Documentation (Swagger) Screen"},{"location":"sites/admin/#profiler-screen","text":"Open http://127.0.0.1:8090/#/admin/profiler in your browser:","title":"Profiler Screen"},{"location":"sites/admin/#license-agreement","text":"msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"License Agreement"},{"location":"sites/auth/","text":"Auth Admin Site \u00b6 msaSDK Auth msaSDK Auth. Auth Site that extends the Admin Site Web UI with Login/Auth for the API's. Simple Example \u00b6 Just define in the Service Definition (Settings) site_auth: bool = False # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True settings . site_auth = True # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler app = MSAApp ( settings = settings , auto_mount_site = True , contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" ) Validation Method \u00b6 Decorator \u00b6 Recommended scenario: Single route. Supports synchronous/asynchronous routing. @app . get ( \"/auth/user\" ) @app . auth . requires () def user ( request : Request ): return request . user @app . get ( \"/auth/admin_roles\" ) @app . auth . requires ( 'admin' ) def admin_roles ( request : Request ): return request . user @app . get ( \"/auth/vip_roles\" ) @app . auth . requires ([ 'vip' ]) async def vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_or_vip_roles\" ) @app . auth . requires ( roles = [ 'admin' , 'vip' ]) def admin_or_vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_groups\" ) @app . auth . requires ( groups = [ 'admin' ]) def admin_groups ( request : Request ): return request . user @app . get ( \"/auth/admin_roles_and_admin_groups\" ) @app . auth . requires ( roles = [ 'admin' ], groups = [ 'admin' ]) def admin_roles_and_admin_groups ( request : Request ): return request . user @app . get ( \"/auth/vip_roles_and_article_update\" ) @app . auth . requires ( roles = [ 'vip' ], permissions = [ 'article:update' ]) def vip_roles_and_article_update ( request : Request ): return request . user Dependencies (Recommended) \u00b6 Recommended scenarios: single routes, route collections, MSAApp applications. from fastapi import Depends from typing import Tuple from msaSDK.auth import Auth from msaSDK.auth.models import User app = MSAApp ... @app . get ( \"/auth/admin_roles_depend_1\" ) def admin_roles ( user : User = Depends ( app . auth . get_current_user )): return user # or request.user @app . get ( \"/auth/admin_roles_depend_2\" , dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) def admin_roles ( request : Request ): return request . user app = MSAApp ( dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) @app . get ( \"/auth/admin_roles_depend_3\" ) def admin_roles ( request : Request ): return request . user Middleware \u00b6 Recommended Scenario: MSAApp Application app = MSAApp () auth . backend . attach_middleware ( app ) Direct call \u00b6 Recommended scenarios: Non-routed methods from msaSDK.auth.models import User async def get_request_user ( request : Request ) -> Optional [ User ]: # user= await auth.get_current_user(request) if await auth . requires ( 'admin' , response = False )( request ): return request . user else : return None Token Storage Backend \u00b6 NSA auth supports multiple token storage methods. Default is: DbTokenStore , suggest to customize it to: JwtTokenStore . JwtTokenStore \u00b6 from msaSDK.auth.backends.jwt import JwtTokenStore from sqlalchemy.ext.asyncio import create_async_engine from sqlalchemy_database import AsyncDatabase engine = create_async_engine ( url = 'sqlite+aiosqlite:///amisadmin.db' , future = True ) auth = Auth ( db = AsyncDatabase ( engine ), token_store = JwtTokenStore ( secret_key = '09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7' ) ) # Auth Admin Site site = AuthAdminSite ( settings = Settings ( database_url_async = 'sqlite+aiosqlite:///amisadmin.db' ), auth = auth ) DbTokenStore \u00b6 from msaSDK.auth.backends.db import DbTokenStore auth = Auth ( db = AsyncDatabase ( engine ), token_store = DbTokenStore ( db = AsyncDatabase ( engine )) ) RedisTokenStore \u00b6 # Creating auth objects with `RedisTokenStore` from msaSDK.auth.backends.redis import RedisTokenStore from aioredis import Redis auth = Auth ( db = AsyncDatabase ( engine ), token_store = RedisTokenStore ( redis = Redis . from_url ( 'redis://localhost?db=0' )) ) RBAC Model \u00b6 The RBAC model used in this system is as follows, you can also expand it according to your needs. Reference: Design of permission system flowchart LR User -. m:n .-> Group User -. m:n .-> Role Group -. m:n .-> Role Role -. m:n .-> Perimission Advanced Expansion \u00b6 Expanding the User model \u00b6 from datetime import date from msaSDK.admin.models.fields import Field from msaSDK.auth.models import BaseUser # Customize the `User` model, inherit from `BaseUser`. class MyUser ( BaseUser , table = True ): birthday : date = Field ( None , title = \"Date of Birth\" ) location : str = Field ( None , title = \"Location\" ) # Create auth objects using a custom `User` model auth = Auth ( db = AsyncDatabase ( engine ), user_model = MyUser ) Extending the Role , Group , Permission model \u00b6 # Customize `Group` model, inherit from `BaseRBAC`; # override `Role`, `Permission` model is similar, the difference is the table name. class MyGroup ( BaseRBAC , table = True ): __tablename__ = 'auth_group' # Database table name, must be this to override the default model icon : str = Field ( None , title = 'Icons' ) is_active : bool = Field ( default = True , title = \"Activate or not\" ) Customize UserAuthApp default management class \u00b6 The default management classes can be replaced by inheritance overrides. For example: UserLoginFormAdmin , UserRegFormAdmin , UserInfoFormAdmin , UserAdmin , GroupAdmin , RoleAdmin , PermissionAdmin # Custom model management class, inheritance rewrites the corresponding default management class class MyGroupAdmin ( admin . ModelAdmin ): group_schema = None page_schema = PageSchema ( label = 'User Group Management' , icon = 'fa fa-group' ) model = MyGroup link_model_fields = [ Group . roles ] readonly_fields = [ 'key' ] # Customize the user authentication application, inherit and rewrite the default user authentication application class MyUserAuthApp ( UserAuthApp ): GroupAdmin = MyGroupAdmin # Customize user management site, inherit rewrite the default user management site class MyAuthAdminSite ( AuthAdminSite ): UserAuthApp = MyUserAuthApp # Use the custom `AuthAdminSite` class to create the site object site = MyAuthAdminSite ( settings , auth = auth ) Interface Preview \u00b6 Login Screen \u00b6 Open http://127.0.0.1:8090/admin/auth/form/login in your browser: Home Screen with System Info \u00b6 Open http://127.0.0.1:8090/admin/ in your browser: CRUD of SQLModels Screen \u00b6 OpenAPI Interactive Documentation (Swagger) Screen \u00b6 Open http://127.0.0.1:8090/admin/docs in your browser: License Agreement \u00b6 msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"Auth Admin"},{"location":"sites/auth/#auth-admin-site","text":"","title":"Auth Admin Site"},{"location":"sites/auth/#simple-example","text":"Just define in the Service Definition (Settings) site_auth: bool = False # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True settings . site_auth = True # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler app = MSAApp ( settings = settings , auto_mount_site = True , contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" )","title":"Simple Example"},{"location":"sites/auth/#validation-method","text":"","title":"Validation Method"},{"location":"sites/auth/#decorator","text":"Recommended scenario: Single route. Supports synchronous/asynchronous routing. @app . get ( \"/auth/user\" ) @app . auth . requires () def user ( request : Request ): return request . user @app . get ( \"/auth/admin_roles\" ) @app . auth . requires ( 'admin' ) def admin_roles ( request : Request ): return request . user @app . get ( \"/auth/vip_roles\" ) @app . auth . requires ([ 'vip' ]) async def vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_or_vip_roles\" ) @app . auth . requires ( roles = [ 'admin' , 'vip' ]) def admin_or_vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_groups\" ) @app . auth . requires ( groups = [ 'admin' ]) def admin_groups ( request : Request ): return request . user @app . get ( \"/auth/admin_roles_and_admin_groups\" ) @app . auth . requires ( roles = [ 'admin' ], groups = [ 'admin' ]) def admin_roles_and_admin_groups ( request : Request ): return request . user @app . get ( \"/auth/vip_roles_and_article_update\" ) @app . auth . requires ( roles = [ 'vip' ], permissions = [ 'article:update' ]) def vip_roles_and_article_update ( request : Request ): return request . user","title":"Decorator"},{"location":"sites/auth/#dependencies-recommended","text":"Recommended scenarios: single routes, route collections, MSAApp applications. from fastapi import Depends from typing import Tuple from msaSDK.auth import Auth from msaSDK.auth.models import User app = MSAApp ... @app . get ( \"/auth/admin_roles_depend_1\" ) def admin_roles ( user : User = Depends ( app . auth . get_current_user )): return user # or request.user @app . get ( \"/auth/admin_roles_depend_2\" , dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) def admin_roles ( request : Request ): return request . user app = MSAApp ( dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) @app . get ( \"/auth/admin_roles_depend_3\" ) def admin_roles ( request : Request ): return request . user","title":"Dependencies (Recommended)"},{"location":"sites/auth/#middleware","text":"Recommended Scenario: MSAApp Application app = MSAApp () auth . backend . attach_middleware ( app )","title":"Middleware"},{"location":"sites/auth/#direct-call","text":"Recommended scenarios: Non-routed methods from msaSDK.auth.models import User async def get_request_user ( request : Request ) -> Optional [ User ]: # user= await auth.get_current_user(request) if await auth . requires ( 'admin' , response = False )( request ): return request . user else : return None","title":"Direct call"},{"location":"sites/auth/#token-storage-backend","text":"NSA auth supports multiple token storage methods. Default is: DbTokenStore , suggest to customize it to: JwtTokenStore .","title":"Token Storage Backend"},{"location":"sites/auth/#jwttokenstore","text":"from msaSDK.auth.backends.jwt import JwtTokenStore from sqlalchemy.ext.asyncio import create_async_engine from sqlalchemy_database import AsyncDatabase engine = create_async_engine ( url = 'sqlite+aiosqlite:///amisadmin.db' , future = True ) auth = Auth ( db = AsyncDatabase ( engine ), token_store = JwtTokenStore ( secret_key = '09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7' ) ) # Auth Admin Site site = AuthAdminSite ( settings = Settings ( database_url_async = 'sqlite+aiosqlite:///amisadmin.db' ), auth = auth )","title":"JwtTokenStore"},{"location":"sites/auth/#dbtokenstore","text":"from msaSDK.auth.backends.db import DbTokenStore auth = Auth ( db = AsyncDatabase ( engine ), token_store = DbTokenStore ( db = AsyncDatabase ( engine )) )","title":"DbTokenStore"},{"location":"sites/auth/#redistokenstore","text":"# Creating auth objects with `RedisTokenStore` from msaSDK.auth.backends.redis import RedisTokenStore from aioredis import Redis auth = Auth ( db = AsyncDatabase ( engine ), token_store = RedisTokenStore ( redis = Redis . from_url ( 'redis://localhost?db=0' )) )","title":"RedisTokenStore"},{"location":"sites/auth/#rbac-model","text":"The RBAC model used in this system is as follows, you can also expand it according to your needs. Reference: Design of permission system flowchart LR User -. m:n .-> Group User -. m:n .-> Role Group -. m:n .-> Role Role -. m:n .-> Perimission","title":"RBAC Model"},{"location":"sites/auth/#advanced-expansion","text":"","title":"Advanced Expansion"},{"location":"sites/auth/#expanding-the-user-model","text":"from datetime import date from msaSDK.admin.models.fields import Field from msaSDK.auth.models import BaseUser # Customize the `User` model, inherit from `BaseUser`. class MyUser ( BaseUser , table = True ): birthday : date = Field ( None , title = \"Date of Birth\" ) location : str = Field ( None , title = \"Location\" ) # Create auth objects using a custom `User` model auth = Auth ( db = AsyncDatabase ( engine ), user_model = MyUser )","title":"Expanding the User model"},{"location":"sites/auth/#extending-the-rolegrouppermission-model","text":"# Customize `Group` model, inherit from `BaseRBAC`; # override `Role`, `Permission` model is similar, the difference is the table name. class MyGroup ( BaseRBAC , table = True ): __tablename__ = 'auth_group' # Database table name, must be this to override the default model icon : str = Field ( None , title = 'Icons' ) is_active : bool = Field ( default = True , title = \"Activate or not\" )","title":"Extending the Role,Group,Permission model"},{"location":"sites/auth/#customize-userauthapp-default-management-class","text":"The default management classes can be replaced by inheritance overrides. For example: UserLoginFormAdmin , UserRegFormAdmin , UserInfoFormAdmin , UserAdmin , GroupAdmin , RoleAdmin , PermissionAdmin # Custom model management class, inheritance rewrites the corresponding default management class class MyGroupAdmin ( admin . ModelAdmin ): group_schema = None page_schema = PageSchema ( label = 'User Group Management' , icon = 'fa fa-group' ) model = MyGroup link_model_fields = [ Group . roles ] readonly_fields = [ 'key' ] # Customize the user authentication application, inherit and rewrite the default user authentication application class MyUserAuthApp ( UserAuthApp ): GroupAdmin = MyGroupAdmin # Customize user management site, inherit rewrite the default user management site class MyAuthAdminSite ( AuthAdminSite ): UserAuthApp = MyUserAuthApp # Use the custom `AuthAdminSite` class to create the site object site = MyAuthAdminSite ( settings , auth = auth )","title":"Customize UserAuthApp default management class"},{"location":"sites/auth/#interface-preview","text":"","title":"Interface Preview"},{"location":"sites/auth/#login-screen","text":"Open http://127.0.0.1:8090/admin/auth/form/login in your browser:","title":"Login Screen"},{"location":"sites/auth/#home-screen-with-system-info","text":"Open http://127.0.0.1:8090/admin/ in your browser:","title":"Home Screen with System Info"},{"location":"sites/auth/#crud-of-sqlmodels-screen","text":"","title":"CRUD of SQLModels Screen"},{"location":"sites/auth/#openapi-interactive-documentation-swagger-screen","text":"Open http://127.0.0.1:8090/admin/docs in your browser:","title":"OpenAPI Interactive Documentation (Swagger) Screen"},{"location":"sites/auth/#license-agreement","text":"msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"License Agreement"}]}