{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"msaSDK - FastAPI based Microservice Architecture Development Kit To build PoC's, MVP's, API's with CRUD and Dashboards fast and consistent. Build on top of FastAPI, SQLModel, SQLAlchemy, Amis and many other bullet proofed libraries. Features \u00b6 Build connected distributed applications faster : Ready for Dapr .. Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces. Dependencies \u00b6 FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue Frontend Usage example is in the app module __init__.py \u00b6 # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like the FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event # Mount the Admin Site here if enabled and the auto mount option was False @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # app.mount_site() # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" ) Typical Run Log \u00b6 Interface Preview \u00b6 Home Screen with System Info \u00b6 Open http://127.0.0.1:8090/admin/ in your browser: CRUD of SQLModels Screen \u00b6 Login Screen \u00b6 Open http://127.0.0.1:8090/admin/auth/form/login in your browser: OpenAPI Interactive Documentation (Swagger) Screen \u00b6 Open http://127.0.0.1:8090/#/admin/docs in your browser: Profiler Screen \u00b6 Open http://127.0.0.1:8090/#/admin/profiler in your browser: License Agreement \u00b6 msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface. How to create the documentation \u00b6 We use mkdocs and mkdocsstring. The code reference and nav entry get's created virtually by the triggered python script /docs/gen_ref_pages.py while mkdocs serve or build is executed. Requirements Install for the PDF creation option: \u00b6 PDF Export is using mainly weasyprint, if you get some errors here pls. check there documentation. Installation is part of the msaSDK, so this should be fine. We can now test and view our documentation using: mkdocs serve Build static Site: mkdocs build","title":"Index"},{"location":"#features","text":"Build connected distributed applications faster : Ready for Dapr .. Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces.","title":"Features"},{"location":"#dependencies","text":"FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue Frontend","title":"Dependencies"},{"location":"#usage-example-is-in-the-app-module-__init__py","text":"# -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like the FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event # Mount the Admin Site here if enabled and the auto mount option was False @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # app.mount_site() # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" )","title":"Usage example is in the app module __init__.py"},{"location":"#typical-run-log","text":"","title":"Typical Run Log"},{"location":"#interface-preview","text":"","title":"Interface Preview"},{"location":"#home-screen-with-system-info","text":"Open http://127.0.0.1:8090/admin/ in your browser:","title":"Home Screen with System Info"},{"location":"#crud-of-sqlmodels-screen","text":"","title":"CRUD of SQLModels Screen"},{"location":"#login-screen","text":"Open http://127.0.0.1:8090/admin/auth/form/login in your browser:","title":"Login Screen"},{"location":"#openapi-interactive-documentation-swagger-screen","text":"Open http://127.0.0.1:8090/#/admin/docs in your browser:","title":"OpenAPI Interactive Documentation (Swagger) Screen"},{"location":"#profiler-screen","text":"Open http://127.0.0.1:8090/#/admin/profiler in your browser:","title":"Profiler Screen"},{"location":"#license-agreement","text":"msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"License Agreement"},{"location":"#how-to-create-the-documentation","text":"We use mkdocs and mkdocsstring. The code reference and nav entry get's created virtually by the triggered python script /docs/gen_ref_pages.py while mkdocs serve or build is executed.","title":"How to create the documentation"},{"location":"#requirements-install-for-the-pdf-creation-option","text":"PDF Export is using mainly weasyprint, if you get some errors here pls. check there documentation. Installation is part of the msaSDK, so this should be fine. We can now test and view our documentation using: mkdocs serve Build static Site: mkdocs build","title":"Requirements Install for the PDF creation option:"},{"location":"history-design-future/","text":"History, Design and Future \u00b6 Why the heck should we need an SDK on top of FastAPI, you may think or ask yourself. What\u2019s the reason for this project? [...] Here's a story of the reasons which drive me to build this. Background \u00b6 I have been creating Software Applications, Solutions and APIs with complex requirements for decades (Mainly for AI Systems based on ML/DL and NLP/NLU, in distributed systems, asynchronous, with NoSQL and SQL databases), leading several Software companies and Development Teams. As part of that, we always had to build Showcases, PoC's, MVP's and finally a Production Version. While we used for decades Java with the Eclipse Vert.x library, since 2018 we fell in love with Python for AI Use Cases and replaced java with Python3. As the development stack and architecture shifted 100% to RestAPI, we stumbled over FastAPI and tiangolo's work. Hies ideas and concepts was a match made in heaven. The history of FastAPI is in great part similar to our history with Python and is now our core Framework. We were only missing some major feature and functions we had with Vert.x, there was still a big hole in our new stack. Then we found dapr and a final Vert.x replacement that even fits better our needs now with docker, kubernetes etc. Our customers run on Azure, AWS, Google etc., basically they all run on private cloud but more and more need native cloud solutions. Micro Services Architecture with Hybrid AI and a kind of Hybrid Service Oriented Architecture \u00b6 In the past we usually did build monolitic solutions with an RestAPI endpoint. Today, we use a Micro Service Architecture to provide a SOA layer. This added new challenges and risks. With all those 100's of services and the freedom of the developer building them, the security issues were increasing. So we used a Boilerplate approach to ensure we always use the same stack of tools and libraries, but as we all know today this doesn't really solve the problem on the long run. Also the UI challange wasn't solved using Data Analyst Tools like Dash, Streamlit etc. for PoC's they were not efficient enough to give the customer the right impression of possible UI's etc., esp. for a final solution impression. So there was and is a need to build some sophisticated modern Web UI to showcase even a simple API feature set, we developers are fine with OpenAPI/Swagger but customers mostly are not. You mostly also have some structured data in SQL type of DB's, with a need for some CRUD UI's and a document oriented DB like MongoDB to store Model structures. Also for FastAPI we always have the same need for Middleware, Profiling etc. If you create many PoC's, MVP's and finally the Services, you repeat a lot of things over and over again, sounds like a old know fact but get's repeated with any new technology coming along. Design \u00b6 The design approach was very pragmatic, leave out the AI based libraries and condense to an SDK which holds what we use and need in 80% of our API's and Micro Services. So we just made a list of what the minimum stuff is we want: Pure Python 3 with as much as possible Type hints., no java bridges etc. dapr as our distributed runtime Well for sure FastAPI with Pydantic, orjson, Jinja2 Template Engine, gunicorn, uvicorn and uvloop Starlette extensions and Middleware SQLModel with SQLAlchemy The major aio libraries: aiomultiprocess, aiofiles, aiosqlite, aioredis etc. Loguru for logging The usual datatype parsers for xml, html, dates etc. pandas, numpy, pillow, matplotlib... the usual stuff For the UI we wanted a python lib to create React/Vue.js UI's, so we decided to use Amis mkdocs with mkdocstrings and the mkdocs-material template for our documentation needs, esp. the automation of code reference documentation So we collected all the stuff from past projects, did some major re-factoring (we needed to ensure that when we overload or forked stuff that we won't have name conflicts). Finally... \u00b6 Beside the need we had for our own work, we decided to also give back to the community as we heavily use open source and community help aswell. There is also a tiny hope that some of you may find this helpfull and maybe even want to contribute and join us, yes that is an invitation...","title":"History, Design and Future"},{"location":"history-design-future/#history-design-and-future","text":"Why the heck should we need an SDK on top of FastAPI, you may think or ask yourself. What\u2019s the reason for this project? [...] Here's a story of the reasons which drive me to build this.","title":"History, Design and Future"},{"location":"history-design-future/#background","text":"I have been creating Software Applications, Solutions and APIs with complex requirements for decades (Mainly for AI Systems based on ML/DL and NLP/NLU, in distributed systems, asynchronous, with NoSQL and SQL databases), leading several Software companies and Development Teams. As part of that, we always had to build Showcases, PoC's, MVP's and finally a Production Version. While we used for decades Java with the Eclipse Vert.x library, since 2018 we fell in love with Python for AI Use Cases and replaced java with Python3. As the development stack and architecture shifted 100% to RestAPI, we stumbled over FastAPI and tiangolo's work. Hies ideas and concepts was a match made in heaven. The history of FastAPI is in great part similar to our history with Python and is now our core Framework. We were only missing some major feature and functions we had with Vert.x, there was still a big hole in our new stack. Then we found dapr and a final Vert.x replacement that even fits better our needs now with docker, kubernetes etc. Our customers run on Azure, AWS, Google etc., basically they all run on private cloud but more and more need native cloud solutions.","title":"Background"},{"location":"history-design-future/#micro-services-architecture-with-hybrid-ai-and-a-kind-of-hybrid-service-oriented-architecture","text":"In the past we usually did build monolitic solutions with an RestAPI endpoint. Today, we use a Micro Service Architecture to provide a SOA layer. This added new challenges and risks. With all those 100's of services and the freedom of the developer building them, the security issues were increasing. So we used a Boilerplate approach to ensure we always use the same stack of tools and libraries, but as we all know today this doesn't really solve the problem on the long run. Also the UI challange wasn't solved using Data Analyst Tools like Dash, Streamlit etc. for PoC's they were not efficient enough to give the customer the right impression of possible UI's etc., esp. for a final solution impression. So there was and is a need to build some sophisticated modern Web UI to showcase even a simple API feature set, we developers are fine with OpenAPI/Swagger but customers mostly are not. You mostly also have some structured data in SQL type of DB's, with a need for some CRUD UI's and a document oriented DB like MongoDB to store Model structures. Also for FastAPI we always have the same need for Middleware, Profiling etc. If you create many PoC's, MVP's and finally the Services, you repeat a lot of things over and over again, sounds like a old know fact but get's repeated with any new technology coming along.","title":"Micro Services Architecture with Hybrid AI and a kind of Hybrid Service Oriented Architecture"},{"location":"history-design-future/#design","text":"The design approach was very pragmatic, leave out the AI based libraries and condense to an SDK which holds what we use and need in 80% of our API's and Micro Services. So we just made a list of what the minimum stuff is we want: Pure Python 3 with as much as possible Type hints., no java bridges etc. dapr as our distributed runtime Well for sure FastAPI with Pydantic, orjson, Jinja2 Template Engine, gunicorn, uvicorn and uvloop Starlette extensions and Middleware SQLModel with SQLAlchemy The major aio libraries: aiomultiprocess, aiofiles, aiosqlite, aioredis etc. Loguru for logging The usual datatype parsers for xml, html, dates etc. pandas, numpy, pillow, matplotlib... the usual stuff For the UI we wanted a python lib to create React/Vue.js UI's, so we decided to use Amis mkdocs with mkdocstrings and the mkdocs-material template for our documentation needs, esp. the automation of code reference documentation So we collected all the stuff from past projects, did some major re-factoring (we needed to ensure that when we overload or forked stuff that we won't have name conflicts).","title":"Design"},{"location":"history-design-future/#finally","text":"Beside the need we had for our own work, we decided to also give back to the community as we heavily use open source and community help aswell. There is also a tiny hope that some of you may find this helpfull and maybe even want to contribute and join us, yes that is an invitation...","title":"Finally..."},{"location":"release-notes/","text":"Release Notes \u00b6 Latest Changes \u00b6 Finalized comments and docstring in admin, auth, crud 0.1.2 \u00b6 This is the first public release of msaSDK, former releases are all stages of development and internal releases Features \u00b6 Fixes \u00b6 Docs \u00b6 Translations \u00b6 Internal \u00b6","title":"Release notes"},{"location":"release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/#latest-changes","text":"Finalized comments and docstring in admin, auth, crud","title":"Latest Changes"},{"location":"release-notes/#012","text":"This is the first public release of msaSDK, former releases are all stages of development and internal releases","title":"0.1.2"},{"location":"release-notes/#features","text":"","title":"Features"},{"location":"release-notes/#fixes","text":"","title":"Fixes"},{"location":"release-notes/#docs","text":"","title":"Docs"},{"location":"release-notes/#translations","text":"","title":"Translations"},{"location":"release-notes/#internal","text":"","title":"Internal"},{"location":"requirements/","text":"MSASDK - Included Libraries \u00b6 General Dependencies \u00b6 aiomultiprocess ~=0.9.0 \u00b6 Running a full asyncio event loop on each child process Name: aiomultiprocess Version: 0.9.0 Summary: AsyncIO version of the standard multiprocessing module Home-page: https://aiomultiprocess.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: Required-by: aiofiles ~=22.1.0 \u00b6 Handling local disk files in asyncio applications Name: aiofiles Version: 22.1.0 Summary: File support for asyncio. Home-page: https://github.com/Tinche/aiofiles Author: Tin Tvrtkovic Author-email: tinchester@gmail.com License: Apache-2.0 Requires: Required-by: aiosqlite ~=0.17.0 \u00b6 Asyncio bridge to the standard sqlite3 module Name: aiosqlite Version: 0.17.0 Summary: asyncio bridge to the standard sqlite3 module Home-page: https://aiosqlite.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: typing_extensions Required-by: aioredis ~=2.0.1 \u00b6 Asyncio (pep 3156) redis support Name: aioredis Version: 2.0.1 Summary: asyncio (PEP 3156) Redis support Home-page: https://github.com/aio-libs/aioredis-py Author: Author-email: License: MIT Requires: async-timeout, typing-extensions Required-by: Babel ~=2.10.3 \u00b6 Collection of tools for internationalizing python applications Name: Babel Version: 2.10.3 Summary: Internationalization utilities Home-page: https://babel.pocoo.org/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD Requires: pytz Required-by: mkdocs-git-revision-date-localized-plugin charset_normalizer ~=2.1.1 \u00b6 Read text from an unknown charset encoding Name: charset-normalizer Version: 2.1.1 Summary: The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. Home-page: https://github.com/ousret/charset_normalizer Author: Ahmed TAHRI @Ousret Author-email: ahmed.tahri@cloudnursery.dev License: MIT Requires: Required-by: aiohttp, requests country_list ~=1.0.0 \u00b6 List of all countries with names and iso 3166-1 codes in all languages and all data formats Name: country-list Version: 1.0.0 Summary: List of all countries with names and ISO 3166-1 codes in all languages Home-page: https://github.com/bulv1ne/country_list Author: Niels Lemmens Author-email: draso.odin@gmail.com License: MIT license Requires: Required-by: dateparser ~=1.1.1 \u00b6 Generic parsing of dates in over 200 language locales plus numerous formats in a language agnostic fashion Name: dateparser Version: 1.1.1 Summary: Date parsing library designed to parse dates from HTML pages Home-page: https://github.com/scrapinghub/dateparser Author: Scrapinghub Author-email: info@scrapinghub.com License: BSD Requires: python-dateutil, pytz, regex, tzlocal Required-by: date-parser-sari ~=0.8.11 \u00b6 A parser for recognising free-text dates Name: date-parser-sari Version: 0.8.11 Summary: A parser for recognising free-text dates Home-page: https://github.com/swiss-art-research-net/bso-date-parser.git Author: Florian Kr\u00e4utli Author-email: florian.kraeutli@uzh.ch License: UNKNOWN Requires: Required-by: dapr ~=1.7.0 \u00b6 Dapr is a portable, serverless, event-driven runtime that makes it easy for developers to build resilient, stateless and stateful microservices that run on the cloud and edge Name: dapr Version: 1.7.0 Summary: The official release of Dapr Python SDK. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: aiohttp, grpcio, protobuf, python-dateutil Required-by: dapr-ext-fastapi, dapr-ext-grpc dapr-ext-grpc ~=1.7.0 \u00b6 Grpc extension for dapr. Name: dapr-ext-grpc Version: 1.7.0 Summary: The official release of Dapr Python SDK gRPC Extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: cloudevents, dapr Required-by: dapr-ext-fastapi ~=1.7.0 \u00b6 Dapr is a portable, serverless, event-driven runtime Name: dapr-ext-fastapi Version: 1.7.0 Summary: The official release of Dapr FastAPI extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: dapr, fastapi, uvicorn Required-by: dynaconf ~=3.1.9 \u00b6 The dynamic configurator for your python project Name: dynaconf Version: 3.1.9 Summary: The dynamic configurator for your Python Project Home-page: https://github.com/rochacbruno/dynaconf Author: Bruno Rocha Author-email: rochacbruno@gmail.com License: MIT Requires: Required-by: FastAPI related Dependencies \u00b6 fastapi ~=0.83.0 \u00b6 Fastapi framework, high performance, easy to learn, fast to code, ready for production Name: fastapi Version: 0.83.0 Summary: FastAPI framework, high performance, easy to learn, fast to code, ready for production Home-page: https://github.com/tiangolo/fastapi Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: Requires: pydantic, starlette Required-by: dapr-ext-fastapi, fastapi-pagination, fastapi-sessions, fastapi-users, fastapi-utils, prometheus-fastapi-instrumentator fastapi_utils ~=0.2.1 \u00b6 Reusable utilities for fastapi, repeated tasks, apimodel, apisettings Name: fastapi-utils Version: 0.2.1 Summary: Reusable utilities for FastAPI Home-page: https://fastapi-utils.davidmontague.xyz Author: David Montague Author-email: davwmont@gmail.com License: MIT Requires: fastapi, pydantic, sqlalchemy Required-by: fastapi_sessions ~=0.3.2 \u00b6 Add session authentication to your fastapi project Name: fastapi-sessions Version: 0.3.2 Summary: Ready-to-use session library for FastAPI Home-page: https://github.com/jordanisaacs/fastapi-sessions Author: Jordan Isaacs Author-email: License: MIT Requires: fastapi, itsdangerous Required-by: pyinstrument ~=4.3.0 \u00b6 Pyinstrument to check service performance. Name: pyinstrument Version: 4.3.0 Summary: Call stack profiler for Python. Shows you why your code is slow! Home-page: https://github.com/joerick/pyinstrument Author: Joe Rickerby Author-email: joerick@mac.com License: Requires: Required-by: fastapi-users ~=10.1.5 \u00b6 Ready-to-use and customizable users management for fastapi Name: fastapi-users Version: 10.1.5 Summary: Ready-to-use and customizable users management for FastAPI Home-page: Author: Author-email: Fran\u00e7ois Voron <fvoron@gmail.com> License: Requires: email-validator, fastapi, makefun, passlib, pyjwt, python-multipart Required-by: fastapi-users-db-sqlalchemy fastapi-pagination ~=0.10.0 \u00b6 Library that provides pagination feature Name: fastapi-pagination Version: 0.10.0 Summary: FastAPI pagination Home-page: https://github.com/uriyyo/fastapi-pagination Author: Yurii Karabas Author-email: 1998uriyyo@gmail.com License: MIT Requires: fastapi, pydantic Required-by: gunicorn ~=20.1.0 \u00b6 Name: gunicorn Version: 20.1.0 Summary: WSGI HTTP Server for UNIX Home-page: https://gunicorn.org Author: Benoit Chesneau Author-email: benoitc@e-engura.com License: MIT Requires: setuptools Required-by: Other Dependencies \u00b6 httpx ~=0.23.0 \u00b6 The next generation http client. Name: httpx Version: 0.23.0 Summary: The next generation HTTP client. Home-page: https://github.com/encode/httpx Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: certifi, httpcore, rfc3986, sniffio Required-by: httpx-oauth JPype1 ~=1.4.0 \u00b6 A python to java bridge. Name: JPype1 Version: 1.4.0 Summary: A Python to Java bridge. Home-page: https://github.com/jpype-project/jpype Author: Steve Menard Author-email: devilwolf@users.sourceforge.net License: License :: OSI Approved :: Apache Software License Requires: Required-by: loguru ~=0.6.0 \u00b6 Python logging made (stupidly) simple Name: loguru Version: 0.6.0 Summary: Python logging made (stupidly) simple Home-page: https://github.com/Delgan/loguru Author: Delgan Author-email: delgan.py@gmail.com License: MIT license Requires: Required-by: lxml ~=4.9.1 \u00b6 Powerful and pythonic xml processing library combining libxml2/libxslt with the elementtree api. Name: lxml Version: 4.9.1 Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API. Home-page: https://lxml.de/ Author: lxml dev team Author-email: lxml-dev@lxml.de License: BSD Requires: Required-by: multidict ~=6.0.2 \u00b6 Multidict is dict-like collection of key-value pairs where key might be occurred more than once in the container. Name: multidict Version: 6.0.2 Summary: multidict implementation Home-page: https://github.com/aio-libs/multidict Author: Andrew Svetlov Author-email: andrew.svetlov@gmail.com License: Apache 2 Requires: Required-by: aiohttp, yarl msgpack-asgi ~=1.1.0 \u00b6 Drop-in messagepack support for asgi applications and frameworks Name: msgpack-asgi Version: 1.1.0 Summary: Drop-in MessagePack support for ASGI applications and frameworks Home-page: http://github.com/florimondmanca/msgpack-asgi Author: Florimond Manca Author-email: florimond.manca@gmail.com License: MIT Requires: msgpack, starlette Required-by: parsedatetime ~=2.6 \u00b6 Parse human-readable date/time text. Name: parsedatetime Version: 2.6 Summary: Parse human-readable date/time text. Home-page: https://github.com/bear/parsedatetime Author: Mike Taylor Author-email: bear@bear.im License: Apache License 2.0 Requires: Required-by: passlib ~=1.7.4 \u00b6 Comprehensive password hashing framework supporting over 30 schemes Name: passlib Version: 1.7.4 Summary: comprehensive password hashing framework supporting over 30 schemes Home-page: https://passlib.readthedocs.io Author: Eli Collins Author-email: elic@assurancetechnologies.com License: BSD Requires: Required-by: fastapi-users PGPy ~=0.5.4 \u00b6 Pretty good privacy for python Name: PGPy Version: 0.5.4 Summary: Pretty Good Privacy for Python Home-page: https://github.com/SecurityInnovation/PGPy Author: Michael Greene Author-email: mgreene@securityinnovation.com License: BSD Requires: cryptography, pyasn1, six Required-by: prometheus_fastapi_instrumentator ~=5.9.0 \u00b6 Instrument your fastapi with prometheus metrics Name: prometheus-fastapi-instrumentator Version: 5.9.0 Summary: Instrument your FastAPI with Prometheus metrics Home-page: https://github.com/trallnag/prometheus-fastapi-instrumentator Author: Tim Schwenke Author-email: tim.schwenke@trallnag.com License: ISC Requires: fastapi, prometheus-client Required-by: psutil ~=5.9.2 \u00b6 Cross-platform lib for process and system monitoring in python. Name: psutil Version: 5.9.2 Summary: Cross-platform lib for process and system monitoring in Python. Home-page: https://github.com/giampaolo/psutil Author: Giampaolo Rodola Author-email: g.rodola@gmail.com License: BSD Requires: Required-by: python_magic ~=0.4.27 \u00b6 Filetype and metadata detection Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by: pydantic ~=1.9.2 \u00b6 Data validation and settings management using python type hints Name: pydantic Version: 1.9.2 Summary: Data validation and settings management using python type hints Home-page: https://github.com/samuelcolvin/pydantic Author: Samuel Colvin Author-email: s@muelcolvin.com License: MIT Requires: typing-extensions Required-by: fastapi, fastapi-pagination, fastapi-utils, pandas-profiling, sqlmodel python_dateutil ~=2.8.2 \u00b6 Extensions to the standard python datetime module Name: python-dateutil Version: 2.8.2 Summary: Extensions to the standard Python datetime module Home-page: https://github.com/dateutil/dateutil Author: Gustavo Niemeyer Author-email: gustavo@niemeyer.net License: Dual License Requires: six Required-by: dapr, dateparser, ghp-import, matplotlib, pandas, strawberry-graphql python-dotenv ~=0.20.0 \u00b6 Reads key-value pairs from a .env file and can set them as environment variables. Name: python-dotenv Version: 0.20.0 Summary: Read key-value pairs from a .env file and set them as environment variables Home-page: https://github.com/theskumar/python-dotenv Author: Saurabh Kumar Author-email: me+github@saurabh-kumar.com License: BSD-3-Clause Requires: Required-by: python-jose ~=3.3.0 \u00b6 Son web signature (jws), json web encryption (jwe), json web key (jwk), and json web algorithms (jwa) Name: python-jose Version: 3.3.0 Summary: JOSE implementation in Python Home-page: http://github.com/mpdavis/python-jose Author: Michael Davis Author-email: mike.philip.davis@gmail.com License: MIT Requires: ecdsa, pyasn1, rsa Required-by: regex ~=2022.3.2 \u00b6 Alternative regular expression module, to replace re. Name: regex Version: 2022.3.2 Summary: Alternative regular expression module, to replace re. Home-page: https://github.com/mrabarnett/mrab-regex Author: Matthew Barnett Author-email: regex@mrabarnett.plus.com License: Apache Software License Requires: Required-by: dateparser setuptools ~=65.2.0 \u00b6 Easily download, build, install, upgrade, and uninstall python packages Name: setuptools Version: 65.2.0 Summary: Easily download, build, install, upgrade, and uninstall Python packages Home-page: https://github.com/pypa/setuptools Author: Python Packaging Authority Author-email: distutils-sig@python.org License: Requires: Required-by: gunicorn, zope.interface slowapi ~=0.1.6 \u00b6 A rate limiting extension for starlette and fastapi Name: slowapi Version: 0.1.6 Summary: A rate limiting extension for Starlette and Fastapi Home-page: https://github.com/laurents/slowapi Author: Laurent Savaete Author-email: laurent@where.tf License: MIT Requires: limits Required-by: Starlette related Dependencies \u00b6 sse_starlette ~=1.1.6 \u00b6 Server sent events for starlette and fastapi Name: sse-starlette Version: 1.1.6 Summary: \"SSE plugin for Starlette\" Home-page: https://github.com/sysid/sse-starlette Author: sysid Author-email: sysid@gmx.de License: Requires: starlette Required-by: starlette ~=0.19.1 \u00b6 Name: starlette Version: 0.19.1 Summary: The little ASGI library that shines. Home-page: https://github.com/encode/starlette Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: anyio, typing-extensions Required-by: fastapi, msgpack-asgi, sse-starlette, starception, starlette-context, Starlette-WTF Starlette-WTF ~=0.4.3 \u00b6 Name: Starlette-WTF Version: 0.4.3 Summary: Simple integration of Starlette and WTForms. Home-page: https://github.com/muicss/starlette-wtf Author: Andres Morey Author-email: License: MIT Requires: itsdangerous, python-multipart, starlette, WTForms Required-by: starlette-context ~=0.3.4 \u00b6 Access context in starlette Name: starlette-context Version: 0.3.4 Summary: Access context in Starlette Home-page: https://github.com/tomwojcik/starlette-context Author: Tomasz Wojcik Author-email: License: MIT Requires: starlette Required-by: starception ~=0.4.0 \u00b6 Beautiful debugging page for starlette apps. Name: starception Version: 0.4.0 Summary: Beautiful debugging page for Starlette apps. Home-page: https://github.com/alex-oleshkevich/starception Author: Alex Oleshkevich Author-email: alex.oleshkevich@gmail.com License: MIT Requires: Jinja2, MarkupSafe, starlette Required-by: GraphQL related Dependencies \u00b6 strawberry-graphql ~=0.130.1 \u00b6 A library for creating graphql apis Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by: strawberry-graphql ~=0.130.1 \u00b6 Strawberry provides support for fastapi with a custom apirouter called graphqlrouter. Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by: SQL/DB related Dependencies \u00b6 sqlmodel ~=0.0.8 \u00b6 Sqlmodel, sql databases in python, designed for simplicity, compatibility, and robustness. Name: sqlmodel Version: 0.0.8 Summary: SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness. Home-page: https://github.com/tiangolo/sqlmodel Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: MIT Requires: pydantic, SQLAlchemy, sqlalchemy2-stubs Required-by: sqlalchemy ~=1.4.41 \u00b6 Database abstraction library Name: SQLAlchemy Version: 1.4.41 Summary: Database Abstraction Library Home-page: https://www.sqlalchemy.org Author: Mike Bayer Author-email: mike_mp@zzzcomputing.com License: MIT Requires: greenlet Required-by: fastapi-users-db-sqlalchemy, fastapi-utils, sqlalchemy_database, sqlmodel sqlalchemy_database ~=0.0.7 \u00b6 Sqlalchemy-database provides shortcut functions to common database operations for sqlalchemy orm Name: sqlalchemy_database Version: 0.0.7 Summary: SQLAlchemy-Database provides shortcut functions to common database operations for SQLAlchemy ORM. Home-page: Author: Author-email: Atomi <1456417373@qq.com> License: Requires: sqlalchemy Required-by: Uvicorn related Dependencies \u00b6 uvicorn ~=0.17.6 \u00b6 Name: uvicorn Version: 0.17.6 Summary: The lightning-fast ASGI server. Home-page: https://www.uvicorn.org/ Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: asgiref, click, h11 Required-by: dapr-ext-fastapi uvloop ~=0.16.0 \u00b6 Fast implementation of asyncio event loop on top of libuv Name: uvloop Version: 0.16.0 Summary: Fast implementation of asyncio event loop on top of libuv Home-page: http://github.com/MagicStack/uvloop Author: Yury Selivanov Author-email: yury@magic.io License: MIT Requires: Required-by: General Dependencies \u00b6 fonttools ~=4.37.1 \u00b6 Tools to manipulate font files Name: fonttools Version: 4.37.1 Summary: Tools to manipulate font files Home-page: http://github.com/fonttools/fonttools Author: Just van Rossum Author-email: just@letterror.com License: MIT Requires: Required-by: matplotlib gputil ~=1.4.0 \u00b6 Name: GPUtil Version: 1.4.0 Summary: GPUtil is a Python module for getting the GPU status from NVIDA GPUs using nvidia-smi. Home-page: https://github.com/anderskm/gputil Author: Anders Krogh Mortensen Author-email: anderskroghm@gmail.com License: MIT Requires: Required-by: Jinja2 ~=3.1.2 \u00b6 Name: Jinja2 Version: 3.1.2 Summary: A very fast and expressive template engine. Home-page: https://palletsprojects.com/p/jinja/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD-3-Clause Requires: MarkupSafe Required-by: Flask, mkdocs, mkdocs-material, mkdocstrings, myst-parser, pandas-profiling, starception matplotlib ~=3.5.3 \u00b6 Name: matplotlib Version: 3.5.3 Summary: Python plotting package Home-page: https://matplotlib.org Author: John D. Hunter, Michael Droettboom Author-email: matplotlib-users@python.org License: PSF Requires: cycler, fonttools, kiwisolver, numpy, packaging, pillow, pyparsing, python-dateutil Required-by: missingno, pandas-profiling, phik, seaborn numpy ~=1.23.3 \u00b6 Numpy is the fundamental package for array computing with python. Name: numpy Version: 1.23.3 Summary: NumPy is the fundamental package for array computing with Python. Home-page: https://www.numpy.org Author: Travis E. Oliphant et al. Author-email: License: BSD Requires: Required-by: ImageHash, matplotlib, missingno, pandas, pandas-profiling, patsy, phik, PyWavelets, scipy, seaborn, statsmodels, visions orjson ~=3.8.0 \u00b6 Name: orjson Version: 3.8.0 Summary: Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy Home-page: https://github.com/ijl/orjson Author: ijl <ijl@mailbox.org> Author-email: ijl <ijl@mailbox.org> License: Apache-2.0 OR MIT Requires: Required-by: pandas ~=1.4.4 \u00b6 Powerful data structures for data analysis, time series, and statistics Name: pandas Version: 1.4.4 Summary: Powerful data structures for data analysis, time series, and statistics Home-page: https://pandas.pydata.org Author: The Pandas Development Team Author-email: pandas-dev@python.org License: BSD-3-Clause Requires: numpy, python-dateutil, pytz Required-by: pandas-profiling, phik, seaborn, statsmodels, visions pandas-profiling ~=3.3.0 \u00b6 Generate profile report for pandas dataframe Name: pandas-profiling Version: 3.3.0 Summary: Generate profile report for pandas DataFrame Home-page: https://github.com/ydataai/pandas-profiling Author: YData Labs Inc Author-email: opensource@ydata.ai License: MIT Requires: htmlmin, jinja2, joblib, matplotlib, missingno, multimethod, numpy, pandas, phik, pydantic, PyYAML, requests, scipy, seaborn, statsmodels, tangled-up-in-unicode, tqdm, visions Required-by: pillow ~=9.2.0 \u00b6 Python imaging library (fork) Name: Pillow Version: 9.2.0 Summary: Python Imaging Library (Fork) Home-page: https://python-pillow.org Author: Alex Clark (PIL Fork Author) Author-email: aclark@python-pillow.org License: HPND Requires: Required-by: ImageHash, matplotlib python-magic ~=0.4.27 \u00b6 Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by: python-multipart ~=0.0.5 \u00b6 Name: python-multipart Version: 0.0.5 Summary: A streaming multipart parser for Python Home-page: http://github.com/andrew-d/python-multipart Author: Andrew Dunham Author-email: License: Apache Requires: six Required-by: fastapi-users, Starlette-WTF, strawberry-graphql pytz ~=2022.2.1 \u00b6 Name: pytz Version: 2022.2.1 Summary: World timezone definitions, modern and historical Home-page: http://pythonhosted.org/pytz Author: Stuart Bishop Author-email: stuart@stuartbishop.net License: MIT Requires: Required-by: Babel, dateparser, pandas Documentation related Libraries \u00b6 black ~=22.8.0 \u00b6 Code formatter. Name: black Version: 22.8.0 Summary: The uncompromising code formatter. Home-page: https://github.com/psf/black Author: \u0141ukasz Langa Author-email: lukasz@langa.pl License: MIT Requires: click, mypy-extensions, pathspec, platformdirs, tomli, typing-extensions Required-by: mkdocs ~=1.3.1 \u00b6 Project documentation with markdown. Name: mkdocs Version: 1.3.1 Summary: Project documentation with Markdown. Home-page: https://www.mkdocs.org Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: click, ghp-import, importlib-metadata, Jinja2, Markdown, mergedeep, packaging, PyYAML, pyyaml-env-tag, watchdog Required-by: mkdocs-autorefs, mkdocs-gen-files, mkdocs-git-revision-date-localized-plugin, mkdocs-literate-nav, mkdocs-material, mkdocs-section-index, mkdocstrings mkdocstrings ~=0.19.0 \u00b6 Automatic documentation from sources, for mkdocs. Name: mkdocstrings Version: 0.19.0 Summary: Automatic documentation from sources, for MkDocs. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: UNKNOWN Requires: Jinja2, Markdown, MarkupSafe, mkdocs, mkdocs-autorefs, pymdown-extensions Required-by: mkdocstrings-python mkdocstrings-python ~=0.7.1 \u00b6 A python handler for mkdocstrings. Name: mkdocstrings-python Version: 0.7.1 Summary: A Python handler for mkdocstrings. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: ISC Requires: griffe, mkdocstrings Required-by: mkdocs-material ~=8.4.3 \u00b6 Material design theme for mkdocs Name: mkdocs-material Version: 8.4.3 Summary: Documentation that simply works Home-page: https://squidfunk.github.io/mkdocs-material/ Author: Martin Donath Author-email: martin.donath@squidfunk.com License: MIT Requires: jinja2, markdown, mkdocs, mkdocs-material-extensions, pygments, pymdown-extensions Required-by: mkdocs-gen-files ~=0.4.0 \u00b6 Mkdocs plugin to programmatically generate documentation pages during the build Name: mkdocs-gen-files Version: 0.4.0 Summary: MkDocs plugin to programmatically generate documentation pages during the build Home-page: https://github.com/oprypin/mkdocs-gen-files Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by: mkdocs-literate-nav ~=0.4.1 \u00b6 Mkdocs plugin to specify the navigation in markdown instead of yaml Name: mkdocs-literate-nav Version: 0.4.1 Summary: MkDocs plugin to specify the navigation in Markdown instead of YAML Home-page: https://github.com/oprypin/mkdocs-literate-nav Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by: mkdocs-section-index ~=0.3.4 \u00b6 Mkdocs plugin to allow clickable sections that lead to an index page Name: mkdocs-section-index Version: 0.3.4 Summary: MkDocs plugin to allow clickable sections that lead to an index page Home-page: https://github.com/oprypin/mkdocs-section-index Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by: mkdocs-page-pdf ~=0.1.0 \u00b6 Generate a pdf file for each mkdocs page and adds a download button Name: mkdocs-page-pdf Version: 0.1.0 Summary: Generate a PDF file for each MkDocs page Home-page: https://github.com/brospars/mkdocs-page-pdf Author: brospars Author-email: License: MIT Requires: asyncio, mkdocs, nest-asyncio, pyppeteer Required-by: mkdocs-git-revision-date-localized-plugin ~=1.1.0 \u00b6 Name: mkdocs-git-revision-date-localized-plugin Version: 1.1.0 Summary: Mkdocs plugin that enables displaying the localized date of the last git modification of a markdown file. Home-page: https://github.com/timvink/mkdocs-git-revision-date-localized-plugin Author: Tim Vink Author-email: vinktim@gmail.com License: MIT Requires: babel, GitPython, mkdocs Required-by: Pygments ~=2.13.0 \u00b6 Generic syntax highlighter Name: Pygments Version: 2.13.0 Summary: Pygments is a syntax highlighting package written in Python. Home-page: https://pygments.org/ Author: Georg Brandl Author-email: georg@python.org License: BSD License Requires: Required-by: mkdocs-material, strawberry-graphql","title":"Libraries"},{"location":"requirements/#msasdk-included-libraries","text":"","title":"MSASDK - Included Libraries"},{"location":"requirements/#general-dependencies","text":"","title":"General Dependencies"},{"location":"requirements/#aiomultiprocess-090","text":"Running a full asyncio event loop on each child process Name: aiomultiprocess Version: 0.9.0 Summary: AsyncIO version of the standard multiprocessing module Home-page: https://aiomultiprocess.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: Required-by:","title":"aiomultiprocess ~=0.9.0"},{"location":"requirements/#aiofiles-2210","text":"Handling local disk files in asyncio applications Name: aiofiles Version: 22.1.0 Summary: File support for asyncio. Home-page: https://github.com/Tinche/aiofiles Author: Tin Tvrtkovic Author-email: tinchester@gmail.com License: Apache-2.0 Requires: Required-by:","title":"aiofiles ~=22.1.0"},{"location":"requirements/#aiosqlite-0170","text":"Asyncio bridge to the standard sqlite3 module Name: aiosqlite Version: 0.17.0 Summary: asyncio bridge to the standard sqlite3 module Home-page: https://aiosqlite.omnilib.dev Author: John Reese Author-email: john@noswap.com License: UNKNOWN Requires: typing_extensions Required-by:","title":"aiosqlite ~=0.17.0"},{"location":"requirements/#aioredis-201","text":"Asyncio (pep 3156) redis support Name: aioredis Version: 2.0.1 Summary: asyncio (PEP 3156) Redis support Home-page: https://github.com/aio-libs/aioredis-py Author: Author-email: License: MIT Requires: async-timeout, typing-extensions Required-by:","title":"aioredis ~=2.0.1"},{"location":"requirements/#babel-2103","text":"Collection of tools for internationalizing python applications Name: Babel Version: 2.10.3 Summary: Internationalization utilities Home-page: https://babel.pocoo.org/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD Requires: pytz Required-by: mkdocs-git-revision-date-localized-plugin","title":"Babel ~=2.10.3"},{"location":"requirements/#charset_normalizer-211","text":"Read text from an unknown charset encoding Name: charset-normalizer Version: 2.1.1 Summary: The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet. Home-page: https://github.com/ousret/charset_normalizer Author: Ahmed TAHRI @Ousret Author-email: ahmed.tahri@cloudnursery.dev License: MIT Requires: Required-by: aiohttp, requests","title":"charset_normalizer ~=2.1.1"},{"location":"requirements/#country_list-100","text":"List of all countries with names and iso 3166-1 codes in all languages and all data formats Name: country-list Version: 1.0.0 Summary: List of all countries with names and ISO 3166-1 codes in all languages Home-page: https://github.com/bulv1ne/country_list Author: Niels Lemmens Author-email: draso.odin@gmail.com License: MIT license Requires: Required-by:","title":"country_list ~=1.0.0"},{"location":"requirements/#dateparser-111","text":"Generic parsing of dates in over 200 language locales plus numerous formats in a language agnostic fashion Name: dateparser Version: 1.1.1 Summary: Date parsing library designed to parse dates from HTML pages Home-page: https://github.com/scrapinghub/dateparser Author: Scrapinghub Author-email: info@scrapinghub.com License: BSD Requires: python-dateutil, pytz, regex, tzlocal Required-by:","title":"dateparser ~=1.1.1"},{"location":"requirements/#date-parser-sari-0811","text":"A parser for recognising free-text dates Name: date-parser-sari Version: 0.8.11 Summary: A parser for recognising free-text dates Home-page: https://github.com/swiss-art-research-net/bso-date-parser.git Author: Florian Kr\u00e4utli Author-email: florian.kraeutli@uzh.ch License: UNKNOWN Requires: Required-by:","title":"date-parser-sari ~=0.8.11"},{"location":"requirements/#dapr-170","text":"Dapr is a portable, serverless, event-driven runtime that makes it easy for developers to build resilient, stateless and stateful microservices that run on the cloud and edge Name: dapr Version: 1.7.0 Summary: The official release of Dapr Python SDK. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: aiohttp, grpcio, protobuf, python-dateutil Required-by: dapr-ext-fastapi, dapr-ext-grpc","title":"dapr ~=1.7.0"},{"location":"requirements/#dapr-ext-grpc-170","text":"Grpc extension for dapr. Name: dapr-ext-grpc Version: 1.7.0 Summary: The official release of Dapr Python SDK gRPC Extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: cloudevents, dapr Required-by:","title":"dapr-ext-grpc ~=1.7.0"},{"location":"requirements/#dapr-ext-fastapi-170","text":"Dapr is a portable, serverless, event-driven runtime Name: dapr-ext-fastapi Version: 1.7.0 Summary: The official release of Dapr FastAPI extension. Home-page: https://dapr.io/ Author: Dapr Authors Author-email: daprweb@microsoft.com License: Apache Requires: dapr, fastapi, uvicorn Required-by:","title":"dapr-ext-fastapi ~=1.7.0"},{"location":"requirements/#dynaconf-319","text":"The dynamic configurator for your python project Name: dynaconf Version: 3.1.9 Summary: The dynamic configurator for your Python Project Home-page: https://github.com/rochacbruno/dynaconf Author: Bruno Rocha Author-email: rochacbruno@gmail.com License: MIT Requires: Required-by:","title":"dynaconf ~=3.1.9"},{"location":"requirements/#fastapi-related-dependencies","text":"","title":"FastAPI related Dependencies"},{"location":"requirements/#fastapi-0830","text":"Fastapi framework, high performance, easy to learn, fast to code, ready for production Name: fastapi Version: 0.83.0 Summary: FastAPI framework, high performance, easy to learn, fast to code, ready for production Home-page: https://github.com/tiangolo/fastapi Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: Requires: pydantic, starlette Required-by: dapr-ext-fastapi, fastapi-pagination, fastapi-sessions, fastapi-users, fastapi-utils, prometheus-fastapi-instrumentator","title":"fastapi ~=0.83.0"},{"location":"requirements/#fastapi_utils-021","text":"Reusable utilities for fastapi, repeated tasks, apimodel, apisettings Name: fastapi-utils Version: 0.2.1 Summary: Reusable utilities for FastAPI Home-page: https://fastapi-utils.davidmontague.xyz Author: David Montague Author-email: davwmont@gmail.com License: MIT Requires: fastapi, pydantic, sqlalchemy Required-by:","title":"fastapi_utils ~=0.2.1"},{"location":"requirements/#fastapi_sessions-032","text":"Add session authentication to your fastapi project Name: fastapi-sessions Version: 0.3.2 Summary: Ready-to-use session library for FastAPI Home-page: https://github.com/jordanisaacs/fastapi-sessions Author: Jordan Isaacs Author-email: License: MIT Requires: fastapi, itsdangerous Required-by:","title":"fastapi_sessions ~=0.3.2"},{"location":"requirements/#pyinstrument-430","text":"Pyinstrument to check service performance. Name: pyinstrument Version: 4.3.0 Summary: Call stack profiler for Python. Shows you why your code is slow! Home-page: https://github.com/joerick/pyinstrument Author: Joe Rickerby Author-email: joerick@mac.com License: Requires: Required-by:","title":"pyinstrument ~=4.3.0"},{"location":"requirements/#fastapi-users-1015","text":"Ready-to-use and customizable users management for fastapi Name: fastapi-users Version: 10.1.5 Summary: Ready-to-use and customizable users management for FastAPI Home-page: Author: Author-email: Fran\u00e7ois Voron <fvoron@gmail.com> License: Requires: email-validator, fastapi, makefun, passlib, pyjwt, python-multipart Required-by: fastapi-users-db-sqlalchemy","title":"fastapi-users ~=10.1.5"},{"location":"requirements/#fastapi-pagination-0100","text":"Library that provides pagination feature Name: fastapi-pagination Version: 0.10.0 Summary: FastAPI pagination Home-page: https://github.com/uriyyo/fastapi-pagination Author: Yurii Karabas Author-email: 1998uriyyo@gmail.com License: MIT Requires: fastapi, pydantic Required-by:","title":"fastapi-pagination ~=0.10.0"},{"location":"requirements/#gunicorn-2010","text":"Name: gunicorn Version: 20.1.0 Summary: WSGI HTTP Server for UNIX Home-page: https://gunicorn.org Author: Benoit Chesneau Author-email: benoitc@e-engura.com License: MIT Requires: setuptools Required-by:","title":"gunicorn ~=20.1.0"},{"location":"requirements/#other-dependencies","text":"","title":"Other Dependencies"},{"location":"requirements/#httpx-0230","text":"The next generation http client. Name: httpx Version: 0.23.0 Summary: The next generation HTTP client. Home-page: https://github.com/encode/httpx Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: certifi, httpcore, rfc3986, sniffio Required-by: httpx-oauth","title":"httpx ~=0.23.0"},{"location":"requirements/#jpype1-140","text":"A python to java bridge. Name: JPype1 Version: 1.4.0 Summary: A Python to Java bridge. Home-page: https://github.com/jpype-project/jpype Author: Steve Menard Author-email: devilwolf@users.sourceforge.net License: License :: OSI Approved :: Apache Software License Requires: Required-by:","title":"JPype1 ~=1.4.0"},{"location":"requirements/#loguru-060","text":"Python logging made (stupidly) simple Name: loguru Version: 0.6.0 Summary: Python logging made (stupidly) simple Home-page: https://github.com/Delgan/loguru Author: Delgan Author-email: delgan.py@gmail.com License: MIT license Requires: Required-by:","title":"loguru ~=0.6.0"},{"location":"requirements/#lxml-491","text":"Powerful and pythonic xml processing library combining libxml2/libxslt with the elementtree api. Name: lxml Version: 4.9.1 Summary: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API. Home-page: https://lxml.de/ Author: lxml dev team Author-email: lxml-dev@lxml.de License: BSD Requires: Required-by:","title":"lxml ~=4.9.1"},{"location":"requirements/#multidict-602","text":"Multidict is dict-like collection of key-value pairs where key might be occurred more than once in the container. Name: multidict Version: 6.0.2 Summary: multidict implementation Home-page: https://github.com/aio-libs/multidict Author: Andrew Svetlov Author-email: andrew.svetlov@gmail.com License: Apache 2 Requires: Required-by: aiohttp, yarl","title":"multidict ~=6.0.2"},{"location":"requirements/#msgpack-asgi-110","text":"Drop-in messagepack support for asgi applications and frameworks Name: msgpack-asgi Version: 1.1.0 Summary: Drop-in MessagePack support for ASGI applications and frameworks Home-page: http://github.com/florimondmanca/msgpack-asgi Author: Florimond Manca Author-email: florimond.manca@gmail.com License: MIT Requires: msgpack, starlette Required-by:","title":"msgpack-asgi ~=1.1.0"},{"location":"requirements/#parsedatetime-26","text":"Parse human-readable date/time text. Name: parsedatetime Version: 2.6 Summary: Parse human-readable date/time text. Home-page: https://github.com/bear/parsedatetime Author: Mike Taylor Author-email: bear@bear.im License: Apache License 2.0 Requires: Required-by:","title":"parsedatetime ~=2.6"},{"location":"requirements/#passlib-174","text":"Comprehensive password hashing framework supporting over 30 schemes Name: passlib Version: 1.7.4 Summary: comprehensive password hashing framework supporting over 30 schemes Home-page: https://passlib.readthedocs.io Author: Eli Collins Author-email: elic@assurancetechnologies.com License: BSD Requires: Required-by: fastapi-users","title":"passlib ~=1.7.4"},{"location":"requirements/#pgpy-054","text":"Pretty good privacy for python Name: PGPy Version: 0.5.4 Summary: Pretty Good Privacy for Python Home-page: https://github.com/SecurityInnovation/PGPy Author: Michael Greene Author-email: mgreene@securityinnovation.com License: BSD Requires: cryptography, pyasn1, six Required-by:","title":"PGPy ~=0.5.4"},{"location":"requirements/#prometheus_fastapi_instrumentator-590","text":"Instrument your fastapi with prometheus metrics Name: prometheus-fastapi-instrumentator Version: 5.9.0 Summary: Instrument your FastAPI with Prometheus metrics Home-page: https://github.com/trallnag/prometheus-fastapi-instrumentator Author: Tim Schwenke Author-email: tim.schwenke@trallnag.com License: ISC Requires: fastapi, prometheus-client Required-by:","title":"prometheus_fastapi_instrumentator ~=5.9.0"},{"location":"requirements/#psutil-592","text":"Cross-platform lib for process and system monitoring in python. Name: psutil Version: 5.9.2 Summary: Cross-platform lib for process and system monitoring in Python. Home-page: https://github.com/giampaolo/psutil Author: Giampaolo Rodola Author-email: g.rodola@gmail.com License: BSD Requires: Required-by:","title":"psutil ~=5.9.2"},{"location":"requirements/#python_magic-0427","text":"Filetype and metadata detection Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by:","title":"python_magic ~=0.4.27"},{"location":"requirements/#pydantic-192","text":"Data validation and settings management using python type hints Name: pydantic Version: 1.9.2 Summary: Data validation and settings management using python type hints Home-page: https://github.com/samuelcolvin/pydantic Author: Samuel Colvin Author-email: s@muelcolvin.com License: MIT Requires: typing-extensions Required-by: fastapi, fastapi-pagination, fastapi-utils, pandas-profiling, sqlmodel","title":"pydantic ~=1.9.2"},{"location":"requirements/#python_dateutil-282","text":"Extensions to the standard python datetime module Name: python-dateutil Version: 2.8.2 Summary: Extensions to the standard Python datetime module Home-page: https://github.com/dateutil/dateutil Author: Gustavo Niemeyer Author-email: gustavo@niemeyer.net License: Dual License Requires: six Required-by: dapr, dateparser, ghp-import, matplotlib, pandas, strawberry-graphql","title":"python_dateutil ~=2.8.2"},{"location":"requirements/#python-dotenv-0200","text":"Reads key-value pairs from a .env file and can set them as environment variables. Name: python-dotenv Version: 0.20.0 Summary: Read key-value pairs from a .env file and set them as environment variables Home-page: https://github.com/theskumar/python-dotenv Author: Saurabh Kumar Author-email: me+github@saurabh-kumar.com License: BSD-3-Clause Requires: Required-by:","title":"python-dotenv ~=0.20.0"},{"location":"requirements/#python-jose-330","text":"Son web signature (jws), json web encryption (jwe), json web key (jwk), and json web algorithms (jwa) Name: python-jose Version: 3.3.0 Summary: JOSE implementation in Python Home-page: http://github.com/mpdavis/python-jose Author: Michael Davis Author-email: mike.philip.davis@gmail.com License: MIT Requires: ecdsa, pyasn1, rsa Required-by:","title":"python-jose ~=3.3.0"},{"location":"requirements/#regex-202232","text":"Alternative regular expression module, to replace re. Name: regex Version: 2022.3.2 Summary: Alternative regular expression module, to replace re. Home-page: https://github.com/mrabarnett/mrab-regex Author: Matthew Barnett Author-email: regex@mrabarnett.plus.com License: Apache Software License Requires: Required-by: dateparser","title":"regex ~=2022.3.2"},{"location":"requirements/#setuptools-6520","text":"Easily download, build, install, upgrade, and uninstall python packages Name: setuptools Version: 65.2.0 Summary: Easily download, build, install, upgrade, and uninstall Python packages Home-page: https://github.com/pypa/setuptools Author: Python Packaging Authority Author-email: distutils-sig@python.org License: Requires: Required-by: gunicorn, zope.interface","title":"setuptools ~=65.2.0"},{"location":"requirements/#slowapi-016","text":"A rate limiting extension for starlette and fastapi Name: slowapi Version: 0.1.6 Summary: A rate limiting extension for Starlette and Fastapi Home-page: https://github.com/laurents/slowapi Author: Laurent Savaete Author-email: laurent@where.tf License: MIT Requires: limits Required-by:","title":"slowapi ~=0.1.6"},{"location":"requirements/#starlette-related-dependencies","text":"","title":"Starlette related Dependencies"},{"location":"requirements/#sse_starlette-116","text":"Server sent events for starlette and fastapi Name: sse-starlette Version: 1.1.6 Summary: \"SSE plugin for Starlette\" Home-page: https://github.com/sysid/sse-starlette Author: sysid Author-email: sysid@gmx.de License: Requires: starlette Required-by:","title":"sse_starlette ~=1.1.6"},{"location":"requirements/#starlette-0191","text":"Name: starlette Version: 0.19.1 Summary: The little ASGI library that shines. Home-page: https://github.com/encode/starlette Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: anyio, typing-extensions Required-by: fastapi, msgpack-asgi, sse-starlette, starception, starlette-context, Starlette-WTF","title":"starlette ~=0.19.1"},{"location":"requirements/#starlette-wtf-043","text":"Name: Starlette-WTF Version: 0.4.3 Summary: Simple integration of Starlette and WTForms. Home-page: https://github.com/muicss/starlette-wtf Author: Andres Morey Author-email: License: MIT Requires: itsdangerous, python-multipart, starlette, WTForms Required-by:","title":"Starlette-WTF ~=0.4.3"},{"location":"requirements/#starlette-context-034","text":"Access context in starlette Name: starlette-context Version: 0.3.4 Summary: Access context in Starlette Home-page: https://github.com/tomwojcik/starlette-context Author: Tomasz Wojcik Author-email: License: MIT Requires: starlette Required-by:","title":"starlette-context ~=0.3.4"},{"location":"requirements/#starception-040","text":"Beautiful debugging page for starlette apps. Name: starception Version: 0.4.0 Summary: Beautiful debugging page for Starlette apps. Home-page: https://github.com/alex-oleshkevich/starception Author: Alex Oleshkevich Author-email: alex.oleshkevich@gmail.com License: MIT Requires: Jinja2, MarkupSafe, starlette Required-by:","title":"starception ~=0.4.0"},{"location":"requirements/#graphql-related-dependencies","text":"","title":"GraphQL related Dependencies"},{"location":"requirements/#strawberry-graphql-01301","text":"A library for creating graphql apis Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by:","title":"strawberry-graphql ~=0.130.1"},{"location":"requirements/#strawberry-graphql-01301_1","text":"Strawberry provides support for fastapi with a custom apirouter called graphqlrouter. Check Version: 0.129.0 vs 0.130.1 Name: strawberry-graphql Version: 0.129.0 Summary: A library for creating GraphQL APIs Home-page: https://strawberry.rocks/ Author: Patrick Arminio Author-email: patrick.arminio@gmail.com License: MIT Requires: click, graphql-core, pygments, python-dateutil, python-multipart, typing_extensions Required-by:","title":"strawberry-graphql ~=0.130.1"},{"location":"requirements/#sqldb-related-dependencies","text":"","title":"SQL/DB related Dependencies"},{"location":"requirements/#sqlmodel-008","text":"Sqlmodel, sql databases in python, designed for simplicity, compatibility, and robustness. Name: sqlmodel Version: 0.0.8 Summary: SQLModel, SQL databases in Python, designed for simplicity, compatibility, and robustness. Home-page: https://github.com/tiangolo/sqlmodel Author: Sebasti\u00e1n Ram\u00edrez Author-email: tiangolo@gmail.com License: MIT Requires: pydantic, SQLAlchemy, sqlalchemy2-stubs Required-by:","title":"sqlmodel ~=0.0.8"},{"location":"requirements/#sqlalchemy-1441","text":"Database abstraction library Name: SQLAlchemy Version: 1.4.41 Summary: Database Abstraction Library Home-page: https://www.sqlalchemy.org Author: Mike Bayer Author-email: mike_mp@zzzcomputing.com License: MIT Requires: greenlet Required-by: fastapi-users-db-sqlalchemy, fastapi-utils, sqlalchemy_database, sqlmodel","title":"sqlalchemy ~=1.4.41"},{"location":"requirements/#sqlalchemy_database-007","text":"Sqlalchemy-database provides shortcut functions to common database operations for sqlalchemy orm Name: sqlalchemy_database Version: 0.0.7 Summary: SQLAlchemy-Database provides shortcut functions to common database operations for SQLAlchemy ORM. Home-page: Author: Author-email: Atomi <1456417373@qq.com> License: Requires: sqlalchemy Required-by:","title":"sqlalchemy_database ~=0.0.7"},{"location":"requirements/#uvicorn-related-dependencies","text":"","title":"Uvicorn related Dependencies"},{"location":"requirements/#uvicorn-0176","text":"Name: uvicorn Version: 0.17.6 Summary: The lightning-fast ASGI server. Home-page: https://www.uvicorn.org/ Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: asgiref, click, h11 Required-by: dapr-ext-fastapi","title":"uvicorn ~=0.17.6"},{"location":"requirements/#uvloop-0160","text":"Fast implementation of asyncio event loop on top of libuv Name: uvloop Version: 0.16.0 Summary: Fast implementation of asyncio event loop on top of libuv Home-page: http://github.com/MagicStack/uvloop Author: Yury Selivanov Author-email: yury@magic.io License: MIT Requires: Required-by:","title":"uvloop ~=0.16.0"},{"location":"requirements/#general-dependencies_1","text":"","title":"General Dependencies"},{"location":"requirements/#fonttools-4371","text":"Tools to manipulate font files Name: fonttools Version: 4.37.1 Summary: Tools to manipulate font files Home-page: http://github.com/fonttools/fonttools Author: Just van Rossum Author-email: just@letterror.com License: MIT Requires: Required-by: matplotlib","title":"fonttools ~=4.37.1"},{"location":"requirements/#gputil-140","text":"Name: GPUtil Version: 1.4.0 Summary: GPUtil is a Python module for getting the GPU status from NVIDA GPUs using nvidia-smi. Home-page: https://github.com/anderskm/gputil Author: Anders Krogh Mortensen Author-email: anderskroghm@gmail.com License: MIT Requires: Required-by:","title":"gputil ~=1.4.0"},{"location":"requirements/#jinja2-312","text":"Name: Jinja2 Version: 3.1.2 Summary: A very fast and expressive template engine. Home-page: https://palletsprojects.com/p/jinja/ Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD-3-Clause Requires: MarkupSafe Required-by: Flask, mkdocs, mkdocs-material, mkdocstrings, myst-parser, pandas-profiling, starception","title":"Jinja2 ~=3.1.2"},{"location":"requirements/#matplotlib-353","text":"Name: matplotlib Version: 3.5.3 Summary: Python plotting package Home-page: https://matplotlib.org Author: John D. Hunter, Michael Droettboom Author-email: matplotlib-users@python.org License: PSF Requires: cycler, fonttools, kiwisolver, numpy, packaging, pillow, pyparsing, python-dateutil Required-by: missingno, pandas-profiling, phik, seaborn","title":"matplotlib ~=3.5.3"},{"location":"requirements/#numpy-1233","text":"Numpy is the fundamental package for array computing with python. Name: numpy Version: 1.23.3 Summary: NumPy is the fundamental package for array computing with Python. Home-page: https://www.numpy.org Author: Travis E. Oliphant et al. Author-email: License: BSD Requires: Required-by: ImageHash, matplotlib, missingno, pandas, pandas-profiling, patsy, phik, PyWavelets, scipy, seaborn, statsmodels, visions","title":"numpy ~=1.23.3"},{"location":"requirements/#orjson-380","text":"Name: orjson Version: 3.8.0 Summary: Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy Home-page: https://github.com/ijl/orjson Author: ijl <ijl@mailbox.org> Author-email: ijl <ijl@mailbox.org> License: Apache-2.0 OR MIT Requires: Required-by:","title":"orjson ~=3.8.0"},{"location":"requirements/#pandas-144","text":"Powerful data structures for data analysis, time series, and statistics Name: pandas Version: 1.4.4 Summary: Powerful data structures for data analysis, time series, and statistics Home-page: https://pandas.pydata.org Author: The Pandas Development Team Author-email: pandas-dev@python.org License: BSD-3-Clause Requires: numpy, python-dateutil, pytz Required-by: pandas-profiling, phik, seaborn, statsmodels, visions","title":"pandas ~=1.4.4"},{"location":"requirements/#pandas-profiling-330","text":"Generate profile report for pandas dataframe Name: pandas-profiling Version: 3.3.0 Summary: Generate profile report for pandas DataFrame Home-page: https://github.com/ydataai/pandas-profiling Author: YData Labs Inc Author-email: opensource@ydata.ai License: MIT Requires: htmlmin, jinja2, joblib, matplotlib, missingno, multimethod, numpy, pandas, phik, pydantic, PyYAML, requests, scipy, seaborn, statsmodels, tangled-up-in-unicode, tqdm, visions Required-by:","title":"pandas-profiling ~=3.3.0"},{"location":"requirements/#pillow-920","text":"Python imaging library (fork) Name: Pillow Version: 9.2.0 Summary: Python Imaging Library (Fork) Home-page: https://python-pillow.org Author: Alex Clark (PIL Fork Author) Author-email: aclark@python-pillow.org License: HPND Requires: Required-by: ImageHash, matplotlib","title":"pillow ~=9.2.0"},{"location":"requirements/#python-magic-0427","text":"Name: python-magic Version: 0.4.27 Summary: File type identification using libmagic Home-page: http://github.com/ahupp/python-magic Author: Adam Hupp Author-email: adam@hupp.org License: MIT Requires: Required-by:","title":"python-magic ~=0.4.27"},{"location":"requirements/#python-multipart-005","text":"Name: python-multipart Version: 0.0.5 Summary: A streaming multipart parser for Python Home-page: http://github.com/andrew-d/python-multipart Author: Andrew Dunham Author-email: License: Apache Requires: six Required-by: fastapi-users, Starlette-WTF, strawberry-graphql","title":"python-multipart ~=0.0.5"},{"location":"requirements/#pytz-202221","text":"Name: pytz Version: 2022.2.1 Summary: World timezone definitions, modern and historical Home-page: http://pythonhosted.org/pytz Author: Stuart Bishop Author-email: stuart@stuartbishop.net License: MIT Requires: Required-by: Babel, dateparser, pandas","title":"pytz ~=2022.2.1"},{"location":"requirements/#documentation-related-libraries","text":"","title":"Documentation related Libraries"},{"location":"requirements/#black-2280","text":"Code formatter. Name: black Version: 22.8.0 Summary: The uncompromising code formatter. Home-page: https://github.com/psf/black Author: \u0141ukasz Langa Author-email: lukasz@langa.pl License: MIT Requires: click, mypy-extensions, pathspec, platformdirs, tomli, typing-extensions Required-by:","title":"black ~=22.8.0"},{"location":"requirements/#mkdocs-131","text":"Project documentation with markdown. Name: mkdocs Version: 1.3.1 Summary: Project documentation with Markdown. Home-page: https://www.mkdocs.org Author: Tom Christie Author-email: tom@tomchristie.com License: BSD Requires: click, ghp-import, importlib-metadata, Jinja2, Markdown, mergedeep, packaging, PyYAML, pyyaml-env-tag, watchdog Required-by: mkdocs-autorefs, mkdocs-gen-files, mkdocs-git-revision-date-localized-plugin, mkdocs-literate-nav, mkdocs-material, mkdocs-section-index, mkdocstrings","title":"mkdocs ~=1.3.1"},{"location":"requirements/#mkdocstrings-0190","text":"Automatic documentation from sources, for mkdocs. Name: mkdocstrings Version: 0.19.0 Summary: Automatic documentation from sources, for MkDocs. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: UNKNOWN Requires: Jinja2, Markdown, MarkupSafe, mkdocs, mkdocs-autorefs, pymdown-extensions Required-by: mkdocstrings-python","title":"mkdocstrings ~=0.19.0"},{"location":"requirements/#mkdocstrings-python-071","text":"A python handler for mkdocstrings. Name: mkdocstrings-python Version: 0.7.1 Summary: A Python handler for mkdocstrings. Home-page: Author: Author-email: Timoth\u00e9e Mazzucotelli <pawamoy@pm.me> License: ISC Requires: griffe, mkdocstrings Required-by:","title":"mkdocstrings-python ~=0.7.1"},{"location":"requirements/#mkdocs-material-843","text":"Material design theme for mkdocs Name: mkdocs-material Version: 8.4.3 Summary: Documentation that simply works Home-page: https://squidfunk.github.io/mkdocs-material/ Author: Martin Donath Author-email: martin.donath@squidfunk.com License: MIT Requires: jinja2, markdown, mkdocs, mkdocs-material-extensions, pygments, pymdown-extensions Required-by:","title":"mkdocs-material ~=8.4.3"},{"location":"requirements/#mkdocs-gen-files-040","text":"Mkdocs plugin to programmatically generate documentation pages during the build Name: mkdocs-gen-files Version: 0.4.0 Summary: MkDocs plugin to programmatically generate documentation pages during the build Home-page: https://github.com/oprypin/mkdocs-gen-files Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by:","title":"mkdocs-gen-files ~=0.4.0"},{"location":"requirements/#mkdocs-literate-nav-041","text":"Mkdocs plugin to specify the navigation in markdown instead of yaml Name: mkdocs-literate-nav Version: 0.4.1 Summary: MkDocs plugin to specify the navigation in Markdown instead of YAML Home-page: https://github.com/oprypin/mkdocs-literate-nav Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by:","title":"mkdocs-literate-nav ~=0.4.1"},{"location":"requirements/#mkdocs-section-index-034","text":"Mkdocs plugin to allow clickable sections that lead to an index page Name: mkdocs-section-index Version: 0.3.4 Summary: MkDocs plugin to allow clickable sections that lead to an index page Home-page: https://github.com/oprypin/mkdocs-section-index Author: Oleh Prypin Author-email: oleh@pryp.in License: MIT Requires: mkdocs Required-by:","title":"mkdocs-section-index ~=0.3.4"},{"location":"requirements/#mkdocs-page-pdf-010","text":"Generate a pdf file for each mkdocs page and adds a download button Name: mkdocs-page-pdf Version: 0.1.0 Summary: Generate a PDF file for each MkDocs page Home-page: https://github.com/brospars/mkdocs-page-pdf Author: brospars Author-email: License: MIT Requires: asyncio, mkdocs, nest-asyncio, pyppeteer Required-by:","title":"mkdocs-page-pdf ~=0.1.0"},{"location":"requirements/#mkdocs-git-revision-date-localized-plugin-110","text":"Name: mkdocs-git-revision-date-localized-plugin Version: 1.1.0 Summary: Mkdocs plugin that enables displaying the localized date of the last git modification of a markdown file. Home-page: https://github.com/timvink/mkdocs-git-revision-date-localized-plugin Author: Tim Vink Author-email: vinktim@gmail.com License: MIT Requires: babel, GitPython, mkdocs Required-by:","title":"mkdocs-git-revision-date-localized-plugin ~=1.1.0"},{"location":"requirements/#pygments-2130","text":"Generic syntax highlighter Name: Pygments Version: 2.13.0 Summary: Pygments is a syntax highlighting package written in Python. Home-page: https://pygments.org/ Author: Georg Brandl Author-email: georg@python.org License: BSD License Requires: Required-by: mkdocs-material, strawberry-graphql","title":"Pygments ~=2.13.0"},{"location":"used_tools/","text":"Inspiration and Used Tools \u00b6 What inspired to build msaSDK , how it came to life and why i use an SDK in Micro Service Architectures. Intro \u00b6 msaSDK wouldn't exist if not for the previous work of others, esp. FastAPI and Dapr . There have been many tools created before that have helped inspire its creation. I have been avoiding the creation of a SDK for several years. I always started with all the features covered by FastAPI and adding many different frameworks, plug-ins, and tools. But at some point, the hustle to always start from scratch doing the same things slightly different all the times, each PoC or MVP was a new adventure, esp. since we now build systems with 10s or hundred's of microservices. So i fell in love with FastAPI, Pydantic, Tyype hints and then SQLModel a while ago when i learned about Dapr. Dapr and FastAPI combined is simply developers heaven. So i build the SDK to ease management of all the versions and which tool to use for what, get rid of repeated implementations and ease to build many microservices which are part of one system and can run on any Cloud deployment option. As i work in AI and mainly only build AI based automation solutions, i also added the Document Models which i typically need to process document content through AI systems. The msaSDK basically covers my toolbox which i use for any microservice and API, the bottom line layer. As i am not a 'real' programmer and tend to believe i just play with building blocks and maybe develop some glue between them, i decided to also make it Open Source. Hope this helps or even inspire some people on how to use those awsome Open Source packages in real world applications. Used by msaSDK beside FastAPI and Dapr \u00b6 Pydantic \u00b6 Pydantic is a library to define data validation, serialization and documentation (using JSON Schema) based on Python type hints. That makes it extremely intuitive. It is comparable to Marshmallow. Although it's faster than Marshmallow in benchmarks. And as it is based on the same Python type hints, the editor support is great. FastAPI uses it to Handle all the data validation, data serialization and automatic model documentation (based on JSON Schema). FastAPI then takes that JSON Schema data and puts it in OpenAPI, apart from all the other things it does. FastAPI and Starlette \u00b6 FastAPI is build on top of Starlette, which is a lightweight ASGI framework/toolkit, which is ideal for building high-performance asyncio services. It is a high performance, easy to learn, fast to code, ready for production framework. It has: Seriously impressive performance. WebSocket support. In-process background tasks. Startup and shutdown events. Test client built on requests. CORS, GZip, Static Files, Streaming responses. Session and Cookie support. 100% test coverage. 100% type annotated codebase. Few hard dependencies. Starlette is currently the fastest Python framework tested. Only surpassed by Uvicorn, which is not a framework, but a server. Starlette provides all the basic web microframework functionality. But it doesn't provide automatic data validation, serialization or documentation. That's one of the main things that FastAPI adds on top, all based on Python type hints (using Pydantic). That, plus the dependency injection system, security utilities, OpenAPI schema generation, etc. Technical Details ASGI is a new \"standard\" being developed by Django core team members. It is still not a \"Python standard\" (a PEP), although they are in the process of doing that. Nevertheless, it is already being used as a \"standard\" by several tools. This greatly improves interoperability, as you could switch Uvicorn for any other ASGI server (like Daphne or Hypercorn), or you could add ASGI compatible tools, like python-socketio . FastAPI uses it to Handle all the core web parts. Adding features on top. The class FastAPI itself inherits directly from the class Starlette . So, anything that you can do with Starlette, you can do it directly with FastAPI , as it is basically Starlette on steroids. Uvicorn \u00b6 Uvicorn is a lightning-fast ASGI server, built on uvloop and httptools. It is not a web framework, but a server. For example, it doesn't provide tools for routing by paths. That's something that a framework (like Starlette or FastAPI) would provide on top. It is the recommended server for Starlette, FastAPI and you guessed it msaSDK . FastAPI recommends it as The main web server to run FastAPI applications. You can combine it with Gunicorn, to have an asynchronous multi-process server. Check more details in the Deployment section.","title":"Inspiration and Used Tools"},{"location":"used_tools/#inspiration-and-used-tools","text":"What inspired to build msaSDK , how it came to life and why i use an SDK in Micro Service Architectures.","title":"Inspiration and Used Tools"},{"location":"used_tools/#intro","text":"msaSDK wouldn't exist if not for the previous work of others, esp. FastAPI and Dapr . There have been many tools created before that have helped inspire its creation. I have been avoiding the creation of a SDK for several years. I always started with all the features covered by FastAPI and adding many different frameworks, plug-ins, and tools. But at some point, the hustle to always start from scratch doing the same things slightly different all the times, each PoC or MVP was a new adventure, esp. since we now build systems with 10s or hundred's of microservices. So i fell in love with FastAPI, Pydantic, Tyype hints and then SQLModel a while ago when i learned about Dapr. Dapr and FastAPI combined is simply developers heaven. So i build the SDK to ease management of all the versions and which tool to use for what, get rid of repeated implementations and ease to build many microservices which are part of one system and can run on any Cloud deployment option. As i work in AI and mainly only build AI based automation solutions, i also added the Document Models which i typically need to process document content through AI systems. The msaSDK basically covers my toolbox which i use for any microservice and API, the bottom line layer. As i am not a 'real' programmer and tend to believe i just play with building blocks and maybe develop some glue between them, i decided to also make it Open Source. Hope this helps or even inspire some people on how to use those awsome Open Source packages in real world applications.","title":"Intro"},{"location":"used_tools/#used-by-msasdk-beside-fastapi-and-dapr","text":"","title":"Used by msaSDK beside FastAPI and Dapr"},{"location":"used_tools/#pydantic","text":"Pydantic is a library to define data validation, serialization and documentation (using JSON Schema) based on Python type hints. That makes it extremely intuitive. It is comparable to Marshmallow. Although it's faster than Marshmallow in benchmarks. And as it is based on the same Python type hints, the editor support is great. FastAPI uses it to Handle all the data validation, data serialization and automatic model documentation (based on JSON Schema). FastAPI then takes that JSON Schema data and puts it in OpenAPI, apart from all the other things it does.","title":"Pydantic"},{"location":"used_tools/#fastapi-and-starlette","text":"FastAPI is build on top of Starlette, which is a lightweight ASGI framework/toolkit, which is ideal for building high-performance asyncio services. It is a high performance, easy to learn, fast to code, ready for production framework. It has: Seriously impressive performance. WebSocket support. In-process background tasks. Startup and shutdown events. Test client built on requests. CORS, GZip, Static Files, Streaming responses. Session and Cookie support. 100% test coverage. 100% type annotated codebase. Few hard dependencies. Starlette is currently the fastest Python framework tested. Only surpassed by Uvicorn, which is not a framework, but a server. Starlette provides all the basic web microframework functionality. But it doesn't provide automatic data validation, serialization or documentation. That's one of the main things that FastAPI adds on top, all based on Python type hints (using Pydantic). That, plus the dependency injection system, security utilities, OpenAPI schema generation, etc. Technical Details ASGI is a new \"standard\" being developed by Django core team members. It is still not a \"Python standard\" (a PEP), although they are in the process of doing that. Nevertheless, it is already being used as a \"standard\" by several tools. This greatly improves interoperability, as you could switch Uvicorn for any other ASGI server (like Daphne or Hypercorn), or you could add ASGI compatible tools, like python-socketio . FastAPI uses it to Handle all the core web parts. Adding features on top. The class FastAPI itself inherits directly from the class Starlette . So, anything that you can do with Starlette, you can do it directly with FastAPI , as it is basically Starlette on steroids.","title":"FastAPI and Starlette"},{"location":"used_tools/#uvicorn","text":"Uvicorn is a lightning-fast ASGI server, built on uvloop and httptools. It is not a web framework, but a server. For example, it doesn't provide tools for routing by paths. That's something that a framework (like Starlette or FastAPI) would provide on top. It is the recommended server for Starlette, FastAPI and you guessed it msaSDK . FastAPI recommends it as The main web server to run FastAPI applications. You can combine it with Gunicorn, to have an asynchronous multi-process server. Check more details in the Deployment section.","title":"Uvicorn"},{"location":"examples/example_app/","text":"Example Usage of MSAApp Copyright \u00a9 2022 - U2D.ai / S.Welcker Example Usage of MSAApp Copyright (c) 2022 - U2D.ai / S.Welcker __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers, MSATimerEnum async def test_timer_min(): app.logger.info(\"msaSDK Test Timer Async Every Minute\") def test_timer_five_sec(): app.logger.info(\"msaSDK Test Timer Sync 5 Second\") class TestArticle(SQLModel, table=True): id: Optional[int] = Field(default=None, primary_key=True, nullable=False) title: str = Field(title='ArticleTitle', max_length=200) description: Optional[str] = Field(default='', title='ArticleDescription', max_length=400) status: bool = Field(None, title='status') content: str = Field(title='ArticleContent') class TestCategory(SQLModel, table=True): id: Optional[int] = Field(default=None, primary_key=True, nullable=False) title: str = Field(title='ArticleTitle', max_length=200) description: Optional[str] = Field(default='', title='ArticleDescription', max_length=400) status: bool = Field(None, title='status') content: str = Field(title='ArticleContent') get_msa_app_settings.cache_clear() settings = get_msa_app_settings() settings.title = \"SPK.ai - MSA/SDK MVP\" settings.version = \"SPK.0.0.1\" settings.debug = True my_timers: MSATimers = MSATimers() my_timers.create_timer(MSATimerEnum.every_minute, test_timer_min) my_timers.create_timer(MSATimerEnum.on_the_5_second, test_timer_five_sec) app = MSAApp(settings=settings, timers=my_timers, auto_mount_site=True, sql_models=[TestArticle, TestCategory], contact={\"name\": \"msaSDK\", \"url\": \"http://u2d.ai\", \"email\": \"stefan@u2d.ai\"}, license_info={\"name\": \"MIT\", \"url\": \"https://opensource.org/licenses/MIT\", }) app.logger.info(\"Initialized \" + settings.title + \" \" + settings.version) @app.on_event(\"startup\") async def startup(): app.logger.info(\"msaSDK Own Startup MSAUIEvent\") #app.mount_site() @app.on_event(\"shutdown\") async def shutdown(): app.logger.info(\"msaSDK Own Shutdown MSAUIEvent\") if __name__ == '__main__': pass","title":"App"},{"location":"guides/","text":"Tutorial - User Guide - Intro \u00b6 This tutorial shows you how to use msaSDK with most of its features, step by step. Each section gradually builds on the previous ones, but it's structured to separate topics, so that you can go directly to any specific one to solve your specific API needs. It is also built to work as a future reference. So you can come back and see exactly what you need. Run the code \u00b6 All the code blocks can be copied and used directly (they are actually tested Python files). To run any of the examples, copy the code to a file main.py , and start uvicorn with: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) <span style=\"color: green;\">INFO</span>: Started reloader process [28720] <span style=\"color: green;\">INFO</span>: Started server process [28722] <span style=\"color: green;\">INFO</span>: Waiting for application startup. <span style=\"color: green;\">INFO</span>: Application startup complete. It is HIGHLY encouraged that you write or copy the code, edit it and run it locally. Using it in your editor is what really shows you the benefits of FastAPI, seeing how little code you have to write, all the type checks, autocompletion, etc. Install msaSDK \u00b6 The first step is to install FastAPI. For the tutorial, you might want to install it with all the optional dependencies and features: $ pip install \"fastapi[all]\" ---> 100% ...that also includes uvicorn , that you can use as the server that runs your code. Note You can also install it part by part. This is what you would probably do once you want to deploy your application to production: pip install fastapi Also install uvicorn to work as the server: pip install \"uvicorn[standard]\" And the same for each of the optional dependencies that you want to use. Advanced User Guide \u00b6 There is also an Advanced User Guide that you can read later after this Tutorial - User guide . The Advanced User Guide , builds on this, uses the same concepts, and teaches you some extra features. But you should first read the Tutorial - User Guide (what you are reading right now). It's designed so that you can build a complete application with just the Tutorial - User Guide , and then extend it in different ways, depending on your needs, using some of the additional ideas from the Advanced User Guide .","title":"User Guides"},{"location":"guides/#tutorial-user-guide-intro","text":"This tutorial shows you how to use msaSDK with most of its features, step by step. Each section gradually builds on the previous ones, but it's structured to separate topics, so that you can go directly to any specific one to solve your specific API needs. It is also built to work as a future reference. So you can come back and see exactly what you need.","title":"Tutorial - User Guide - Intro"},{"location":"guides/#run-the-code","text":"All the code blocks can be copied and used directly (they are actually tested Python files). To run any of the examples, copy the code to a file main.py , and start uvicorn with: $ uvicorn main:app --reload <span style=\"color: green;\">INFO</span>: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) <span style=\"color: green;\">INFO</span>: Started reloader process [28720] <span style=\"color: green;\">INFO</span>: Started server process [28722] <span style=\"color: green;\">INFO</span>: Waiting for application startup. <span style=\"color: green;\">INFO</span>: Application startup complete. It is HIGHLY encouraged that you write or copy the code, edit it and run it locally. Using it in your editor is what really shows you the benefits of FastAPI, seeing how little code you have to write, all the type checks, autocompletion, etc.","title":"Run the code"},{"location":"guides/#install-msasdk","text":"The first step is to install FastAPI. For the tutorial, you might want to install it with all the optional dependencies and features: $ pip install \"fastapi[all]\" ---> 100% ...that also includes uvicorn , that you can use as the server that runs your code. Note You can also install it part by part. This is what you would probably do once you want to deploy your application to production: pip install fastapi Also install uvicorn to work as the server: pip install \"uvicorn[standard]\" And the same for each of the optional dependencies that you want to use.","title":"Install msaSDK"},{"location":"guides/#advanced-user-guide","text":"There is also an Advanced User Guide that you can read later after this Tutorial - User guide . The Advanced User Guide , builds on this, uses the same concepts, and teaches you some extra features. But you should first read the Tutorial - User Guide (what you are reading right now). It's designed so that you can build a complete application with just the Tutorial - User Guide , and then extend it in different ways, depending on your needs, using some of the additional ideas from the Advanced User Guide .","title":"Advanced User Guide"},{"location":"reference/SUMMARY/","text":"admin admin frontend components constants types utils parser site utils choices fields functools translation auth admin app auth auth backends base db jwt redis models schemas site db crud _sqlmodel base parser schema utils models files health sdu service wdc wfl msaapi router system security server srv_gunicorn srv_uvicorn service services wdc session userprogress utils constants doc_code_ref email errorhandling example_google_doc_style fileupload fileutils fonts healthcheck htmlutils logger profiler scheduler sysinfo token","title":"SUMMARY"},{"location":"reference/msaapi/","text":"msaSDK Module \u00b6 .msaapi \u00b6 Classes \u00b6 MSAFastAPI \u00b6 Bases: FastAPI","title":"msaapi"},{"location":"reference/msaapi/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/msaapi/#msaapi_1","text":"","title":".msaapi"},{"location":"reference/msaapi/#msaapi-classes","text":"","title":"Classes"},{"location":"reference/msaapi/#msaapi.MSAFastAPI","text":"Bases: FastAPI","title":"MSAFastAPI"},{"location":"reference/security/","text":"msaSDK Module \u00b6 .security \u00b6 Classes \u00b6 MSASecurity \u00b6 Attributes \u00b6 auth_backend_cookie instance-attribute \u00b6 auth_backend_cookie = AuthenticationBackend ( name = \"jwt_cookie\" , transport = self . cookie_authentication , get_strategy = get_jwt_strategy , ) auth_backend_jwt instance-attribute \u00b6 auth_backend_jwt = AuthenticationBackend ( name = \"jwt_bearer\" , transport = self . bearer_transport , get_strategy = get_jwt_strategy , ) auth_backends instance-attribute \u00b6 auth_backends = [] bearer_transport instance-attribute \u00b6 bearer_transport = BearerTransport ( tokenUrl = \"auth/jwt/login\" ) cookie_authentication instance-attribute \u00b6 cookie_authentication = CookieTransport ( cookie_name = \"sduaiservices-cookie\" ) Functions \u00b6 __init__ \u00b6 __init__ () -> None Functions \u00b6 getMSASecurity cached \u00b6 getMSASecurity () -> MSASecurity This function returns a cached instance of the MSASecurity object. Note Caching is used to prevent re-reading the environment every time the MSASecurity is used. getSecretKey \u00b6 getSecretKey () get_jwt_strategy \u00b6 get_jwt_strategy () -> JWTStrategy","title":"security"},{"location":"reference/security/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/security/#security_1","text":"","title":".security"},{"location":"reference/security/#security-classes","text":"","title":"Classes"},{"location":"reference/security/#security.MSASecurity","text":"","title":"MSASecurity"},{"location":"reference/security/#security.MSASecurity-attributes","text":"","title":"Attributes"},{"location":"reference/security/#security.MSASecurity.auth_backend_cookie","text":"auth_backend_cookie = AuthenticationBackend ( name = \"jwt_cookie\" , transport = self . cookie_authentication , get_strategy = get_jwt_strategy , )","title":"auth_backend_cookie"},{"location":"reference/security/#security.MSASecurity.auth_backend_jwt","text":"auth_backend_jwt = AuthenticationBackend ( name = \"jwt_bearer\" , transport = self . bearer_transport , get_strategy = get_jwt_strategy , )","title":"auth_backend_jwt"},{"location":"reference/security/#security.MSASecurity.auth_backends","text":"auth_backends = []","title":"auth_backends"},{"location":"reference/security/#security.MSASecurity.bearer_transport","text":"bearer_transport = BearerTransport ( tokenUrl = \"auth/jwt/login\" )","title":"bearer_transport"},{"location":"reference/security/#security.MSASecurity.cookie_authentication","text":"cookie_authentication = CookieTransport ( cookie_name = \"sduaiservices-cookie\" )","title":"cookie_authentication"},{"location":"reference/security/#security.MSASecurity-functions","text":"","title":"Functions"},{"location":"reference/security/#security.MSASecurity.__init__","text":"__init__ () -> None","title":"__init__()"},{"location":"reference/security/#security-functions","text":"","title":"Functions"},{"location":"reference/security/#security.getMSASecurity","text":"getMSASecurity () -> MSASecurity This function returns a cached instance of the MSASecurity object. Note Caching is used to prevent re-reading the environment every time the MSASecurity is used.","title":"getMSASecurity()"},{"location":"reference/security/#security.getSecretKey","text":"getSecretKey ()","title":"getSecretKey()"},{"location":"reference/security/#security.get_jwt_strategy","text":"get_jwt_strategy () -> JWTStrategy","title":"get_jwt_strategy()"},{"location":"reference/service/","text":"msaSDK Module \u00b6 .service \u00b6 Main Service Module for MSAApp. Initialize with a MSAServiceDefintion Instance to control the features and functions of the MSAApp. Attributes \u00b6 password_helper module-attribute \u00b6 password_helper = PasswordHelper ( security_context ) Password Helper Instance security module-attribute \u00b6 security = getMSASecurity () MSASecurity instance security_context module-attribute \u00b6 security_context = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ) Security Context for Password Helper Classes \u00b6 MSAApp \u00b6 Bases: MSAFastAPI Creates an application msaSDK instance. Note As with FastApi the MSAApp provides two events: startup : A list of callables to run on application startup. Startup handler callables do not take any arguments, and may be be either standard functions, or async functions. shutdown : A list of callables to run on application shutdown. Shutdown handler callables do not take any arguments, and may be be either standard functions, or async functions. Those are also used internally, which are triggered before the external events. Do not include the self parameter in the Args section. PARAMETER DESCRIPTION settings MSAServiceDefinition (Must be provided), instance of a service definition with all settings TYPE: MSAServiceDefinition timers MSATimers instance Default None, provide a MSATimers instance and it will start the scheduler internaly TYPE: MSATimers DEFAULT: None sql_models List of SQLModel Default None, provide list of your SQLModel Classes and the instance can create CRUD API and if site is enabled also UI for CRUD TYPE: List [ SQLModel ] DEFAULT: None auto_mount_site Default True, if site is enabled in settings and this is true, mounts the site in internal startup event. TYPE: bool DEFAULT: True ATTRIBUTE DESCRIPTION logger loguru logger instance auto_mount_site bool auto_mount_site TYPE: bool settings MSAServiceDefinition settings instance. timers MSATimers = timers TYPE: MSATimers healthdefinition MSAHealthDefinition settings.healthdefinition TYPE: MSAHealthDefinition limiter Limiter = None TYPE: Limiter db_engine AsyncEngine = Db Engine instance TYPE: AsyncEngine sql_models List[SQLModel] = sql_models TYPE: List [ SQLModel ] sql_cruds List[MSASQLModelCrud] = [] TYPE: List [ MSASQLModelCrud ] scheduler MSAScheduler = None TYPE: MSAScheduler site AdminSite Admin/Auth Site instance. scheduler_task The Task instance that runs the Scheduler in the Background TYPE: Task ROOTPATH str os.path.join(os.path.dirname( file )) Attributes \u00b6 Base instance-attribute \u00b6 Base : DeclarativeMeta = declarative_base () ROOTPATH instance-attribute \u00b6 ROOTPATH = os . path . join ( os . path . dirname ( __file__ )) auto_mount_site instance-attribute \u00b6 auto_mount_site : bool = auto_mount_site db_engine instance-attribute \u00b6 db_engine : AsyncEngine = None graphql_app instance-attribute \u00b6 graphql_app : GraphQLRouter = None graphql_schema instance-attribute \u00b6 graphql_schema : schema = None healthcheck instance-attribute \u00b6 healthcheck : health . MSAHealthCheck = None healthdefinition instance-attribute \u00b6 healthdefinition : MSAHealthDefinition = ( self . settings . healthdefinition ) limiter instance-attribute \u00b6 limiter : Limiter = None logger instance-attribute \u00b6 logger = logger scheduler instance-attribute \u00b6 scheduler : MSAScheduler = None scheduler_task instance-attribute \u00b6 scheduler_task : Task = None settings instance-attribute \u00b6 settings = settings site instance-attribute \u00b6 site = None sql_cruds instance-attribute \u00b6 sql_cruds : List [ MSASQLModelCrud ] = [] sql_models instance-attribute \u00b6 sql_models : List [ SQLModel ] = sql_models templates instance-attribute \u00b6 templates = Jinja2Templates ( directory = self . settings . templates_dir ) timers instance-attribute \u00b6 timers : MSATimers = timers Functions \u00b6 __init__ \u00b6 __init__ ( settings : MSAServiceDefinition , timers : MSATimers = None , sql_models : List [ SQLModel ] = None , auto_mount_site : bool = True , * args , ** kwargs ) -> None get_healthcheck async \u00b6 get_healthcheck ( request : Request ) -> ORJSONResponse Get Healthcheck Status get_scheduler_status async \u00b6 get_scheduler_status ( request : Request , ) -> MSASchedulerStatus Get Service Status Info get_services_definition \u00b6 get_services_definition ( request : Request , ) -> MSAServiceDefinition Get Service Definition Info get_services_openapi_info \u00b6 get_services_openapi_info ( request : Request , ) -> MSAOpenAPIInfo Get Service OpenAPI Info get_services_openapi_schema \u00b6 get_services_openapi_schema ( request : Request , ) -> ORJSONResponse Get Service OpenAPI Schema get_services_settings \u00b6 get_services_settings ( request : Request ) -> ORJSONResponse Get Service OpenAPI Schema get_services_status async \u00b6 get_services_status ( request : Request ) -> MSAServiceStatus Get Service Status Info index_page \u00b6 index_page ( request : Request ) -> _TemplateResponse Get Service Index.html Page monitor async \u00b6 monitor ( request : Request ) -> _TemplateResponse Simple Service Monitor Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return: monitor_inline async \u00b6 monitor_inline ( request : Request ) -> _TemplateResponse Simple Monitor Page as Inline without head and body tags. Only works if pages is enabled in MSAServiceDefinition :param request: :return: mount_site \u00b6 mount_site () -> None msa_exception_handler async \u00b6 msa_exception_handler ( request : Request , exc : HTTPException ) Handles all HTTPExceptions if enabled with HTML Response or forward error if the code is in the exclude settings list. :param request: :type request: :param exc: :type exc: :return: :rtype: msa_exception_handler_disabled async \u00b6 msa_exception_handler_disabled ( request : Request , exc : HTTPException ) -> JSONResponse Handles all HTTPExceptions if Disabled with JSON Response. :param request: :type request: :param exc: :type exc: :return: :rtype: profiler \u00b6 profiler ( request : Request ) -> _TemplateResponse Simple Profiler Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return: shutdown_event async \u00b6 shutdown_event () -> None startup_event async \u00b6 startup_event () -> None :return: :rtype: testpage \u00b6 testpage ( request : Request ) -> _TemplateResponse Simple Testpage to see if the Micro Service is up and running. Only works if pages is enabled in MSAServiceDefinition :param request: :return: validation_exception_handler async \u00b6 validation_exception_handler ( request : Request , exc : RequestValidationError ) -> JSONResponse MSAOpenAPIInfo \u00b6 Bases: SQLModel MSAOpenAPIInfo Pydantic Response Class Attributes \u00b6 name class-attribute \u00b6 name : str = 'msaSDK Service' Service Name. tags class-attribute \u00b6 tags : Optional [ List [ str ]] = None OpenAPI Tags. url class-attribute \u00b6 url : str = '/openapi.json' OpenAPI URL. version class-attribute \u00b6 version : str = '0.0.0' API Version. MSASchedulerStatus \u00b6 Bases: SQLModel MSASchedulerStatus Pydantic Response Class Attributes \u00b6 message class-attribute \u00b6 message : Optional [ str ] = 'None' Optional Message Text name class-attribute \u00b6 name : Optional [ str ] = 'msaSDK Service' Service Name. timers class-attribute \u00b6 timers : Optional [ List [ MSATimerStatus ]] = [] Optional MSATimerStatus List MSAServiceStatus \u00b6 Bases: SQLModel MSAServiceStatus Pydantic Response Class Attributes \u00b6 healthy class-attribute \u00b6 healthy : Optional [ str ] = 'None' Health status message class-attribute \u00b6 message : Optional [ str ] = 'None' Optional Message Text name class-attribute \u00b6 name : Optional [ str ] = 'msaSDK Service' Service Name. MSATimerStatus \u00b6 Bases: SQLModel MSATimerStatus Pydantic Response Class Attributes \u00b6 func class-attribute \u00b6 func : Optional [ str ] = None Timer Handler Function. mark_HH_MM class-attribute \u00b6 mark_HH_MM : Optional [ str ] = None Mark for Schedule mode class-attribute \u00b6 mode : Optional [ str ] = None Timer Mode. Functions \u00b6 getSecretKey \u00b6 getSecretKey () Get Secret Key for Token creation from OS Environment Variable SECRET_KEY_TOKEN RETURNS DESCRIPTION key The SECRET_KEY_TOKEN. getSecretKeyCSRF \u00b6 getSecretKeyCSRF () -> str Get Secret Key for CSRF Middleware from OS Environment Variable SECRET_KEY_CSRF RETURNS DESCRIPTION key The SECRET_KEY_CSRF. TYPE: str getSecretKeySessions \u00b6 getSecretKeySessions () Get Secret Key for Session Middleware from OS Environment Variable SECRET_KEY_SESSIONS RETURNS DESCRIPTION key The SECRET_KEY_SESSIONS.","title":"service"},{"location":"reference/service/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/service/#service_1","text":"Main Service Module for MSAApp. Initialize with a MSAServiceDefintion Instance to control the features and functions of the MSAApp.","title":".service"},{"location":"reference/service/#service-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.password_helper","text":"password_helper = PasswordHelper ( security_context ) Password Helper Instance","title":"password_helper"},{"location":"reference/service/#service.security","text":"security = getMSASecurity () MSASecurity instance","title":"security"},{"location":"reference/service/#service.security_context","text":"security_context = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ) Security Context for Password Helper","title":"security_context"},{"location":"reference/service/#service-classes","text":"","title":"Classes"},{"location":"reference/service/#service.MSAApp","text":"Bases: MSAFastAPI Creates an application msaSDK instance. Note As with FastApi the MSAApp provides two events: startup : A list of callables to run on application startup. Startup handler callables do not take any arguments, and may be be either standard functions, or async functions. shutdown : A list of callables to run on application shutdown. Shutdown handler callables do not take any arguments, and may be be either standard functions, or async functions. Those are also used internally, which are triggered before the external events. Do not include the self parameter in the Args section. PARAMETER DESCRIPTION settings MSAServiceDefinition (Must be provided), instance of a service definition with all settings TYPE: MSAServiceDefinition timers MSATimers instance Default None, provide a MSATimers instance and it will start the scheduler internaly TYPE: MSATimers DEFAULT: None sql_models List of SQLModel Default None, provide list of your SQLModel Classes and the instance can create CRUD API and if site is enabled also UI for CRUD TYPE: List [ SQLModel ] DEFAULT: None auto_mount_site Default True, if site is enabled in settings and this is true, mounts the site in internal startup event. TYPE: bool DEFAULT: True ATTRIBUTE DESCRIPTION logger loguru logger instance auto_mount_site bool auto_mount_site TYPE: bool settings MSAServiceDefinition settings instance. timers MSATimers = timers TYPE: MSATimers healthdefinition MSAHealthDefinition settings.healthdefinition TYPE: MSAHealthDefinition limiter Limiter = None TYPE: Limiter db_engine AsyncEngine = Db Engine instance TYPE: AsyncEngine sql_models List[SQLModel] = sql_models TYPE: List [ SQLModel ] sql_cruds List[MSASQLModelCrud] = [] TYPE: List [ MSASQLModelCrud ] scheduler MSAScheduler = None TYPE: MSAScheduler site AdminSite Admin/Auth Site instance. scheduler_task The Task instance that runs the Scheduler in the Background TYPE: Task ROOTPATH str os.path.join(os.path.dirname( file ))","title":"MSAApp"},{"location":"reference/service/#service.MSAApp-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSAApp.Base","text":"Base : DeclarativeMeta = declarative_base ()","title":"Base"},{"location":"reference/service/#service.MSAApp.ROOTPATH","text":"ROOTPATH = os . path . join ( os . path . dirname ( __file__ ))","title":"ROOTPATH"},{"location":"reference/service/#service.MSAApp.auto_mount_site","text":"auto_mount_site : bool = auto_mount_site","title":"auto_mount_site"},{"location":"reference/service/#service.MSAApp.db_engine","text":"db_engine : AsyncEngine = None","title":"db_engine"},{"location":"reference/service/#service.MSAApp.graphql_app","text":"graphql_app : GraphQLRouter = None","title":"graphql_app"},{"location":"reference/service/#service.MSAApp.graphql_schema","text":"graphql_schema : schema = None","title":"graphql_schema"},{"location":"reference/service/#service.MSAApp.healthcheck","text":"healthcheck : health . MSAHealthCheck = None","title":"healthcheck"},{"location":"reference/service/#service.MSAApp.healthdefinition","text":"healthdefinition : MSAHealthDefinition = ( self . settings . healthdefinition )","title":"healthdefinition"},{"location":"reference/service/#service.MSAApp.limiter","text":"limiter : Limiter = None","title":"limiter"},{"location":"reference/service/#service.MSAApp.logger","text":"logger = logger","title":"logger"},{"location":"reference/service/#service.MSAApp.scheduler","text":"scheduler : MSAScheduler = None","title":"scheduler"},{"location":"reference/service/#service.MSAApp.scheduler_task","text":"scheduler_task : Task = None","title":"scheduler_task"},{"location":"reference/service/#service.MSAApp.settings","text":"settings = settings","title":"settings"},{"location":"reference/service/#service.MSAApp.site","text":"site = None","title":"site"},{"location":"reference/service/#service.MSAApp.sql_cruds","text":"sql_cruds : List [ MSASQLModelCrud ] = []","title":"sql_cruds"},{"location":"reference/service/#service.MSAApp.sql_models","text":"sql_models : List [ SQLModel ] = sql_models","title":"sql_models"},{"location":"reference/service/#service.MSAApp.templates","text":"templates = Jinja2Templates ( directory = self . settings . templates_dir )","title":"templates"},{"location":"reference/service/#service.MSAApp.timers","text":"timers : MSATimers = timers","title":"timers"},{"location":"reference/service/#service.MSAApp-functions","text":"","title":"Functions"},{"location":"reference/service/#service.MSAApp.__init__","text":"__init__ ( settings : MSAServiceDefinition , timers : MSATimers = None , sql_models : List [ SQLModel ] = None , auto_mount_site : bool = True , * args , ** kwargs ) -> None","title":"__init__()"},{"location":"reference/service/#service.MSAApp.get_healthcheck","text":"get_healthcheck ( request : Request ) -> ORJSONResponse Get Healthcheck Status","title":"get_healthcheck()"},{"location":"reference/service/#service.MSAApp.get_scheduler_status","text":"get_scheduler_status ( request : Request , ) -> MSASchedulerStatus Get Service Status Info","title":"get_scheduler_status()"},{"location":"reference/service/#service.MSAApp.get_services_definition","text":"get_services_definition ( request : Request , ) -> MSAServiceDefinition Get Service Definition Info","title":"get_services_definition()"},{"location":"reference/service/#service.MSAApp.get_services_openapi_info","text":"get_services_openapi_info ( request : Request , ) -> MSAOpenAPIInfo Get Service OpenAPI Info","title":"get_services_openapi_info()"},{"location":"reference/service/#service.MSAApp.get_services_openapi_schema","text":"get_services_openapi_schema ( request : Request , ) -> ORJSONResponse Get Service OpenAPI Schema","title":"get_services_openapi_schema()"},{"location":"reference/service/#service.MSAApp.get_services_settings","text":"get_services_settings ( request : Request ) -> ORJSONResponse Get Service OpenAPI Schema","title":"get_services_settings()"},{"location":"reference/service/#service.MSAApp.get_services_status","text":"get_services_status ( request : Request ) -> MSAServiceStatus Get Service Status Info","title":"get_services_status()"},{"location":"reference/service/#service.MSAApp.index_page","text":"index_page ( request : Request ) -> _TemplateResponse Get Service Index.html Page","title":"index_page()"},{"location":"reference/service/#service.MSAApp.monitor","text":"monitor ( request : Request ) -> _TemplateResponse Simple Service Monitor Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"monitor()"},{"location":"reference/service/#service.MSAApp.monitor_inline","text":"monitor_inline ( request : Request ) -> _TemplateResponse Simple Monitor Page as Inline without head and body tags. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"monitor_inline()"},{"location":"reference/service/#service.MSAApp.mount_site","text":"mount_site () -> None","title":"mount_site()"},{"location":"reference/service/#service.MSAApp.msa_exception_handler","text":"msa_exception_handler ( request : Request , exc : HTTPException ) Handles all HTTPExceptions if enabled with HTML Response or forward error if the code is in the exclude settings list. :param request: :type request: :param exc: :type exc: :return: :rtype:","title":"msa_exception_handler()"},{"location":"reference/service/#service.MSAApp.msa_exception_handler_disabled","text":"msa_exception_handler_disabled ( request : Request , exc : HTTPException ) -> JSONResponse Handles all HTTPExceptions if Disabled with JSON Response. :param request: :type request: :param exc: :type exc: :return: :rtype:","title":"msa_exception_handler_disabled()"},{"location":"reference/service/#service.MSAApp.profiler","text":"profiler ( request : Request ) -> _TemplateResponse Simple Profiler Page. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"profiler()"},{"location":"reference/service/#service.MSAApp.shutdown_event","text":"shutdown_event () -> None","title":"shutdown_event()"},{"location":"reference/service/#service.MSAApp.startup_event","text":"startup_event () -> None :return: :rtype:","title":"startup_event()"},{"location":"reference/service/#service.MSAApp.testpage","text":"testpage ( request : Request ) -> _TemplateResponse Simple Testpage to see if the Micro Service is up and running. Only works if pages is enabled in MSAServiceDefinition :param request: :return:","title":"testpage()"},{"location":"reference/service/#service.MSAApp.validation_exception_handler","text":"validation_exception_handler ( request : Request , exc : RequestValidationError ) -> JSONResponse","title":"validation_exception_handler()"},{"location":"reference/service/#service.MSAOpenAPIInfo","text":"Bases: SQLModel MSAOpenAPIInfo Pydantic Response Class","title":"MSAOpenAPIInfo"},{"location":"reference/service/#service.MSAOpenAPIInfo-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSAOpenAPIInfo.name","text":"name : str = 'msaSDK Service' Service Name.","title":"name"},{"location":"reference/service/#service.MSAOpenAPIInfo.tags","text":"tags : Optional [ List [ str ]] = None OpenAPI Tags.","title":"tags"},{"location":"reference/service/#service.MSAOpenAPIInfo.url","text":"url : str = '/openapi.json' OpenAPI URL.","title":"url"},{"location":"reference/service/#service.MSAOpenAPIInfo.version","text":"version : str = '0.0.0' API Version.","title":"version"},{"location":"reference/service/#service.MSASchedulerStatus","text":"Bases: SQLModel MSASchedulerStatus Pydantic Response Class","title":"MSASchedulerStatus"},{"location":"reference/service/#service.MSASchedulerStatus-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSASchedulerStatus.message","text":"message : Optional [ str ] = 'None' Optional Message Text","title":"message"},{"location":"reference/service/#service.MSASchedulerStatus.name","text":"name : Optional [ str ] = 'msaSDK Service' Service Name.","title":"name"},{"location":"reference/service/#service.MSASchedulerStatus.timers","text":"timers : Optional [ List [ MSATimerStatus ]] = [] Optional MSATimerStatus List","title":"timers"},{"location":"reference/service/#service.MSAServiceStatus","text":"Bases: SQLModel MSAServiceStatus Pydantic Response Class","title":"MSAServiceStatus"},{"location":"reference/service/#service.MSAServiceStatus-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSAServiceStatus.healthy","text":"healthy : Optional [ str ] = 'None' Health status","title":"healthy"},{"location":"reference/service/#service.MSAServiceStatus.message","text":"message : Optional [ str ] = 'None' Optional Message Text","title":"message"},{"location":"reference/service/#service.MSAServiceStatus.name","text":"name : Optional [ str ] = 'msaSDK Service' Service Name.","title":"name"},{"location":"reference/service/#service.MSATimerStatus","text":"Bases: SQLModel MSATimerStatus Pydantic Response Class","title":"MSATimerStatus"},{"location":"reference/service/#service.MSATimerStatus-attributes","text":"","title":"Attributes"},{"location":"reference/service/#service.MSATimerStatus.func","text":"func : Optional [ str ] = None Timer Handler Function.","title":"func"},{"location":"reference/service/#service.MSATimerStatus.mark_HH_MM","text":"mark_HH_MM : Optional [ str ] = None Mark for Schedule","title":"mark_HH_MM"},{"location":"reference/service/#service.MSATimerStatus.mode","text":"mode : Optional [ str ] = None Timer Mode.","title":"mode"},{"location":"reference/service/#service-functions","text":"","title":"Functions"},{"location":"reference/service/#service.getSecretKey","text":"getSecretKey () Get Secret Key for Token creation from OS Environment Variable SECRET_KEY_TOKEN RETURNS DESCRIPTION key The SECRET_KEY_TOKEN.","title":"getSecretKey()"},{"location":"reference/service/#service.getSecretKeyCSRF","text":"getSecretKeyCSRF () -> str Get Secret Key for CSRF Middleware from OS Environment Variable SECRET_KEY_CSRF RETURNS DESCRIPTION key The SECRET_KEY_CSRF. TYPE: str","title":"getSecretKeyCSRF()"},{"location":"reference/service/#service.getSecretKeySessions","text":"getSecretKeySessions () Get Secret Key for Session Middleware from OS Environment Variable SECRET_KEY_SESSIONS RETURNS DESCRIPTION key The SECRET_KEY_SESSIONS.","title":"getSecretKeySessions()"},{"location":"reference/session/","text":"msaSDK Module \u00b6 .session \u00b6 Attributes \u00b6 backend module-attribute \u00b6 backend = InMemoryBackend [ UUID , SessionData ]() cookie module-attribute \u00b6 cookie = SessionCookie ( cookie_name = \"cookie\" , identifier = \"general_verifier\" , auto_error = True , secret_key = getSecretKey (), cookie_params = cookie_params , ) cookie_params module-attribute \u00b6 cookie_params = CookieParameters () verifier module-attribute \u00b6 verifier = BasicVerifier ( identifier = \"general_verifier\" , auto_error = True , backend = backend , auth_http_exception = HTTPException ( status_code = 403 , detail = \"invalid session\" ), ) Classes \u00b6 BasicVerifier \u00b6 Bases: SessionVerifier [ UUID , SessionData ] Functions \u00b6 __init__ \u00b6 __init__ ( * , identifier : str , auto_error : bool , backend : InMemoryBackend [ UUID , SessionData ], auth_http_exception : HTTPException ) auth_http_exception property \u00b6 auth_http_exception () auto_error property \u00b6 auto_error () backend property \u00b6 backend () identifier property \u00b6 identifier () verify_session \u00b6 verify_session ( model : SessionData ) -> bool If the session exists, it is valid SessionData \u00b6 Bases: SQLModel Attributes \u00b6 email class-attribute \u00b6 email : str input class-attribute \u00b6 input : str = '' settings class-attribute \u00b6 settings : dict = {} Functions \u00b6 getSecretKey \u00b6 getSecretKey () xuuid4 \u00b6 xuuid4 ()","title":"session"},{"location":"reference/session/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/session/#session_1","text":"","title":".session"},{"location":"reference/session/#session-attributes","text":"","title":"Attributes"},{"location":"reference/session/#session.backend","text":"backend = InMemoryBackend [ UUID , SessionData ]()","title":"backend"},{"location":"reference/session/#session.cookie","text":"cookie = SessionCookie ( cookie_name = \"cookie\" , identifier = \"general_verifier\" , auto_error = True , secret_key = getSecretKey (), cookie_params = cookie_params , )","title":"cookie"},{"location":"reference/session/#session.cookie_params","text":"cookie_params = CookieParameters ()","title":"cookie_params"},{"location":"reference/session/#session.verifier","text":"verifier = BasicVerifier ( identifier = \"general_verifier\" , auto_error = True , backend = backend , auth_http_exception = HTTPException ( status_code = 403 , detail = \"invalid session\" ), )","title":"verifier"},{"location":"reference/session/#session-classes","text":"","title":"Classes"},{"location":"reference/session/#session.BasicVerifier","text":"Bases: SessionVerifier [ UUID , SessionData ]","title":"BasicVerifier"},{"location":"reference/session/#session.BasicVerifier-functions","text":"","title":"Functions"},{"location":"reference/session/#session.BasicVerifier.__init__","text":"__init__ ( * , identifier : str , auto_error : bool , backend : InMemoryBackend [ UUID , SessionData ], auth_http_exception : HTTPException )","title":"__init__()"},{"location":"reference/session/#session.BasicVerifier.auth_http_exception","text":"auth_http_exception ()","title":"auth_http_exception()"},{"location":"reference/session/#session.BasicVerifier.auto_error","text":"auto_error ()","title":"auto_error()"},{"location":"reference/session/#session.BasicVerifier.backend","text":"backend ()","title":"backend()"},{"location":"reference/session/#session.BasicVerifier.identifier","text":"identifier ()","title":"identifier()"},{"location":"reference/session/#session.BasicVerifier.verify_session","text":"verify_session ( model : SessionData ) -> bool If the session exists, it is valid","title":"verify_session()"},{"location":"reference/session/#session.SessionData","text":"Bases: SQLModel","title":"SessionData"},{"location":"reference/session/#session.SessionData-attributes","text":"","title":"Attributes"},{"location":"reference/session/#session.SessionData.email","text":"email : str","title":"email"},{"location":"reference/session/#session.SessionData.input","text":"input : str = ''","title":"input"},{"location":"reference/session/#session.SessionData.settings","text":"settings : dict = {}","title":"settings"},{"location":"reference/session/#session-functions","text":"","title":"Functions"},{"location":"reference/session/#session.getSecretKey","text":"getSecretKey ()","title":"getSecretKey()"},{"location":"reference/session/#session.xuuid4","text":"xuuid4 ()","title":"xuuid4()"},{"location":"reference/userprogress/","text":"msaSDK Module \u00b6 .userprogress \u00b6 Classes \u00b6 MSAUserProgress \u00b6 Attributes \u00b6 user_progress instance-attribute \u00b6 user_progress = {} Functions \u00b6 __init__ \u00b6 __init__ () -> None addToProgress async \u00b6 addToProgress ( event : str , message : Dict ) resetProgress \u00b6 resetProgress ( event : str , message : Dict ) Functions \u00b6 getMSAUserProgress cached \u00b6 getMSAUserProgress () -> MSAUserProgress This function returns a cached instance of the MSAUserProgress object. Note Caching is used to prevent re-reading the environment every time the MSAUserProgress is used.","title":"userprogress"},{"location":"reference/userprogress/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/userprogress/#userprogress_1","text":"","title":".userprogress"},{"location":"reference/userprogress/#userprogress-classes","text":"","title":"Classes"},{"location":"reference/userprogress/#userprogress.MSAUserProgress","text":"","title":"MSAUserProgress"},{"location":"reference/userprogress/#userprogress.MSAUserProgress-attributes","text":"","title":"Attributes"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.user_progress","text":"user_progress = {}","title":"user_progress"},{"location":"reference/userprogress/#userprogress.MSAUserProgress-functions","text":"","title":"Functions"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.__init__","text":"__init__ () -> None","title":"__init__()"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.addToProgress","text":"addToProgress ( event : str , message : Dict )","title":"addToProgress()"},{"location":"reference/userprogress/#userprogress.MSAUserProgress.resetProgress","text":"resetProgress ( event : str , message : Dict )","title":"resetProgress()"},{"location":"reference/userprogress/#userprogress-functions","text":"","title":"Functions"},{"location":"reference/userprogress/#userprogress.getMSAUserProgress","text":"getMSAUserProgress () -> MSAUserProgress This function returns a cached instance of the MSAUserProgress object. Note Caching is used to prevent re-reading the environment every time the MSAUserProgress is used.","title":"getMSAUserProgress()"},{"location":"reference/admin/admin/","text":"msaSDK Module \u00b6 .admin.admin \u00b6 Attributes \u00b6 Classes \u00b6 AdminApp \u00b6 Bases: PageAdmin , AdminGroup Management Applications Attributes \u00b6 __register_lock instance-attribute \u00b6 __register_lock = False db instance-attribute \u00b6 db = AsyncDatabase ( self . engine ) engine instance-attribute \u00b6 engine = self . engine or self . app . engine msa_app instance-attribute \u00b6 msa_app : MSAApp = msa_app page_path class-attribute \u00b6 page_path = '/' tabs_mode class-attribute \u00b6 tabs_mode : TabsModeEnum = None Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , msa_app : MSAApp ) get_admin_or_create \u00b6 get_admin_or_create ( admin_cls : Type [ _BaseAdminT ], register : bool = True ) -> Optional [ _BaseAdminT ] get_model_admin cached \u00b6 get_model_admin ( table_name : str ) -> Optional [ ModelAdmin ] This function returns a cached instance of the ModelAdmin object. Note Caching is used to prevent re-reading the environment every time the ModelAdmin object is used. get_page async \u00b6 get_page ( request : Request ) -> Union [ Page , App ] get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] register_admin \u00b6 register_admin ( * admin_cls : Type [ _BaseAdminT ], ) -> Type [ _BaseAdminT ] register_router \u00b6 register_router () router_prefix property \u00b6 router_prefix () unregister_admin \u00b6 unregister_admin ( * admin_cls : Type [ BaseAdmin ]) AdminGroup \u00b6 Bases: PageSchemaAdmin Management Applications Group Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) -> None __iter__ \u00b6 __iter__ () -> Iterator [ _PageSchemaAdminT ] append_child \u00b6 append_child ( child : _PageSchemaAdminT , group_schema : PageSchema = None , ) -> None get_page_schema_child \u00b6 get_page_schema_child ( unique_id : str , ) -> Optional [ _PageSchemaAdminT ] get_page_schema_children async \u00b6 get_page_schema_children ( request : Request , ) -> List [ PageSchema ] unique_id \u00b6 unique_id () -> str BaseAdmin \u00b6 Attributes \u00b6 app instance-attribute \u00b6 app = app Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) site \u00b6 site () -> BaseAdminSite unique_id \u00b6 unique_id () -> str BaseAdminSite \u00b6 Bases: AdminApp Attributes \u00b6 auth class-attribute \u00b6 auth : Auth = None db_engine instance-attribute \u00b6 db_engine = self . msa_app . db_engine msa_app instance-attribute \u00b6 msa_app = msa_app router instance-attribute \u00b6 router = self . msa_app . router settings instance-attribute \u00b6 settings = msa_app . settings Functions \u00b6 __init__ \u00b6 __init__ ( msa_app : MSAApp ) mount_app \u00b6 mount_app ( msa_app : MSAApp , name : str = 'admin' ) -> None router_path \u00b6 router_path () -> str BaseFormAdmin \u00b6 Bases: PageAdmin Attributes \u00b6 form class-attribute \u00b6 form : Form = None form_init class-attribute \u00b6 form_init : bool = None form_path instance-attribute \u00b6 form_path = self . form_path or f ' { self . page_path } /api' route_init class-attribute \u00b6 route_init : Callable = None route_submit class-attribute \u00b6 route_submit : Callable = None router_prefix class-attribute \u00b6 router_prefix : str = '/form' schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_init_out class-attribute \u00b6 schema_init_out : Type [ Any ] = Any schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ Any ] = Any Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_form async \u00b6 get_form ( request : Request ) -> Form get_form_item async \u00b6 get_form_item ( request : Request , modelfield : ModelField ) -> Union [ FormItem , MSAUISchemaNode ] get_page async \u00b6 get_page ( request : Request ) -> Page register_router \u00b6 register_router () BaseModelAction \u00b6 Base Model Action Attributes \u00b6 action class-attribute \u00b6 action : Action = None admin instance-attribute \u00b6 admin = admin Functions \u00b6 __init__ \u00b6 __init__ ( admin : ModelAdmin ) fetch_item_scalars async \u00b6 fetch_item_scalars ( item_id : List [ str ]) -> List [ BaseModel ] register_router \u00b6 register_router () BaseModelAdmin \u00b6 Bases: MSASQLModelCrud Attributes \u00b6 app instance-attribute \u00b6 app = app bulk_update_fields class-attribute \u00b6 bulk_update_fields : List [ Union [ SQLModelListField , FormItem ] ] = [] Batch Edit Fields engine instance-attribute \u00b6 engine = self . engine or self . app . db . engine fields instance-attribute \u00b6 fields = self . fields or [ self . model ] link_model_fields class-attribute \u00b6 link_model_fields : List [ InstrumentedAttribute ] = [] Inline Fields link_model_forms class-attribute \u00b6 link_model_forms : List [ LinkModelForm ] = [] Inline Forms list_display class-attribute \u00b6 list_display : List [ Union [ SQLModelListField , TableColumn ] ] = [] Fields to be displayed list_filter instance-attribute \u00b6 list_filter = self . list_filter or list_display_insfield list_per_page class-attribute \u00b6 list_per_page : int = 10 Data volume per page model instance-attribute \u00b6 model = model parser instance-attribute \u00b6 parser = MSASQLModelFieldParser ( default_model = self . model ) search_fields class-attribute \u00b6 search_fields : List [ SQLModelField ] = [] Fuzzy search fields Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , model = None ) get_actions_on_bulk async \u00b6 get_actions_on_bulk ( request : Request ) -> List [ Action ] get_actions_on_header_toolbar async \u00b6 get_actions_on_header_toolbar ( request : Request , ) -> List [ Action ] get_actions_on_item async \u00b6 get_actions_on_item ( request : Request ) -> List [ Action ] get_create_action async \u00b6 get_create_action ( request : Request , bulk : bool = False ) -> Optional [ Action ] get_create_form async \u00b6 get_create_form ( request : Request , bulk : bool = False ) -> Form get_delete_action async \u00b6 get_delete_action ( request : Request , bulk : bool = False ) -> Optional [ Action ] get_form_item async \u00b6 get_form_item ( request : Request , modelfield : ModelField , action : MSACRUDEnum , ) -> Union [ FormItem , MSAUISchemaNode , None ] get_form_item_on_foreign_key async \u00b6 get_form_item_on_foreign_key ( request : Request , modelfield : ModelField , is_filter : bool = False , ) -> Union [ Service , MSAUISchemaNode , None ] get_link_model_forms \u00b6 get_link_model_forms () -> List [ LinkModelForm ] get_list_column async \u00b6 get_list_column ( request : Request , modelfield : ModelField ) -> TableColumn get_list_columns async \u00b6 get_list_columns ( request : Request ) -> List [ TableColumn ] get_list_display async \u00b6 get_list_display ( request : Request , ) -> List [ Union [ SQLModelListField , TableColumn ]] get_list_filter async \u00b6 get_list_filter ( request : Request , ) -> List [ Union [ SQLModelListField , FormItem ]] get_list_filter_form async \u00b6 get_list_filter_form ( request : Request ) -> Form get_list_table async \u00b6 get_list_table ( request : Request ) -> TableCRUD get_list_table_api async \u00b6 get_list_table_api ( request : Request ) -> MSAUIAPI get_update_action async \u00b6 get_update_action ( request : Request , bulk : bool = False ) -> Optional [ Action ] get_update_form async \u00b6 get_update_form ( request : Request , bulk : bool = False ) -> Form router_path \u00b6 router_path () -> str FormAdmin \u00b6 Bases: BaseFormAdmin Form Management Functions \u00b6 get_init_data async \u00b6 get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ] handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ] route_init property \u00b6 route_init () route_submit property \u00b6 route_submit () IframeAdmin \u00b6 Bases: PageSchemaAdmin Attributes \u00b6 iframe class-attribute \u00b6 iframe : Iframe = None src class-attribute \u00b6 src : str = '' Functions \u00b6 get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] LinkAdmin \u00b6 Bases: PageSchemaAdmin Management Links Attributes \u00b6 link class-attribute \u00b6 link : str = '' Functions \u00b6 get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] LinkModelForm \u00b6 Link Model to Form Attributes \u00b6 display_admin instance-attribute \u00b6 display_admin = display_admin item_col instance-attribute \u00b6 item_col = item_col link_col instance-attribute \u00b6 link_col = link_col link_model instance-attribute \u00b6 link_model = link_model path instance-attribute \u00b6 path = f '/ { self . display_admin . model . __name__ . lower () } ' pk_admin instance-attribute \u00b6 pk_admin = pk_admin Functions \u00b6 __init__ \u00b6 __init__ ( pk_admin : BaseModelAdmin , display_admin : ModelAdmin , link_model : Union [ SQLModel , Table ], link_col : Column , item_col : Column , ) bind_model_admin classmethod \u00b6 bind_model_admin ( pk_admin : BaseModelAdmin , insfield : InstrumentedAttribute , ) -> Optional [ LinkModelForm ] get_form_item async \u00b6 get_form_item ( request : Request ) register_router \u00b6 register_router () route_create property \u00b6 route_create () route_delete property \u00b6 route_delete () ModelAction \u00b6 Bases: BaseFormAdmin , BaseModelAction Form and Model Actions Attributes \u00b6 action class-attribute \u00b6 action : ActionType . Dialog = None router instance-attribute \u00b6 router = self . admin . router schema class-attribute \u00b6 schema : Type [ BaseModel ] = None Functions \u00b6 __init__ \u00b6 __init__ ( admin : ModelAdmin ) get_action async \u00b6 get_action ( request : Request , ** kwargs ) -> Action handle async \u00b6 handle ( request : Request , item_id : List [ str ], data : Optional [ BaseModel ], ** kwargs ) -> MSACRUDOut [ Any ] route_submit property \u00b6 route_submit () ModelAdmin \u00b6 Bases: BaseModelAdmin , PageAdmin Model Management Attributes \u00b6 bind_model class-attribute \u00b6 bind_model : bool = True page_path class-attribute \u00b6 page_path : str = '' Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , model = None ) get_page async \u00b6 get_page ( request : Request ) -> Page has_create_permission async \u00b6 has_create_permission ( request : Request , data : BaseModel , ** kwargs ) -> bool has_delete_permission async \u00b6 has_delete_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool has_list_permission async \u00b6 has_list_permission ( request : Request , paginator : MSACRUDPaginator , filters : BaseModel = None , ** kwargs ) -> bool has_read_permission async \u00b6 has_read_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool has_update_permission async \u00b6 has_update_permission ( request : Request , item_id : List [ str ], data : BaseModel , ** kwargs ) -> bool register_router \u00b6 register_router () router_prefix property \u00b6 router_prefix () ModelFormAdmin \u00b6 Bases: FormAdmin , MSASQLModelSelector , ABC todo Read and update a model resource Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) PageAdmin \u00b6 Bases: PageSchemaAdmin , RouterAdmin msa_ui page management Attributes \u00b6 page class-attribute \u00b6 page : Page = None page_parser_mode class-attribute \u00b6 page_parser_mode : Literal [ json , html ] = 'json' page_path class-attribute \u00b6 page_path : Optional [ str ] = None page_route_kwargs class-attribute \u00b6 page_route_kwargs : Dict [ str , Any ] = {} router_prefix class-attribute \u00b6 router_prefix = '/page' template_name class-attribute \u00b6 template_name : str = '' Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) error_no_page_permission \u00b6 error_no_page_permission ( request : Request ) get_page async \u00b6 get_page ( request : Request ) -> Page get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] page_parser async \u00b6 page_parser ( request : Request , page : Page ) -> Response page_permission_depend async \u00b6 page_permission_depend ( request : Request ) -> bool register_router \u00b6 register_router () route_page property \u00b6 route_page () -> Callable PageSchemaAdmin \u00b6 Bases: BaseAdmin Attributes \u00b6 group_schema instance-attribute \u00b6 group_schema = self . get_group_schema () page_schema instance-attribute \u00b6 page_schema = self . get_page_schema () Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_group_schema \u00b6 get_group_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError) get_page_schema \u00b6 get_page_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError) has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool RouterAdmin \u00b6 Bases: BaseAdmin , MSARouterMixin Management Router Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) register_router \u00b6 register_router () router_path \u00b6 router_path () -> str TemplateAdmin \u00b6 Bases: PageAdmin Jinja2-Rendering Template Management Attributes \u00b6 page class-attribute \u00b6 page : Dict [ str , Any ] = {} page_parser_mode class-attribute \u00b6 page_parser_mode = 'html' page_path instance-attribute \u00b6 page_path = self . page_path or f '/ { self . template_name } ' templates class-attribute \u00b6 templates : Jinja2Templates = None Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_page async \u00b6 get_page ( request : Request ) -> Dict [ str , Any ] page_parser async \u00b6 page_parser ( request : Request , page : Dict [ str , Any ] ) -> Response","title":"admin"},{"location":"reference/admin/admin/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/admin/#adminadmin","text":"","title":".admin.admin"},{"location":"reference/admin/admin/#admin.admin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin-classes","text":"","title":"Classes"},{"location":"reference/admin/admin/#admin.admin.AdminApp","text":"Bases: PageAdmin , AdminGroup Management Applications","title":"AdminApp"},{"location":"reference/admin/admin/#admin.admin.AdminApp-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.AdminApp.__register_lock","text":"__register_lock = False","title":"__register_lock"},{"location":"reference/admin/admin/#admin.admin.AdminApp.db","text":"db = AsyncDatabase ( self . engine )","title":"db"},{"location":"reference/admin/admin/#admin.admin.AdminApp.engine","text":"engine = self . engine or self . app . engine","title":"engine"},{"location":"reference/admin/admin/#admin.admin.AdminApp.msa_app","text":"msa_app : MSAApp = msa_app","title":"msa_app"},{"location":"reference/admin/admin/#admin.admin.AdminApp.page_path","text":"page_path = '/'","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.AdminApp.tabs_mode","text":"tabs_mode : TabsModeEnum = None","title":"tabs_mode"},{"location":"reference/admin/admin/#admin.admin.AdminApp-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.AdminApp.__init__","text":"__init__ ( app : AdminApp , msa_app : MSAApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_admin_or_create","text":"get_admin_or_create ( admin_cls : Type [ _BaseAdminT ], register : bool = True ) -> Optional [ _BaseAdminT ]","title":"get_admin_or_create()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_model_admin","text":"get_model_admin ( table_name : str ) -> Optional [ ModelAdmin ] This function returns a cached instance of the ModelAdmin object. Note Caching is used to prevent re-reading the environment every time the ModelAdmin object is used.","title":"get_model_admin()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_page","text":"get_page ( request : Request ) -> Union [ Page , App ]","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.register_admin","text":"register_admin ( * admin_cls : Type [ _BaseAdminT ], ) -> Type [ _BaseAdminT ]","title":"register_admin()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.router_prefix","text":"router_prefix ()","title":"router_prefix()"},{"location":"reference/admin/admin/#admin.admin.AdminApp.unregister_admin","text":"unregister_admin ( * admin_cls : Type [ BaseAdmin ])","title":"unregister_admin()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup","text":"Bases: PageSchemaAdmin Management Applications Group","title":"AdminGroup"},{"location":"reference/admin/admin/#admin.admin.AdminGroup-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.__init__","text":"__init__ ( app : AdminApp ) -> None","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.__iter__","text":"__iter__ () -> Iterator [ _PageSchemaAdminT ]","title":"__iter__()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.append_child","text":"append_child ( child : _PageSchemaAdminT , group_schema : PageSchema = None , ) -> None","title":"append_child()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.get_page_schema_child","text":"get_page_schema_child ( unique_id : str , ) -> Optional [ _PageSchemaAdminT ]","title":"get_page_schema_child()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.get_page_schema_children","text":"get_page_schema_children ( request : Request , ) -> List [ PageSchema ]","title":"get_page_schema_children()"},{"location":"reference/admin/admin/#admin.admin.AdminGroup.unique_id","text":"unique_id () -> str","title":"unique_id()"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin","text":"","title":"BaseAdmin"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.app","text":"app = app","title":"app"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.site","text":"site () -> BaseAdminSite","title":"site()"},{"location":"reference/admin/admin/#admin.admin.BaseAdmin.unique_id","text":"unique_id () -> str","title":"unique_id()"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite","text":"Bases: AdminApp","title":"BaseAdminSite"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.auth","text":"auth : Auth = None","title":"auth"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.db_engine","text":"db_engine = self . msa_app . db_engine","title":"db_engine"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.msa_app","text":"msa_app = msa_app","title":"msa_app"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.router","text":"router = self . msa_app . router","title":"router"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.settings","text":"settings = msa_app . settings","title":"settings"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.__init__","text":"__init__ ( msa_app : MSAApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.mount_app","text":"mount_app ( msa_app : MSAApp , name : str = 'admin' ) -> None","title":"mount_app()"},{"location":"reference/admin/admin/#admin.admin.BaseAdminSite.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin","text":"Bases: PageAdmin","title":"BaseFormAdmin"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.form","text":"form : Form = None","title":"form"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.form_init","text":"form_init : bool = None","title":"form_init"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.form_path","text":"form_path = self . form_path or f ' { self . page_path } /api'","title":"form_path"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.route_init","text":"route_init : Callable = None","title":"route_init"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.route_submit","text":"route_submit : Callable = None","title":"route_submit"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.router_prefix","text":"router_prefix : str = '/form'","title":"router_prefix"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.schema_init_out","text":"schema_init_out : Type [ Any ] = Any","title":"schema_init_out"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ Any ] = Any","title":"schema_submit_out"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.get_form_item","text":"get_form_item ( request : Request , modelfield : ModelField ) -> Union [ FormItem , MSAUISchemaNode ]","title":"get_form_item()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.BaseFormAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction","text":"Base Model Action","title":"BaseModelAction"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.action","text":"action : Action = None","title":"action"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.admin","text":"admin = admin","title":"admin"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.__init__","text":"__init__ ( admin : ModelAdmin )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.fetch_item_scalars","text":"fetch_item_scalars ( item_id : List [ str ]) -> List [ BaseModel ]","title":"fetch_item_scalars()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAction.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin","text":"Bases: MSASQLModelCrud","title":"BaseModelAdmin"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.app","text":"app = app","title":"app"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.bulk_update_fields","text":"bulk_update_fields : List [ Union [ SQLModelListField , FormItem ] ] = [] Batch Edit Fields","title":"bulk_update_fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.engine","text":"engine = self . engine or self . app . db . engine","title":"engine"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.fields","text":"fields = self . fields or [ self . model ]","title":"fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.link_model_fields","text":"link_model_fields : List [ InstrumentedAttribute ] = [] Inline Fields","title":"link_model_fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.link_model_forms","text":"link_model_forms : List [ LinkModelForm ] = [] Inline Forms","title":"link_model_forms"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.list_display","text":"list_display : List [ Union [ SQLModelListField , TableColumn ] ] = [] Fields to be displayed","title":"list_display"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.list_filter","text":"list_filter = self . list_filter or list_display_insfield","title":"list_filter"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.list_per_page","text":"list_per_page : int = 10 Data volume per page","title":"list_per_page"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.model","text":"model = model","title":"model"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.parser","text":"parser = MSASQLModelFieldParser ( default_model = self . model )","title":"parser"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.search_fields","text":"search_fields : List [ SQLModelField ] = [] Fuzzy search fields","title":"search_fields"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.__init__","text":"__init__ ( app : AdminApp , model = None )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_actions_on_bulk","text":"get_actions_on_bulk ( request : Request ) -> List [ Action ]","title":"get_actions_on_bulk()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_actions_on_header_toolbar","text":"get_actions_on_header_toolbar ( request : Request , ) -> List [ Action ]","title":"get_actions_on_header_toolbar()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_actions_on_item","text":"get_actions_on_item ( request : Request ) -> List [ Action ]","title":"get_actions_on_item()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_create_action","text":"get_create_action ( request : Request , bulk : bool = False ) -> Optional [ Action ]","title":"get_create_action()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_create_form","text":"get_create_form ( request : Request , bulk : bool = False ) -> Form","title":"get_create_form()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_delete_action","text":"get_delete_action ( request : Request , bulk : bool = False ) -> Optional [ Action ]","title":"get_delete_action()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_form_item","text":"get_form_item ( request : Request , modelfield : ModelField , action : MSACRUDEnum , ) -> Union [ FormItem , MSAUISchemaNode , None ]","title":"get_form_item()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_form_item_on_foreign_key","text":"get_form_item_on_foreign_key ( request : Request , modelfield : ModelField , is_filter : bool = False , ) -> Union [ Service , MSAUISchemaNode , None ]","title":"get_form_item_on_foreign_key()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_link_model_forms","text":"get_link_model_forms () -> List [ LinkModelForm ]","title":"get_link_model_forms()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_column","text":"get_list_column ( request : Request , modelfield : ModelField ) -> TableColumn","title":"get_list_column()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_columns","text":"get_list_columns ( request : Request ) -> List [ TableColumn ]","title":"get_list_columns()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_display","text":"get_list_display ( request : Request , ) -> List [ Union [ SQLModelListField , TableColumn ]]","title":"get_list_display()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_filter","text":"get_list_filter ( request : Request , ) -> List [ Union [ SQLModelListField , FormItem ]]","title":"get_list_filter()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_filter_form","text":"get_list_filter_form ( request : Request ) -> Form","title":"get_list_filter_form()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_table","text":"get_list_table ( request : Request ) -> TableCRUD","title":"get_list_table()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_list_table_api","text":"get_list_table_api ( request : Request ) -> MSAUIAPI","title":"get_list_table_api()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_update_action","text":"get_update_action ( request : Request , bulk : bool = False ) -> Optional [ Action ]","title":"get_update_action()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.get_update_form","text":"get_update_form ( request : Request , bulk : bool = False ) -> Form","title":"get_update_form()"},{"location":"reference/admin/admin/#admin.admin.BaseModelAdmin.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin","text":"Bases: BaseFormAdmin Form Management","title":"FormAdmin"},{"location":"reference/admin/admin/#admin.admin.FormAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.get_init_data","text":"get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ]","title":"get_init_data()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ]","title":"handle()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.route_init","text":"route_init ()","title":"route_init()"},{"location":"reference/admin/admin/#admin.admin.FormAdmin.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin","text":"Bases: PageSchemaAdmin","title":"IframeAdmin"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin.iframe","text":"iframe : Iframe = None","title":"iframe"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin.src","text":"src : str = ''","title":"src"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.IframeAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin","text":"Bases: PageSchemaAdmin Management Links","title":"LinkAdmin"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin.link","text":"link : str = ''","title":"link"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.LinkAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm","text":"Link Model to Form","title":"LinkModelForm"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.display_admin","text":"display_admin = display_admin","title":"display_admin"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.item_col","text":"item_col = item_col","title":"item_col"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.link_col","text":"link_col = link_col","title":"link_col"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.link_model","text":"link_model = link_model","title":"link_model"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.path","text":"path = f '/ { self . display_admin . model . __name__ . lower () } '","title":"path"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.pk_admin","text":"pk_admin = pk_admin","title":"pk_admin"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.__init__","text":"__init__ ( pk_admin : BaseModelAdmin , display_admin : ModelAdmin , link_model : Union [ SQLModel , Table ], link_col : Column , item_col : Column , )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.bind_model_admin","text":"bind_model_admin ( pk_admin : BaseModelAdmin , insfield : InstrumentedAttribute , ) -> Optional [ LinkModelForm ]","title":"bind_model_admin()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.get_form_item","text":"get_form_item ( request : Request )","title":"get_form_item()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.route_create","text":"route_create ()","title":"route_create()"},{"location":"reference/admin/admin/#admin.admin.LinkModelForm.route_delete","text":"route_delete ()","title":"route_delete()"},{"location":"reference/admin/admin/#admin.admin.ModelAction","text":"Bases: BaseFormAdmin , BaseModelAction Form and Model Actions","title":"ModelAction"},{"location":"reference/admin/admin/#admin.admin.ModelAction-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.ModelAction.action","text":"action : ActionType . Dialog = None","title":"action"},{"location":"reference/admin/admin/#admin.admin.ModelAction.router","text":"router = self . admin . router","title":"router"},{"location":"reference/admin/admin/#admin.admin.ModelAction.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/admin/admin/#admin.admin.ModelAction-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.ModelAction.__init__","text":"__init__ ( admin : ModelAdmin )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.ModelAction.get_action","text":"get_action ( request : Request , ** kwargs ) -> Action","title":"get_action()"},{"location":"reference/admin/admin/#admin.admin.ModelAction.handle","text":"handle ( request : Request , item_id : List [ str ], data : Optional [ BaseModel ], ** kwargs ) -> MSACRUDOut [ Any ]","title":"handle()"},{"location":"reference/admin/admin/#admin.admin.ModelAction.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin","text":"Bases: BaseModelAdmin , PageAdmin Model Management","title":"ModelAdmin"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.bind_model","text":"bind_model : bool = True","title":"bind_model"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.page_path","text":"page_path : str = ''","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.__init__","text":"__init__ ( app : AdminApp , model = None )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_create_permission","text":"has_create_permission ( request : Request , data : BaseModel , ** kwargs ) -> bool","title":"has_create_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_delete_permission","text":"has_delete_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool","title":"has_delete_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_list_permission","text":"has_list_permission ( request : Request , paginator : MSACRUDPaginator , filters : BaseModel = None , ** kwargs ) -> bool","title":"has_list_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_read_permission","text":"has_read_permission ( request : Request , item_id : List [ str ], ** kwargs ) -> bool","title":"has_read_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.has_update_permission","text":"has_update_permission ( request : Request , item_id : List [ str ], data : BaseModel , ** kwargs ) -> bool","title":"has_update_permission()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.ModelAdmin.router_prefix","text":"router_prefix ()","title":"router_prefix()"},{"location":"reference/admin/admin/#admin.admin.ModelFormAdmin","text":"Bases: FormAdmin , MSASQLModelSelector , ABC todo Read and update a model resource","title":"ModelFormAdmin"},{"location":"reference/admin/admin/#admin.admin.ModelFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.ModelFormAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin","text":"Bases: PageSchemaAdmin , RouterAdmin msa_ui page management","title":"PageAdmin"},{"location":"reference/admin/admin/#admin.admin.PageAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page","text":"page : Page = None","title":"page"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_parser_mode","text":"page_parser_mode : Literal [ json , html ] = 'json'","title":"page_parser_mode"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_path","text":"page_path : Optional [ str ] = None","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_route_kwargs","text":"page_route_kwargs : Dict [ str , Any ] = {}","title":"page_route_kwargs"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.router_prefix","text":"router_prefix = '/page'","title":"router_prefix"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.template_name","text":"template_name : str = ''","title":"template_name"},{"location":"reference/admin/admin/#admin.admin.PageAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.error_no_page_permission","text":"error_no_page_permission ( request : Request )","title":"error_no_page_permission()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ]","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_parser","text":"page_parser ( request : Request , page : Page ) -> Response","title":"page_parser()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.page_permission_depend","text":"page_permission_depend ( request : Request ) -> bool","title":"page_permission_depend()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.PageAdmin.route_page","text":"route_page () -> Callable","title":"route_page()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin","text":"Bases: BaseAdmin","title":"PageSchemaAdmin"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.group_schema","text":"group_schema = self . get_group_schema ()","title":"group_schema"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.page_schema","text":"page_schema = self . get_page_schema ()","title":"page_schema"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.get_group_schema","text":"get_group_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError)","title":"get_group_schema()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.get_page_schema","text":"get_page_schema () -> Optional [ PageSchema ] RAISES DESCRIPTION TypeError TypeError(_StandardError)","title":"get_page_schema()"},{"location":"reference/admin/admin/#admin.admin.PageSchemaAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin","text":"Bases: BaseAdmin , MSARouterMixin Management Router","title":"RouterAdmin"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin.register_router","text":"register_router ()","title":"register_router()"},{"location":"reference/admin/admin/#admin.admin.RouterAdmin.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin","text":"Bases: PageAdmin Jinja2-Rendering Template Management","title":"TemplateAdmin"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page","text":"page : Dict [ str , Any ] = {}","title":"page"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page_parser_mode","text":"page_parser_mode = 'html'","title":"page_parser_mode"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page_path","text":"page_path = self . page_path or f '/ { self . template_name } '","title":"page_path"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.templates","text":"templates : Jinja2Templates = None","title":"templates"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.get_page","text":"get_page ( request : Request ) -> Dict [ str , Any ]","title":"get_page()"},{"location":"reference/admin/admin/#admin.admin.TemplateAdmin.page_parser","text":"page_parser ( request : Request , page : Dict [ str , Any ] ) -> Response","title":"page_parser()"},{"location":"reference/admin/parser/","text":"msaSDK Module \u00b6 .admin.parser \u00b6 Classes \u00b6 MSAUIParser \u00b6 MSA UI Core Model Parser Attributes \u00b6 modelfield instance-attribute \u00b6 modelfield = modelfield Functions \u00b6 __init__ \u00b6 __init__ ( modelfield : ModelField ) as_form_item \u00b6 as_form_item ( set_default : bool = False , is_filter : bool = False ) -> FormItem as_table_column \u00b6 as_table_column ( quick_edit : bool = False ) -> TableColumn label property \u00b6 label () remark property \u00b6 remark () Functions \u00b6 cyclic_generator \u00b6 cyclic_generator ( iterable : Iterable ) Yield Iterable","title":"parser"},{"location":"reference/admin/parser/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/parser/#adminparser","text":"","title":".admin.parser"},{"location":"reference/admin/parser/#admin.parser-classes","text":"","title":"Classes"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser","text":"MSA UI Core Model Parser","title":"MSAUIParser"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser-attributes","text":"","title":"Attributes"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.modelfield","text":"modelfield = modelfield","title":"modelfield"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser-functions","text":"","title":"Functions"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.__init__","text":"__init__ ( modelfield : ModelField )","title":"__init__()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.as_form_item","text":"as_form_item ( set_default : bool = False , is_filter : bool = False ) -> FormItem","title":"as_form_item()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.as_table_column","text":"as_table_column ( quick_edit : bool = False ) -> TableColumn","title":"as_table_column()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.label","text":"label ()","title":"label()"},{"location":"reference/admin/parser/#admin.parser.MSAUIParser.remark","text":"remark ()","title":"remark()"},{"location":"reference/admin/parser/#admin.parser-functions","text":"","title":"Functions"},{"location":"reference/admin/parser/#admin.parser.cyclic_generator","text":"cyclic_generator ( iterable : Iterable ) Yield Iterable","title":"cyclic_generator()"},{"location":"reference/admin/site/","text":"msaSDK Module \u00b6 .admin.site \u00b6 Attributes \u00b6 Classes \u00b6 AdminSite \u00b6 Bases: BaseAdminSite Admin Site, registers all defined Pages for the UI and the Routers Functions \u00b6 __init__ \u00b6 __init__ ( msa_app : MSAApp ) DocsAdmin \u00b6 Bases: IframeAdmin Admin Page for the OpenAPI Documentation as a IFrame Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 ) page_schema class-attribute \u00b6 page_schema = PageSchema ( label = \"OpenAPI\" , icon = \"fa fa-book\" ) Functions \u00b6 src property \u00b6 src () FileAdmin \u00b6 Bases: RouterAdmin Admin API Router for General FileUpload Attributes \u00b6 file_directory instance-attribute \u00b6 file_directory = self . file_directory or self . file_path file_max_size class-attribute \u00b6 file_max_size : int = 2 * 1024 * 1024 file_path class-attribute \u00b6 file_path : str = '/upload' router_prefix class-attribute \u00b6 router_prefix = '/file' API route prefix for URL static_path instance-attribute \u00b6 static_path = self . mount_staticfile () Classes \u00b6 UploadOutSchema \u00b6 Bases: BaseModel Upload Pydantic Response Model Attributes \u00b6 filename class-attribute \u00b6 filename : str = None url class-attribute \u00b6 url : str = None Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp ) get_filename \u00b6 get_filename ( file : UploadFile ) mount_staticfile \u00b6 mount_staticfile () -> str Mount upload file_directory as StaticFiles Directory register_router \u00b6 register_router () Register the upload function as API Router HomeAdmin \u00b6 Bases: PageAdmin Admin Home Page Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None page_path class-attribute \u00b6 page_path = '/home' page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Home\" ), icon = \"fa fa-home\" , url = \"/home\" , isDefaultPage = True , sort = 100 , ) Functions \u00b6 get_page async \u00b6 get_page ( request : Request ) -> Page ProfilerAdmin \u00b6 Bases: IframeAdmin Admin Page for the Profiler Result HTML as a IFrame Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None page_schema class-attribute \u00b6 page_schema = PageSchema ( label = \"Profiler\" , icon = \"fa fa-microchip\" , sort =- 110 ) Functions \u00b6 src property \u00b6 src () ReDocsAdmin \u00b6 Bases: IframeAdmin Admin Page for the ReDoc Documentation as a IFrame Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 ) page_schema class-attribute \u00b6 page_schema = PageSchema ( label = 'Redocs' , icon = 'fa fa-book' ) Functions \u00b6 src property \u00b6 src ()","title":"site"},{"location":"reference/admin/site/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/site/#adminsite","text":"","title":".admin.site"},{"location":"reference/admin/site/#admin.site-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site-classes","text":"","title":"Classes"},{"location":"reference/admin/site/#admin.site.AdminSite","text":"Bases: BaseAdminSite Admin Site, registers all defined Pages for the UI and the Routers","title":"AdminSite"},{"location":"reference/admin/site/#admin.site.AdminSite-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.AdminSite.__init__","text":"__init__ ( msa_app : MSAApp )","title":"__init__()"},{"location":"reference/admin/site/#admin.site.DocsAdmin","text":"Bases: IframeAdmin Admin Page for the OpenAPI Documentation as a IFrame","title":"DocsAdmin"},{"location":"reference/admin/site/#admin.site.DocsAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.DocsAdmin.group_schema","text":"group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 )","title":"group_schema"},{"location":"reference/admin/site/#admin.site.DocsAdmin.page_schema","text":"page_schema = PageSchema ( label = \"OpenAPI\" , icon = \"fa fa-book\" )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.DocsAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.DocsAdmin.src","text":"src ()","title":"src()"},{"location":"reference/admin/site/#admin.site.FileAdmin","text":"Bases: RouterAdmin Admin API Router for General FileUpload","title":"FileAdmin"},{"location":"reference/admin/site/#admin.site.FileAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.FileAdmin.file_directory","text":"file_directory = self . file_directory or self . file_path","title":"file_directory"},{"location":"reference/admin/site/#admin.site.FileAdmin.file_max_size","text":"file_max_size : int = 2 * 1024 * 1024","title":"file_max_size"},{"location":"reference/admin/site/#admin.site.FileAdmin.file_path","text":"file_path : str = '/upload'","title":"file_path"},{"location":"reference/admin/site/#admin.site.FileAdmin.router_prefix","text":"router_prefix = '/file' API route prefix for URL","title":"router_prefix"},{"location":"reference/admin/site/#admin.site.FileAdmin.static_path","text":"static_path = self . mount_staticfile ()","title":"static_path"},{"location":"reference/admin/site/#admin.site.FileAdmin-classes","text":"","title":"Classes"},{"location":"reference/admin/site/#admin.site.FileAdmin.UploadOutSchema","text":"Bases: BaseModel Upload Pydantic Response Model","title":"UploadOutSchema"},{"location":"reference/admin/site/#admin.site.FileAdmin.UploadOutSchema-attributes","text":"filename class-attribute \u00b6 filename : str = None url class-attribute \u00b6 url : str = None","title":"Attributes"},{"location":"reference/admin/site/#admin.site.FileAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.FileAdmin.__init__","text":"__init__ ( app : AdminApp )","title":"__init__()"},{"location":"reference/admin/site/#admin.site.FileAdmin.get_filename","text":"get_filename ( file : UploadFile )","title":"get_filename()"},{"location":"reference/admin/site/#admin.site.FileAdmin.mount_staticfile","text":"mount_staticfile () -> str Mount upload file_directory as StaticFiles Directory","title":"mount_staticfile()"},{"location":"reference/admin/site/#admin.site.FileAdmin.register_router","text":"register_router () Register the upload function as API Router","title":"register_router()"},{"location":"reference/admin/site/#admin.site.HomeAdmin","text":"Bases: PageAdmin Admin Home Page","title":"HomeAdmin"},{"location":"reference/admin/site/#admin.site.HomeAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.HomeAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/admin/site/#admin.site.HomeAdmin.page_path","text":"page_path = '/home'","title":"page_path"},{"location":"reference/admin/site/#admin.site.HomeAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Home\" ), icon = \"fa fa-home\" , url = \"/home\" , isDefaultPage = True , sort = 100 , )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.HomeAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.HomeAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin","text":"Bases: IframeAdmin Admin Page for the Profiler Result HTML as a IFrame","title":"ProfilerAdmin"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin.page_schema","text":"page_schema = PageSchema ( label = \"Profiler\" , icon = \"fa fa-microchip\" , sort =- 110 )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.ProfilerAdmin.src","text":"src ()","title":"src()"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin","text":"Bases: IframeAdmin Admin Page for the ReDoc Documentation as a IFrame","title":"ReDocsAdmin"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin.group_schema","text":"group_schema = PageSchema ( label = \"API Docs\" , icon = \"fa fa-book\" , sort =- 100 )","title":"group_schema"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin.page_schema","text":"page_schema = PageSchema ( label = 'Redocs' , icon = 'fa fa-book' )","title":"page_schema"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin-functions","text":"","title":"Functions"},{"location":"reference/admin/site/#admin.site.ReDocsAdmin.src","text":"src ()","title":"src()"},{"location":"reference/admin/frontend/components/","text":"msaSDK Module \u00b6 .admin.frontend.components \u00b6 Attributes \u00b6 BASE_DIR module-attribute \u00b6 BASE_DIR = os . path . dirname ( os . path . abspath ( __file__ )) Classes \u00b6 Action \u00b6 Bases: MSAUINode Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = None [Required] This is the core configuration of the action, to specify the action's role type. Supports: ajax, link, url, drawer, dialog, confirm, cancel, prev, next, copy, close. active class-attribute \u00b6 active : bool = None If or not the button is highlighted. activeClassName class-attribute \u00b6 activeClassName : str = None Add a class name to the button highlighting. \"is-active\" activeLevel class-attribute \u00b6 activeLevel : str = None The style of the button when it is highlighted, configured to support the same level. args class-attribute \u00b6 args : Union [ dict , str ] = None Event arguments block class-attribute \u00b6 block : bool = None Use display: \"block\" to display the button. close class-attribute \u00b6 close : Union [ bool , str ] = None When action is configured in dialog or drawer's actions, set to true to close the current dialog or drawer after this action. componentId class-attribute \u00b6 componentId : str = None Target component ID confirmText class-attribute \u00b6 confirmText : MSAUITemplate = None When set, the action will ask the user before starting. Can be fetched with ${xxx}. disabledTip class-attribute \u00b6 disabledTip : str = None Popup when mouse hover is disabled, you can also configure the object type: fields are title and content. available ${xxx}. icon class-attribute \u00b6 icon : str = None Set icon, e.g. fa fa-plus. iconClassName class-attribute \u00b6 iconClassName : str = None Add a class name to the icon. label class-attribute \u00b6 label : str = None The text of the button. Can be fetched with ${xxx}. level class-attribute \u00b6 level : LevelEnum = None The style of the button, support: link, primary, secondary, info, success, warning, danger, light, dark, default. onClick class-attribute \u00b6 onClick : str = None Customize the click event by defining the click event as a string onClick, which will be converted to a JavaScript function reload class-attribute \u00b6 reload : str = None Specify the name of the target component to be refreshed after this operation (the component's name value, configured by yourself), separated by ,. required class-attribute \u00b6 required : List [ str ] = None Configure an array of strings, specifying that the form entry of the specified field name is required to pass validation before the operation can be performed in the form rightIcon class-attribute \u00b6 rightIcon : str = None Set the icon to the right of the button text, e.g. fa fa-plus. rightIconClassName class-attribute \u00b6 rightIconClassName : str = None Add a class name to the right icon. script class-attribute \u00b6 script : str = None Custom JS script code, which can perform any action by calling doAction, and event action intervention through the event object event size class-attribute \u00b6 size : str = None The size of the button, support: xs, sm, md, lg. tooltip class-attribute \u00b6 tooltip : str = None popup text when mouse hover, also can configure the object type: title and content. can be ${xxx}. tooltipPlacement class-attribute \u00b6 tooltipPlacement : str = None If tooltip or disabledTip is configured, specify the location of the tip, you can configure top, bottom, left, right. type class-attribute \u00b6 type : str = 'button' Specify as Page renderer. button action ActionType \u00b6 Classes \u00b6 Ajax \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'ajax' Click to display a popup box api class-attribute \u00b6 api : MSA_UI_API = None request address, refer to api format description. feedback class-attribute \u00b6 feedback : Dialog = None If ajax type, when the ajax returns normal, a dialog can be popped up to do other interactions. The returned data can be used in this dialog. See Dialog for format messages class-attribute \u00b6 messages : dict = None success: ajax operation success prompt, can not be specified, not specified when the api return prevail. failed: ajax operation failure prompt. redirect class-attribute \u00b6 redirect : MSAUITemplate = None Specify the path to jump to at the end of the current request, can be fetched with ${xxx}. Copy \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'copy' Copy a piece of content to the pasteboard content class-attribute \u00b6 content : MSAUITemplate Specify the content to be copied. Can be fetched with ${xxx}. copyFormat class-attribute \u00b6 copyFormat : str = None The format of the copy can be set by copyFormat, default is text/html Dialog \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'dialog' Show a popup box when clicked. dialog class-attribute \u00b6 dialog : Union [ Dialog , Service , MSAUISchemaNode ] Specify the content of the popup box, see Dialog for format nextCondition class-attribute \u00b6 nextCondition : bool = None Can be used to set the next data condition, default is true. Drawer \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'drawer' Show a sidebar when clicked drawer class-attribute \u00b6 drawer : Union [ Drawer , Service , MSAUISchemaNode ] Specify the content of the popup box, see Drawer for format Link \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'link' link class-attribute \u00b6 link : str Url \u00b6 Bases: Action Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = 'url' Jump directly blank class-attribute \u00b6 blank : bool = None false if true will open in a new tab page. url class-attribute \u00b6 url : str When the button is clicked, the specified page will be opened. Can be fetched with ${xxx}. Alert \u00b6 Bases: MSAUINode alert Attributes \u00b6 body class-attribute \u00b6 body : MSAUISchemaNode = None Display content className class-attribute \u00b6 className : str = None class name of the outer Dom closeButtonClassName class-attribute \u00b6 closeButtonClassName : str = None CSS class name of the close button icon class-attribute \u00b6 icon : str = None Custom icon iconClassName class-attribute \u00b6 iconClassName : str = None CSS class name of the icon level class-attribute \u00b6 level : str = None \"info\" # level, can be: info, success, warning or danger showCloseButton class-attribute \u00b6 showCloseButton : bool = None False # whether to show the close button showIcon class-attribute \u00b6 showIcon : bool = None False # Whether to show icon type class-attribute \u00b6 type : str = 'alert' Specify as alert renderer AnchorNav \u00b6 Bases: MSAUINode Anchor Nav Attributes \u00b6 active class-attribute \u00b6 active : str = None The area to be positioned className class-attribute \u00b6 className : str = None Class name of the outer Dom direction class-attribute \u00b6 direction : str = None \"vertical\" # You can configure whether the navigation is displayed horizontally or vertically. The corresponding configuration items are: vertical, horizontal linkClassName class-attribute \u00b6 linkClassName : str = None Class name of the navigating Dom links class-attribute \u00b6 links : list = None Contents of links sectionClassName class-attribute \u00b6 sectionClassName : str = None Class name of the anchor area Dom type class-attribute \u00b6 type : str = 'anchor-nav' Specify as AnchorNav renderer Classes \u00b6 Link \u00b6 Bases: MSAUINode Attributes \u00b6 body class-attribute \u00b6 body : MSAUISchemaNode = None area content area className class-attribute \u00b6 className : str = None \"bg-white b-l b-r b-b wrapper-md\" # region member style href class-attribute \u00b6 href : str = None region identifier label class-attribute \u00b6 label : str = None name title class-attribute \u00b6 title : str = None area title App \u00b6 Bases: Page multi-page app Attributes \u00b6 __default_template_path__ class-attribute \u00b6 __default_template_path__ : str = ( f \" { BASE_DIR } /templates/app.html\" ) api class-attribute \u00b6 api : MSA_UI_API = None Page configuration interface, please configure if you want to pull the page configuration remotely. Return the configuration path json>data>pages, please refer to the pages property for the exact format. asideAfter class-attribute \u00b6 asideAfter : str = None The area under the page menu. asideBefore class-attribute \u00b6 asideBefore : str = None The area in front of the page menu. brandName class-attribute \u00b6 brandName : str = None Application name className class-attribute \u00b6 className : str = None css class name footer class-attribute \u00b6 footer : str = None The page. header class-attribute \u00b6 header : str = None header logo class-attribute \u00b6 logo : str = '/msastatic/img/msa_logo.png' Support image address, or svg. pages class-attribute \u00b6 pages : List [ PageSchema ] = None Array specific page configuration. Usually an array, the first layer of the array is grouped, usually only the label set needs to be configured, if you do not want to group, directly not configured, the real pages please start configuring in the second layer, that is, the first layer of children. type class-attribute \u00b6 type : str = 'app' Audio \u00b6 Bases: MSAUINode audio Attributes \u00b6 autoPlay class-attribute \u00b6 autoPlay : bool = None False # Whether to play automatically className class-attribute \u00b6 className : str = None the class name of the outer Dom controls class-attribute \u00b6 controls : List [ str ] = None \"['rates','play','time','process','volume']\" # Internal module customization inline class-attribute \u00b6 inline : bool = None True # whether inline mode is used loop class-attribute \u00b6 loop : bool = None False # Whether to loop rates class-attribute \u00b6 rates : List [ float ] = None \"[]\" # Configurable audio playback multiplier e.g. [1.0, 1.5, 2.0] src class-attribute \u00b6 src : str = None Audio address type class-attribute \u00b6 type : str = 'audio' Specify as audio renderer Avatar \u00b6 Bases: MSAUINode Avatar Attributes \u00b6 className class-attribute \u00b6 className : str = None class name of the outer dom fit class-attribute \u00b6 fit : str = None \"cover\" # image scaling type icon class-attribute \u00b6 icon : str = None Icon shape class-attribute \u00b6 shape : str = None \"circle\" # The shape, which can also be square size class-attribute \u00b6 size : int = None 40 # size src class-attribute \u00b6 src : str = None Image address style class-attribute \u00b6 style : dict = None The style of the outer dom text class-attribute \u00b6 text : str = None Text type class-attribute \u00b6 type : str = 'avatar' Badge \u00b6 Bases: MSAUINode corner-icon Attributes \u00b6 animation class-attribute \u00b6 animation : bool = None whether the corner is animated or not className class-attribute \u00b6 className : str = None class name of outer dom level class-attribute \u00b6 level : str = None Corner level, can be info/success/warning/danger, different background color after setting mode class-attribute \u00b6 mode : str = 'dot' Corner type, can be dot/text/ribbon offset class-attribute \u00b6 offset : int = None corner position, priority is greater than position, when offset is set, postion is top-right as the base for positioning number[top, left] overflowCount class-attribute \u00b6 overflowCount : int = None 99 # Set the capping number value position class-attribute \u00b6 position : str = None \"top-right\" # corner position, can be top-right/top-left/bottom-right/bottom-left size class-attribute \u00b6 size : int = None corner size style class-attribute \u00b6 style : dict = None custom style for the corner text class-attribute \u00b6 text : Union [ str , int ] = None corner text, supports strings and numbers, invalid when set under mode='dot' visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Control the display and hiding of the corner Button \u00b6 Bases: FormItem Button Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = None Set the button type 'button'|'reset'|'submit'| 'clear'| 'url' block class-attribute \u00b6 block : bool = None option to adjust the width of the button to its parent width className class-attribute \u00b6 className : str = None Specifies the class name of the added button disabled class-attribute \u00b6 disabled : bool = None Disable button status href class-attribute \u00b6 href : str = None Click on the address of the jump, specify this property button behavior and a link consistent level class-attribute \u00b6 level : LevelEnum = None Set the button style 'link'|'primary'|'enhance'|'secondary'|'info'|'success'|'warning'|'danger'|'light'| 'dark'|'default' loading class-attribute \u00b6 loading : bool = None Show button loading effect loadingOn class-attribute \u00b6 loadingOn : str = None Show button loading expressions size class-attribute \u00b6 size : str = None Set the size of the button 'xs'|'sm'|'md'|'lg' tooltip class-attribute \u00b6 tooltip : Union [ str , dict ] = None bubble tip content TooltipObject tooltipPlacement class-attribute \u00b6 tooltipPlacement : str = None bubblePlacement 'top'|'right'|'bottom'|'left' tooltipTrigger class-attribute \u00b6 tooltipTrigger : str = None trigger tootip 'hover'|'focus' ButtonGroup \u00b6 Bases: MSAUINode buttonGroup Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ Action ] Behavior button group className class-attribute \u00b6 className : str = None the class name of the outer Dom type class-attribute \u00b6 type : str = 'button-group' vertical class-attribute \u00b6 vertical : bool = None whether to use vertical mode ButtonToolbar \u00b6 Bases: MSAUINode ButtonToolbar Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ Action ] Behavior button group type class-attribute \u00b6 type : str = 'button-toolbar' CRUD \u00b6 Bases: MSAUINode add-delete Attributes \u00b6 affixHeader class-attribute \u00b6 affixHeader : bool = None True # Whether to fix the table header (under table) alwaysShowPagination class-attribute \u00b6 alwaysShowPagination : bool = None whether to always show pagination api class-attribute \u00b6 api : MSA_UI_API = None The api used by CRUD to get the list data. autoGenerateFilter class-attribute \u00b6 autoGenerateFilter : bool = None Whether to enable the query area, which will automatically generate a query form based on the value of the searchable property of the column element autoJumpToTopOnPagerChange class-attribute \u00b6 autoJumpToTopOnPagerChange : bool = None Whether to auto jump to the top when the page is cut. bulkActions class-attribute \u00b6 bulkActions : List [ Action ] = None List of bulk actions, configured so that the form can be checked. className class-attribute \u00b6 className : str = None class name of the table's outer Dom defaultChecked class-attribute \u00b6 defaultChecked : bool = None Default whether to check all when bulk actions are available. defaultParams class-attribute \u00b6 defaultParams : dict = None Set the default filter default parameters, which will be sent to the backend together with the query draggable class-attribute \u00b6 draggable : bool = None Whether to sort by drag and drop filter class-attribute \u00b6 filter : Union [ MSAUISchemaNode , Form ] = None Set a filter that will bring the data to the current mode to refresh the list when the form is submitted. filterDefaultVisible class-attribute \u00b6 filterDefaultVisible : bool = None True # Sets whether the filter is visible by default. filterTogglable class-attribute \u00b6 filterTogglable : bool = None False # Whether to make the filter visible or invisible footerToolbar class-attribute \u00b6 footerToolbar : list = None ['statistics','pagination'] # Bottom toolbar configuration headerToolbar class-attribute \u00b6 headerToolbar : list = None ['bulkActions','pagination'] # top toolbar configuration hideQuickSaveBtn class-attribute \u00b6 hideQuickSaveBtn : bool = None Hide the top quick save prompt initFetch class-attribute \u00b6 initFetch : bool = None True # Whether to pull data when initializing, only for cases with filter, no filter will pull data initially interval class-attribute \u00b6 interval : int = None Refresh time (minimum 1000) itemAction class-attribute \u00b6 itemAction : Action = None Implement a custom action when a row is clicked, supports all configurations in action, such as pop-up boxes, refreshing other components, etc. itemDraggableOn class-attribute \u00b6 itemDraggableOn : bool = None Use an expression to configure whether draggable is sortable or not keepItemSelectionOnPageChange class-attribute \u00b6 keepItemSelectionOnPageChange : bool = None True labelTpl class-attribute \u00b6 labelTpl : str = None Single description template, keepItemSelectionOnPageChange loadDataOnce class-attribute \u00b6 loadDataOnce : bool = None Whether to load all data at once (front-end paging) loadDataOnceFetchOnFilter class-attribute \u00b6 loadDataOnceFetchOnFilter : bool = None True # Whether to re-request the api when filtering when loadDataOnce is enabled messages class-attribute \u00b6 messages : Messages = None Override the message prompt, if not specified, the message returned by the api will be used mode class-attribute \u00b6 mode : str = None \"table\" # \"table\", \"cards\" or \"list\" orderField class-attribute \u00b6 orderField : str = None Set the name of the field used to determine the position, after setting the new order will be assigned to the field. pageField class-attribute \u00b6 pageField : str = None Set the pagination page number field name. \"page\" perPage class-attribute \u00b6 perPage : int = None Set how many data to display on a page. 10 perPageAvailable class-attribute \u00b6 perPageAvailable : List [ int ] = None [5, 10, 20, 50, 100] # Set how many data dropdown boxes are available for displaying on a page. perPageField class-attribute \u00b6 perPageField : str = None \"perPage\" # Set the field name of how many data to display on a paginated page. Note: Best used in conjunction with defaultParams, see the following example. primaryField class-attribute \u00b6 primaryField : str = None Set the ID field name.' id' quickSaveApi class-attribute \u00b6 quickSaveApi : MSA_UI_API = None The MSA_UI_API used for batch saving after quick editing. quickSaveItemApi class-attribute \u00b6 quickSaveItemApi : MSA_UI_API = None The MSA_UI_API used when the quick edit is configured to save in time. saveOrderApi class-attribute \u00b6 saveOrderApi : MSA_UI_API = None The api to save the sorting. silentPolling class-attribute \u00b6 silentPolling : bool = None Configure whether to hide loading animation when refreshing source class-attribute \u00b6 source : str = None Data mapping interface to return the value of a field, not set will default to use the interface to return ${items} or ${rows}, can also be set to the content of the upper-level data source stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : str = None Configure the conditions for stopping the refresh via an expression stopAutoRefreshWhenModalIsOpen class-attribute \u00b6 stopAutoRefreshWhenModalIsOpen : bool = None Turn off auto refresh when there is a popup box, and resume when the popup box is closed syncLocation class-attribute \u00b6 syncLocation : bool = None False # Whether to sync the parameters of the filter condition to the address bar, !!! !!! may change the data type after turning on, can't pass fastpi data verification syncResponse2Query class-attribute \u00b6 syncResponse2Query : bool = None True # Sync the return data to the filter. title class-attribute \u00b6 title : str = None \"\" # can be set to empty, when set to empty, there is no title bar type class-attribute \u00b6 type : str = 'crud' type specifies the CRUD renderer Classes \u00b6 Messages \u00b6 Bases: MSAUINode Attributes \u00b6 fetchFailed class-attribute \u00b6 fetchFailed : str = None prompt when fetch fails quickSaveFailed class-attribute \u00b6 quickSaveFailed : str = None prompt for quick save failure quickSaveSuccess class-attribute \u00b6 quickSaveSuccess : str = None QuickSaveSuccess hint saveOrderFailed class-attribute \u00b6 saveOrderFailed : str = None Hint for failed save order saveOrderSuccess class-attribute \u00b6 saveOrderSuccess : str = None prompt for order success Carousel \u00b6 Bases: MSAUINode Rotating image Attributes \u00b6 animation class-attribute \u00b6 animation : str = None \"fade\" # Toggle animation effect, default fade, also slide mode auto class-attribute \u00b6 auto : bool = True whether to rotate automatically className class-attribute \u00b6 className : str = None \"panel-default\" # class name of outer Dom controls class-attribute \u00b6 controls : list [ str ] = None \"['dots','arrows']\" # Show left and right arrows, bottom dots index controlsTheme class-attribute \u00b6 controlsTheme : str = None \"light\" # Color of left and right arrows, bottom dot index, default light, dark mode available duration class-attribute \u00b6 duration : str = None \"0.5s\" # the duration of the toggle animation height class-attribute \u00b6 height : str = None \"200px\" # height interval class-attribute \u00b6 interval : str = None \"5s\" # toggle animation interval itemSchema class-attribute \u00b6 itemSchema : dict = None Custom schema to display data options class-attribute \u00b6 options : List [ Item ] = None \"[]\" # Rotating panel data thumbMode class-attribute \u00b6 thumbMode : str = None \"cover\"|\"contain\" # default image zoom mode type class-attribute \u00b6 type : str = 'carousel' Specify as Carousel renderer width class-attribute \u00b6 width : str = None \"auto\" # width Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 description class-attribute \u00b6 description : str = None Image description descriptionClassName class-attribute \u00b6 descriptionClassName : str = None Image description class name href class-attribute \u00b6 href : str = None link to the image's open URL html class-attribute \u00b6 html : str = None HTML customization, same as Tpl image class-attribute \u00b6 image : str = None Image link imageClassName class-attribute \u00b6 imageClassName : str = None Image class name title class-attribute \u00b6 title : str = None Image title titleClassName class-attribute \u00b6 titleClassName : str = None Image title class name Chart \u00b6 Bases: MSAUINode chart: https://echarts.apache.org/zh/option.html#title Attributes \u00b6 api class-attribute \u00b6 api : MSA_UI_API = None Configuration item interface address body class-attribute \u00b6 body : MSAUISchemaNode = None Content container className class-attribute \u00b6 className : str = None class name of the outer Dom config class-attribute \u00b6 config : Union [ dict , str ] = None Set the configuration of eschars, when it is string, you can set function and other configuration items height class-attribute \u00b6 height : str = None Set the height of the root element initFetch class-attribute \u00b6 initFetch : bool = None Whether to request the interface when the component is initialized interval class-attribute \u00b6 interval : int = None Refresh time (min 1000) replaceChartOption class-attribute \u00b6 replaceChartOption : bool = None False # Does each update completely override the configuration item or append it? source class-attribute \u00b6 source : dict = None Get the value of a variable in the data chain as a configuration via data mapping style class-attribute \u00b6 style : dict = None Set the style of the root element trackExpression class-attribute \u00b6 trackExpression : str = None Update the chart when the value of this expression has changed type class-attribute \u00b6 type : str = 'chart' Specify as chart renderer width class-attribute \u00b6 width : str = None Set the width of the root element ChartRadios \u00b6 Bases: Radios radio box Attributes \u00b6 chartValueField class-attribute \u00b6 chartValueField : str = None \"value\" # chart value field name config class-attribute \u00b6 config : dict = None echart chart configuration showTooltipOnHighlight class-attribute \u00b6 showTooltipOnHighlight : bool = None False # whether to show tooltip when highlighted type class-attribute \u00b6 type : str = 'chart-radios' Checkbox \u00b6 Bases: FormItem Checkbox Attributes \u00b6 falseValue class-attribute \u00b6 falseValue : Any = None Identifies a false value option class-attribute \u00b6 option : str = None option description trueValue class-attribute \u00b6 trueValue : Any = None Identifies the true value type class-attribute \u00b6 type : str = 'checkbox' Checkboxes \u00b6 Bases: FormItem checkboxes Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None Configure the add options interface addControls class-attribute \u00b6 addControls : List [ FormItem ] = None Customize the new form item checkAll class-attribute \u00b6 checkAll : bool = None False # If or not checkAll is supported columnsCount class-attribute \u00b6 columnsCount : int = None 1 # How many columns to display options by, default is one column creatable class-attribute \u00b6 creatable : bool = None False # New option createBtnLabel class-attribute \u00b6 createBtnLabel : str = None \"Add option\" # Add option defaultCheckAll class-attribute \u00b6 defaultCheckAll : bool = None False # Whether to check all by default deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None Configure the delete option interface delimiter class-attribute \u00b6 delimiter : str = None \",\" # Splice character editApi class-attribute \u00b6 editApi : MSA_UI_API = None Configure the edit options interface editControls class-attribute \u00b6 editControls : List [ FormItem ] = None Customize edit form items editable class-attribute \u00b6 editable : bool = None False # Edit options extractValue class-attribute \u00b6 extractValue : bool = None False # extract value inline class-attribute \u00b6 inline : bool = None True # Whether to display as one line joinValues class-attribute \u00b6 joinValues : bool = None True # splice values labelField class-attribute \u00b6 labelField : str = None \"label\" # option label field options class-attribute \u00b6 options : MSAOptionsNode = None Options group removable class-attribute \u00b6 removable : bool = None False # Remove options source class-attribute \u00b6 source : MSA_UI_API = None dynamic options group type class-attribute \u00b6 type : str = 'checkboxes' valueField class-attribute \u00b6 valueField : str = None \"value\" # option value field Code \u00b6 Bases: MSAUINode Code highlighting Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name editorTheme class-attribute \u00b6 editorTheme : str = None \"'vs'\" # theme, and 'vs-dark' language class-attribute \u00b6 language : str = None The highlighting language used, default is plaintext name class-attribute \u00b6 name : str = None Used as a variable mapping when in other components tabSize class-attribute \u00b6 tabSize : int = None 4 # Default tab size type class-attribute \u00b6 type : str = 'code' value class-attribute \u00b6 value : str = None The value of the displayed color wordWrap class-attribute \u00b6 wordWrap : str = None \"True\" # whether to wrap the line ColumnImage \u00b6 Bases: Image , TableColumn Image Column ColumnImages \u00b6 Bases: Images , TableColumn Image collection Column ColumnOperation \u00b6 Bases: TableColumn operationColumn Attributes \u00b6 buttons class-attribute \u00b6 buttons : List [ Union [ Action , MSAUINode ]] = None label class-attribute \u00b6 label : MSAUITemplate = None \"operation\" toggled class-attribute \u00b6 toggled : bool = None True type class-attribute \u00b6 type : str = 'operation' Combo \u00b6 Bases: FormItem combo Attributes \u00b6 addButtonClassName class-attribute \u00b6 addButtonClassName : str = None Add button CSS class name addButtonText class-attribute \u00b6 addButtonText : str = None \"Add\" # Add button text addable class-attribute \u00b6 addable : bool = False Whether to add canAccessSuperData class-attribute \u00b6 canAccessSuperData : bool = False Specifies whether the data from the upper level can be automatically fetched and mapped to form items conditions class-attribute \u00b6 conditions : dict = None Array of rendering types containing all conditions, test in a single array is the judgment condition, items in the array are the schema rendered when the condition is met deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None If configured, an api will be sent before deletion, and the deletion will be completed only if the request is successful deleteConfirmText class-attribute \u00b6 deleteConfirmText : str = None \"Confirm to delete?\" delimiter class-attribute \u00b6 delimiter : str = None \"False\" # What delimiter to use when flattening is on and joinValues is true. draggable class-attribute \u00b6 draggable : bool = False whether draggable sorting is possible, note that when draggable sorting is enabled, there will be an additional $id field draggableTip class-attribute \u00b6 draggableTip : str = None \"Can be reordered by dragging the [swap] button in each row\" # Text to indicate draggable flat class-attribute \u00b6 flat : bool = False Whether to flatten the results (remove the name), only valid if the length of items is 1 and multiple is true. formClassName class-attribute \u00b6 formClassName : str = None class name of a single group of form items items class-attribute \u00b6 items : List [ FormItem ] = None Combined form items to be displayed items[x].columnClassName: str = None # The class name of the column with which to configure the column width. Default is evenly distributed. items[x].unique: bool = None # Set whether the current column value is unique, i.e. no duplicate selections are allowed. joinValues class-attribute \u00b6 joinValues : bool = True Defaults to true when flattening is on, whether to send to the backend as a delimiter, otherwise as an array. maxLength class-attribute \u00b6 maxLength : int = None The maximum number of items to add minLength class-attribute \u00b6 minLength : int = None The minimum number of items to add multiLine class-attribute \u00b6 multiLine : bool = False Default is to display a row horizontally, set it to display vertically multiple class-attribute \u00b6 multiple : bool = False Whether or not to multi-select noBorder class-attribute \u00b6 noBorder : bool = False Whether to show border for a single group of table items nullable class-attribute \u00b6 nullable : bool = False Allow nullable, if the validator is configured inside the child form item and it is in single entry mode. Can allow the user to choose to clear (not filled). placeholder class-attribute \u00b6 placeholder : str = None \"``\" # Show when there is no member removable class-attribute \u00b6 removable : bool = False If or not it can be removed scaffold class-attribute \u00b6 scaffold : dict = {} The initial value of a single table item strictMode class-attribute \u00b6 strictMode : bool = True Default is strict mode, when set to false, when other table items are updated, the table items inside can also be retrieved in time, otherwise it will not. subFormMode class-attribute \u00b6 subFormMode : str = None \"normal\" # Optional normal, horizontal, inline syncFields class-attribute \u00b6 syncFields : List [ str ] = [] Configure sync fields. Only valid if strictMode is false. type class-attribute \u00b6 type : str = 'combo' typeSwitchable class-attribute \u00b6 typeSwitchable : bool = False whether the condition is switchable, used with conditions ConditionBuilder \u00b6 Bases: FormItem Combined Condition Attributes \u00b6 className class-attribute \u00b6 className : str = None outer dom class name fieldClassName class-attribute \u00b6 fieldClassName : str = None The class name of the input field fields class-attribute \u00b6 fields : List [ Field ] = None is an array type, each member represents an optional field, supports multiple layers, configuration example source class-attribute \u00b6 source : str = None pull configuration items via remote type class-attribute \u00b6 type : str = 'condition-builder' Classes \u00b6 Date \u00b6 Bases: Field date Attributes \u00b6 defaultValue class-attribute \u00b6 defaultValue : str = None default value format class-attribute \u00b6 format : str = None default \"YYYY-MM-DD\" value format inputFormat class-attribute \u00b6 inputFormat : str = None Default \"YYYY-MM-DD\" date format for display. type class-attribute \u00b6 type : str = 'date' Datetime \u00b6 Bases: Date datetime Attributes \u00b6 timeFormat class-attribute \u00b6 timeFormat : str = None Default \"HH:mm\" time format, determines which input boxes are available. type class-attribute \u00b6 type : str = 'datetime' Field \u00b6 Bases: MSAUINode Attributes \u00b6 defaultOp class-attribute \u00b6 defaultOp : str = None default to \"equal\" label class-attribute \u00b6 label : str = None Name of the field. operators class-attribute \u00b6 operators : list [ str ] = None Configure to override if you don't want that many. placeholder class-attribute \u00b6 placeholder : str = None Placeholder type class-attribute \u00b6 type : str = 'text' configured as \"text\" in the field configuration Number \u00b6 Bases: Field number Attributes \u00b6 maximum class-attribute \u00b6 maximum : float = None maximum value minimum class-attribute \u00b6 minimum : float = None minimum step class-attribute \u00b6 step : float = None step length type class-attribute \u00b6 type : str = 'number' Select \u00b6 Bases: Field Dropdown selection Attributes \u00b6 autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None AutoComplete will be called after each new input, and will return updated options according to the interface. options class-attribute \u00b6 options : MSAOptionsNode = None list of options, Array<{label: string, value: any}> searchable class-attribute \u00b6 searchable : bool = None If or not searchable source class-attribute \u00b6 source : MSA_UI_API = None Dynamic options, please configure api. type class-attribute \u00b6 type : str = 'select' Text \u00b6 Bases: Field text Time \u00b6 Bases: Date time Attributes \u00b6 type class-attribute \u00b6 type : str = 'datetime' Custom \u00b6 Bases: MSAUINode custom component Attributes \u00b6 className class-attribute \u00b6 className : str = None node class html class-attribute \u00b6 html : str = None Initialize node html id class-attribute \u00b6 id : str = None node id inline class-attribute \u00b6 inline : bool = False default use div tag, if true use span tag name class-attribute \u00b6 name : str = None node name onMount class-attribute \u00b6 onMount : str = None \"Function\" # The function to call after the node is initialized onUnmount class-attribute \u00b6 onUnmount : str = None \"Function\" # The function called when the node is destroyed onUpdate class-attribute \u00b6 onUpdate : str = None \"Function\" # Function to be called when data is updated type class-attribute \u00b6 type : str = 'custom' Dialog \u00b6 Bases: MSAUINode Dialog Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None If you want to not show the bottom button, you can configure: [] \"[Confirm] and [Cancel]\" body class-attribute \u00b6 body : MSAUISchemaNode = None Add content to the Dialog content area bodyClassName class-attribute \u00b6 bodyClassName : str = None \"modal-body\" # The style class name of the Dialog body area closeOnEsc class-attribute \u00b6 closeOnEsc : bool = None False # Whether to close the Dialog by pressing Esc data class-attribute \u00b6 data : dict = None Support data mapping, if not set will default to inherit data from the context of the trigger button. disabled class-attribute \u00b6 disabled : bool = None False # If this property is set, the Dialog is read only and no action is submitted. showCloseButton class-attribute \u00b6 showCloseButton : bool = None True # Whether to show the close button in the upper right corner showErrorMsg class-attribute \u00b6 showErrorMsg : bool = None True # Whether to show the error message in the lower left corner of the popup box size class-attribute \u00b6 size : Union [ str , SizeEnum ] = None Specify dialog size, supports: xs, sm, md, lg, xl, full title class-attribute \u00b6 title : MSAUISchemaNode = None popup layer title type class-attribute \u00b6 type : str = 'dialog' Specify as Dialog renderer Divider \u00b6 Bases: MSAUINode Attributes \u00b6 className class-attribute \u00b6 className : str = None class name of the outer Dom lineStyle class-attribute \u00b6 lineStyle : str = None The style of the divider line, supports dashed and solid type class-attribute \u00b6 type : str = 'divider' Divider Drawer \u00b6 Bases: MSAUINode drawer Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None Can be set without, only two buttons by default. \"[Confirm] and [Cancel]\" body class-attribute \u00b6 body : MSAUISchemaNode = None Add content to the Drawer content area bodyClassName class-attribute \u00b6 bodyClassName : str = None \"modal-body\" # The style class name of the Drawer body area closeOnEsc class-attribute \u00b6 closeOnEsc : bool = None False # Whether or not to support closing the Drawer by pressing Esc closeOnOutside class-attribute \u00b6 closeOnOutside : bool = None False # Whether to close the Drawer by clicking outside the content area data class-attribute \u00b6 data : dict = None Support data mapping, if not set will default to inherit data from the context of the trigger button. overlay class-attribute \u00b6 overlay : bool = None True # Whether or not to show the mask position class-attribute \u00b6 position : str = None 'left' # Position resizable class-attribute \u00b6 resizable : bool = None False # Whether the Drawer size can be changed by dragging and dropping size class-attribute \u00b6 size : Union [ str , SizeEnum ] = None Specify Drawer size, supports: xs, sm, md, lg title class-attribute \u00b6 title : MSAUISchemaNode = None popup layer title type class-attribute \u00b6 type : str = 'drawer' \"drawer\" is specified as the Drawer renderer Editor \u00b6 Bases: FormItem Code Editor Attributes \u00b6 allowFullscreen class-attribute \u00b6 allowFullscreen : bool = None False # switch to show full screen mode or not language class-attribute \u00b6 language : str = None \"javascript\" # Language highlighted by the editor, supported by the ${xxx} variable bat, c, coffeescript, cpp, csharp, css, dockerfile, fsharp, go, handlebars, html, ini, java javascript, json, less, lua, markdown, msdax, objective-c, php, plaintext, postiats, powershell, pug, python, r, razor, ruby, sb, scss, shell, sol, sql, swift, typescript, vb, xml, yaml options class-attribute \u00b6 options : dict = None other configurations of monaco editor, such as whether to display line numbers, etc., please refer to here, but can not set readOnly, read-only mode need to use disabled: true size class-attribute \u00b6 size : str = None \"md\" # editor height, can be md, lg, xl, xxl type class-attribute \u00b6 type : str = 'editor' Flex \u00b6 Bases: MSAUINode Attributes \u00b6 alignItems class-attribute \u00b6 alignItems : str = None \"stretch\", \"start\", \"flex-start\", \"flex-end\", \"end\", \"center\", \"baseline\" className class-attribute \u00b6 className : str = None css class name items class-attribute \u00b6 items : List [ MSAUISchemaNode ] = None justify class-attribute \u00b6 justify : str = None \"start\", \"flex-start\", \"center\", \"end\", \"flex-end\", \"space-around\", \"space-between\", \"space-evenly\" style class-attribute \u00b6 style : dict = None Custom style type class-attribute \u00b6 type : str = 'flex' Specify as Flex renderer Form \u00b6 Bases: MSAUINode Form Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None Form submit button, member of Action actionsClassName class-attribute \u00b6 actionsClassName : str = None Class name of actions api class-attribute \u00b6 api : MSA_UI_API = None The api used by Form to save data. asyncApi class-attribute \u00b6 asyncApi : MSA_UI_API = None After this property is set, the form will continue to poll the interface after it is submitted and sent to the saved interface until the finished property is returned as true. autoFocus class-attribute \u00b6 autoFocus : bool = None If or not autoFocus is enabled. body class-attribute \u00b6 body : List [ Union [ FormItem , MSAUISchemaNode ]] = None Form form item collection canAccessSuperData class-attribute \u00b6 canAccessSuperData : bool = None Specifies whether the data from the upper level can be automatically retrieved and mapped to the form item. checkInterval class-attribute \u00b6 checkInterval : int = None The time interval to poll the request, default is 3 seconds. Set asyncApi to be valid className class-attribute \u00b6 className : str = None The class name of the outer Dom clearPersistDataAfterSubmit class-attribute \u00b6 clearPersistDataAfterSubmit : bool = None Specify whether to clear the local cache after a successful form submission columnCount class-attribute \u00b6 columnCount : int = None How many columns are displayed for the form item debug class-attribute \u00b6 debug : bool = None finishedField class-attribute \u00b6 finishedField : Optional [ str ] = None Set this property if the field name that determines the finish is not finished, e.g. is_success horizontal class-attribute \u00b6 horizontal : Horizontal = None Useful when mode is horizontal. initApi class-attribute \u00b6 initApi : MSA_UI_API = None The api used by Form to get the initial data. initAsyncApi class-attribute \u00b6 initAsyncApi : MSA_UI_API = None The api used by Form to get the initial data, unlike initApi, it will keep polling the request until the finished property is returned as true. initCheckInterval class-attribute \u00b6 initCheckInterval : int = None After setting initAsyncApi, the default time interval for pulling initFetch class-attribute \u00b6 initFetch : bool = None When initApi or initAsyncApi is set, the request will start by default, but when set to false, the interface will not be requested from the beginning. initFetchOn class-attribute \u00b6 initFetchOn : str = None Use an expression to configure initFinishedField class-attribute \u00b6 initFinishedField : Optional [ str ] = None When initAsyncApi is set, the default is to determine if the request is completed by returning data.finished. interval class-attribute \u00b6 interval : int = None Refresh time (minimum 3000) messages class-attribute \u00b6 messages : Messages = None Message prompt override, the default message reads the message returned by MSA_UI_API, but it can be overridden here. mode class-attribute \u00b6 mode : DisplayModeEnum = None How the form is displayed, either: normal, horizontal or inline name class-attribute \u00b6 name : str = None Set a name so that other components can communicate with it panelClassName class-attribute \u00b6 panelClassName : str = None The class name of the outer panel persistData class-attribute \u00b6 persistData : str = None Specify a unique key to configure whether to enable local caching for the current form preventEnterSubmit class-attribute \u00b6 preventEnterSubmit : bool = None Disable carriage return to submit the form primaryField class-attribute \u00b6 primaryField : str = None Set primary key id, when set, only carry this data when detecting form completion (asyncApi). promptPageLeave class-attribute \u00b6 promptPageLeave : bool = None whether the form is not yet saved and will pop up before leaving the page to confirm. redirect class-attribute \u00b6 redirect : str = None When this property is set, the Form will automatically jump to the specified page after a successful save. Supports relative addresses, and absolute addresses (relative to the group). reload class-attribute \u00b6 reload : str = None Refresh the target object after the operation. Please fill in the name value set by the target component, if you fill in the name of window, the current page will be refreshed as a whole. resetAfterSubmit class-attribute \u00b6 resetAfterSubmit : bool = None whether to reset the form after submission rules class-attribute \u00b6 rules : list = None Form combination check rules Array<{rule:string;message:string}> silentPolling class-attribute \u00b6 silentPolling : bool = False Configure whether to show loading animation when refreshing stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : str = None Configure the conditions for stopping the refresh via an expression submitOnChange class-attribute \u00b6 submitOnChange : bool = None The form is submitted when it is modified submitOnInit class-attribute \u00b6 submitOnInit : bool = None Submit once at the beginning submitText class-attribute \u00b6 submitText : Optional [ str ] = None \"submit\" # The default submit button name, if set to null, the default button can be removed. target class-attribute \u00b6 target : str = None The default form submission saves the data itself by sending the api, but you can set the name value of another form or the name value of another CRUD model. If the target is a Form, the target Form will retrigger initApi and the api will get the current form data. If the target is a CRUD model, the target model retriggers the search with the current Form data as the argument. When the target is a window, the current form data will be attached to the page address. title class-attribute \u00b6 title : Optional [ str ] = None Title of the Form trimValues class-attribute \u00b6 trimValues : bool = None trim each value of the current form item type class-attribute \u00b6 type : str = 'form' \"form\" is specified as a Form renderer wrapWithPanel class-attribute \u00b6 wrapWithPanel : bool = None Whether to let Form wrap with panel, set to false and actions will be invalid. Classes \u00b6 Messages \u00b6 Bases: MSAUINode Attributes \u00b6 fetchFailed class-attribute \u00b6 fetchFailed : str = None prompt for fetch failure fetchSuccess class-attribute \u00b6 fetchSuccess : str = None Prompt when fetch succeeds saveFailed class-attribute \u00b6 saveFailed : str = None Prompt for failed save saveSuccess class-attribute \u00b6 saveSuccess : str = None Prompt for successful save FormItem \u00b6 Bases: MSAUINode FormItemGeneral Attributes \u00b6 className class-attribute \u00b6 className : str = None The outermost class name of the form copyable class-attribute \u00b6 copyable : Union [ bool , dict ] = None Whether copyable boolean or {icon: string, content:string} description class-attribute \u00b6 description : MSAUITemplate = None Form item description disabled class-attribute \u00b6 disabled : bool = None Whether the current form item is disabled or not disabledOn class-attribute \u00b6 disabledOn : MSAUIExpression = None The condition whether the current form item is disabled or not inline class-attribute \u00b6 inline : bool = None Whether inline mode inputClassName class-attribute \u00b6 inputClassName : str = None Form controller class name label class-attribute \u00b6 label : MSAUITemplate = None Label of the form item Template or false labelClassName class-attribute \u00b6 labelClassName : str = None Class name of the label labelRemark class-attribute \u00b6 labelRemark : Remark = None Description of the form item label name class-attribute \u00b6 name : str = None Field name, specifying the key of the form item when it is submitted placeholder class-attribute \u00b6 placeholder : str = None Form item description required class-attribute \u00b6 required : bool = None Whether or not it is required. requiredOn class-attribute \u00b6 requiredOn : MSAUIExpression = None Expression to configure if the current form entry is required. submitOnChange class-attribute \u00b6 submitOnChange : bool = None Whether to submit the current form when the value of the form item changes. type class-attribute \u00b6 type : str = 'input-text' Specify the form item type validateApi class-attribute \u00b6 validateApi : MSAUIExpression = None Form validation interface validations class-attribute \u00b6 validations : Union [ Validation , MSAUIExpression ] = None Form item value format validation, support setting multiple, multiple rules separated by English commas. value class-attribute \u00b6 value : Union [ int , str ] = None The value of the field visible class-attribute \u00b6 visible : MSAUIExpression = None The condition whether the current form item is disabled or not visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None The condition if the current table item is disabled or not Grid \u00b6 Bases: MSAUINode Attributes \u00b6 align class-attribute \u00b6 align : str = None 'left'|'right'|'between'|'center = None # horizontal alignment className class-attribute \u00b6 className : str = None Class name of the outer Dom columns class-attribute \u00b6 columns : List [ MSAUISchemaNode ] = None gap class-attribute \u00b6 gap : str = None 'xs'|'sm'|'base'|'none'|'md'|'lg = None # Horizontal spacing type class-attribute \u00b6 type : str = 'grid' Specify as Grid renderer valign class-attribute \u00b6 valign : str = None 'top'|'middle'|'bottom'|'between = None # Vertical alignment Classes \u00b6 Column \u00b6 Bases: MSAUINode Attributes \u00b6 ClassName class-attribute \u00b6 ClassName : str = None Column class name body class-attribute \u00b6 body : List [ MSAUISchemaNode ] = None lg class-attribute \u00b6 lg : int = None \"auto\" # Width ratio: 1 - 12 md class-attribute \u00b6 md : int = None \"auto\" # Width ratio: 1 - 12 sm class-attribute \u00b6 sm : int = None \"auto\" # Width ratio: 1 - 12 valign class-attribute \u00b6 valign : str = None 'top'|'middle'|'bottom'|'between = None # Vertical alignment of current column content xs class-attribute \u00b6 xs : int = None \"auto\" # Width percentage: 1 - 12 Group \u00b6 Bases: InputGroup Form Item Group Attributes \u00b6 direction class-attribute \u00b6 direction : str = None \"horizontal\" # You can configure whether to display horizontally or vertically. The corresponding configuration items are: vertical, horizontal gap class-attribute \u00b6 gap : str = None spacing between form items, optional: xs, sm, normal mode class-attribute \u00b6 mode : DisplayModeEnum = None Display default, same mode as in Form type class-attribute \u00b6 type : str = 'group' Hidden \u00b6 Bases: FormItem hiddenField Attributes \u00b6 type class-attribute \u00b6 type : str = 'hidden' Horizontal \u00b6 Bases: MSAUINode Attributes \u00b6 left class-attribute \u00b6 left : int = None The width of the left label as a percentage offset class-attribute \u00b6 offset : int = None The offset of the right controller when no label is set right class-attribute \u00b6 right : int = None The width share of the right controller. Html \u00b6 Bases: MSAUINode Html Node Attributes \u00b6 html class-attribute \u00b6 html : str html Use MSAUITpl when you need to get variables in the data field. type class-attribute \u00b6 type : str = 'html' Specify as html component Icon \u00b6 Bases: MSAUINode icon Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name icon class-attribute \u00b6 icon : str = None icon name, supports fontawesome v4 or use url type class-attribute \u00b6 type : str = 'icon' Specify the component type Iframe \u00b6 Bases: MSAUINode Iframe Attributes \u00b6 className class-attribute \u00b6 className : str = None The class name of the iFrame frameBorder class-attribute \u00b6 frameBorder : list = None frameBorder height class-attribute \u00b6 height : Union [ int , str ] = None \"100%\" # iframe height src class-attribute \u00b6 src : str = None iframe address style class-attribute \u00b6 style : dict = None Style object type class-attribute \u00b6 type : str = 'iframe' Specify as iFrame renderer width class-attribute \u00b6 width : Union [ int , str ] = None \"100%\" # iframe width Image \u00b6 Bases: MSAUINode image Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name defaultImage class-attribute \u00b6 defaultImage : str = None Image to display when no data is available enlargeAble class-attribute \u00b6 enlargeAble : bool = None Support for enlarge preview enlargeCaption class-attribute \u00b6 enlargeCaption : str = None Description of the enlarged preview enlargeTitle class-attribute \u00b6 enlargeTitle : str = None The title of the enlarged preview height class-attribute \u00b6 height : int = None Image thumbnail height href class-attribute \u00b6 href : MSAUITemplate = None External link address imageCaption class-attribute \u00b6 imageCaption : str = None description imageClassName class-attribute \u00b6 imageClassName : str = None Image CSS class name imageMode class-attribute \u00b6 imageMode : str = None \"thumb\" # Image display mode, optional: 'thumb', 'original' i.e.: thumbnail mode or original image mode originalSrc class-attribute \u00b6 originalSrc : str = None Original image address placeholder class-attribute \u00b6 placeholder : str = None Placeholder text src class-attribute \u00b6 src : str = None Thumbnail address thumbClassName class-attribute \u00b6 thumbClassName : str = None Image thumbnail CSS class name thumbMode class-attribute \u00b6 thumbMode : str = None \"contain\" # Preview mode, optional: 'w-full', 'h-full', 'contain', 'cover' thumbRatio class-attribute \u00b6 thumbRatio : str = None \"1:1\" # The ratio of the preview image, optional: '1:1', '4:3', '16:9' title class-attribute \u00b6 title : str = None title type class-attribute \u00b6 type : str = 'image' \"image\" if in Table, Card and List; \"static-image\" if used as a static display in Form width class-attribute \u00b6 width : int = None Image scaling width Images \u00b6 Bases: MSAUINode images collection Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name defaultImage class-attribute \u00b6 defaultImage : str = None Default image to display delimiter class-attribute \u00b6 delimiter : str = None \",\" # separator to split when value is a string enlargeAble class-attribute \u00b6 enlargeAble : bool = None Support enlarge preview originalSrc class-attribute \u00b6 originalSrc : str = None The address of the original image, supports data mapping to get the image variables in the object source class-attribute \u00b6 source : str = None data source src class-attribute \u00b6 src : str = None Address of the preview image, supports data mapping to get the image variables in the object thumbMode class-attribute \u00b6 thumbMode : str = None \"contain\" # preview image mode, optional: 'w-full', 'h-full', 'contain', 'cover' thumbRatio class-attribute \u00b6 thumbRatio : str = None \"1:1\" # Preview ratio, optional: '1:1', '4:3', '16:9' type class-attribute \u00b6 type : str = 'images' \"images\" if in Table, Card and List; \"static-images\" if used as a static display in Form value class-attribute \u00b6 value : Union [ str , List [ str ], List [ dict ]] = None array of images InputArray \u00b6 Bases: FormItem arrayInputArray Attributes \u00b6 addButtonText class-attribute \u00b6 addButtonText : str = None \"Add\" # Add button text addable class-attribute \u00b6 addable : bool = None Whether addable. draggable class-attribute \u00b6 draggable : bool = False whether draggable, note that when draggable is enabled, there will be an extra $id field draggableTip class-attribute \u00b6 draggableTip : str = None draggable prompt text, default is: \"can be adjusted by dragging the [swap] button in each row\" items class-attribute \u00b6 items : FormItem = None Configure single-item form type maxLength class-attribute \u00b6 maxLength : int = None Limit the maximum length minLength class-attribute \u00b6 minLength : int = None Limit the minimum length removable class-attribute \u00b6 removable : bool = None Whether removable type class-attribute \u00b6 type : str = 'input-array' InputCity \u00b6 Bases: FormItem city selector Attributes \u00b6 allowCity class-attribute \u00b6 allowCity : bool = None True # Allow city selection allowDistrict class-attribute \u00b6 allowDistrict : bool = None True # Allow district selection extractValue class-attribute \u00b6 extractValue : bool = None True # whether to extract the value, if set to false the value format will become an object containing code, province, city and district text information. searchable class-attribute \u00b6 searchable : bool = None False # Whether or not the search box is available type class-attribute \u00b6 type : str = 'location-city' InputColor \u00b6 Bases: FormItem color picker Attributes \u00b6 allowCustomColor class-attribute \u00b6 allowCustomColor : bool = None True # When false, only colors can be selected, use presetColors to set the color selection range clearable class-attribute \u00b6 clearable : bool = None \"label\" # whether to show clear button format class-attribute \u00b6 format : str = None \"hex\" # Please choose hex, hls, rgb or rgba. presetColors class-attribute \u00b6 presetColors : List [ str ] = None \"selector preset color values\" # default color at the bottom of the selector, if the array is empty, no default color is shown resetValue class-attribute \u00b6 resetValue : str = None \"\" # After clearing, the form item value is adjusted to this value type class-attribute \u00b6 type : str = 'input-color' InputDate \u00b6 Bases: FormItem date Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None True # clearable or not closeOnSelect class-attribute \u00b6 closeOnSelect : bool = None False # Whether to close the selection box immediately after tapping a date embed class-attribute \u00b6 embed : bool = None False # Whether to inline mode format class-attribute \u00b6 format : str = None \"X\" # Date picker value format, see documentation for more format types inputFormat class-attribute \u00b6 inputFormat : str = None \"YYYY-DD-MM\" # Date picker display format, i.e. timestamp format, see documentation for more format types largeMode class-attribute \u00b6 largeMode : bool = None False # Zoom mode maxDate class-attribute \u00b6 maxDate : str = None Limit the maximum date minDate class-attribute \u00b6 minDate : str = None Restrict the minimum date placeholder class-attribute \u00b6 placeholder : str = None \"Please select a date\" # Placeholder text scheduleAction class-attribute \u00b6 scheduleAction : MSAUISchemaNode = None Custom schedule display scheduleClassNames class-attribute \u00b6 scheduleClassNames : List [ str ] = None \"['bg-warning','bg-danger','bg-success','bg-info','bg-secondary']\" schedules class-attribute \u00b6 schedules : Union [ list , str ] = None Show schedules in calendar, can set static data or take data from context, className reference background color shortcuts class-attribute \u00b6 shortcuts : str = None Date shortcuts timeConstraints class-attribute \u00b6 timeConstraints : dict = None True # See also: react-datetime type class-attribute \u00b6 type : str = 'input-date' utc class-attribute \u00b6 utc : bool = None False # Save utc value value class-attribute \u00b6 value : str = None Default value InputDateRange \u00b6 Bases: InputDatetimeRange dateRange Attributes \u00b6 maxDuration class-attribute \u00b6 maxDuration : str = None Limit the maximum span, e.g. 1year minDuration class-attribute \u00b6 minDuration : str = None Limit the minimum span, e.g. 2days type class-attribute \u00b6 type : str = 'input-date-range' InputDatetime \u00b6 Bases: FormItem date Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None True # clearable or not embed class-attribute \u00b6 embed : bool = None False # Whether to inline format class-attribute \u00b6 format : str = None \"X\" # Date time selector value format, see documentation for more format types inputFormat class-attribute \u00b6 inputFormat : str = None \"YYYY-MM-DD HH ss\" # Date and time picker display format, i.e. timestamp format, see documentation for more format types maxDate class-attribute \u00b6 maxDate : str = None Limit the maximum date and time minDate class-attribute \u00b6 minDate : str = None Limit the minimum date and time placeholder class-attribute \u00b6 placeholder : str = None \"Please select the date and time\" # Placeholder text shortcuts class-attribute \u00b6 shortcuts : str = None Date and time shortcuts timeConstraints class-attribute \u00b6 timeConstraints : dict = None True # See also: react-datetime type class-attribute \u00b6 type : str = 'input-datetime' utc class-attribute \u00b6 utc : bool = None False # Save utc value value class-attribute \u00b6 value : str = None Default value InputDatetimeRange \u00b6 Bases: InputTimeRange DateTimeRange Attributes \u00b6 maxDate class-attribute \u00b6 maxDate : str = None Limit the maximum date and time, use the same as limit range minDate class-attribute \u00b6 minDate : str = None Limit the minimum date and time, use the same as limit range ranges class-attribute \u00b6 ranges : Union [ str , List [ str ]] = None \"yesterday,7daysago,prevweek,thismonth,prevmonth,prevquarter\" Date range shortcut. optional: today,yesterday,1dayago,7daysago,30daysago,90daysago,prevweek,thismonth,thisquarter,prevmonth,prevquarter type class-attribute \u00b6 type : str = 'input-datetime-range' utc class-attribute \u00b6 utc : bool = None False # Save UTC value InputExcel \u00b6 Bases: FormItem Parse Excel Attributes \u00b6 allSheets class-attribute \u00b6 allSheets : bool = None False # whether to parse all sheets includeEmpty class-attribute \u00b6 includeEmpty : bool = None True # whether to include null values parseMode class-attribute \u00b6 parseMode : str = None 'array' or 'object' parse mode plainText class-attribute \u00b6 plainText : bool = None True # Whether to parse as plain text type class-attribute \u00b6 type : str = 'input-excel' InputFile \u00b6 Bases: FormItem FileUpload Attributes \u00b6 accept class-attribute \u00b6 accept : str = None \"text/plain\" # Only plain text is supported by default, to support other types, please configure this attribute to have the file suffix .xxx asBase64 class-attribute \u00b6 asBase64 : bool = None False # Assign the file as base64 to the current component asBlob class-attribute \u00b6 asBlob : bool = None False # Assign the file to the current component in binary form autoFill class-attribute \u00b6 autoFill : Dict [ str , str ] = None After a successful upload, you can configure autoFill to populate a form item with the values returned by the upload interface (not supported under non-form for now) autoUpload class-attribute \u00b6 autoUpload : bool = None True # Automatically start uploading after no selection btnLabel class-attribute \u00b6 btnLabel : str = None The text of the upload button chunkApi class-attribute \u00b6 chunkApi : MSA_UI_API = None chunkApi chunkSize class-attribute \u00b6 chunkSize : int = None 5 * 1024 * 1024 # chunk size delimiter class-attribute \u00b6 delimiter : str = None \",\" # Splice character downloadUrl class-attribute \u00b6 downloadUrl : Union [ str , bool ] = None Version 1.1.6 starts to support post:http://xxx.com/${value} this way, The default display of the file path will support direct download, you can support adding a prefix such as: http://xx.dom/filename= , if you do not want this, you can set the current configuration item to false. extractValue class-attribute \u00b6 extractValue : bool = None False # Extract the value fileField class-attribute \u00b6 fileField : str = None \"file\" # You can ignore this attribute if you don't want to store it yourself. finishChunkApi class-attribute \u00b6 finishChunkApi : MSA_UI_API = None finishChunkApi hideUploadButton class-attribute \u00b6 hideUploadButton : bool = None False # Hide the upload button joinValues class-attribute \u00b6 joinValues : bool = None True # Splice values maxLength class-attribute \u00b6 maxLength : int = None No limit by default, when set, only the specified number of files will be allowed to be uploaded at a time. maxSize class-attribute \u00b6 maxSize : int = None No limit by default, when set, files larger than this value will not be allowed to be uploaded. The unit is B multiple class-attribute \u00b6 multiple : bool = None False # Whether to select multiple. nameField class-attribute \u00b6 nameField : str = None \"name\" # Which field the interface returns to identify the file name receiver class-attribute \u00b6 receiver : MSA_UI_API = None Upload file interface startChunkApi class-attribute \u00b6 startChunkApi : MSA_UI_API = None startChunkApi stateTextMap class-attribute \u00b6 stateTextMap : dict = None Upload state text, Default: {init: '', pending: 'Waiting for upload', uploading: 'Uploading', error: 'Upload error', uploaded: 'Uploaded',ready: ''} type class-attribute \u00b6 type : str = 'input-file' urlField class-attribute \u00b6 urlField : str = None \"url\" # The field name of the file download address. useChunk class-attribute \u00b6 useChunk : bool = None The server where msa_ui is hosted restricts the file upload size to 10M, so msa_ui will automatically change to chunk upload mode when the user selects a large file. valueField class-attribute \u00b6 valueField : str = None \"value\" # Which field is used to identify the value of the file InputGroup \u00b6 Bases: FormItem InputBoxGroup Attributes \u00b6 body class-attribute \u00b6 body : List [ FormItem ] = None collection of form items className class-attribute \u00b6 className : str = None CSS class name type class-attribute \u00b6 type : str = 'input-group' InputImage \u00b6 Bases: FormItem Image Upload Attributes \u00b6 accept class-attribute \u00b6 accept : str = None \".jpeg,.jpg,.png,.gif\" # Supported image type formats, please configure this attribute as image suffix, e.g. .jpg, .png autoFill class-attribute \u00b6 autoFill : Dict [ str , str ] = None After successful upload, you can configure autoFill to fill the value returned by the upload interface into a form item (not supported under non-form) autoUpload class-attribute \u00b6 autoUpload : bool = None True # Automatically start uploading after no selection crop class-attribute \u00b6 crop : Union [ bool , CropInfo ] = None Used to set if crop is supported. cropFormat class-attribute \u00b6 cropFormat : str = None \"image/png\" # Crop file format cropQuality class-attribute \u00b6 cropQuality : int = None 1 # quality of the crop file format, for jpeg/webp, takes values between 0 and 1 delimiter class-attribute \u00b6 delimiter : str = None \",\" # Splice character extractValue class-attribute \u00b6 extractValue : bool = None False # Extract the value fileField class-attribute \u00b6 fileField : str = None \"file\" # You can ignore this property if you don't want to store it yourself. fixedSize class-attribute \u00b6 fixedSize : bool = None Whether to enable fixed size, if so, set fixedSizeClassName at the same time fixedSizeClassName class-attribute \u00b6 fixedSizeClassName : str = None When fixedSize is enabled, the display size is controlled by this value. frameImage class-attribute \u00b6 frameImage : str = None Default placeholder image address hideUploadButton class-attribute \u00b6 hideUploadButton : bool = None False # Hide the upload button joinValues class-attribute \u00b6 joinValues : bool = None True # Splice values limit class-attribute \u00b6 limit : Limit = None Limit the size of the image, won't allow uploads beyond that. maxLength class-attribute \u00b6 maxLength : int = None No limit by default, when set, only the specified number of files will be allowed to be uploaded at once. maxSize class-attribute \u00b6 maxSize : int = None No limit by default, when set, file size larger than this value will not be allowed to upload. The unit is B multiple class-attribute \u00b6 multiple : bool = None False # Whether to select multiple. receiver class-attribute \u00b6 receiver : MSA_UI_API = None Upload file interface type class-attribute \u00b6 type : str = 'input-image' Classes \u00b6 CropInfo \u00b6 Bases: MSABaseUIModel Attributes \u00b6 aspectRatio class-attribute \u00b6 aspectRatio : float = None Crop ratio. Floating point type, default 1 i.e. 1:1, if you want to set 16:9 please set 1.77777777777777 i.e. 16 / 9. rotatable class-attribute \u00b6 rotatable : bool = None False # If or not rotatable when cropping. scalable class-attribute \u00b6 scalable : bool = None False # Whether to scale when cropping viewMode class-attribute \u00b6 viewMode : int = None 1 # View mode when cropping, 0 is no limit Limit \u00b6 Bases: MSABaseUIModel Attributes \u00b6 aspectRatio class-attribute \u00b6 aspectRatio : float = None Limit the aspect ratio of the image, the format is floating point number, default 1 is 1:1. If you want to set 16:9, please set 1.7777777777777777 i.e. 16 / 9. If you don't want to limit the ratio, please set the empty string. height class-attribute \u00b6 height : int = None Limit the height of the image. maxHeight class-attribute \u00b6 maxHeight : int = None Limit the maximum height of the image. maxWidth class-attribute \u00b6 maxWidth : int = None Limit the maximum width of the image. minHeight class-attribute \u00b6 minHeight : int = None Limit the minimum height of the image. minWidth class-attribute \u00b6 minWidth : int = None Limit the minimum width of the image. width class-attribute \u00b6 width : int = None Limit the width of the image. InputMonth \u00b6 Bases: FormItem month Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None True # clearable or not format class-attribute \u00b6 format : str = None \"X\" # month selector value format, see moment for more format types inputFormat class-attribute \u00b6 inputFormat : str = None \"YYYY-MM\" # Month selector display format, i.e. timestamp format, see moment for more format types placeholder class-attribute \u00b6 placeholder : str = None \"Please select a month\" # Placeholder text type class-attribute \u00b6 type : str = 'input-month' value class-attribute \u00b6 value : str = None Default value InputMonthRange \u00b6 Bases: InputDateRange MonthRange Attributes \u00b6 type class-attribute \u00b6 type : str = 'input-month-range' InputNumber \u00b6 Bases: FormItem Number input box Attributes \u00b6 kilobitSeparator class-attribute \u00b6 kilobitSeparator : bool = None thousand separator max class-attribute \u00b6 max : Union [ int , MSAUITemplate ] = None max min class-attribute \u00b6 min : Union [ int , MSAUITemplate ] = None min precision class-attribute \u00b6 precision : int = None precision, i.e., the number of decimal places prefix class-attribute \u00b6 prefix : str = None prefix showSteps class-attribute \u00b6 showSteps : bool = None True # Whether to show the up and down click buttons step class-attribute \u00b6 step : int = None step size suffix class-attribute \u00b6 suffix : str = None suffix type class-attribute \u00b6 type : str = 'input-number' InputPassword \u00b6 Bases: InputText Password input box Attributes \u00b6 type class-attribute \u00b6 type : str = 'input-password' InputRichText \u00b6 Bases: FormItem rich-text editor Attributes \u00b6 buttons class-attribute \u00b6 buttons : list [ str ] = None froala specific, configure the buttons to be displayed, tinymce can set the toolbar string with the preceding options options class-attribute \u00b6 options : dict = None Need to refer to tinymce or froala's documentation receiver class-attribute \u00b6 receiver : MSA_UI_API = None '' # default image save MSA_UI_API saveAsUbb class-attribute \u00b6 saveAsUbb : bool = None whether to save as ubb format size class-attribute \u00b6 size : str = None Size of the box, can be set to md or lg type class-attribute \u00b6 type : str = 'input-rich-text' vendor class-attribute \u00b6 vendor : str = None \"vendor\": \"froala\" , configured to use the froala editor videoReceiver class-attribute \u00b6 videoReceiver : MSA_UI_API = None '' # Default video saving MSA_UI_API InputTable \u00b6 Bases: FormItem table Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None The MSA_UI_API to submit when adding addBtnIcon class-attribute \u00b6 addBtnIcon : str = None \"plus\" # Add button icon addBtnLabel class-attribute \u00b6 addBtnLabel : str = None Add button name addable class-attribute \u00b6 addable : bool = None False # Whether to add a row canAccessSuperData class-attribute \u00b6 canAccessSuperData : bool = None False # Whether to access parent data, that is, the same level of data in the form, usually need to be used with strictMode cancelBtnIcon class-attribute \u00b6 cancelBtnIcon : str = None \"times\" # Cancel the edit button icon cancelBtnLabel class-attribute \u00b6 cancelBtnLabel : str = None \"\" # Cancel the edit button name columns class-attribute \u00b6 columns : list = None \"[]\" # Column information, columns[x].quickEdit: boolean|object = None # Used in conjunction with editable being true, columns[x].quickEditOnUpdate: boolean|object = None # can be used to distinguish between new mode and update mode editing configuration \u00b6 confirmBtnIcon class-attribute \u00b6 confirmBtnIcon : str = None \"check\" # Confirm edit button icon confirmBtnLabel class-attribute \u00b6 confirmBtnLabel : str = None \"\" # Confirm edit button name copyBtnIcon class-attribute \u00b6 copyBtnIcon : str = None \"copy\" # Copy the button icon copyBtnLabel class-attribute \u00b6 copyBtnLabel : str = None Copy button text deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None MSA_UI_API submitted when deleting deleteBtnIcon class-attribute \u00b6 deleteBtnIcon : str = None \"minus\" # Delete the button icon deleteBtnLabel class-attribute \u00b6 deleteBtnLabel : str = None \"\" # Delete the button name editBtnIcon class-attribute \u00b6 editBtnIcon : str = None \"pencil\" # editBtnIcon editBtnLabel class-attribute \u00b6 editBtnLabel : str = None \"\" # Edit button name editable class-attribute \u00b6 editable : bool = None False # Whether to edit needConfirm class-attribute \u00b6 needConfirm : bool = None True # whether to confirm the operation, can be used to control the interaction of the form perPage class-attribute \u00b6 perPage : int = None Set how many data to display on a page. 10 removable class-attribute \u00b6 removable : bool = None False # Whether to remove showAddBtn class-attribute \u00b6 showAddBtn : bool = None True # Whether to show the add button showIndex class-attribute \u00b6 showIndex : bool = None False # Show serial number strictMode class-attribute \u00b6 strictMode : bool = None True # For performance, the default value changes of other form items will not update the current form, sometimes you need to enable this in order to synchronize access to other form fields. type class-attribute \u00b6 type : str = 'input-table' Specify as Table renderer updateApi class-attribute \u00b6 updateApi : MSA_UI_API = None The MSA_UI_API submitted when modifying InputText \u00b6 Bases: FormItem input-box Attributes \u00b6 addOn class-attribute \u00b6 addOn : MSAUISchemaNode = None Input box add-on, such as with a prompt text, or with a submit button. autoComplete class-attribute \u00b6 autoComplete : Union [ str , MSA_UI_API ] = None autoComplete clearable class-attribute \u00b6 clearable : bool = None Whether to clear or not creatable class-attribute \u00b6 creatable : bool = None If or not creatable, default is yes, unless set to false which means that only the value in the option can be selected. delimiter class-attribute \u00b6 delimiter : str = None Splice character \",\" extractValue class-attribute \u00b6 extractValue : bool = None extract value joinValues class-attribute \u00b6 joinValues : bool = None True # Splice values labelField class-attribute \u00b6 labelField : str = None option label field \"label\" maxLength class-attribute \u00b6 maxLength : int = None Limit the maximum number of words minLength class-attribute \u00b6 minLength : int = None Limit the minimum number of words multiple class-attribute \u00b6 multiple : bool = None Whether to multi-select options class-attribute \u00b6 options : Union [ List [ str ], List [ dict ]] = None option group prefix class-attribute \u00b6 prefix : str = None prefix resetValue class-attribute \u00b6 resetValue : str = None Set the value given by this configuration item after clearing. showCounter class-attribute \u00b6 showCounter : bool = None Whether to show the counter source class-attribute \u00b6 source : Union [ str , MSA_UI_API ] = None dynamic options group suffix class-attribute \u00b6 suffix : str = None suffix trimContents class-attribute \u00b6 trimContents : bool = None Whether to remove the first and last blank text. type class-attribute \u00b6 type : str = 'input-text' input-text|input-url|input-email|input-password|divider valueField class-attribute \u00b6 valueField : str = None option value field \"value\" InputTime \u00b6 Bases: FormItem time Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None True # clearable or not format class-attribute \u00b6 format : str = None \"X\" # Time picker value format, see moment for more format types inputFormat class-attribute \u00b6 inputFormat : str = None \"HH:mm\" # Time picker display format, i.e. timestamp format, see moment for more format types placeholder class-attribute \u00b6 placeholder : str = None \"Please select time\" # Placeholder text timeConstraints class-attribute \u00b6 timeConstraints : dict = None True # See also: react-datetime timeFormat class-attribute \u00b6 timeFormat : str = None \"HH:mm\" # time selector value format, see moment for more format types type class-attribute \u00b6 type : str = 'input-time' value class-attribute \u00b6 value : str = None Default value InputTimeRange \u00b6 Bases: FormItem TimeRange Attributes \u00b6 clearable class-attribute \u00b6 clearable : bool = None True # clearable or not embed class-attribute \u00b6 embed : bool = None False # Whether inline mode format class-attribute \u00b6 format : str = None \"HH:mm\" # time range selector value format inputFormat class-attribute \u00b6 inputFormat : str = None \"HH:mm\" # Time range selector display format placeholder class-attribute \u00b6 placeholder : str = None \"Please select a time range\" # Placeholder text timeFormat class-attribute \u00b6 timeFormat : str = None \"HH:mm\" # time range selector value format type class-attribute \u00b6 type : str = 'input-time-range' InputTree \u00b6 Bases: FormItem tree selector box Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None Configure the add options interface addControls class-attribute \u00b6 addControls : List [ FormItem ] = None Customize the new form items autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None auto prompt complement cascade class-attribute \u00b6 cascade : bool = None False # Do not automatically select children when parent is selected. creatable class-attribute \u00b6 creatable : bool = None False # Add options deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None For lazy loading, please configure defer to true, then configure deferApi to complete lazy loading deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None Configure the delete option interface delimiter class-attribute \u00b6 delimiter : str = None \"False\" # Splice character editApi class-attribute \u00b6 editApi : MSA_UI_API = None Configure the edit options interface editControls class-attribute \u00b6 editControls : List [ FormItem ] = None Customize edit form items editable class-attribute \u00b6 editable : bool = None False # Edit options enableNodePath class-attribute \u00b6 enableNodePath : bool = None False # Whether to enable node path mode extractValue class-attribute \u00b6 extractValue : bool = None False # extract value hideRoot class-attribute \u00b6 hideRoot : bool = None True # If you want to show a top node, set to false iconField class-attribute \u00b6 iconField : str = None \"icon\" # Icon value field initiallyOpen class-attribute \u00b6 initiallyOpen : bool = None True # Set whether to expand all levels by default. joinValues class-attribute \u00b6 joinValues : bool = None True # join values labelField class-attribute \u00b6 labelField : str = None \"label\" # option label field maxLength class-attribute \u00b6 maxLength : int = None Maximum number of nodes to select minLength class-attribute \u00b6 minLength : int = None Minimum number of selected nodes multiple class-attribute \u00b6 multiple : bool = None False # Whether to multiple select onlyChildren class-attribute \u00b6 onlyChildren : bool = None False # Whether to add only its children to the value when the parent node is selected in multiple selection. options class-attribute \u00b6 options : MSAOptionsNode = None options group pathSeparator class-attribute \u00b6 pathSeparator : str = None \"/\" # Separator for node paths, takes effect when enableNodePath is true removable class-attribute \u00b6 removable : bool = None False # Remove options rootCreatable class-attribute \u00b6 rootCreatable : bool = None False # Whether top-level nodes can be created rootCreateTip class-attribute \u00b6 rootCreateTip : str = None \"Add first-level node\" # Hover tip for creating top-level nodes rootLabel class-attribute \u00b6 rootLabel : bool = None \"top\" # Useful when hideRoot is not false, to set the text of the top node. searchable class-attribute \u00b6 searchable : bool = None False # Searchable or not, only works if type is tree-select selectFirst class-attribute \u00b6 selectFirst : bool = None showIcon class-attribute \u00b6 showIcon : bool = None True # Whether to show the icon showRadio class-attribute \u00b6 showRadio : bool = None False # Whether to show radio buttons, multiple is valid when false. source class-attribute \u00b6 source : MSA_UI_API = None dynamic options group treeContainerClassName class-attribute \u00b6 treeContainerClassName : str = None tree outermost container class name type class-attribute \u00b6 type : str = 'input-tree' unfoldedLevel class-attribute \u00b6 unfoldedLevel : int = None 0 # Set the number of levels to be expanded by default, only effective if initiallyOpen is not true. valueField class-attribute \u00b6 valueField : str = None \"value\" # option value field withChildren class-attribute \u00b6 withChildren : bool = None False # When the parent node is selected, the value will contain the value of the child node, otherwise only the value of the parent node will be kept. Json \u00b6 Bases: MSAUINode JSON display component Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name displayDataTypes class-attribute \u00b6 displayDataTypes : bool = None False # Whether to display data types jsonTheme class-attribute \u00b6 jsonTheme : str = None \"twilight\" # theme, optional twilight and eighties levelExpand class-attribute \u00b6 levelExpand : int = None 1 # Default level of expansion mutable class-attribute \u00b6 mutable : bool = None False # whether to modify placeholder class-attribute \u00b6 placeholder : str = None Placeholder text source class-attribute \u00b6 source : str = None Get the value in the data chain by data mapping type class-attribute \u00b6 type : str = 'json' \"json\" if in Table, Card and List; \"static-json\" if used as a static display in Form value class-attribute \u00b6 value : Union [ dict , str ] = None json value, parse automatically if it is a string Link \u00b6 Bases: MSAUINode link Attributes \u00b6 blank class-attribute \u00b6 blank : bool = None whether to open in a new tab body class-attribute \u00b6 body : str = None text inside the tag disabled class-attribute \u00b6 disabled : bool = None Disable hyperlinks href class-attribute \u00b6 href : str = None Link address htmlTarget class-attribute \u00b6 htmlTarget : str = None target of a tag, takes precedence over the blank attribute icon class-attribute \u00b6 icon : str = None hyperlink icon to enhance display rightIcon class-attribute \u00b6 rightIcon : str = None right icon title class-attribute \u00b6 title : str = None the title of a tag type class-attribute \u00b6 type : str = 'link' \"link\" if in Table, Card and List; \"static-link\" if used as a static display in Form LocationPicker \u00b6 Bases: FormItem Location Attributes \u00b6 ak class-attribute \u00b6 ak : str = Ellipsis Baidu map ak # Register at: http://lbsyun.baidu.com/ clearable class-attribute \u00b6 clearable : bool = None False # Whether the input box is clearable coordinatesType class-attribute \u00b6 coordinatesType : str = None \"bd09\" # Default is Baidu coordinates, can be set to 'gcj02' placeholder class-attribute \u00b6 placeholder : str = None \"Please select a location\" # Default prompt type class-attribute \u00b6 type : str = 'location-picker' vendor class-attribute \u00b6 vendor : str = 'baidu' map vendor, currently only implemented Baidu maps Log \u00b6 Bases: MSAUINode LiveLog Attributes \u00b6 autoScroll class-attribute \u00b6 autoScroll : bool = None True # whether to auto-scroll className class-attribute \u00b6 className : str = None Outer CSS class name encoding class-attribute \u00b6 encoding : str = None \"utf-8\" # Returns the character encoding of the content height class-attribute \u00b6 height : int = None 500 # height of display area placeholder class-attribute \u00b6 placeholder : str = None Text in load source class-attribute \u00b6 source : MSA_UI_API = None support variable, can be initially set to null, so that it will not be loaded initially, but will be loaded when the variable has a value type class-attribute \u00b6 type : str = 'log' Mapping \u00b6 Bases: MSAUINode mapping Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name map class-attribute \u00b6 map : dict = None Mapping configuration placeholder class-attribute \u00b6 placeholder : str = None Placeholder text source class-attribute \u00b6 source : MSA_UI_API = None MSA_UI_API or data mapping type class-attribute \u00b6 type : str = 'mapping' \"mapping\" if in Table, Card and List; \"static-mapping\" if used as a static display in Form Markdown \u00b6 Bases: MSAUINode Markdown rendering Attributes \u00b6 className class-attribute \u00b6 className : str = None The outermost class name of the form name class-attribute \u00b6 name : str = None Field name, specifying the key of the form item when it is submitted options class-attribute \u00b6 options : dict = None html, whether html tags are supported, default false; linkify, whether to automatically recognize links, default is true; breaks, whether carriage return is line feed, default false src class-attribute \u00b6 src : MSA_UI_API = None External address type class-attribute \u00b6 type : str = 'markdown' value class-attribute \u00b6 value : Union [ int , str ] = None The value of the field Nav \u00b6 Bases: MSAUINode Navigate Attributes \u00b6 className class-attribute \u00b6 className : str = None Class name of the outer Dom deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None Interface used to delay loading of option details, can be left unconfigured, no common source interface configured. dragOnSameLevel class-attribute \u00b6 dragOnSameLevel : bool = None Only allows dragging within the same level draggable class-attribute \u00b6 draggable : bool = None Whether to support drag and drop sorting itemActions class-attribute \u00b6 itemActions : MSAUISchemaNode = None More action related configuration itemBadge class-attribute \u00b6 itemBadge : Badge = None corner markers links class-attribute \u00b6 links : list = None Collection of links saveOrderApi class-attribute \u00b6 saveOrderApi : MSA_UI_API = None api to save sorting source class-attribute \u00b6 source : MSA_UI_API = None Navigation can be created dynamically via variables or the MSA_UI_API interface stacked class-attribute \u00b6 stacked : bool = True Set to false to display as tabs type class-attribute \u00b6 type : str = 'nav' Specify as Nav renderer Classes \u00b6 Link \u00b6 Bases: MSAUINode Attributes \u00b6 active class-attribute \u00b6 active : bool = None Whether to highlight or not activeOn class-attribute \u00b6 activeOn : MSAUIExpression = None condition to highlight or not, leaving blank will automatically analyze the link address children class-attribute \u00b6 children : List [ Link ] = None child links defer class-attribute \u00b6 defer : bool = None Flag if it is a lazy add-on deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None Can be unconfigured, if configured priority is higher icon class-attribute \u00b6 icon : str = None Icon label class-attribute \u00b6 label : str = None Name target class-attribute \u00b6 target : str = None \"Link relationship\" # to class-attribute \u00b6 to : MSAUITemplate = None Link address unfolded class-attribute \u00b6 unfolded : bool = None Initially expanded or not NestedSelect \u00b6 Bases: Select Cascading selector Attributes \u00b6 cascade class-attribute \u00b6 cascade : bool = None False # When set true, child nodes are not automatically selected when the parent node is selected. hideNodePathLabel class-attribute \u00b6 hideNodePathLabel : bool = None False # Whether to hide the path of the selected node in the selection box label information noResultsText class-attribute \u00b6 noResultsText : str = None \"No results found\" # Text when no results are found onlyChildren class-attribute \u00b6 onlyChildren : bool = None False # When multi-select, when the parent node is selected, the value will include only its children in the value. onlyLeaf class-attribute \u00b6 onlyLeaf : bool = None False # Only allow leaf nodes to be selected searchPromptText class-attribute \u00b6 searchPromptText : str = None \"Enter content to search\" # Search box placeholder text type class-attribute \u00b6 type : str = 'nested-select' withChildren class-attribute \u00b6 withChildren : bool = None False # When set true, the value of the parent node will contain the value of the child node when selected, otherwise only the value of the parent node will be kept. Page \u00b6 Bases: MSAUINode page Attributes \u00b6 __default_template_path__ class-attribute \u00b6 __default_template_path__ : str = ( f \" { BASE_DIR } /templates/page.html\" ) aside class-attribute \u00b6 aside : MSAUISchemaNode = None Add content to the sidebar area of the page. asideClassName class-attribute \u00b6 asideClassName : str = None \"w page-aside-region bg-auto\" # Aside dom class name asideMaxWidth class-attribute \u00b6 asideMaxWidth : int = None The maximum width of the page's sidebar area asideMinWidth class-attribute \u00b6 asideMinWidth : int = None The minimum width of the page's sidebar area asideResizor class-attribute \u00b6 asideResizor : bool = None Whether the width of the page's sidebar area can be adjusted body class-attribute \u00b6 body : MSAUISchemaNode = None Add content to the content area of the page bodyClassName class-attribute \u00b6 bodyClassName : str = None \"wrapper\" # Body dom class name className class-attribute \u00b6 className : str = None Outer dom class name cssVars class-attribute \u00b6 cssVars : dict = None Custom CSS variables, please refer to styles headerClassName class-attribute \u00b6 headerClassName : str = None \"bg-light b-b wrapper\" # Header region dom class name initApi class-attribute \u00b6 initApi : MSA_UI_API = None Page The api used to fetch the initial data. the returned data can be used at the entire page level. initFetch class-attribute \u00b6 initFetch : bool = None True # Whether to start fetching initApi initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None Whether to start fetching initApi, configured by expression interval class-attribute \u00b6 interval : int = None Refresh time (min 1000) regions class-attribute \u00b6 regions : List [ str ] = None remark class-attribute \u00b6 remark : Remark = None A reminder icon will appear near the title, which will prompt the content when the mouse is placed on it. silentPolling class-attribute \u00b6 silentPolling : bool = None False # Configure whether to show loading animation when refreshing stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : MSAUIExpression = None Expression to configure the stop refresh condition subTitle class-attribute \u00b6 subTitle : MSAUISchemaNode = None page sub-title title class-attribute \u00b6 title : MSAUISchemaNode = None Page title toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None Add content to the top right corner of the page, note that when there is a title, the area is in the top right corner and when there is not, the area is at the top toolbarClassName class-attribute \u00b6 toolbarClassName : str = None \"v-middle wrapper text-right bg-light b-b\" # Toolbar dom class name type class-attribute \u00b6 type : str = 'page' Specify as Page component Functions \u00b6 msa_ui_html \u00b6 msa_ui_html ( template_path : str = \"\" , locale : str = \"zh_CN\" , site_title : str = \"Admin\" , site_icon : str = \"\" , ) PageSchema \u00b6 Bases: MSAUINode Attributes \u00b6 children class-attribute \u00b6 children : List [ PageSchema ] = None Submenus className class-attribute \u00b6 className : str = None The class name of the menu. icon class-attribute \u00b6 icon : str = 'fa fa-flash' Menu icon, e.g., 'fa fa-file'. isDefaultPage class-attribute \u00b6 isDefaultPage : Union [ str , bool ] = None Useful when you need a custom 404 page, don't have more than one of these, because only the first one will work. label class-attribute \u00b6 label : str = None The name of the menu. link class-attribute \u00b6 link : str = None If you want to configure an external link menu, just configure link. redirect class-attribute \u00b6 redirect : str = None Jump, when the current page is hit, jump to the target page. rewrite class-attribute \u00b6 rewrite : str = None Change to render a page with another path, this way the page address will not be changed. schemaApi class-attribute \u00b6 schemaApi : MSA_UI_API = None If you want to pull through the interface, please configure it. The return path is json>data. schema and schemaApi can only be one or the other. schema_ class-attribute \u00b6 schema_ : Union [ Page , Iframe ] = Field ( None , alias = 'schema' ) Configuration of the page, please go to the Page page for details sort class-attribute \u00b6 sort : int = None Sort url class-attribute \u00b6 url : str = None The page routing path to enable the current page when the route hits that path. When the path is not /-headed, the parent path is connected. For example, if the parent path is folder and pageA is configured, then the page will be hit when the page address is /folder/pageA. When the path starts with /, e.g. /crud/list, the parent path is not concatenated. There is also support for routes with parameters such as /crud/view/:id, which can be fetched from the page via ${params.id}. visible class-attribute \u00b6 visible : str = None Some pages may not want to appear in the menu, you can configure it to false, in addition to the route with parameters do not need to be configured, directly is not visible. Functions \u00b6 as_tabs_item \u00b6 as_tabs_item ( tabs_extra : Dict [ str , Any ] = None , item_extra : Dict [ str , Any ] = None , ) Panel \u00b6 Bases: MSAUINode Attributes \u00b6 actions class-attribute \u00b6 actions : List [ Action ] = None Button area actionsClassName class-attribute \u00b6 actionsClassName : str = None \"panel-footer\" # Class name of the actions region affixFooter class-attribute \u00b6 affixFooter : bool = None Whether to fix the bottom container body class-attribute \u00b6 body : MSAUISchemaNode = None content container bodyClassName class-attribute \u00b6 bodyClassName : str = None \"panel-body\" # Class name for the body region className class-attribute \u00b6 className : str = None \"panel-default\" # class name of outer Dom footer class-attribute \u00b6 footer : MSAUISchemaNode = None footer container footerClassName class-attribute \u00b6 footerClassName : str = None \"panel-footer bg-light lter wrapper\" # Class name of the footer region header class-attribute \u00b6 header : MSAUISchemaNode = None header container headerClassName class-attribute \u00b6 headerClassName : str = None \"panel-heading\" # Class name of the header area title class-attribute \u00b6 title : MSAUISchemaNode = None title type class-attribute \u00b6 type : str = 'panel' Specify as Panel renderer Picker \u00b6 Bases: FormItem List Picker Attributes \u00b6 autoFill class-attribute \u00b6 autoFill : dict = None AutoFill delimiter class-attribute \u00b6 delimiter : bool = None False # Splice character embed class-attribute \u00b6 embed : bool = None False # Whether to use inline mode extractValue class-attribute \u00b6 extractValue : bool = None False # extract value joinValues class-attribute \u00b6 joinValues : bool = None True # splice values labelField class-attribute \u00b6 labelField : str = None \"label\" # option label field modalMode class-attribute \u00b6 modalMode : Literal [ dialog , drawer ] = None \"dialog\" # Set dialog or drawer to configure popup method. multiple class-attribute \u00b6 multiple : bool = None Whether to be multiple options. options class-attribute \u00b6 options : MSAOptionsNode = None Options group pickerSchema class-attribute \u00b6 pickerSchema : Union [ CRUD , MSAUISchemaNode ] = None \"{mode: 'list', listItem: {title: '${label}'}}\" i.e. rendering with List type to display list information. See CRUD for more configuration size class-attribute \u00b6 size : Union [ str , SizeEnum ] = None Supports: xs, sm, md, lg, xl, full source class-attribute \u00b6 source : MSA_UI_API = None Dynamic options group type class-attribute \u00b6 type : str = 'picker' List picker, similar in function to Select, but it can display more complex information. valueField class-attribute \u00b6 valueField : str = None \"value\" # Option value field Portlet \u00b6 Bases: Tabs Attributes \u00b6 contentClassName class-attribute \u00b6 contentClassName : str = None Class name of the Tabs content Dom description class-attribute \u00b6 description : MSAUITemplate = None Information on the right side of the title divider class-attribute \u00b6 divider : bool = None False # Remove the divider hideHeader class-attribute \u00b6 hideHeader : bool = None False # Hide the header style class-attribute \u00b6 style : Union [ str , dict ] = None Custom style tabs class-attribute \u00b6 tabs : List [ Item ] = None Contents of tabs type class-attribute \u00b6 type : str = 'portlet' Specify as Portlet renderer Classes \u00b6 Item \u00b6 Bases: Tabs . Item Attributes \u00b6 toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None toolbar in tabs, changes with tab toggle Property \u00b6 Bases: MSAUINode Property table Attributes \u00b6 className class-attribute \u00b6 className : str = None the class name of the outer dom column class-attribute \u00b6 column : int = None 3 # how many columns per row contentStyle class-attribute \u00b6 contentStyle : dict = None The style of the property value items class-attribute \u00b6 items : List [ Item ] = None data items labelStyle class-attribute \u00b6 labelStyle : dict = None Style of the property name mode class-attribute \u00b6 mode : str = None 'table' # display mode, currently only 'table' and 'simple' separator class-attribute \u00b6 separator : str = None ',' # separator between attribute name and value in 'simple' mode source class-attribute \u00b6 source : MSAUITemplate = None Data source style class-attribute \u00b6 style : dict = None The style of the outer dom title class-attribute \u00b6 title : str = None title type class-attribute \u00b6 type : str = 'property' Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 content class-attribute \u00b6 content : MSAUITemplate = None attribute value hiddenOn class-attribute \u00b6 hiddenOn : MSAUIExpression = None Hide the expression label class-attribute \u00b6 label : MSAUITemplate = None property name span class-attribute \u00b6 span : int = None attribute value across several columns visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Show expressions QRCode \u00b6 Bases: MSAUINode QR Code Attributes \u00b6 backgroundColor class-attribute \u00b6 backgroundColor : str = None \"#fff\" # QR code background color className class-attribute \u00b6 className : str = None Class name of the outer Dom codeSize class-attribute \u00b6 codeSize : int = None 128 # The width and height of the QR code foregroundColor class-attribute \u00b6 foregroundColor : str = None \"#000\" # The foreground color of the QR code level class-attribute \u00b6 level : str = None \"L\" # QR code complexity level, there are four ('L' 'M' 'Q' 'H') qrcodeClassName class-attribute \u00b6 qrcodeClassName : str = None class name of the QR code SVG type class-attribute \u00b6 type : str = 'qr-code' Specified as a QRCode renderer value class-attribute \u00b6 value : MSAUITemplate The text to be displayed after scanning the QR code, to display a page enter the full url (\"http://...\" or \"https://...\" ), supports the use of templates Radios \u00b6 Bases: FormItem RadioBox Attributes \u00b6 autoFill class-attribute \u00b6 autoFill : dict = None AutoFill columnsCount class-attribute \u00b6 columnsCount : int = None 1 # How many columns to display options by, default is one column inline class-attribute \u00b6 inline : bool = None True # Whether to display as one line labelField class-attribute \u00b6 labelField : bool = None \"label\" # option label field options class-attribute \u00b6 options : List [ Union [ dict , str ]] = None option group selectFirst class-attribute \u00b6 selectFirst : bool = None False # Whether to select the first by default source class-attribute \u00b6 source : MSA_UI_API = None dynamic options group type class-attribute \u00b6 type : str = 'radios' valueField class-attribute \u00b6 valueField : bool = None \"value\" # option value field Remark \u00b6 Bases: MSAUINode marker Attributes \u00b6 className class-attribute \u00b6 className : str = None Outer CSS class name content class-attribute \u00b6 content : str = None Prompt text icon class-attribute \u00b6 icon : str = None \"fa fa-question-circle\" # Icon placement class-attribute \u00b6 placement : str = None popup position trigger class-attribute \u00b6 trigger : str = None trigger condition ['hover','focus'] type class-attribute \u00b6 type : str = 'remark' remark Select \u00b6 Bases: FormItem dropdown box Attributes \u00b6 addApi class-attribute \u00b6 addApi : MSA_UI_API = None Configure the add options interface addControls class-attribute \u00b6 addControls : List [ FormItem ] = None Customize the new form item autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None auto prompt complement autoFill class-attribute \u00b6 autoFill : dict = None AutoFill checkAll class-attribute \u00b6 checkAll : bool = None False # Whether to support select all checkAllBySearch class-attribute \u00b6 checkAllBySearch : bool = None False # Only check all items that are hit when there is a search checkAllLabel class-attribute \u00b6 checkAllLabel : str = None \"Select All\" # Text to select all clearable class-attribute \u00b6 clearable : bool = None Whether clearing is supported in radio mode columns class-attribute \u00b6 columns : List [ dict ] = None When the display form is table can be used to configure which columns to display, similar to the columns in the table configuration, but only the display function. creatable class-attribute \u00b6 creatable : bool = None False # Add option createBtnLabel class-attribute \u00b6 createBtnLabel : str = None \"Add option\" # Add option defaultCheckAll class-attribute \u00b6 defaultCheckAll : bool = None False # defaultCheckAll or not deleteApi class-attribute \u00b6 deleteApi : MSA_UI_API = None Configure the delete option interface delimiter class-attribute \u00b6 delimiter : Union [ bool , str ] = None False # Splice character editApi class-attribute \u00b6 editApi : MSA_UI_API = None Configure the edit options interface editControls class-attribute \u00b6 editControls : List [ FormItem ] = None Customize edit form items editable class-attribute \u00b6 editable : bool = None False # Edit options extractValue class-attribute \u00b6 extractValue : bool = None False # extract value hideSelected class-attribute \u00b6 hideSelected : bool = None False # Hide the selected option joinValues class-attribute \u00b6 joinValues : bool = None True # splice values labelField class-attribute \u00b6 labelField : str = None \"label\" # option label field leftMode class-attribute \u00b6 leftMode : str = None Configure the left option set when the display is associated, supports list or tree. default is list. rightMode: str = None # Configure the left option set when the display is associated. leftOptions class-attribute \u00b6 leftOptions : List [ dict ] = None Used to configure the left set of options when the display is associated. menuTpl class-attribute \u00b6 menuTpl : str = None Support for configuring custom menus mobileClassName class-attribute \u00b6 mobileClassName : str = None Mobile floating class name multiple class-attribute \u00b6 multiple : bool = None False # Multi-select options class-attribute \u00b6 options : MSAOptionsNode = None options group removable class-attribute \u00b6 removable : bool = None False # Remove options rightMode class-attribute \u00b6 rightMode : str = None Used to configure the right option set when the display is associated, optionally: list, table, tree, chained. searchResultMode class-attribute \u00b6 searchResultMode : str = None If not set, the value of selectMode will be used, can be configured separately, refer to selectMode, determine the display of search results. searchable class-attribute \u00b6 searchable : bool = None False # Searchable selectMode class-attribute \u00b6 selectMode : str = None Optional: group, table, tree, chained, associated, respectively: list form, table form, tree select form, tree select form cascade selection form, association selection form (the difference with cascade selection is that the cascade is infinite, while the association is only one level, the left side of the association can be a tree). source class-attribute \u00b6 source : MSA_UI_API = None dynamic options group type class-attribute \u00b6 type : str = 'select' valueField class-attribute \u00b6 valueField : str = None \"value\" # option value field Service \u00b6 Bases: MSAUINode Function container Attributes \u00b6 api class-attribute \u00b6 api : MSA_UI_API = None Initial data domain interface address body class-attribute \u00b6 body : MSAUISchemaNode = None Content container className class-attribute \u00b6 className : str = None Class name of the outer Dom data class-attribute \u00b6 data : dict = None dataProvider class-attribute \u00b6 dataProvider : str = None Data fetch function initFetch class-attribute \u00b6 initFetch : bool = None Whether to pull by default initFetchSchema class-attribute \u00b6 initFetchSchema : bool = None Whether to pull Schema by default interval class-attribute \u00b6 interval : int = None polling interval (minimum 3000) messages class-attribute \u00b6 messages : dict = None Message hint override, the default message reads the toast hint text returned by the interface, but it can be overridden here. name class-attribute \u00b6 name : str = None node name schemaApi class-attribute \u00b6 schemaApi : MSA_UI_API = None Used to fetch the remote Schema interface address silentPolling class-attribute \u00b6 silentPolling : bool = None False # Configure whether to show loading animation when polling stopAutoRefreshWhen class-attribute \u00b6 stopAutoRefreshWhen : MSAUIExpression = None Configure the conditions for stopping polling type class-attribute \u00b6 type : str = 'service' Specified as a service renderer ws class-attribute \u00b6 ws : str = None WebScocket address Spinner \u00b6 Bases: MSAUINode loading Attributes \u00b6 type class-attribute \u00b6 type : str = 'spinner' Static \u00b6 Bases: FormItem Static display/label Attributes \u00b6 type class-attribute \u00b6 type : str = 'static' support for displaying other non-form items by configuring the type as static-xxx component static-json|static-datetime Classes \u00b6 Datetime \u00b6 Bases: FormItem Show date Attributes \u00b6 type class-attribute \u00b6 type : str = 'static-datetime' value class-attribute \u00b6 value : Union [ int , str ] support 10-bit timestamp: 1593327764 Json \u00b6 Bases: FormItem Attributes \u00b6 type class-attribute \u00b6 type : str = 'static-json' value class-attribute \u00b6 value : Union [ dict , str ] Status \u00b6 Bases: MSAUINode status Attributes \u00b6 className class-attribute \u00b6 className : str = None class name of the outer Dom labelMap class-attribute \u00b6 labelMap : dict = None Mapping text map class-attribute \u00b6 map : dict = None Mapping icon placeholder class-attribute \u00b6 placeholder : str = None Placeholder text type class-attribute \u00b6 type : str = 'status' Specify as Status renderer Switch \u00b6 Bases: FormItem switch Attributes \u00b6 falseValue class-attribute \u00b6 falseValue : Any = None \"false\" # Identifies a false value offText class-attribute \u00b6 offText : str = None Text when off onText class-attribute \u00b6 onText : str = None Text when on option class-attribute \u00b6 option : str = None option description trueValue class-attribute \u00b6 trueValue : Any = None \"True\" # Identifies a true value type class-attribute \u00b6 type : str = 'switch' Table \u00b6 Bases: MSAUINode table Attributes \u00b6 affixHeader class-attribute \u00b6 affixHeader : bool = None True # Whether to fix the table header affixRow class-attribute \u00b6 affixRow : list = None Bottom summary row autoFillHeight class-attribute \u00b6 autoFillHeight : bool = None Content area adaptive height checkOnItemClick class-attribute \u00b6 checkOnItemClick : bool = None False # Whether the current row can be checked by clicking on the data row className class-attribute \u00b6 className : str = None \"panel-default\" # Outer CSS class name columns class-attribute \u00b6 columns : List [ Union [ TableColumn , MSAUISchemaNode ]] = None Used to set column information columnsTogglable class-attribute \u00b6 columnsTogglable : Union [ str , bool ] = None \"auto\" # Show column display switch, auto i.e.: automatically on when the number of columns is greater than or equal to 5 combineNum class-attribute \u00b6 combineNum : int = None Automatically merge cells footable class-attribute \u00b6 footable : Union [ bool , dict ] = None When there are too many columns, there is no way to display all the content, so you can let some of the information displayed at the bottom, which allows users to expand to see the details. The configuration is very simple, just turn on the footable property and add a breakpoint property to * for the columns you want to display at the bottom. footerClassName class-attribute \u00b6 footerClassName : str = None \"Action.md-table-footer\" # bottom outer CSS class name headerClassName class-attribute \u00b6 headerClassName : str = None \"Action.md-table-header\" # top outer CSS class name itemActions class-attribute \u00b6 itemActions : List [ Action ] = None Hover row action button group itemBadge class-attribute \u00b6 itemBadge : Badge = None Row corner configuration itemCheckableOn class-attribute \u00b6 itemCheckableOn : MSAUIExpression = None condition to configure whether the current row is checkable, use expression itemDraggableOn class-attribute \u00b6 itemDraggableOn : MSAUIExpression = None condition to configure whether the current row is draggable or not, use the expression placeholder class-attribute \u00b6 placeholder : str = None \"No data yet\" # Text alert when there is no data prefixRow class-attribute \u00b6 prefixRow : list = None Top summary row rowClassName class-attribute \u00b6 rowClassName : str = None Add a CSS class name to the row rowClassNameExpr class-attribute \u00b6 rowClassNameExpr : MSAUITemplate = None Add a CSS class name to the row via a template source class-attribute \u00b6 source : str = None \"${items}\" # data source, bound to the current environment variable tableClassName class-attribute \u00b6 tableClassName : str = None \"table-db table-striped\" # Table CSS class name title class-attribute \u00b6 title : str = None title toolbarClassName class-attribute \u00b6 toolbarClassName : str = None \"Action.md-table-toolbar\" # Toolbar CSS class name type class-attribute \u00b6 type : str = 'table' Specify as table renderer TableCRUD \u00b6 Bases: CRUD , Table TableCRUD TableColumn \u00b6 Bases: MSAUINode columnConfiguration Attributes \u00b6 breakpoint class-attribute \u00b6 breakpoint : str = None *,ls copyable class-attribute \u00b6 copyable : Union [ bool , dict ] = None whether copyable boolean or {icon: string, content:string} fixed class-attribute \u00b6 fixed : str = None Whether to fix the front row left|right|none label class-attribute \u00b6 label : MSAUITemplate = None the text content of the table header name class-attribute \u00b6 name : str = None Data associated by name popOver class-attribute \u00b6 popOver : Union [ bool , dict ] = None popup box quickEdit class-attribute \u00b6 quickEdit : Union [ bool , dict ] = None QuickEdit remark class-attribute \u00b6 remark : Remark = None Prompt message searchable class-attribute \u00b6 searchable : Union [ bool , MSAUISchemaNode ] = None False # Whether to search quickly boolean|Schema sortable class-attribute \u00b6 sortable : bool = None False # Whether to sort tpl class-attribute \u00b6 tpl : MSAUITemplate = None Template type class-attribute \u00b6 type : str = None Literal['text','audio','image','link','tpl','mapping','carousel','date', 'progress','status','switch','list','json','operation'] width class-attribute \u00b6 width : Union [ str , int ] = None Column width Tabs \u00b6 Bases: MSAUINode Attributes \u00b6 addBtnText class-attribute \u00b6 addBtnText : str = None \"add\" # Add button text addable class-attribute \u00b6 addable : bool = None False # If or not addable is supported className class-attribute \u00b6 className : str = None The class name of the outer Dom closeable class-attribute \u00b6 closeable : bool = None False # Whether to support delete draggable class-attribute \u00b6 draggable : bool = None False # Whether drag and drop is supported editable class-attribute \u00b6 editable : bool = None False # Whether to make the tag name editable or not mode class-attribute \u00b6 mode : str = None Display mode, can be line, card, radio, vertical, chrome, simple, strong, tiled, sidebar mountOnEnter class-attribute \u00b6 mountOnEnter : bool = None False # Render only when tab is clicked scrollable class-attribute \u00b6 scrollable : bool = None False # whether navigation supports content overflow scrolling, not supported in vertical and chrome modes; chrome mode compresses tabs by default (property deprecated) showTip class-attribute \u00b6 showTip : bool = None False # Whether to support hints showTipClassName class-attribute \u00b6 showTipClassName : str = None \"'' \" # The class of the prompt sidePosition class-attribute \u00b6 sidePosition : str = None \"left\" # sidebar mode, tab position left / right source class-attribute \u00b6 source : str = None tabs association data, can repeat tabs after association tabs class-attribute \u00b6 tabs : List [ Item ] = None tabs content tabsClassName class-attribute \u00b6 tabsClassName : str = None The class name of the Tabs Dom tabsMode class-attribute \u00b6 tabsMode : TabsModeEnum = None display mode, the value can be line, card, radio, vertical, chrome, simple, strong, tiled, sidebar toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None Toolbar in tabs toolbarClassName class-attribute \u00b6 toolbarClassName : str = None The class name of the toolbar in tabs type class-attribute \u00b6 type : str = 'tabs' Specify as Tabs renderer unmountOnExit class-attribute \u00b6 unmountOnExit : bool = None False # Destroy when tab is toggled Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 className class-attribute \u00b6 className : str = None \"bg-white b-l b-r b-b wrapper-md\" # Tab area style closable class-attribute \u00b6 closable : bool = None False # Whether to support deletion, prioritize over component's closable disabled class-attribute \u00b6 disabled : bool = None False # Whether to disable hash class-attribute \u00b6 hash : str = None Set to correspond to the hash of the url icon class-attribute \u00b6 icon : Union [ str , Icon ] = None Tab's icon iconPosition class-attribute \u00b6 iconPosition : str = None \"left\" # Tab's icon position left / right reload class-attribute \u00b6 reload : bool = None Set the content to be re-rendered every time, useful for crud re-pulling tab class-attribute \u00b6 tab : MSAUISchemaNode = None Content area title class-attribute \u00b6 title : str = None Tab title unmountOnExit class-attribute \u00b6 unmountOnExit : bool = None Destroy the current tab bar every time you exit TabsTransfer \u00b6 Bases: Transfer Combination shuttle Attributes \u00b6 type class-attribute \u00b6 type : str = 'tabs-transfer' TabsTransferPicker \u00b6 Bases: Transfer Combination shuttle selector Attributes \u00b6 type class-attribute \u00b6 type : str = 'tabs-transfer-picker' Tasks \u00b6 Bases: MSAUINode A collection of task actions Attributes \u00b6 btnClassName class-attribute \u00b6 btnClassName : str = None \"btn-sm btn-default\" # Configure the container button className btnText class-attribute \u00b6 btnText : str = None \"Go Live\" # Action button text checkApi class-attribute \u00b6 checkApi : MSA_UI_API = None Return a list of tasks, see items for the returned data. className class-attribute \u00b6 className : str = None Class name of the outer Dom interval class-attribute \u00b6 interval : int = None 3000 # When there is a task in progress, it will be detected again at regular intervals, and the time interval is configured by this, default 3s. items class-attribute \u00b6 items : List [ Item ] = None List of tasks operationLabel class-attribute \u00b6 operationLabel : str = None \"operation\" # Description of the operation column reSubmitApi class-attribute \u00b6 reSubmitApi : MSA_UI_API = None This MSA_UI_API is used when submitting if the task fails and can be retried remarkLabel class-attribute \u00b6 remarkLabel : str = None \"Remarks\" # Remarks column description retryBtnClassName class-attribute \u00b6 retryBtnClassName : str = None \"btn-sm btn-danger\" # Configure the container retry button className retryBtnText class-attribute \u00b6 retryBtnText : str = None \"Retry\" # Retry action button text statusLabel class-attribute \u00b6 statusLabel : str = None \"Status\" # Status column description statusLabelMap class-attribute \u00b6 statusLabelMap : List [ str ] = None Configuration of the class name corresponding to the status display [\"label-warning\", \"label-info\", \"label-success\", \"label-danger\", \"label-default\", \"label-danger\"] statusTextMap class-attribute \u00b6 statusTextMap : List [ str ] = None \"[\"Not Started\", \"Ready\", \"In Progress\", \"Error\", \"Completed\", \"Error\"]\" # Status display corresponding to the text display configuration submitApi class-attribute \u00b6 submitApi : MSA_UI_API = None The MSA_UI_API used to submit the task tableClassName class-attribute \u00b6 tableClassName : str = None Class name of the table Dom taskNameLabel class-attribute \u00b6 taskNameLabel : str = None \"Task name\" # Description of the task name column type class-attribute \u00b6 type : str = 'tasks' Specify as Tasks renderer Classes \u00b6 Item \u00b6 Bases: MSAUINode Attributes \u00b6 key class-attribute \u00b6 key : str = None Task key value, please distinguish it uniquely label class-attribute \u00b6 label : str = None Task name remark class-attribute \u00b6 remark : str = None Current task status, supports html status class-attribute \u00b6 status : str = None Task status: 0: initial, inoperable. 1: ready, operable. 2: in progress, not yet finished. 3: with errors, not retryable. 4: has ended normally. 5: with errors, and retryable. Textarea \u00b6 Bases: FormItem Multi-line text input box Attributes \u00b6 maxLength class-attribute \u00b6 maxLength : int = None Limit the maximum number of words maxRows class-attribute \u00b6 maxRows : int = None maximum number of lines minLength class-attribute \u00b6 minLength : int = None Limit the minimum number of words minRows class-attribute \u00b6 minRows : int = None minimum number of rows readOnly class-attribute \u00b6 readOnly : bool = None whether to read only showCounter class-attribute \u00b6 showCounter : bool = True Whether to show the counter trimContents class-attribute \u00b6 trimContents : bool = None whether to remove first and last blank text type class-attribute \u00b6 type : str = 'textarea' Transfer \u00b6 Bases: FormItem shuttle Attributes \u00b6 columns class-attribute \u00b6 columns : List [ dict ] = None When the display form is table can be used to configure which columns to display, similar to the columns in the table configuration, but only the display function. delimiter class-attribute \u00b6 delimiter : str = None \"False\" # Splice character extractValue class-attribute \u00b6 extractValue : bool = None False # extract value joinValues class-attribute \u00b6 joinValues : bool = None True # Splice values leftMode class-attribute \u00b6 leftMode : str = None Configure the left option set when the display is associated, supports list or tree. default is list. rightMode: str = None # Configure the left option set when the display is associated. leftOptions class-attribute \u00b6 leftOptions : List [ dict ] = None Used to configure the left set of options when the display is associated. menuTpl class-attribute \u00b6 menuTpl : MSAUISchemaNode = None Used to customize the option display. options class-attribute \u00b6 options : MSAOptionsNode = None options group resultTitle class-attribute \u00b6 resultTitle : str = None \"Current selection\" # The title text of the right result rightMode class-attribute \u00b6 rightMode : str = None Use to configure the right option set when the display is associated, options are: list, table, tree, chained. searchApi class-attribute \u00b6 searchApi : MSA_UI_API = None You can set an api if you want to search through the interface. searchResultMode class-attribute \u00b6 searchResultMode : str = None If not set will use the value of selectMode, can be configured separately, refer to selectMode, determine the search results display form. searchable class-attribute \u00b6 searchable : bool = None False # When set to true means that options can be retrieved by partial input. selectMode class-attribute \u00b6 selectMode : str = None \"list\" # Optional: list, table, tree, cascaded, associated. respectively: list form, table form, tree selection form, tree selection form cascade selection form, associated selection form (the difference with cascade selection is that cascade is infinite, while associated is only one level, and the left side of associated can be a tree). selectTitle class-attribute \u00b6 selectTitle : str = None \"Please select\" # The title text on the left side sortable class-attribute \u00b6 sortable : bool = None False # Results can be sorted by dragging and dropping source class-attribute \u00b6 source : MSA_UI_API = None dynamic options group statistics class-attribute \u00b6 statistics : bool = None True # Whether to display statistics type class-attribute \u00b6 type : Literal [ transfer , transfer - picker , tabs - transfer , tabs - transfer - picker , ] = \"transfer\" valueTpl class-attribute \u00b6 valueTpl : MSAUISchemaNode = None Used to customize the display of values TransferPicker \u00b6 Bases: Transfer shuttlePicker Attributes \u00b6 type class-attribute \u00b6 type : str = 'transfer-picker' TreeSelect \u00b6 Bases: InputTree Tree Selector Attributes \u00b6 hideNodePathLabel class-attribute \u00b6 hideNodePathLabel : bool = None Whether to hide the path of the selected node in the selection box label information type class-attribute \u00b6 type : str = 'tree-select' Validation \u00b6 Bases: MSABaseUIModel Attributes \u00b6 equals class-attribute \u00b6 equals : str = None The current value must be exactly equal to xxx. equalsField class-attribute \u00b6 equalsField : str = None The current value must match the value of the xxx variable. isAlpha class-attribute \u00b6 isAlpha : bool = None Must be a letter. isAlphanumeric class-attribute \u00b6 isAlphanumeric : bool = None Must be alphabetic or numeric. isEmail class-attribute \u00b6 isEmail : bool = None Must be Email. isFloat class-attribute \u00b6 isFloat : bool = None Must be floating point. isId class-attribute \u00b6 isId : bool = None if it is an ID number, no check isInt class-attribute \u00b6 isInt : bool = None Must be integer. isJson class-attribute \u00b6 isJson : bool = None If or not it is a legal Json string. isUrlPath: bool = None isLength class-attribute \u00b6 isLength : int = None If or not the length is exactly equal to the set value. isNumeric class-attribute \u00b6 isNumeric : bool = None Must be numeric. isPhoneNumber class-attribute \u00b6 isPhoneNumber : bool = None If or not it is a legitimate phone number isTelNumber class-attribute \u00b6 isTelNumber : bool = None if it is a legitimate phone number isUrl class-attribute \u00b6 isUrl : bool = None Must be Url. isZipcode class-attribute \u00b6 isZipcode : bool = None Whether it is a zip code number matchRegexp class-attribute \u00b6 matchRegexp : str = None Must hit some regular. /foo/ maxLength class-attribute \u00b6 maxLength : int = None The maximum length. maximum class-attribute \u00b6 maximum : int = None The maximum value. minLength class-attribute \u00b6 minLength : int = None The minimum length. minimum class-attribute \u00b6 minimum : int = None The minimum value. Video \u00b6 Bases: MSAUINode video Attributes \u00b6 autoPlay class-attribute \u00b6 autoPlay : bool = None Whether to auto play className class-attribute \u00b6 className : str = None class name of the outer Dom isLive class-attribute \u00b6 isLive : bool = None False # whether it is live, need to add on when the video is live, supports flv and hls formats muted class-attribute \u00b6 muted : bool = None whether to mute poster class-attribute \u00b6 poster : str = None video cover address rates class-attribute \u00b6 rates : List [ float ] = None multiplier in the format [1.0, 1.5, 2.0] src class-attribute \u00b6 src : str = None video address type class-attribute \u00b6 type : str = 'video' Specify as video renderer videoType class-attribute \u00b6 videoType : str = None Specify the format of the live video Wizard \u00b6 Bases: MSAUINode Wizard Attributes \u00b6 actionClassName class-attribute \u00b6 actionClassName : str = None \"btn-sm btn-default\" # Button CSS class name actionFinishLabel class-attribute \u00b6 actionFinishLabel : str = None \"Finish\" # Finish button text actionNextLabel class-attribute \u00b6 actionNextLabel : str = None \"Next\" # Next button text actionNextSaveLabel class-attribute \u00b6 actionNextSaveLabel : str = None \"Save and Next\" # Save and Next button text actionPrevLabel class-attribute \u00b6 actionPrevLabel : str = None \"Previous\" # Previous button text api class-attribute \u00b6 api : MSA_UI_API = None The interface saved in the last step. className class-attribute \u00b6 className : str = None Outer CSS class name initApi class-attribute \u00b6 initApi : MSA_UI_API = None Initialize the data interface initFetch class-attribute \u00b6 initFetch : MSA_UI_API = None Initialize whether to pull data. initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None Initially pull data or not, configured by expression mode class-attribute \u00b6 mode : str = None Display mode, choose: horizontal or vertical redirect class-attribute \u00b6 redirect : MSAUITemplate = None \"3000\" # Jump after the operation. reload class-attribute \u00b6 reload : str = None Refresh the target object after the operation. Please fill in the name value set by the target component, if it is window then the whole current page will be refreshed. startStep class-attribute \u00b6 startStep : int = None \"1\" # Start default value, from which step to start. Templates can be supported, but only if the template is rendered and the current step is set when the component is created, and when the component is refreshed later The current step will not change according to startStep steps class-attribute \u00b6 steps : List [ Step ] = None Array to configure step information target class-attribute \u00b6 target : str = None \"False\" # You can submit the data to another component instead of saving it yourself. Please fill in the name value set by the target component. If you fill in window, the data will be synced to the address bar, and the component that depends on the data will be refreshed automatically. type class-attribute \u00b6 type : str = 'wizard' Specify as a Wizard component Classes \u00b6 Step \u00b6 Bases: MSAUINode Attributes \u00b6 api class-attribute \u00b6 api : MSA_UI_API = None The current step saves the interface, can be unconfigured. body class-attribute \u00b6 body : List [ FormItem ] = None A collection of form items for the current step, see FormItem. horizontal class-attribute \u00b6 horizontal : Horizontal = None When in horizontal mode, used to control the left/right aspect ratio initApi class-attribute \u00b6 initApi : MSA_UI_API = None The current step data initialization interface. initFetch class-attribute \u00b6 initFetch : bool = None Whether the current step data initialization interface is initially pulling. initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None Whether the current step data initialization interface is pulling initially, using an expression to determine. mode class-attribute \u00b6 mode : str = None Show default, same as mode in Form, choose: normal, horizontal or inline. title class-attribute \u00b6 title : str = None Step title Functions \u00b6","title":"components"},{"location":"reference/admin/frontend/components/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/components/#adminfrontendcomponents","text":"","title":".admin.frontend.components"},{"location":"reference/admin/frontend/components/#admin.frontend.components-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.BASE_DIR","text":"BASE_DIR = os . path . dirname ( os . path . abspath ( __file__ ))","title":"BASE_DIR"},{"location":"reference/admin/frontend/components/#admin.frontend.components-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action","text":"Bases: MSAUINode","title":"Action"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.actionType","text":"actionType : str = None [Required] This is the core configuration of the action, to specify the action's role type. Supports: ajax, link, url, drawer, dialog, confirm, cancel, prev, next, copy, close.","title":"actionType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.active","text":"active : bool = None If or not the button is highlighted.","title":"active"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.activeClassName","text":"activeClassName : str = None Add a class name to the button highlighting. \"is-active\"","title":"activeClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.activeLevel","text":"activeLevel : str = None The style of the button when it is highlighted, configured to support the same level.","title":"activeLevel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.args","text":"args : Union [ dict , str ] = None Event arguments","title":"args"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.block","text":"block : bool = None Use display: \"block\" to display the button.","title":"block"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.close","text":"close : Union [ bool , str ] = None When action is configured in dialog or drawer's actions, set to true to close the current dialog or drawer after this action.","title":"close"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.componentId","text":"componentId : str = None Target component ID","title":"componentId"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.confirmText","text":"confirmText : MSAUITemplate = None When set, the action will ask the user before starting. Can be fetched with ${xxx}.","title":"confirmText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.disabledTip","text":"disabledTip : str = None Popup when mouse hover is disabled, you can also configure the object type: fields are title and content. available ${xxx}.","title":"disabledTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.icon","text":"icon : str = None Set icon, e.g. fa fa-plus.","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.iconClassName","text":"iconClassName : str = None Add a class name to the icon.","title":"iconClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.label","text":"label : str = None The text of the button. Can be fetched with ${xxx}.","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.level","text":"level : LevelEnum = None The style of the button, support: link, primary, secondary, info, success, warning, danger, light, dark, default.","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.onClick","text":"onClick : str = None Customize the click event by defining the click event as a string onClick, which will be converted to a JavaScript function","title":"onClick"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.reload","text":"reload : str = None Specify the name of the target component to be refreshed after this operation (the component's name value, configured by yourself), separated by ,.","title":"reload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.required","text":"required : List [ str ] = None Configure an array of strings, specifying that the form entry of the specified field name is required to pass validation before the operation can be performed in the form","title":"required"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.rightIcon","text":"rightIcon : str = None Set the icon to the right of the button text, e.g. fa fa-plus.","title":"rightIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.rightIconClassName","text":"rightIconClassName : str = None Add a class name to the right icon.","title":"rightIconClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.script","text":"script : str = None Custom JS script code, which can perform any action by calling doAction, and event action intervention through the event object event","title":"script"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.size","text":"size : str = None The size of the button, support: xs, sm, md, lg.","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.tooltip","text":"tooltip : str = None popup text when mouse hover, also can configure the object type: title and content. can be ${xxx}.","title":"tooltip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.tooltipPlacement","text":"tooltipPlacement : str = None If tooltip or disabledTip is configured, specify the location of the tip, you can configure top, bottom, left, right.","title":"tooltipPlacement"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Action.type","text":"type : str = 'button' Specify as Page renderer. button action","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType","text":"","title":"ActionType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Ajax","text":"Bases: Action","title":"Ajax"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Ajax-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'ajax' Click to display a popup box api class-attribute \u00b6 api : MSA_UI_API = None request address, refer to api format description. feedback class-attribute \u00b6 feedback : Dialog = None If ajax type, when the ajax returns normal, a dialog can be popped up to do other interactions. The returned data can be used in this dialog. See Dialog for format messages class-attribute \u00b6 messages : dict = None success: ajax operation success prompt, can not be specified, not specified when the api return prevail. failed: ajax operation failure prompt. redirect class-attribute \u00b6 redirect : MSAUITemplate = None Specify the path to jump to at the end of the current request, can be fetched with ${xxx}.","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Copy","text":"Bases: Action","title":"Copy"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Copy-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'copy' Copy a piece of content to the pasteboard content class-attribute \u00b6 content : MSAUITemplate Specify the content to be copied. Can be fetched with ${xxx}. copyFormat class-attribute \u00b6 copyFormat : str = None The format of the copy can be set by copyFormat, default is text/html","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Dialog","text":"Bases: Action","title":"Dialog"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Dialog-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'dialog' Show a popup box when clicked. dialog class-attribute \u00b6 dialog : Union [ Dialog , Service , MSAUISchemaNode ] Specify the content of the popup box, see Dialog for format nextCondition class-attribute \u00b6 nextCondition : bool = None Can be used to set the next data condition, default is true.","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Drawer","text":"Bases: Action","title":"Drawer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Drawer-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'drawer' Show a sidebar when clicked drawer class-attribute \u00b6 drawer : Union [ Drawer , Service , MSAUISchemaNode ] Specify the content of the popup box, see Drawer for format","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Link","text":"Bases: Action","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Link-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'link' link class-attribute \u00b6 link : str","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Url","text":"Bases: Action","title":"Url"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ActionType.Url-attributes","text":"actionType class-attribute \u00b6 actionType : str = 'url' Jump directly blank class-attribute \u00b6 blank : bool = None false if true will open in a new tab page. url class-attribute \u00b6 url : str When the button is clicked, the specified page will be opened. Can be fetched with ${xxx}.","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert","text":"Bases: MSAUINode alert","title":"Alert"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.body","text":"body : MSAUISchemaNode = None Display content","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.className","text":"className : str = None class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.closeButtonClassName","text":"closeButtonClassName : str = None CSS class name of the close button","title":"closeButtonClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.icon","text":"icon : str = None Custom icon","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.iconClassName","text":"iconClassName : str = None CSS class name of the icon","title":"iconClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.level","text":"level : str = None \"info\" # level, can be: info, success, warning or danger","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.showCloseButton","text":"showCloseButton : bool = None False # whether to show the close button","title":"showCloseButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.showIcon","text":"showIcon : bool = None False # Whether to show icon","title":"showIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Alert.type","text":"type : str = 'alert' Specify as alert renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav","text":"Bases: MSAUINode Anchor Nav","title":"AnchorNav"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.active","text":"active : str = None The area to be positioned","title":"active"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.direction","text":"direction : str = None \"vertical\" # You can configure whether the navigation is displayed horizontally or vertically. The corresponding configuration items are: vertical, horizontal","title":"direction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.linkClassName","text":"linkClassName : str = None Class name of the navigating Dom","title":"linkClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.links","text":"links : list = None Contents of links","title":"links"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.sectionClassName","text":"sectionClassName : str = None Class name of the anchor area Dom","title":"sectionClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.type","text":"type : str = 'anchor-nav' Specify as AnchorNav renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.Link","text":"Bases: MSAUINode","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.AnchorNav.Link-attributes","text":"body class-attribute \u00b6 body : MSAUISchemaNode = None area content area className class-attribute \u00b6 className : str = None \"bg-white b-l b-r b-b wrapper-md\" # region member style href class-attribute \u00b6 href : str = None region identifier label class-attribute \u00b6 label : str = None name title class-attribute \u00b6 title : str = None area title","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App","text":"Bases: Page multi-page app","title":"App"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.__default_template_path__","text":"__default_template_path__ : str = ( f \" { BASE_DIR } /templates/app.html\" )","title":"__default_template_path__"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.api","text":"api : MSA_UI_API = None Page configuration interface, please configure if you want to pull the page configuration remotely. Return the configuration path json>data>pages, please refer to the pages property for the exact format.","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.asideAfter","text":"asideAfter : str = None The area under the page menu.","title":"asideAfter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.asideBefore","text":"asideBefore : str = None The area in front of the page menu.","title":"asideBefore"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.brandName","text":"brandName : str = None Application name","title":"brandName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.className","text":"className : str = None css class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.footer","text":"footer : str = None The page.","title":"footer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.header","text":"header : str = None header","title":"header"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.logo","text":"logo : str = '/msastatic/img/msa_logo.png' Support image address, or svg.","title":"logo"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.pages","text":"pages : List [ PageSchema ] = None Array specific page configuration. Usually an array, the first layer of the array is grouped, usually only the label set needs to be configured, if you do not want to group, directly not configured, the real pages please start configuring in the second layer, that is, the first layer of children.","title":"pages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.App.type","text":"type : str = 'app'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio","text":"Bases: MSAUINode audio","title":"Audio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.autoPlay","text":"autoPlay : bool = None False # Whether to play automatically","title":"autoPlay"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.className","text":"className : str = None the class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.controls","text":"controls : List [ str ] = None \"['rates','play','time','process','volume']\" # Internal module customization","title":"controls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.inline","text":"inline : bool = None True # whether inline mode is used","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.loop","text":"loop : bool = None False # Whether to loop","title":"loop"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.rates","text":"rates : List [ float ] = None \"[]\" # Configurable audio playback multiplier e.g. [1.0, 1.5, 2.0]","title":"rates"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.src","text":"src : str = None Audio address","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Audio.type","text":"type : str = 'audio' Specify as audio renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar","text":"Bases: MSAUINode Avatar","title":"Avatar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.className","text":"className : str = None class name of the outer dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.fit","text":"fit : str = None \"cover\" # image scaling type","title":"fit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.icon","text":"icon : str = None Icon","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.shape","text":"shape : str = None \"circle\" # The shape, which can also be square","title":"shape"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.size","text":"size : int = None 40 # size","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.src","text":"src : str = None Image address","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.style","text":"style : dict = None The style of the outer dom","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.text","text":"text : str = None Text","title":"text"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Avatar.type","text":"type : str = 'avatar'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge","text":"Bases: MSAUINode corner-icon","title":"Badge"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.animation","text":"animation : bool = None whether the corner is animated or not","title":"animation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.className","text":"className : str = None class name of outer dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.level","text":"level : str = None Corner level, can be info/success/warning/danger, different background color after setting","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.mode","text":"mode : str = 'dot' Corner type, can be dot/text/ribbon","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.offset","text":"offset : int = None corner position, priority is greater than position, when offset is set, postion is top-right as the base for positioning number[top, left]","title":"offset"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.overflowCount","text":"overflowCount : int = None 99 # Set the capping number value","title":"overflowCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.position","text":"position : str = None \"top-right\" # corner position, can be top-right/top-left/bottom-right/bottom-left","title":"position"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.size","text":"size : int = None corner size","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.style","text":"style : dict = None custom style for the corner","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.text","text":"text : Union [ str , int ] = None corner text, supports strings and numbers, invalid when set under mode='dot'","title":"text"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Badge.visibleOn","text":"visibleOn : MSAUIExpression = None Control the display and hiding of the corner","title":"visibleOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button","text":"Bases: FormItem Button","title":"Button"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.actionType","text":"actionType : str = None Set the button type 'button'|'reset'|'submit'| 'clear'| 'url'","title":"actionType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.block","text":"block : bool = None option to adjust the width of the button to its parent width","title":"block"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.className","text":"className : str = None Specifies the class name of the added button","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.disabled","text":"disabled : bool = None Disable button status","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.href","text":"href : str = None Click on the address of the jump, specify this property button behavior and a link consistent","title":"href"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.level","text":"level : LevelEnum = None Set the button style 'link'|'primary'|'enhance'|'secondary'|'info'|'success'|'warning'|'danger'|'light'| 'dark'|'default'","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.loading","text":"loading : bool = None Show button loading effect","title":"loading"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.loadingOn","text":"loadingOn : str = None Show button loading expressions","title":"loadingOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.size","text":"size : str = None Set the size of the button 'xs'|'sm'|'md'|'lg'","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.tooltip","text":"tooltip : Union [ str , dict ] = None bubble tip content TooltipObject","title":"tooltip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.tooltipPlacement","text":"tooltipPlacement : str = None bubblePlacement 'top'|'right'|'bottom'|'left'","title":"tooltipPlacement"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Button.tooltipTrigger","text":"tooltipTrigger : str = None trigger tootip 'hover'|'focus'","title":"tooltipTrigger"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup","text":"Bases: MSAUINode buttonGroup","title":"ButtonGroup"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.buttons","text":"buttons : List [ Action ] Behavior button group","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.className","text":"className : str = None the class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.type","text":"type : str = 'button-group'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonGroup.vertical","text":"vertical : bool = None whether to use vertical mode","title":"vertical"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar","text":"Bases: MSAUINode ButtonToolbar","title":"ButtonToolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar.buttons","text":"buttons : List [ Action ] Behavior button group","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ButtonToolbar.type","text":"type : str = 'button-toolbar'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD","text":"Bases: MSAUINode add-delete","title":"CRUD"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.affixHeader","text":"affixHeader : bool = None True # Whether to fix the table header (under table)","title":"affixHeader"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.alwaysShowPagination","text":"alwaysShowPagination : bool = None whether to always show pagination","title":"alwaysShowPagination"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.api","text":"api : MSA_UI_API = None The api used by CRUD to get the list data.","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.autoGenerateFilter","text":"autoGenerateFilter : bool = None Whether to enable the query area, which will automatically generate a query form based on the value of the searchable property of the column element","title":"autoGenerateFilter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.autoJumpToTopOnPagerChange","text":"autoJumpToTopOnPagerChange : bool = None Whether to auto jump to the top when the page is cut.","title":"autoJumpToTopOnPagerChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.bulkActions","text":"bulkActions : List [ Action ] = None List of bulk actions, configured so that the form can be checked.","title":"bulkActions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.className","text":"className : str = None class name of the table's outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.defaultChecked","text":"defaultChecked : bool = None Default whether to check all when bulk actions are available.","title":"defaultChecked"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.defaultParams","text":"defaultParams : dict = None Set the default filter default parameters, which will be sent to the backend together with the query","title":"defaultParams"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.draggable","text":"draggable : bool = None Whether to sort by drag and drop","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.filter","text":"filter : Union [ MSAUISchemaNode , Form ] = None Set a filter that will bring the data to the current mode to refresh the list when the form is submitted.","title":"filter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.filterDefaultVisible","text":"filterDefaultVisible : bool = None True # Sets whether the filter is visible by default.","title":"filterDefaultVisible"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.filterTogglable","text":"filterTogglable : bool = None False # Whether to make the filter visible or invisible","title":"filterTogglable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.footerToolbar","text":"footerToolbar : list = None ['statistics','pagination'] # Bottom toolbar configuration","title":"footerToolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.headerToolbar","text":"headerToolbar : list = None ['bulkActions','pagination'] # top toolbar configuration","title":"headerToolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.hideQuickSaveBtn","text":"hideQuickSaveBtn : bool = None Hide the top quick save prompt","title":"hideQuickSaveBtn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.initFetch","text":"initFetch : bool = None True # Whether to pull data when initializing, only for cases with filter, no filter will pull data initially","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.interval","text":"interval : int = None Refresh time (minimum 1000)","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.itemAction","text":"itemAction : Action = None Implement a custom action when a row is clicked, supports all configurations in action, such as pop-up boxes, refreshing other components, etc.","title":"itemAction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.itemDraggableOn","text":"itemDraggableOn : bool = None Use an expression to configure whether draggable is sortable or not","title":"itemDraggableOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.keepItemSelectionOnPageChange","text":"keepItemSelectionOnPageChange : bool = None True","title":"keepItemSelectionOnPageChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.labelTpl","text":"labelTpl : str = None Single description template, keepItemSelectionOnPageChange","title":"labelTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.loadDataOnce","text":"loadDataOnce : bool = None Whether to load all data at once (front-end paging)","title":"loadDataOnce"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.loadDataOnceFetchOnFilter","text":"loadDataOnceFetchOnFilter : bool = None True # Whether to re-request the api when filtering when loadDataOnce is enabled","title":"loadDataOnceFetchOnFilter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.messages","text":"messages : Messages = None Override the message prompt, if not specified, the message returned by the api will be used","title":"messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.mode","text":"mode : str = None \"table\" # \"table\", \"cards\" or \"list\"","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.orderField","text":"orderField : str = None Set the name of the field used to determine the position, after setting the new order will be assigned to the field.","title":"orderField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.pageField","text":"pageField : str = None Set the pagination page number field name. \"page\"","title":"pageField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.perPage","text":"perPage : int = None Set how many data to display on a page. 10","title":"perPage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.perPageAvailable","text":"perPageAvailable : List [ int ] = None [5, 10, 20, 50, 100] # Set how many data dropdown boxes are available for displaying on a page.","title":"perPageAvailable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.perPageField","text":"perPageField : str = None \"perPage\" # Set the field name of how many data to display on a paginated page. Note: Best used in conjunction with defaultParams, see the following example.","title":"perPageField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.primaryField","text":"primaryField : str = None Set the ID field name.' id'","title":"primaryField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.quickSaveApi","text":"quickSaveApi : MSA_UI_API = None The MSA_UI_API used for batch saving after quick editing.","title":"quickSaveApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.quickSaveItemApi","text":"quickSaveItemApi : MSA_UI_API = None The MSA_UI_API used when the quick edit is configured to save in time.","title":"quickSaveItemApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.saveOrderApi","text":"saveOrderApi : MSA_UI_API = None The api to save the sorting.","title":"saveOrderApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.silentPolling","text":"silentPolling : bool = None Configure whether to hide loading animation when refreshing","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.source","text":"source : str = None Data mapping interface to return the value of a field, not set will default to use the interface to return ${items} or ${rows}, can also be set to the content of the upper-level data source","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : str = None Configure the conditions for stopping the refresh via an expression","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.stopAutoRefreshWhenModalIsOpen","text":"stopAutoRefreshWhenModalIsOpen : bool = None Turn off auto refresh when there is a popup box, and resume when the popup box is closed","title":"stopAutoRefreshWhenModalIsOpen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.syncLocation","text":"syncLocation : bool = None False # Whether to sync the parameters of the filter condition to the address bar, !!! !!! may change the data type after turning on, can't pass fastpi data verification","title":"syncLocation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.syncResponse2Query","text":"syncResponse2Query : bool = None True # Sync the return data to the filter.","title":"syncResponse2Query"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.title","text":"title : str = None \"\" # can be set to empty, when set to empty, there is no title bar","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.type","text":"type : str = 'crud' type specifies the CRUD renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.Messages","text":"Bases: MSAUINode","title":"Messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.CRUD.Messages-attributes","text":"fetchFailed class-attribute \u00b6 fetchFailed : str = None prompt when fetch fails quickSaveFailed class-attribute \u00b6 quickSaveFailed : str = None prompt for quick save failure quickSaveSuccess class-attribute \u00b6 quickSaveSuccess : str = None QuickSaveSuccess hint saveOrderFailed class-attribute \u00b6 saveOrderFailed : str = None Hint for failed save order saveOrderSuccess class-attribute \u00b6 saveOrderSuccess : str = None prompt for order success","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel","text":"Bases: MSAUINode Rotating image","title":"Carousel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.animation","text":"animation : str = None \"fade\" # Toggle animation effect, default fade, also slide mode","title":"animation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.auto","text":"auto : bool = True whether to rotate automatically","title":"auto"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.className","text":"className : str = None \"panel-default\" # class name of outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.controls","text":"controls : list [ str ] = None \"['dots','arrows']\" # Show left and right arrows, bottom dots index","title":"controls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.controlsTheme","text":"controlsTheme : str = None \"light\" # Color of left and right arrows, bottom dot index, default light, dark mode available","title":"controlsTheme"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.duration","text":"duration : str = None \"0.5s\" # the duration of the toggle animation","title":"duration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.height","text":"height : str = None \"200px\" # height","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.interval","text":"interval : str = None \"5s\" # toggle animation interval","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.itemSchema","text":"itemSchema : dict = None Custom schema to display data","title":"itemSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.options","text":"options : List [ Item ] = None \"[]\" # Rotating panel data","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.thumbMode","text":"thumbMode : str = None \"cover\"|\"contain\" # default image zoom mode","title":"thumbMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.type","text":"type : str = 'carousel' Specify as Carousel renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.width","text":"width : str = None \"auto\" # width","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Carousel.Item-attributes","text":"description class-attribute \u00b6 description : str = None Image description descriptionClassName class-attribute \u00b6 descriptionClassName : str = None Image description class name href class-attribute \u00b6 href : str = None link to the image's open URL html class-attribute \u00b6 html : str = None HTML customization, same as Tpl image class-attribute \u00b6 image : str = None Image link imageClassName class-attribute \u00b6 imageClassName : str = None Image class name title class-attribute \u00b6 title : str = None Image title titleClassName class-attribute \u00b6 titleClassName : str = None Image title class name","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart","text":"Bases: MSAUINode chart: https://echarts.apache.org/zh/option.html#title","title":"Chart"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.api","text":"api : MSA_UI_API = None Configuration item interface address","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.body","text":"body : MSAUISchemaNode = None Content container","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.className","text":"className : str = None class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.config","text":"config : Union [ dict , str ] = None Set the configuration of eschars, when it is string, you can set function and other configuration items","title":"config"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.height","text":"height : str = None Set the height of the root element","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.initFetch","text":"initFetch : bool = None Whether to request the interface when the component is initialized","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.interval","text":"interval : int = None Refresh time (min 1000)","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.replaceChartOption","text":"replaceChartOption : bool = None False # Does each update completely override the configuration item or append it?","title":"replaceChartOption"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.source","text":"source : dict = None Get the value of a variable in the data chain as a configuration via data mapping","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.style","text":"style : dict = None Set the style of the root element","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.trackExpression","text":"trackExpression : str = None Update the chart when the value of this expression has changed","title":"trackExpression"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.type","text":"type : str = 'chart' Specify as chart renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Chart.width","text":"width : str = None Set the width of the root element","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios","text":"Bases: Radios radio box","title":"ChartRadios"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.chartValueField","text":"chartValueField : str = None \"value\" # chart value field name","title":"chartValueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.config","text":"config : dict = None echart chart configuration","title":"config"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.showTooltipOnHighlight","text":"showTooltipOnHighlight : bool = None False # whether to show tooltip when highlighted","title":"showTooltipOnHighlight"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ChartRadios.type","text":"type : str = 'chart-radios'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox","text":"Bases: FormItem Checkbox","title":"Checkbox"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.falseValue","text":"falseValue : Any = None Identifies a false value","title":"falseValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.option","text":"option : str = None option description","title":"option"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.trueValue","text":"trueValue : Any = None Identifies the true value","title":"trueValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkbox.type","text":"type : str = 'checkbox'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes","text":"Bases: FormItem checkboxes","title":"Checkboxes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.addApi","text":"addApi : MSA_UI_API = None Configure the add options interface","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.addControls","text":"addControls : List [ FormItem ] = None Customize the new form item","title":"addControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.checkAll","text":"checkAll : bool = None False # If or not checkAll is supported","title":"checkAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.columnsCount","text":"columnsCount : int = None 1 # How many columns to display options by, default is one column","title":"columnsCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.creatable","text":"creatable : bool = None False # New option","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.createBtnLabel","text":"createBtnLabel : str = None \"Add option\" # Add option","title":"createBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.defaultCheckAll","text":"defaultCheckAll : bool = None False # Whether to check all by default","title":"defaultCheckAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.deleteApi","text":"deleteApi : MSA_UI_API = None Configure the delete option interface","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.delimiter","text":"delimiter : str = None \",\" # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.editApi","text":"editApi : MSA_UI_API = None Configure the edit options interface","title":"editApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.editControls","text":"editControls : List [ FormItem ] = None Customize edit form items","title":"editControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.editable","text":"editable : bool = None False # Edit options","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.extractValue","text":"extractValue : bool = None False # extract value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.inline","text":"inline : bool = None True # Whether to display as one line","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.joinValues","text":"joinValues : bool = None True # splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.labelField","text":"labelField : str = None \"label\" # option label field","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.options","text":"options : MSAOptionsNode = None Options group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.removable","text":"removable : bool = None False # Remove options","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.source","text":"source : MSA_UI_API = None dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.type","text":"type : str = 'checkboxes'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Checkboxes.valueField","text":"valueField : str = None \"value\" # option value field","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code","text":"Bases: MSAUINode Code highlighting","title":"Code"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.editorTheme","text":"editorTheme : str = None \"'vs'\" # theme, and 'vs-dark'","title":"editorTheme"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.language","text":"language : str = None The highlighting language used, default is plaintext","title":"language"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.name","text":"name : str = None Used as a variable mapping when in other components","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.tabSize","text":"tabSize : int = None 4 # Default tab size","title":"tabSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.type","text":"type : str = 'code'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.value","text":"value : str = None The value of the displayed color","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Code.wordWrap","text":"wordWrap : str = None \"True\" # whether to wrap the line","title":"wordWrap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnImage","text":"Bases: Image , TableColumn Image Column","title":"ColumnImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnImages","text":"Bases: Images , TableColumn Image collection Column","title":"ColumnImages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation","text":"Bases: TableColumn operationColumn","title":"ColumnOperation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.buttons","text":"buttons : List [ Union [ Action , MSAUINode ]] = None","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.label","text":"label : MSAUITemplate = None \"operation\"","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.toggled","text":"toggled : bool = None True","title":"toggled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ColumnOperation.type","text":"type : str = 'operation'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo","text":"Bases: FormItem combo","title":"Combo"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.addButtonClassName","text":"addButtonClassName : str = None Add button CSS class name","title":"addButtonClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.addButtonText","text":"addButtonText : str = None \"Add\" # Add button text","title":"addButtonText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.addable","text":"addable : bool = False Whether to add","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.canAccessSuperData","text":"canAccessSuperData : bool = False Specifies whether the data from the upper level can be automatically fetched and mapped to form items","title":"canAccessSuperData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.conditions","text":"conditions : dict = None Array of rendering types containing all conditions, test in a single array is the judgment condition, items in the array are the schema rendered when the condition is met","title":"conditions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.deleteApi","text":"deleteApi : MSA_UI_API = None If configured, an api will be sent before deletion, and the deletion will be completed only if the request is successful","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.deleteConfirmText","text":"deleteConfirmText : str = None \"Confirm to delete?\"","title":"deleteConfirmText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.delimiter","text":"delimiter : str = None \"False\" # What delimiter to use when flattening is on and joinValues is true.","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.draggable","text":"draggable : bool = False whether draggable sorting is possible, note that when draggable sorting is enabled, there will be an additional $id field","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.draggableTip","text":"draggableTip : str = None \"Can be reordered by dragging the [swap] button in each row\" # Text to indicate draggable","title":"draggableTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.flat","text":"flat : bool = False Whether to flatten the results (remove the name), only valid if the length of items is 1 and multiple is true.","title":"flat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.formClassName","text":"formClassName : str = None class name of a single group of form items","title":"formClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.items","text":"items : List [ FormItem ] = None Combined form items to be displayed items[x].columnClassName: str = None # The class name of the column with which to configure the column width. Default is evenly distributed. items[x].unique: bool = None # Set whether the current column value is unique, i.e. no duplicate selections are allowed.","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.joinValues","text":"joinValues : bool = True Defaults to true when flattening is on, whether to send to the backend as a delimiter, otherwise as an array.","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.maxLength","text":"maxLength : int = None The maximum number of items to add","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.minLength","text":"minLength : int = None The minimum number of items to add","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.multiLine","text":"multiLine : bool = False Default is to display a row horizontally, set it to display vertically","title":"multiLine"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.multiple","text":"multiple : bool = False Whether or not to multi-select","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.noBorder","text":"noBorder : bool = False Whether to show border for a single group of table items","title":"noBorder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.nullable","text":"nullable : bool = False Allow nullable, if the validator is configured inside the child form item and it is in single entry mode. Can allow the user to choose to clear (not filled).","title":"nullable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.placeholder","text":"placeholder : str = None \"``\" # Show when there is no member","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.removable","text":"removable : bool = False If or not it can be removed","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.scaffold","text":"scaffold : dict = {} The initial value of a single table item","title":"scaffold"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.strictMode","text":"strictMode : bool = True Default is strict mode, when set to false, when other table items are updated, the table items inside can also be retrieved in time, otherwise it will not.","title":"strictMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.subFormMode","text":"subFormMode : str = None \"normal\" # Optional normal, horizontal, inline","title":"subFormMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.syncFields","text":"syncFields : List [ str ] = [] Configure sync fields. Only valid if strictMode is false.","title":"syncFields"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.type","text":"type : str = 'combo'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Combo.typeSwitchable","text":"typeSwitchable : bool = False whether the condition is switchable, used with conditions","title":"typeSwitchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder","text":"Bases: FormItem Combined Condition","title":"ConditionBuilder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.className","text":"className : str = None outer dom class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.fieldClassName","text":"fieldClassName : str = None The class name of the input field","title":"fieldClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.fields","text":"fields : List [ Field ] = None is an array type, each member represents an optional field, supports multiple layers, configuration example","title":"fields"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.source","text":"source : str = None pull configuration items via remote","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.type","text":"type : str = 'condition-builder'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Date","text":"Bases: Field date","title":"Date"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Date-attributes","text":"defaultValue class-attribute \u00b6 defaultValue : str = None default value format class-attribute \u00b6 format : str = None default \"YYYY-MM-DD\" value format inputFormat class-attribute \u00b6 inputFormat : str = None Default \"YYYY-MM-DD\" date format for display. type class-attribute \u00b6 type : str = 'date'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Datetime","text":"Bases: Date datetime","title":"Datetime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Datetime-attributes","text":"timeFormat class-attribute \u00b6 timeFormat : str = None Default \"HH:mm\" time format, determines which input boxes are available. type class-attribute \u00b6 type : str = 'datetime'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Field","text":"Bases: MSAUINode","title":"Field"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Field-attributes","text":"defaultOp class-attribute \u00b6 defaultOp : str = None default to \"equal\" label class-attribute \u00b6 label : str = None Name of the field. operators class-attribute \u00b6 operators : list [ str ] = None Configure to override if you don't want that many. placeholder class-attribute \u00b6 placeholder : str = None Placeholder type class-attribute \u00b6 type : str = 'text' configured as \"text\" in the field configuration","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Number","text":"Bases: Field number","title":"Number"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Number-attributes","text":"maximum class-attribute \u00b6 maximum : float = None maximum value minimum class-attribute \u00b6 minimum : float = None minimum step class-attribute \u00b6 step : float = None step length type class-attribute \u00b6 type : str = 'number'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Select","text":"Bases: Field Dropdown selection","title":"Select"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Select-attributes","text":"autoComplete class-attribute \u00b6 autoComplete : MSA_UI_API = None AutoComplete will be called after each new input, and will return updated options according to the interface. options class-attribute \u00b6 options : MSAOptionsNode = None list of options, Array<{label: string, value: any}> searchable class-attribute \u00b6 searchable : bool = None If or not searchable source class-attribute \u00b6 source : MSA_UI_API = None Dynamic options, please configure api. type class-attribute \u00b6 type : str = 'select'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Text","text":"Bases: Field text","title":"Text"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Time","text":"Bases: Date time","title":"Time"},{"location":"reference/admin/frontend/components/#admin.frontend.components.ConditionBuilder.Time-attributes","text":"type class-attribute \u00b6 type : str = 'datetime'","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom","text":"Bases: MSAUINode custom component","title":"Custom"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.className","text":"className : str = None node class","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.html","text":"html : str = None Initialize node html","title":"html"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.id","text":"id : str = None node id","title":"id"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.inline","text":"inline : bool = False default use div tag, if true use span tag","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.name","text":"name : str = None node name","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.onMount","text":"onMount : str = None \"Function\" # The function to call after the node is initialized","title":"onMount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.onUnmount","text":"onUnmount : str = None \"Function\" # The function called when the node is destroyed","title":"onUnmount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.onUpdate","text":"onUpdate : str = None \"Function\" # Function to be called when data is updated","title":"onUpdate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Custom.type","text":"type : str = 'custom'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog","text":"Bases: MSAUINode Dialog","title":"Dialog"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.actions","text":"actions : List [ Action ] = None If you want to not show the bottom button, you can configure: [] \"[Confirm] and [Cancel]\"","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.body","text":"body : MSAUISchemaNode = None Add content to the Dialog content area","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.bodyClassName","text":"bodyClassName : str = None \"modal-body\" # The style class name of the Dialog body area","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.closeOnEsc","text":"closeOnEsc : bool = None False # Whether to close the Dialog by pressing Esc","title":"closeOnEsc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.data","text":"data : dict = None Support data mapping, if not set will default to inherit data from the context of the trigger button.","title":"data"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.disabled","text":"disabled : bool = None False # If this property is set, the Dialog is read only and no action is submitted.","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.showCloseButton","text":"showCloseButton : bool = None True # Whether to show the close button in the upper right corner","title":"showCloseButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.showErrorMsg","text":"showErrorMsg : bool = None True # Whether to show the error message in the lower left corner of the popup box","title":"showErrorMsg"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.size","text":"size : Union [ str , SizeEnum ] = None Specify dialog size, supports: xs, sm, md, lg, xl, full","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.title","text":"title : MSAUISchemaNode = None popup layer title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Dialog.type","text":"type : str = 'dialog' Specify as Dialog renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider","text":"Bases: MSAUINode","title":"Divider"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider.className","text":"className : str = None class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider.lineStyle","text":"lineStyle : str = None The style of the divider line, supports dashed and solid","title":"lineStyle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Divider.type","text":"type : str = 'divider' Divider","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer","text":"Bases: MSAUINode drawer","title":"Drawer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.actions","text":"actions : List [ Action ] = None Can be set without, only two buttons by default. \"[Confirm] and [Cancel]\"","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.body","text":"body : MSAUISchemaNode = None Add content to the Drawer content area","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.bodyClassName","text":"bodyClassName : str = None \"modal-body\" # The style class name of the Drawer body area","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.closeOnEsc","text":"closeOnEsc : bool = None False # Whether or not to support closing the Drawer by pressing Esc","title":"closeOnEsc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.closeOnOutside","text":"closeOnOutside : bool = None False # Whether to close the Drawer by clicking outside the content area","title":"closeOnOutside"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.data","text":"data : dict = None Support data mapping, if not set will default to inherit data from the context of the trigger button.","title":"data"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.overlay","text":"overlay : bool = None True # Whether or not to show the mask","title":"overlay"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.position","text":"position : str = None 'left' # Position","title":"position"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.resizable","text":"resizable : bool = None False # Whether the Drawer size can be changed by dragging and dropping","title":"resizable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.size","text":"size : Union [ str , SizeEnum ] = None Specify Drawer size, supports: xs, sm, md, lg","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.title","text":"title : MSAUISchemaNode = None popup layer title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Drawer.type","text":"type : str = 'drawer' \"drawer\" is specified as the Drawer renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor","text":"Bases: FormItem Code Editor","title":"Editor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.allowFullscreen","text":"allowFullscreen : bool = None False # switch to show full screen mode or not","title":"allowFullscreen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.language","text":"language : str = None \"javascript\" # Language highlighted by the editor, supported by the ${xxx} variable bat, c, coffeescript, cpp, csharp, css, dockerfile, fsharp, go, handlebars, html, ini, java javascript, json, less, lua, markdown, msdax, objective-c, php, plaintext, postiats, powershell, pug, python, r, razor, ruby, sb, scss, shell, sol, sql, swift, typescript, vb, xml, yaml","title":"language"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.options","text":"options : dict = None other configurations of monaco editor, such as whether to display line numbers, etc., please refer to here, but can not set readOnly, read-only mode need to use disabled: true","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.size","text":"size : str = None \"md\" # editor height, can be md, lg, xl, xxl","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Editor.type","text":"type : str = 'editor'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex","text":"Bases: MSAUINode","title":"Flex"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.alignItems","text":"alignItems : str = None \"stretch\", \"start\", \"flex-start\", \"flex-end\", \"end\", \"center\", \"baseline\"","title":"alignItems"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.className","text":"className : str = None css class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.items","text":"items : List [ MSAUISchemaNode ] = None","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.justify","text":"justify : str = None \"start\", \"flex-start\", \"center\", \"end\", \"flex-end\", \"space-around\", \"space-between\", \"space-evenly\"","title":"justify"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.style","text":"style : dict = None Custom style","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Flex.type","text":"type : str = 'flex' Specify as Flex renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form","text":"Bases: MSAUINode Form","title":"Form"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.actions","text":"actions : List [ Action ] = None Form submit button, member of Action","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.actionsClassName","text":"actionsClassName : str = None Class name of actions","title":"actionsClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.api","text":"api : MSA_UI_API = None The api used by Form to save data.","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.asyncApi","text":"asyncApi : MSA_UI_API = None After this property is set, the form will continue to poll the interface after it is submitted and sent to the saved interface until the finished property is returned as true.","title":"asyncApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.autoFocus","text":"autoFocus : bool = None If or not autoFocus is enabled.","title":"autoFocus"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.body","text":"body : List [ Union [ FormItem , MSAUISchemaNode ]] = None Form form item collection","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.canAccessSuperData","text":"canAccessSuperData : bool = None Specifies whether the data from the upper level can be automatically retrieved and mapped to the form item.","title":"canAccessSuperData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.checkInterval","text":"checkInterval : int = None The time interval to poll the request, default is 3 seconds. Set asyncApi to be valid","title":"checkInterval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.className","text":"className : str = None The class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.clearPersistDataAfterSubmit","text":"clearPersistDataAfterSubmit : bool = None Specify whether to clear the local cache after a successful form submission","title":"clearPersistDataAfterSubmit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.columnCount","text":"columnCount : int = None How many columns are displayed for the form item","title":"columnCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.debug","text":"debug : bool = None","title":"debug"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.finishedField","text":"finishedField : Optional [ str ] = None Set this property if the field name that determines the finish is not finished, e.g. is_success","title":"finishedField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.horizontal","text":"horizontal : Horizontal = None Useful when mode is horizontal.","title":"horizontal"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initApi","text":"initApi : MSA_UI_API = None The api used by Form to get the initial data.","title":"initApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initAsyncApi","text":"initAsyncApi : MSA_UI_API = None The api used by Form to get the initial data, unlike initApi, it will keep polling the request until the finished property is returned as true.","title":"initAsyncApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initCheckInterval","text":"initCheckInterval : int = None After setting initAsyncApi, the default time interval for pulling","title":"initCheckInterval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initFetch","text":"initFetch : bool = None When initApi or initAsyncApi is set, the request will start by default, but when set to false, the interface will not be requested from the beginning.","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initFetchOn","text":"initFetchOn : str = None Use an expression to configure","title":"initFetchOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.initFinishedField","text":"initFinishedField : Optional [ str ] = None When initAsyncApi is set, the default is to determine if the request is completed by returning data.finished.","title":"initFinishedField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.interval","text":"interval : int = None Refresh time (minimum 3000)","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.messages","text":"messages : Messages = None Message prompt override, the default message reads the message returned by MSA_UI_API, but it can be overridden here.","title":"messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.mode","text":"mode : DisplayModeEnum = None How the form is displayed, either: normal, horizontal or inline","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.name","text":"name : str = None Set a name so that other components can communicate with it","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.panelClassName","text":"panelClassName : str = None The class name of the outer panel","title":"panelClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.persistData","text":"persistData : str = None Specify a unique key to configure whether to enable local caching for the current form","title":"persistData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.preventEnterSubmit","text":"preventEnterSubmit : bool = None Disable carriage return to submit the form","title":"preventEnterSubmit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.primaryField","text":"primaryField : str = None Set primary key id, when set, only carry this data when detecting form completion (asyncApi).","title":"primaryField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.promptPageLeave","text":"promptPageLeave : bool = None whether the form is not yet saved and will pop up before leaving the page to confirm.","title":"promptPageLeave"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.redirect","text":"redirect : str = None When this property is set, the Form will automatically jump to the specified page after a successful save. Supports relative addresses, and absolute addresses (relative to the group).","title":"redirect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.reload","text":"reload : str = None Refresh the target object after the operation. Please fill in the name value set by the target component, if you fill in the name of window, the current page will be refreshed as a whole.","title":"reload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.resetAfterSubmit","text":"resetAfterSubmit : bool = None whether to reset the form after submission","title":"resetAfterSubmit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.rules","text":"rules : list = None Form combination check rules Array<{rule:string;message:string}>","title":"rules"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.silentPolling","text":"silentPolling : bool = False Configure whether to show loading animation when refreshing","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : str = None Configure the conditions for stopping the refresh via an expression","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.submitOnChange","text":"submitOnChange : bool = None The form is submitted when it is modified","title":"submitOnChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.submitOnInit","text":"submitOnInit : bool = None Submit once at the beginning","title":"submitOnInit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.submitText","text":"submitText : Optional [ str ] = None \"submit\" # The default submit button name, if set to null, the default button can be removed.","title":"submitText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.target","text":"target : str = None The default form submission saves the data itself by sending the api, but you can set the name value of another form or the name value of another CRUD model. If the target is a Form, the target Form will retrigger initApi and the api will get the current form data. If the target is a CRUD model, the target model retriggers the search with the current Form data as the argument. When the target is a window, the current form data will be attached to the page address.","title":"target"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.title","text":"title : Optional [ str ] = None Title of the Form","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.trimValues","text":"trimValues : bool = None trim each value of the current form item","title":"trimValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.type","text":"type : str = 'form' \"form\" is specified as a Form renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.wrapWithPanel","text":"wrapWithPanel : bool = None Whether to let Form wrap with panel, set to false and actions will be invalid.","title":"wrapWithPanel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.Messages","text":"Bases: MSAUINode","title":"Messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Form.Messages-attributes","text":"fetchFailed class-attribute \u00b6 fetchFailed : str = None prompt for fetch failure fetchSuccess class-attribute \u00b6 fetchSuccess : str = None Prompt when fetch succeeds saveFailed class-attribute \u00b6 saveFailed : str = None Prompt for failed save saveSuccess class-attribute \u00b6 saveSuccess : str = None Prompt for successful save","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem","text":"Bases: MSAUINode FormItemGeneral","title":"FormItem"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.className","text":"className : str = None The outermost class name of the form","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.copyable","text":"copyable : Union [ bool , dict ] = None Whether copyable boolean or {icon: string, content:string}","title":"copyable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.description","text":"description : MSAUITemplate = None Form item description","title":"description"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.disabled","text":"disabled : bool = None Whether the current form item is disabled or not","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.disabledOn","text":"disabledOn : MSAUIExpression = None The condition whether the current form item is disabled or not","title":"disabledOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.inline","text":"inline : bool = None Whether inline mode","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.inputClassName","text":"inputClassName : str = None Form controller class name","title":"inputClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.label","text":"label : MSAUITemplate = None Label of the form item Template or false","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.labelClassName","text":"labelClassName : str = None Class name of the label","title":"labelClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.labelRemark","text":"labelRemark : Remark = None Description of the form item label","title":"labelRemark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.name","text":"name : str = None Field name, specifying the key of the form item when it is submitted","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.placeholder","text":"placeholder : str = None Form item description","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.required","text":"required : bool = None Whether or not it is required.","title":"required"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.requiredOn","text":"requiredOn : MSAUIExpression = None Expression to configure if the current form entry is required.","title":"requiredOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.submitOnChange","text":"submitOnChange : bool = None Whether to submit the current form when the value of the form item changes.","title":"submitOnChange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.type","text":"type : str = 'input-text' Specify the form item type","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.validateApi","text":"validateApi : MSAUIExpression = None Form validation interface","title":"validateApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.validations","text":"validations : Union [ Validation , MSAUIExpression ] = None Form item value format validation, support setting multiple, multiple rules separated by English commas.","title":"validations"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.value","text":"value : Union [ int , str ] = None The value of the field","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.visible","text":"visible : MSAUIExpression = None The condition whether the current form item is disabled or not","title":"visible"},{"location":"reference/admin/frontend/components/#admin.frontend.components.FormItem.visibleOn","text":"visibleOn : MSAUIExpression = None The condition if the current table item is disabled or not","title":"visibleOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid","text":"Bases: MSAUINode","title":"Grid"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.align","text":"align : str = None 'left'|'right'|'between'|'center = None # horizontal alignment","title":"align"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.columns","text":"columns : List [ MSAUISchemaNode ] = None","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.gap","text":"gap : str = None 'xs'|'sm'|'base'|'none'|'md'|'lg = None # Horizontal spacing","title":"gap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.type","text":"type : str = 'grid' Specify as Grid renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.valign","text":"valign : str = None 'top'|'middle'|'bottom'|'between = None # Vertical alignment","title":"valign"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.Column","text":"Bases: MSAUINode","title":"Column"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Grid.Column-attributes","text":"ClassName class-attribute \u00b6 ClassName : str = None Column class name body class-attribute \u00b6 body : List [ MSAUISchemaNode ] = None lg class-attribute \u00b6 lg : int = None \"auto\" # Width ratio: 1 - 12 md class-attribute \u00b6 md : int = None \"auto\" # Width ratio: 1 - 12 sm class-attribute \u00b6 sm : int = None \"auto\" # Width ratio: 1 - 12 valign class-attribute \u00b6 valign : str = None 'top'|'middle'|'bottom'|'between = None # Vertical alignment of current column content xs class-attribute \u00b6 xs : int = None \"auto\" # Width percentage: 1 - 12","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group","text":"Bases: InputGroup Form Item Group","title":"Group"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.direction","text":"direction : str = None \"horizontal\" # You can configure whether to display horizontally or vertically. The corresponding configuration items are: vertical, horizontal","title":"direction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.gap","text":"gap : str = None spacing between form items, optional: xs, sm, normal","title":"gap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.mode","text":"mode : DisplayModeEnum = None Display default, same mode as in Form","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Group.type","text":"type : str = 'group'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Hidden","text":"Bases: FormItem hiddenField","title":"Hidden"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Hidden-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Hidden.type","text":"type : str = 'hidden'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal","text":"Bases: MSAUINode","title":"Horizontal"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal.left","text":"left : int = None The width of the left label as a percentage","title":"left"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal.offset","text":"offset : int = None The offset of the right controller when no label is set","title":"offset"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Horizontal.right","text":"right : int = None The width share of the right controller.","title":"right"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html","text":"Bases: MSAUINode Html Node","title":"Html"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html.html","text":"html : str html Use MSAUITpl when you need to get variables in the data field.","title":"html"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Html.type","text":"type : str = 'html' Specify as html component","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon","text":"Bases: MSAUINode icon","title":"Icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon.icon","text":"icon : str = None icon name, supports fontawesome v4 or use url","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Icon.type","text":"type : str = 'icon' Specify the component type","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe","text":"Bases: MSAUINode Iframe","title":"Iframe"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.className","text":"className : str = None The class name of the iFrame","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.frameBorder","text":"frameBorder : list = None frameBorder","title":"frameBorder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.height","text":"height : Union [ int , str ] = None \"100%\" # iframe height","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.src","text":"src : str = None iframe address","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.style","text":"style : dict = None Style object","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.type","text":"type : str = 'iframe' Specify as iFrame renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Iframe.width","text":"width : Union [ int , str ] = None \"100%\" # iframe width","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image","text":"Bases: MSAUINode image","title":"Image"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.defaultImage","text":"defaultImage : str = None Image to display when no data is available","title":"defaultImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.enlargeAble","text":"enlargeAble : bool = None Support for enlarge preview","title":"enlargeAble"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.enlargeCaption","text":"enlargeCaption : str = None Description of the enlarged preview","title":"enlargeCaption"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.enlargeTitle","text":"enlargeTitle : str = None The title of the enlarged preview","title":"enlargeTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.height","text":"height : int = None Image thumbnail height","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.href","text":"href : MSAUITemplate = None External link address","title":"href"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.imageCaption","text":"imageCaption : str = None description","title":"imageCaption"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.imageClassName","text":"imageClassName : str = None Image CSS class name","title":"imageClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.imageMode","text":"imageMode : str = None \"thumb\" # Image display mode, optional: 'thumb', 'original' i.e.: thumbnail mode or original image mode","title":"imageMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.originalSrc","text":"originalSrc : str = None Original image address","title":"originalSrc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.placeholder","text":"placeholder : str = None Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.src","text":"src : str = None Thumbnail address","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.thumbClassName","text":"thumbClassName : str = None Image thumbnail CSS class name","title":"thumbClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.thumbMode","text":"thumbMode : str = None \"contain\" # Preview mode, optional: 'w-full', 'h-full', 'contain', 'cover'","title":"thumbMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.thumbRatio","text":"thumbRatio : str = None \"1:1\" # The ratio of the preview image, optional: '1:1', '4:3', '16:9'","title":"thumbRatio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.title","text":"title : str = None title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.type","text":"type : str = 'image' \"image\" if in Table, Card and List; \"static-image\" if used as a static display in Form","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Image.width","text":"width : int = None Image scaling width","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images","text":"Bases: MSAUINode images collection","title":"Images"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.defaultImage","text":"defaultImage : str = None Default image to display","title":"defaultImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.delimiter","text":"delimiter : str = None \",\" # separator to split when value is a string","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.enlargeAble","text":"enlargeAble : bool = None Support enlarge preview","title":"enlargeAble"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.originalSrc","text":"originalSrc : str = None The address of the original image, supports data mapping to get the image variables in the object","title":"originalSrc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.source","text":"source : str = None data source","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.src","text":"src : str = None Address of the preview image, supports data mapping to get the image variables in the object","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.thumbMode","text":"thumbMode : str = None \"contain\" # preview image mode, optional: 'w-full', 'h-full', 'contain', 'cover'","title":"thumbMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.thumbRatio","text":"thumbRatio : str = None \"1:1\" # Preview ratio, optional: '1:1', '4:3', '16:9'","title":"thumbRatio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.type","text":"type : str = 'images' \"images\" if in Table, Card and List; \"static-images\" if used as a static display in Form","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Images.value","text":"value : Union [ str , List [ str ], List [ dict ]] = None array of images","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray","text":"Bases: FormItem arrayInputArray","title":"InputArray"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.addButtonText","text":"addButtonText : str = None \"Add\" # Add button text","title":"addButtonText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.addable","text":"addable : bool = None Whether addable.","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.draggable","text":"draggable : bool = False whether draggable, note that when draggable is enabled, there will be an extra $id field","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.draggableTip","text":"draggableTip : str = None draggable prompt text, default is: \"can be adjusted by dragging the [swap] button in each row\"","title":"draggableTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.items","text":"items : FormItem = None Configure single-item form type","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.maxLength","text":"maxLength : int = None Limit the maximum length","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.minLength","text":"minLength : int = None Limit the minimum length","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.removable","text":"removable : bool = None Whether removable","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputArray.type","text":"type : str = 'input-array'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity","text":"Bases: FormItem city selector","title":"InputCity"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.allowCity","text":"allowCity : bool = None True # Allow city selection","title":"allowCity"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.allowDistrict","text":"allowDistrict : bool = None True # Allow district selection","title":"allowDistrict"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.extractValue","text":"extractValue : bool = None True # whether to extract the value, if set to false the value format will become an object containing code, province, city and district text information.","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.searchable","text":"searchable : bool = None False # Whether or not the search box is available","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputCity.type","text":"type : str = 'location-city'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor","text":"Bases: FormItem color picker","title":"InputColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.allowCustomColor","text":"allowCustomColor : bool = None True # When false, only colors can be selected, use presetColors to set the color selection range","title":"allowCustomColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.clearable","text":"clearable : bool = None \"label\" # whether to show clear button","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.format","text":"format : str = None \"hex\" # Please choose hex, hls, rgb or rgba.","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.presetColors","text":"presetColors : List [ str ] = None \"selector preset color values\" # default color at the bottom of the selector, if the array is empty, no default color is shown","title":"presetColors"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.resetValue","text":"resetValue : str = None \"\" # After clearing, the form item value is adjusted to this value","title":"resetValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputColor.type","text":"type : str = 'input-color'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate","text":"Bases: FormItem date","title":"InputDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.clearable","text":"clearable : bool = None True # clearable or not","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.closeOnSelect","text":"closeOnSelect : bool = None False # Whether to close the selection box immediately after tapping a date","title":"closeOnSelect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.embed","text":"embed : bool = None False # Whether to inline mode","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.format","text":"format : str = None \"X\" # Date picker value format, see documentation for more format types","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.inputFormat","text":"inputFormat : str = None \"YYYY-DD-MM\" # Date picker display format, i.e. timestamp format, see documentation for more format types","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.largeMode","text":"largeMode : bool = None False # Zoom mode","title":"largeMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.maxDate","text":"maxDate : str = None Limit the maximum date","title":"maxDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.minDate","text":"minDate : str = None Restrict the minimum date","title":"minDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.placeholder","text":"placeholder : str = None \"Please select a date\" # Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.scheduleAction","text":"scheduleAction : MSAUISchemaNode = None Custom schedule display","title":"scheduleAction"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.scheduleClassNames","text":"scheduleClassNames : List [ str ] = None \"['bg-warning','bg-danger','bg-success','bg-info','bg-secondary']\"","title":"scheduleClassNames"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.schedules","text":"schedules : Union [ list , str ] = None Show schedules in calendar, can set static data or take data from context, className reference background color","title":"schedules"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.shortcuts","text":"shortcuts : str = None Date shortcuts","title":"shortcuts"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.timeConstraints","text":"timeConstraints : dict = None True # See also: react-datetime","title":"timeConstraints"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.type","text":"type : str = 'input-date'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.utc","text":"utc : bool = None False # Save utc value","title":"utc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDate.value","text":"value : str = None Default value","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange","text":"Bases: InputDatetimeRange dateRange","title":"InputDateRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange.maxDuration","text":"maxDuration : str = None Limit the maximum span, e.g. 1year","title":"maxDuration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange.minDuration","text":"minDuration : str = None Limit the minimum span, e.g. 2days","title":"minDuration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDateRange.type","text":"type : str = 'input-date-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime","text":"Bases: FormItem date","title":"InputDatetime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.clearable","text":"clearable : bool = None True # clearable or not","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.embed","text":"embed : bool = None False # Whether to inline","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.format","text":"format : str = None \"X\" # Date time selector value format, see documentation for more format types","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.inputFormat","text":"inputFormat : str = None \"YYYY-MM-DD HH ss\" # Date and time picker display format, i.e. timestamp format, see documentation for more format types","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.maxDate","text":"maxDate : str = None Limit the maximum date and time","title":"maxDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.minDate","text":"minDate : str = None Limit the minimum date and time","title":"minDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.placeholder","text":"placeholder : str = None \"Please select the date and time\" # Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.shortcuts","text":"shortcuts : str = None Date and time shortcuts","title":"shortcuts"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.timeConstraints","text":"timeConstraints : dict = None True # See also: react-datetime","title":"timeConstraints"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.type","text":"type : str = 'input-datetime'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.utc","text":"utc : bool = None False # Save utc value","title":"utc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetime.value","text":"value : str = None Default value","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange","text":"Bases: InputTimeRange DateTimeRange","title":"InputDatetimeRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.maxDate","text":"maxDate : str = None Limit the maximum date and time, use the same as limit range","title":"maxDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.minDate","text":"minDate : str = None Limit the minimum date and time, use the same as limit range","title":"minDate"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.ranges","text":"ranges : Union [ str , List [ str ]] = None \"yesterday,7daysago,prevweek,thismonth,prevmonth,prevquarter\" Date range shortcut. optional: today,yesterday,1dayago,7daysago,30daysago,90daysago,prevweek,thismonth,thisquarter,prevmonth,prevquarter","title":"ranges"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.type","text":"type : str = 'input-datetime-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputDatetimeRange.utc","text":"utc : bool = None False # Save UTC value","title":"utc"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel","text":"Bases: FormItem Parse Excel","title":"InputExcel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.allSheets","text":"allSheets : bool = None False # whether to parse all sheets","title":"allSheets"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.includeEmpty","text":"includeEmpty : bool = None True # whether to include null values","title":"includeEmpty"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.parseMode","text":"parseMode : str = None 'array' or 'object' parse mode","title":"parseMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.plainText","text":"plainText : bool = None True # Whether to parse as plain text","title":"plainText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputExcel.type","text":"type : str = 'input-excel'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile","text":"Bases: FormItem FileUpload","title":"InputFile"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.accept","text":"accept : str = None \"text/plain\" # Only plain text is supported by default, to support other types, please configure this attribute to have the file suffix .xxx","title":"accept"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.asBase64","text":"asBase64 : bool = None False # Assign the file as base64 to the current component","title":"asBase64"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.asBlob","text":"asBlob : bool = None False # Assign the file to the current component in binary form","title":"asBlob"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.autoFill","text":"autoFill : Dict [ str , str ] = None After a successful upload, you can configure autoFill to populate a form item with the values returned by the upload interface (not supported under non-form for now)","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.autoUpload","text":"autoUpload : bool = None True # Automatically start uploading after no selection","title":"autoUpload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.btnLabel","text":"btnLabel : str = None The text of the upload button","title":"btnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.chunkApi","text":"chunkApi : MSA_UI_API = None chunkApi","title":"chunkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.chunkSize","text":"chunkSize : int = None 5 * 1024 * 1024 # chunk size","title":"chunkSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.delimiter","text":"delimiter : str = None \",\" # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.downloadUrl","text":"downloadUrl : Union [ str , bool ] = None Version 1.1.6 starts to support post:http://xxx.com/${value} this way, The default display of the file path will support direct download, you can support adding a prefix such as: http://xx.dom/filename= , if you do not want this, you can set the current configuration item to false.","title":"downloadUrl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.extractValue","text":"extractValue : bool = None False # Extract the value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.fileField","text":"fileField : str = None \"file\" # You can ignore this attribute if you don't want to store it yourself.","title":"fileField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.finishChunkApi","text":"finishChunkApi : MSA_UI_API = None finishChunkApi","title":"finishChunkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.hideUploadButton","text":"hideUploadButton : bool = None False # Hide the upload button","title":"hideUploadButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.joinValues","text":"joinValues : bool = None True # Splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.maxLength","text":"maxLength : int = None No limit by default, when set, only the specified number of files will be allowed to be uploaded at a time.","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.maxSize","text":"maxSize : int = None No limit by default, when set, files larger than this value will not be allowed to be uploaded. The unit is B","title":"maxSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.multiple","text":"multiple : bool = None False # Whether to select multiple.","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.nameField","text":"nameField : str = None \"name\" # Which field the interface returns to identify the file name","title":"nameField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.receiver","text":"receiver : MSA_UI_API = None Upload file interface","title":"receiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.startChunkApi","text":"startChunkApi : MSA_UI_API = None startChunkApi","title":"startChunkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.stateTextMap","text":"stateTextMap : dict = None Upload state text, Default: {init: '', pending: 'Waiting for upload', uploading: 'Uploading', error: 'Upload error', uploaded: 'Uploaded',ready: ''}","title":"stateTextMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.type","text":"type : str = 'input-file'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.urlField","text":"urlField : str = None \"url\" # The field name of the file download address.","title":"urlField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.useChunk","text":"useChunk : bool = None The server where msa_ui is hosted restricts the file upload size to 10M, so msa_ui will automatically change to chunk upload mode when the user selects a large file.","title":"useChunk"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputFile.valueField","text":"valueField : str = None \"value\" # Which field is used to identify the value of the file","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup","text":"Bases: FormItem InputBoxGroup","title":"InputGroup"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup.body","text":"body : List [ FormItem ] = None collection of form items","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup.className","text":"className : str = None CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputGroup.type","text":"type : str = 'input-group'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage","text":"Bases: FormItem Image Upload","title":"InputImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.accept","text":"accept : str = None \".jpeg,.jpg,.png,.gif\" # Supported image type formats, please configure this attribute as image suffix, e.g. .jpg, .png","title":"accept"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.autoFill","text":"autoFill : Dict [ str , str ] = None After successful upload, you can configure autoFill to fill the value returned by the upload interface into a form item (not supported under non-form)","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.autoUpload","text":"autoUpload : bool = None True # Automatically start uploading after no selection","title":"autoUpload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.crop","text":"crop : Union [ bool , CropInfo ] = None Used to set if crop is supported.","title":"crop"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.cropFormat","text":"cropFormat : str = None \"image/png\" # Crop file format","title":"cropFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.cropQuality","text":"cropQuality : int = None 1 # quality of the crop file format, for jpeg/webp, takes values between 0 and 1","title":"cropQuality"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.delimiter","text":"delimiter : str = None \",\" # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.extractValue","text":"extractValue : bool = None False # Extract the value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.fileField","text":"fileField : str = None \"file\" # You can ignore this property if you don't want to store it yourself.","title":"fileField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.fixedSize","text":"fixedSize : bool = None Whether to enable fixed size, if so, set fixedSizeClassName at the same time","title":"fixedSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.fixedSizeClassName","text":"fixedSizeClassName : str = None When fixedSize is enabled, the display size is controlled by this value.","title":"fixedSizeClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.frameImage","text":"frameImage : str = None Default placeholder image address","title":"frameImage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.hideUploadButton","text":"hideUploadButton : bool = None False # Hide the upload button","title":"hideUploadButton"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.joinValues","text":"joinValues : bool = None True # Splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.limit","text":"limit : Limit = None Limit the size of the image, won't allow uploads beyond that.","title":"limit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.maxLength","text":"maxLength : int = None No limit by default, when set, only the specified number of files will be allowed to be uploaded at once.","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.maxSize","text":"maxSize : int = None No limit by default, when set, file size larger than this value will not be allowed to upload. The unit is B","title":"maxSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.multiple","text":"multiple : bool = None False # Whether to select multiple.","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.receiver","text":"receiver : MSA_UI_API = None Upload file interface","title":"receiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.type","text":"type : str = 'input-image'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.CropInfo","text":"Bases: MSABaseUIModel","title":"CropInfo"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.CropInfo-attributes","text":"aspectRatio class-attribute \u00b6 aspectRatio : float = None Crop ratio. Floating point type, default 1 i.e. 1:1, if you want to set 16:9 please set 1.77777777777777 i.e. 16 / 9. rotatable class-attribute \u00b6 rotatable : bool = None False # If or not rotatable when cropping. scalable class-attribute \u00b6 scalable : bool = None False # Whether to scale when cropping viewMode class-attribute \u00b6 viewMode : int = None 1 # View mode when cropping, 0 is no limit","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.Limit","text":"Bases: MSABaseUIModel","title":"Limit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputImage.Limit-attributes","text":"aspectRatio class-attribute \u00b6 aspectRatio : float = None Limit the aspect ratio of the image, the format is floating point number, default 1 is 1:1. If you want to set 16:9, please set 1.7777777777777777 i.e. 16 / 9. If you don't want to limit the ratio, please set the empty string. height class-attribute \u00b6 height : int = None Limit the height of the image. maxHeight class-attribute \u00b6 maxHeight : int = None Limit the maximum height of the image. maxWidth class-attribute \u00b6 maxWidth : int = None Limit the maximum width of the image. minHeight class-attribute \u00b6 minHeight : int = None Limit the minimum height of the image. minWidth class-attribute \u00b6 minWidth : int = None Limit the minimum width of the image. width class-attribute \u00b6 width : int = None Limit the width of the image.","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth","text":"Bases: FormItem month","title":"InputMonth"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.clearable","text":"clearable : bool = None True # clearable or not","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.format","text":"format : str = None \"X\" # month selector value format, see moment for more format types","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.inputFormat","text":"inputFormat : str = None \"YYYY-MM\" # Month selector display format, i.e. timestamp format, see moment for more format types","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.placeholder","text":"placeholder : str = None \"Please select a month\" # Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.type","text":"type : str = 'input-month'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonth.value","text":"value : str = None Default value","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonthRange","text":"Bases: InputDateRange MonthRange","title":"InputMonthRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonthRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputMonthRange.type","text":"type : str = 'input-month-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber","text":"Bases: FormItem Number input box","title":"InputNumber"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.kilobitSeparator","text":"kilobitSeparator : bool = None thousand separator","title":"kilobitSeparator"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.max","text":"max : Union [ int , MSAUITemplate ] = None max","title":"max"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.min","text":"min : Union [ int , MSAUITemplate ] = None min","title":"min"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.precision","text":"precision : int = None precision, i.e., the number of decimal places","title":"precision"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.prefix","text":"prefix : str = None prefix","title":"prefix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.showSteps","text":"showSteps : bool = None True # Whether to show the up and down click buttons","title":"showSteps"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.step","text":"step : int = None step size","title":"step"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.suffix","text":"suffix : str = None suffix","title":"suffix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputNumber.type","text":"type : str = 'input-number'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputPassword","text":"Bases: InputText Password input box","title":"InputPassword"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputPassword-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputPassword.type","text":"type : str = 'input-password'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText","text":"Bases: FormItem rich-text editor","title":"InputRichText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.buttons","text":"buttons : list [ str ] = None froala specific, configure the buttons to be displayed, tinymce can set the toolbar string with the preceding options","title":"buttons"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.options","text":"options : dict = None Need to refer to tinymce or froala's documentation","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.receiver","text":"receiver : MSA_UI_API = None '' # default image save MSA_UI_API","title":"receiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.saveAsUbb","text":"saveAsUbb : bool = None whether to save as ubb format","title":"saveAsUbb"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.size","text":"size : str = None Size of the box, can be set to md or lg","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.type","text":"type : str = 'input-rich-text'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.vendor","text":"vendor : str = None \"vendor\": \"froala\" , configured to use the froala editor","title":"vendor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputRichText.videoReceiver","text":"videoReceiver : MSA_UI_API = None '' # Default video saving MSA_UI_API","title":"videoReceiver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable","text":"Bases: FormItem table","title":"InputTable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addApi","text":"addApi : MSA_UI_API = None The MSA_UI_API to submit when adding","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addBtnIcon","text":"addBtnIcon : str = None \"plus\" # Add button icon","title":"addBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addBtnLabel","text":"addBtnLabel : str = None Add button name","title":"addBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.addable","text":"addable : bool = None False # Whether to add a row","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.canAccessSuperData","text":"canAccessSuperData : bool = None False # Whether to access parent data, that is, the same level of data in the form, usually need to be used with strictMode","title":"canAccessSuperData"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.cancelBtnIcon","text":"cancelBtnIcon : str = None \"times\" # Cancel the edit button icon","title":"cancelBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.cancelBtnLabel","text":"cancelBtnLabel : str = None \"\" # Cancel the edit button name","title":"cancelBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.columns","text":"columns : list = None \"[]\" # Column information, columns[x].quickEdit: boolean|object = None # Used in conjunction with editable being true,","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.columns--columnsxquickeditonupdate-booleanobject-none-can-be-used-to-distinguish-between-new-mode-and-update-mode-editing-configuration","text":"","title":"columns[x].quickEditOnUpdate: boolean|object = None # can be used to distinguish between new mode and update mode editing configuration"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.confirmBtnIcon","text":"confirmBtnIcon : str = None \"check\" # Confirm edit button icon","title":"confirmBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.confirmBtnLabel","text":"confirmBtnLabel : str = None \"\" # Confirm edit button name","title":"confirmBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.copyBtnIcon","text":"copyBtnIcon : str = None \"copy\" # Copy the button icon","title":"copyBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.copyBtnLabel","text":"copyBtnLabel : str = None Copy button text","title":"copyBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.deleteApi","text":"deleteApi : MSA_UI_API = None MSA_UI_API submitted when deleting","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.deleteBtnIcon","text":"deleteBtnIcon : str = None \"minus\" # Delete the button icon","title":"deleteBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.deleteBtnLabel","text":"deleteBtnLabel : str = None \"\" # Delete the button name","title":"deleteBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.editBtnIcon","text":"editBtnIcon : str = None \"pencil\" # editBtnIcon","title":"editBtnIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.editBtnLabel","text":"editBtnLabel : str = None \"\" # Edit button name","title":"editBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.editable","text":"editable : bool = None False # Whether to edit","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.needConfirm","text":"needConfirm : bool = None True # whether to confirm the operation, can be used to control the interaction of the form","title":"needConfirm"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.perPage","text":"perPage : int = None Set how many data to display on a page. 10","title":"perPage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.removable","text":"removable : bool = None False # Whether to remove","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.showAddBtn","text":"showAddBtn : bool = None True # Whether to show the add button","title":"showAddBtn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.showIndex","text":"showIndex : bool = None False # Show serial number","title":"showIndex"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.strictMode","text":"strictMode : bool = None True # For performance, the default value changes of other form items will not update the current form, sometimes you need to enable this in order to synchronize access to other form fields.","title":"strictMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.type","text":"type : str = 'input-table' Specify as Table renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTable.updateApi","text":"updateApi : MSA_UI_API = None The MSA_UI_API submitted when modifying","title":"updateApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText","text":"Bases: FormItem input-box","title":"InputText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.addOn","text":"addOn : MSAUISchemaNode = None Input box add-on, such as with a prompt text, or with a submit button.","title":"addOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.autoComplete","text":"autoComplete : Union [ str , MSA_UI_API ] = None autoComplete","title":"autoComplete"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.clearable","text":"clearable : bool = None Whether to clear or not","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.creatable","text":"creatable : bool = None If or not creatable, default is yes, unless set to false which means that only the value in the option can be selected.","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.delimiter","text":"delimiter : str = None Splice character \",\"","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.extractValue","text":"extractValue : bool = None extract value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.joinValues","text":"joinValues : bool = None True # Splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.labelField","text":"labelField : str = None option label field \"label\"","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.maxLength","text":"maxLength : int = None Limit the maximum number of words","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.minLength","text":"minLength : int = None Limit the minimum number of words","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.multiple","text":"multiple : bool = None Whether to multi-select","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.options","text":"options : Union [ List [ str ], List [ dict ]] = None option group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.prefix","text":"prefix : str = None prefix","title":"prefix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.resetValue","text":"resetValue : str = None Set the value given by this configuration item after clearing.","title":"resetValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.showCounter","text":"showCounter : bool = None Whether to show the counter","title":"showCounter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.source","text":"source : Union [ str , MSA_UI_API ] = None dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.suffix","text":"suffix : str = None suffix","title":"suffix"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.trimContents","text":"trimContents : bool = None Whether to remove the first and last blank text.","title":"trimContents"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.type","text":"type : str = 'input-text' input-text|input-url|input-email|input-password|divider","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputText.valueField","text":"valueField : str = None option value field \"value\"","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime","text":"Bases: FormItem time","title":"InputTime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.clearable","text":"clearable : bool = None True # clearable or not","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.format","text":"format : str = None \"X\" # Time picker value format, see moment for more format types","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.inputFormat","text":"inputFormat : str = None \"HH:mm\" # Time picker display format, i.e. timestamp format, see moment for more format types","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.placeholder","text":"placeholder : str = None \"Please select time\" # Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.timeConstraints","text":"timeConstraints : dict = None True # See also: react-datetime","title":"timeConstraints"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.timeFormat","text":"timeFormat : str = None \"HH:mm\" # time selector value format, see moment for more format types","title":"timeFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.type","text":"type : str = 'input-time'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTime.value","text":"value : str = None Default value","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange","text":"Bases: FormItem TimeRange","title":"InputTimeRange"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.clearable","text":"clearable : bool = None True # clearable or not","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.embed","text":"embed : bool = None False # Whether inline mode","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.format","text":"format : str = None \"HH:mm\" # time range selector value format","title":"format"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.inputFormat","text":"inputFormat : str = None \"HH:mm\" # Time range selector display format","title":"inputFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.placeholder","text":"placeholder : str = None \"Please select a time range\" # Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.timeFormat","text":"timeFormat : str = None \"HH:mm\" # time range selector value format","title":"timeFormat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTimeRange.type","text":"type : str = 'input-time-range'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree","text":"Bases: FormItem tree selector box","title":"InputTree"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.addApi","text":"addApi : MSA_UI_API = None Configure the add options interface","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.addControls","text":"addControls : List [ FormItem ] = None Customize the new form items","title":"addControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.autoComplete","text":"autoComplete : MSA_UI_API = None auto prompt complement","title":"autoComplete"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.cascade","text":"cascade : bool = None False # Do not automatically select children when parent is selected.","title":"cascade"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.creatable","text":"creatable : bool = None False # Add options","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.deferApi","text":"deferApi : MSA_UI_API = None For lazy loading, please configure defer to true, then configure deferApi to complete lazy loading","title":"deferApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.deleteApi","text":"deleteApi : MSA_UI_API = None Configure the delete option interface","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.delimiter","text":"delimiter : str = None \"False\" # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.editApi","text":"editApi : MSA_UI_API = None Configure the edit options interface","title":"editApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.editControls","text":"editControls : List [ FormItem ] = None Customize edit form items","title":"editControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.editable","text":"editable : bool = None False # Edit options","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.enableNodePath","text":"enableNodePath : bool = None False # Whether to enable node path mode","title":"enableNodePath"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.extractValue","text":"extractValue : bool = None False # extract value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.hideRoot","text":"hideRoot : bool = None True # If you want to show a top node, set to false","title":"hideRoot"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.iconField","text":"iconField : str = None \"icon\" # Icon value field","title":"iconField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.initiallyOpen","text":"initiallyOpen : bool = None True # Set whether to expand all levels by default.","title":"initiallyOpen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.joinValues","text":"joinValues : bool = None True # join values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.labelField","text":"labelField : str = None \"label\" # option label field","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.maxLength","text":"maxLength : int = None Maximum number of nodes to select","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.minLength","text":"minLength : int = None Minimum number of selected nodes","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.multiple","text":"multiple : bool = None False # Whether to multiple select","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.onlyChildren","text":"onlyChildren : bool = None False # Whether to add only its children to the value when the parent node is selected in multiple selection.","title":"onlyChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.options","text":"options : MSAOptionsNode = None options group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.pathSeparator","text":"pathSeparator : str = None \"/\" # Separator for node paths, takes effect when enableNodePath is true","title":"pathSeparator"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.removable","text":"removable : bool = None False # Remove options","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.rootCreatable","text":"rootCreatable : bool = None False # Whether top-level nodes can be created","title":"rootCreatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.rootCreateTip","text":"rootCreateTip : str = None \"Add first-level node\" # Hover tip for creating top-level nodes","title":"rootCreateTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.rootLabel","text":"rootLabel : bool = None \"top\" # Useful when hideRoot is not false, to set the text of the top node.","title":"rootLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.searchable","text":"searchable : bool = None False # Searchable or not, only works if type is tree-select","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.selectFirst","text":"selectFirst : bool = None","title":"selectFirst"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.showIcon","text":"showIcon : bool = None True # Whether to show the icon","title":"showIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.showRadio","text":"showRadio : bool = None False # Whether to show radio buttons, multiple is valid when false.","title":"showRadio"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.source","text":"source : MSA_UI_API = None dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.treeContainerClassName","text":"treeContainerClassName : str = None tree outermost container class name","title":"treeContainerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.type","text":"type : str = 'input-tree'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.unfoldedLevel","text":"unfoldedLevel : int = None 0 # Set the number of levels to be expanded by default, only effective if initiallyOpen is not true.","title":"unfoldedLevel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.valueField","text":"valueField : str = None \"value\" # option value field","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.InputTree.withChildren","text":"withChildren : bool = None False # When the parent node is selected, the value will contain the value of the child node, otherwise only the value of the parent node will be kept.","title":"withChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json","text":"Bases: MSAUINode JSON display component","title":"Json"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.displayDataTypes","text":"displayDataTypes : bool = None False # Whether to display data types","title":"displayDataTypes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.jsonTheme","text":"jsonTheme : str = None \"twilight\" # theme, optional twilight and eighties","title":"jsonTheme"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.levelExpand","text":"levelExpand : int = None 1 # Default level of expansion","title":"levelExpand"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.mutable","text":"mutable : bool = None False # whether to modify","title":"mutable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.placeholder","text":"placeholder : str = None Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.source","text":"source : str = None Get the value in the data chain by data mapping","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.type","text":"type : str = 'json' \"json\" if in Table, Card and List; \"static-json\" if used as a static display in Form","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Json.value","text":"value : Union [ dict , str ] = None json value, parse automatically if it is a string","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link","text":"Bases: MSAUINode link","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.blank","text":"blank : bool = None whether to open in a new tab","title":"blank"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.body","text":"body : str = None text inside the tag","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.disabled","text":"disabled : bool = None Disable hyperlinks","title":"disabled"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.href","text":"href : str = None Link address","title":"href"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.htmlTarget","text":"htmlTarget : str = None target of a tag, takes precedence over the blank attribute","title":"htmlTarget"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.icon","text":"icon : str = None hyperlink icon to enhance display","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.rightIcon","text":"rightIcon : str = None right icon","title":"rightIcon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.title","text":"title : str = None the title of a tag","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Link.type","text":"type : str = 'link' \"link\" if in Table, Card and List; \"static-link\" if used as a static display in Form","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker","text":"Bases: FormItem Location","title":"LocationPicker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.ak","text":"ak : str = Ellipsis Baidu map ak # Register at: http://lbsyun.baidu.com/","title":"ak"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.clearable","text":"clearable : bool = None False # Whether the input box is clearable","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.coordinatesType","text":"coordinatesType : str = None \"bd09\" # Default is Baidu coordinates, can be set to 'gcj02'","title":"coordinatesType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.placeholder","text":"placeholder : str = None \"Please select a location\" # Default prompt","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.type","text":"type : str = 'location-picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.LocationPicker.vendor","text":"vendor : str = 'baidu' map vendor, currently only implemented Baidu maps","title":"vendor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log","text":"Bases: MSAUINode LiveLog","title":"Log"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.autoScroll","text":"autoScroll : bool = None True # whether to auto-scroll","title":"autoScroll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.encoding","text":"encoding : str = None \"utf-8\" # Returns the character encoding of the content","title":"encoding"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.height","text":"height : int = None 500 # height of display area","title":"height"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.placeholder","text":"placeholder : str = None Text in load","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.source","text":"source : MSA_UI_API = None support variable, can be initially set to null, so that it will not be loaded initially, but will be loaded when the variable has a value","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Log.type","text":"type : str = 'log'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping","text":"Bases: MSAUINode mapping","title":"Mapping"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.map","text":"map : dict = None Mapping configuration","title":"map"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.placeholder","text":"placeholder : str = None Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.source","text":"source : MSA_UI_API = None MSA_UI_API or data mapping","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Mapping.type","text":"type : str = 'mapping' \"mapping\" if in Table, Card and List; \"static-mapping\" if used as a static display in Form","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown","text":"Bases: MSAUINode Markdown rendering","title":"Markdown"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.className","text":"className : str = None The outermost class name of the form","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.name","text":"name : str = None Field name, specifying the key of the form item when it is submitted","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.options","text":"options : dict = None html, whether html tags are supported, default false; linkify, whether to automatically recognize links, default is true; breaks, whether carriage return is line feed, default false","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.src","text":"src : MSA_UI_API = None External address","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.type","text":"type : str = 'markdown'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Markdown.value","text":"value : Union [ int , str ] = None The value of the field","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav","text":"Bases: MSAUINode Navigate","title":"Nav"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.deferApi","text":"deferApi : MSA_UI_API = None Interface used to delay loading of option details, can be left unconfigured, no common source interface configured.","title":"deferApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.dragOnSameLevel","text":"dragOnSameLevel : bool = None Only allows dragging within the same level","title":"dragOnSameLevel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.draggable","text":"draggable : bool = None Whether to support drag and drop sorting","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.itemActions","text":"itemActions : MSAUISchemaNode = None More action related configuration","title":"itemActions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.itemBadge","text":"itemBadge : Badge = None corner markers","title":"itemBadge"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.links","text":"links : list = None Collection of links","title":"links"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.saveOrderApi","text":"saveOrderApi : MSA_UI_API = None api to save sorting","title":"saveOrderApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.source","text":"source : MSA_UI_API = None Navigation can be created dynamically via variables or the MSA_UI_API interface","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.stacked","text":"stacked : bool = True Set to false to display as tabs","title":"stacked"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.type","text":"type : str = 'nav' Specify as Nav renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.Link","text":"Bases: MSAUINode","title":"Link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Nav.Link-attributes","text":"active class-attribute \u00b6 active : bool = None Whether to highlight or not activeOn class-attribute \u00b6 activeOn : MSAUIExpression = None condition to highlight or not, leaving blank will automatically analyze the link address children class-attribute \u00b6 children : List [ Link ] = None child links defer class-attribute \u00b6 defer : bool = None Flag if it is a lazy add-on deferApi class-attribute \u00b6 deferApi : MSA_UI_API = None Can be unconfigured, if configured priority is higher icon class-attribute \u00b6 icon : str = None Icon label class-attribute \u00b6 label : str = None Name target class-attribute \u00b6 target : str = None \"Link relationship\" # to class-attribute \u00b6 to : MSAUITemplate = None Link address unfolded class-attribute \u00b6 unfolded : bool = None Initially expanded or not","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect","text":"Bases: Select Cascading selector","title":"NestedSelect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.cascade","text":"cascade : bool = None False # When set true, child nodes are not automatically selected when the parent node is selected.","title":"cascade"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.hideNodePathLabel","text":"hideNodePathLabel : bool = None False # Whether to hide the path of the selected node in the selection box label information","title":"hideNodePathLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.noResultsText","text":"noResultsText : str = None \"No results found\" # Text when no results are found","title":"noResultsText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.onlyChildren","text":"onlyChildren : bool = None False # When multi-select, when the parent node is selected, the value will include only its children in the value.","title":"onlyChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.onlyLeaf","text":"onlyLeaf : bool = None False # Only allow leaf nodes to be selected","title":"onlyLeaf"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.searchPromptText","text":"searchPromptText : str = None \"Enter content to search\" # Search box placeholder text","title":"searchPromptText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.type","text":"type : str = 'nested-select'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.NestedSelect.withChildren","text":"withChildren : bool = None False # When set true, the value of the parent node will contain the value of the child node when selected, otherwise only the value of the parent node will be kept.","title":"withChildren"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page","text":"Bases: MSAUINode page","title":"Page"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.__default_template_path__","text":"__default_template_path__ : str = ( f \" { BASE_DIR } /templates/page.html\" )","title":"__default_template_path__"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.aside","text":"aside : MSAUISchemaNode = None Add content to the sidebar area of the page.","title":"aside"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideClassName","text":"asideClassName : str = None \"w page-aside-region bg-auto\" # Aside dom class name","title":"asideClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideMaxWidth","text":"asideMaxWidth : int = None The maximum width of the page's sidebar area","title":"asideMaxWidth"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideMinWidth","text":"asideMinWidth : int = None The minimum width of the page's sidebar area","title":"asideMinWidth"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.asideResizor","text":"asideResizor : bool = None Whether the width of the page's sidebar area can be adjusted","title":"asideResizor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.body","text":"body : MSAUISchemaNode = None Add content to the content area of the page","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.bodyClassName","text":"bodyClassName : str = None \"wrapper\" # Body dom class name","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.className","text":"className : str = None Outer dom class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.cssVars","text":"cssVars : dict = None Custom CSS variables, please refer to styles","title":"cssVars"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.headerClassName","text":"headerClassName : str = None \"bg-light b-b wrapper\" # Header region dom class name","title":"headerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.initApi","text":"initApi : MSA_UI_API = None Page The api used to fetch the initial data. the returned data can be used at the entire page level.","title":"initApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.initFetch","text":"initFetch : bool = None True # Whether to start fetching initApi","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.initFetchOn","text":"initFetchOn : MSAUIExpression = None Whether to start fetching initApi, configured by expression","title":"initFetchOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.interval","text":"interval : int = None Refresh time (min 1000)","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.regions","text":"regions : List [ str ] = None","title":"regions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.remark","text":"remark : Remark = None A reminder icon will appear near the title, which will prompt the content when the mouse is placed on it.","title":"remark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.silentPolling","text":"silentPolling : bool = None False # Configure whether to show loading animation when refreshing","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : MSAUIExpression = None Expression to configure the stop refresh condition","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.subTitle","text":"subTitle : MSAUISchemaNode = None page sub-title","title":"subTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.title","text":"title : MSAUISchemaNode = None Page title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.toolbar","text":"toolbar : MSAUISchemaNode = None Add content to the top right corner of the page, note that when there is a title, the area is in the top right corner and when there is not, the area is at the top","title":"toolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.toolbarClassName","text":"toolbarClassName : str = None \"v-middle wrapper text-right bg-light b-b\" # Toolbar dom class name","title":"toolbarClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.type","text":"type : str = 'page' Specify as Page component","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Page.msa_ui_html","text":"msa_ui_html ( template_path : str = \"\" , locale : str = \"zh_CN\" , site_title : str = \"Admin\" , site_icon : str = \"\" , )","title":"msa_ui_html()"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema","text":"Bases: MSAUINode","title":"PageSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.children","text":"children : List [ PageSchema ] = None Submenus","title":"children"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.className","text":"className : str = None The class name of the menu.","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.icon","text":"icon : str = 'fa fa-flash' Menu icon, e.g., 'fa fa-file'.","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.isDefaultPage","text":"isDefaultPage : Union [ str , bool ] = None Useful when you need a custom 404 page, don't have more than one of these, because only the first one will work.","title":"isDefaultPage"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.label","text":"label : str = None The name of the menu.","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.link","text":"link : str = None If you want to configure an external link menu, just configure link.","title":"link"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.redirect","text":"redirect : str = None Jump, when the current page is hit, jump to the target page.","title":"redirect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.rewrite","text":"rewrite : str = None Change to render a page with another path, this way the page address will not be changed.","title":"rewrite"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.schemaApi","text":"schemaApi : MSA_UI_API = None If you want to pull through the interface, please configure it. The return path is json>data. schema and schemaApi can only be one or the other.","title":"schemaApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.schema_","text":"schema_ : Union [ Page , Iframe ] = Field ( None , alias = 'schema' ) Configuration of the page, please go to the Page page for details","title":"schema_"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.sort","text":"sort : int = None Sort","title":"sort"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.url","text":"url : str = None The page routing path to enable the current page when the route hits that path. When the path is not /-headed, the parent path is connected. For example, if the parent path is folder and pageA is configured, then the page will be hit when the page address is /folder/pageA. When the path starts with /, e.g. /crud/list, the parent path is not concatenated. There is also support for routes with parameters such as /crud/view/:id, which can be fetched from the page via ${params.id}.","title":"url"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.visible","text":"visible : str = None Some pages may not want to appear in the menu, you can configure it to false, in addition to the route with parameters do not need to be configured, directly is not visible.","title":"visible"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.PageSchema.as_tabs_item","text":"as_tabs_item ( tabs_extra : Dict [ str , Any ] = None , item_extra : Dict [ str , Any ] = None , )","title":"as_tabs_item()"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel","text":"Bases: MSAUINode","title":"Panel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.actions","text":"actions : List [ Action ] = None Button area","title":"actions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.actionsClassName","text":"actionsClassName : str = None \"panel-footer\" # Class name of the actions region","title":"actionsClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.affixFooter","text":"affixFooter : bool = None Whether to fix the bottom container","title":"affixFooter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.body","text":"body : MSAUISchemaNode = None content container","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.bodyClassName","text":"bodyClassName : str = None \"panel-body\" # Class name for the body region","title":"bodyClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.className","text":"className : str = None \"panel-default\" # class name of outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.footer","text":"footer : MSAUISchemaNode = None footer container","title":"footer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.footerClassName","text":"footerClassName : str = None \"panel-footer bg-light lter wrapper\" # Class name of the footer region","title":"footerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.header","text":"header : MSAUISchemaNode = None header container","title":"header"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.headerClassName","text":"headerClassName : str = None \"panel-heading\" # Class name of the header area","title":"headerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.title","text":"title : MSAUISchemaNode = None title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Panel.type","text":"type : str = 'panel' Specify as Panel renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker","text":"Bases: FormItem List Picker","title":"Picker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.autoFill","text":"autoFill : dict = None AutoFill","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.delimiter","text":"delimiter : bool = None False # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.embed","text":"embed : bool = None False # Whether to use inline mode","title":"embed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.extractValue","text":"extractValue : bool = None False # extract value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.joinValues","text":"joinValues : bool = None True # splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.labelField","text":"labelField : str = None \"label\" # option label field","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.modalMode","text":"modalMode : Literal [ dialog , drawer ] = None \"dialog\" # Set dialog or drawer to configure popup method.","title":"modalMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.multiple","text":"multiple : bool = None Whether to be multiple options.","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.options","text":"options : MSAOptionsNode = None Options group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.pickerSchema","text":"pickerSchema : Union [ CRUD , MSAUISchemaNode ] = None \"{mode: 'list', listItem: {title: '${label}'}}\" i.e. rendering with List type to display list information. See CRUD for more configuration","title":"pickerSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.size","text":"size : Union [ str , SizeEnum ] = None Supports: xs, sm, md, lg, xl, full","title":"size"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.source","text":"source : MSA_UI_API = None Dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.type","text":"type : str = 'picker' List picker, similar in function to Select, but it can display more complex information.","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Picker.valueField","text":"valueField : str = None \"value\" # Option value field","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet","text":"Bases: Tabs","title":"Portlet"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.contentClassName","text":"contentClassName : str = None Class name of the Tabs content Dom","title":"contentClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.description","text":"description : MSAUITemplate = None Information on the right side of the title","title":"description"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.divider","text":"divider : bool = None False # Remove the divider","title":"divider"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.hideHeader","text":"hideHeader : bool = None False # Hide the header","title":"hideHeader"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.style","text":"style : Union [ str , dict ] = None Custom style","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.tabs","text":"tabs : List [ Item ] = None Contents of tabs","title":"tabs"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.type","text":"type : str = 'portlet' Specify as Portlet renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.Item","text":"Bases: Tabs . Item","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Portlet.Item-attributes","text":"toolbar class-attribute \u00b6 toolbar : MSAUISchemaNode = None toolbar in tabs, changes with tab toggle","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property","text":"Bases: MSAUINode Property table","title":"Property"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.className","text":"className : str = None the class name of the outer dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.column","text":"column : int = None 3 # how many columns per row","title":"column"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.contentStyle","text":"contentStyle : dict = None The style of the property value","title":"contentStyle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.items","text":"items : List [ Item ] = None data items","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.labelStyle","text":"labelStyle : dict = None Style of the property name","title":"labelStyle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.mode","text":"mode : str = None 'table' # display mode, currently only 'table' and 'simple'","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.separator","text":"separator : str = None ',' # separator between attribute name and value in 'simple' mode","title":"separator"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.source","text":"source : MSAUITemplate = None Data source","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.style","text":"style : dict = None The style of the outer dom","title":"style"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.title","text":"title : str = None title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.type","text":"type : str = 'property'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Property.Item-attributes","text":"content class-attribute \u00b6 content : MSAUITemplate = None attribute value hiddenOn class-attribute \u00b6 hiddenOn : MSAUIExpression = None Hide the expression label class-attribute \u00b6 label : MSAUITemplate = None property name span class-attribute \u00b6 span : int = None attribute value across several columns visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Show expressions","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode","text":"Bases: MSAUINode QR Code","title":"QRCode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.backgroundColor","text":"backgroundColor : str = None \"#fff\" # QR code background color","title":"backgroundColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.codeSize","text":"codeSize : int = None 128 # The width and height of the QR code","title":"codeSize"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.foregroundColor","text":"foregroundColor : str = None \"#000\" # The foreground color of the QR code","title":"foregroundColor"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.level","text":"level : str = None \"L\" # QR code complexity level, there are four ('L' 'M' 'Q' 'H')","title":"level"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.qrcodeClassName","text":"qrcodeClassName : str = None class name of the QR code SVG","title":"qrcodeClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.type","text":"type : str = 'qr-code' Specified as a QRCode renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.QRCode.value","text":"value : MSAUITemplate The text to be displayed after scanning the QR code, to display a page enter the full url (\"http://...\" or \"https://...\" ), supports the use of templates","title":"value"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios","text":"Bases: FormItem RadioBox","title":"Radios"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.autoFill","text":"autoFill : dict = None AutoFill","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.columnsCount","text":"columnsCount : int = None 1 # How many columns to display options by, default is one column","title":"columnsCount"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.inline","text":"inline : bool = None True # Whether to display as one line","title":"inline"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.labelField","text":"labelField : bool = None \"label\" # option label field","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.options","text":"options : List [ Union [ dict , str ]] = None option group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.selectFirst","text":"selectFirst : bool = None False # Whether to select the first by default","title":"selectFirst"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.source","text":"source : MSA_UI_API = None dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.type","text":"type : str = 'radios'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Radios.valueField","text":"valueField : bool = None \"value\" # option value field","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark","text":"Bases: MSAUINode marker","title":"Remark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.content","text":"content : str = None Prompt text","title":"content"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.icon","text":"icon : str = None \"fa fa-question-circle\" # Icon","title":"icon"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.placement","text":"placement : str = None popup position","title":"placement"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.trigger","text":"trigger : str = None trigger condition ['hover','focus']","title":"trigger"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Remark.type","text":"type : str = 'remark' remark","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select","text":"Bases: FormItem dropdown box","title":"Select"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.addApi","text":"addApi : MSA_UI_API = None Configure the add options interface","title":"addApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.addControls","text":"addControls : List [ FormItem ] = None Customize the new form item","title":"addControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.autoComplete","text":"autoComplete : MSA_UI_API = None auto prompt complement","title":"autoComplete"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.autoFill","text":"autoFill : dict = None AutoFill","title":"autoFill"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.checkAll","text":"checkAll : bool = None False # Whether to support select all","title":"checkAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.checkAllBySearch","text":"checkAllBySearch : bool = None False # Only check all items that are hit when there is a search","title":"checkAllBySearch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.checkAllLabel","text":"checkAllLabel : str = None \"Select All\" # Text to select all","title":"checkAllLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.clearable","text":"clearable : bool = None Whether clearing is supported in radio mode","title":"clearable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.columns","text":"columns : List [ dict ] = None When the display form is table can be used to configure which columns to display, similar to the columns in the table configuration, but only the display function.","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.creatable","text":"creatable : bool = None False # Add option","title":"creatable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.createBtnLabel","text":"createBtnLabel : str = None \"Add option\" # Add option","title":"createBtnLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.defaultCheckAll","text":"defaultCheckAll : bool = None False # defaultCheckAll or not","title":"defaultCheckAll"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.deleteApi","text":"deleteApi : MSA_UI_API = None Configure the delete option interface","title":"deleteApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.delimiter","text":"delimiter : Union [ bool , str ] = None False # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.editApi","text":"editApi : MSA_UI_API = None Configure the edit options interface","title":"editApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.editControls","text":"editControls : List [ FormItem ] = None Customize edit form items","title":"editControls"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.editable","text":"editable : bool = None False # Edit options","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.extractValue","text":"extractValue : bool = None False # extract value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.hideSelected","text":"hideSelected : bool = None False # Hide the selected option","title":"hideSelected"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.joinValues","text":"joinValues : bool = None True # splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.labelField","text":"labelField : str = None \"label\" # option label field","title":"labelField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.leftMode","text":"leftMode : str = None Configure the left option set when the display is associated, supports list or tree. default is list. rightMode: str = None # Configure the left option set when the display is associated.","title":"leftMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.leftOptions","text":"leftOptions : List [ dict ] = None Used to configure the left set of options when the display is associated.","title":"leftOptions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.menuTpl","text":"menuTpl : str = None Support for configuring custom menus","title":"menuTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.mobileClassName","text":"mobileClassName : str = None Mobile floating class name","title":"mobileClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.multiple","text":"multiple : bool = None False # Multi-select","title":"multiple"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.options","text":"options : MSAOptionsNode = None options group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.removable","text":"removable : bool = None False # Remove options","title":"removable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.rightMode","text":"rightMode : str = None Used to configure the right option set when the display is associated, optionally: list, table, tree, chained.","title":"rightMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.searchResultMode","text":"searchResultMode : str = None If not set, the value of selectMode will be used, can be configured separately, refer to selectMode, determine the display of search results.","title":"searchResultMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.searchable","text":"searchable : bool = None False # Searchable","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.selectMode","text":"selectMode : str = None Optional: group, table, tree, chained, associated, respectively: list form, table form, tree select form, tree select form cascade selection form, association selection form (the difference with cascade selection is that the cascade is infinite, while the association is only one level, the left side of the association can be a tree).","title":"selectMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.source","text":"source : MSA_UI_API = None dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.type","text":"type : str = 'select'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Select.valueField","text":"valueField : str = None \"value\" # option value field","title":"valueField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service","text":"Bases: MSAUINode Function container","title":"Service"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.api","text":"api : MSA_UI_API = None Initial data domain interface address","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.body","text":"body : MSAUISchemaNode = None Content container","title":"body"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.data","text":"data : dict = None","title":"data"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.dataProvider","text":"dataProvider : str = None Data fetch function","title":"dataProvider"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.initFetch","text":"initFetch : bool = None Whether to pull by default","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.initFetchSchema","text":"initFetchSchema : bool = None Whether to pull Schema by default","title":"initFetchSchema"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.interval","text":"interval : int = None polling interval (minimum 3000)","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.messages","text":"messages : dict = None Message hint override, the default message reads the toast hint text returned by the interface, but it can be overridden here.","title":"messages"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.name","text":"name : str = None node name","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.schemaApi","text":"schemaApi : MSA_UI_API = None Used to fetch the remote Schema interface address","title":"schemaApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.silentPolling","text":"silentPolling : bool = None False # Configure whether to show loading animation when polling","title":"silentPolling"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.stopAutoRefreshWhen","text":"stopAutoRefreshWhen : MSAUIExpression = None Configure the conditions for stopping polling","title":"stopAutoRefreshWhen"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.type","text":"type : str = 'service' Specified as a service renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Service.ws","text":"ws : str = None WebScocket address","title":"ws"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Spinner","text":"Bases: MSAUINode loading","title":"Spinner"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Spinner-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Spinner.type","text":"type : str = 'spinner'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static","text":"Bases: FormItem Static display/label","title":"Static"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.type","text":"type : str = 'static' support for displaying other non-form items by configuring the type as static-xxx component static-json|static-datetime","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Datetime","text":"Bases: FormItem Show date","title":"Datetime"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Datetime-attributes","text":"type class-attribute \u00b6 type : str = 'static-datetime' value class-attribute \u00b6 value : Union [ int , str ] support 10-bit timestamp: 1593327764","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Json","text":"Bases: FormItem","title":"Json"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Static.Json-attributes","text":"type class-attribute \u00b6 type : str = 'static-json' value class-attribute \u00b6 value : Union [ dict , str ]","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status","text":"Bases: MSAUINode status","title":"Status"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.className","text":"className : str = None class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.labelMap","text":"labelMap : dict = None Mapping text","title":"labelMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.map","text":"map : dict = None Mapping icon","title":"map"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.placeholder","text":"placeholder : str = None Placeholder text","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Status.type","text":"type : str = 'status' Specify as Status renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch","text":"Bases: FormItem switch","title":"Switch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.falseValue","text":"falseValue : Any = None \"false\" # Identifies a false value","title":"falseValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.offText","text":"offText : str = None Text when off","title":"offText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.onText","text":"onText : str = None Text when on","title":"onText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.option","text":"option : str = None option description","title":"option"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.trueValue","text":"trueValue : Any = None \"True\" # Identifies a true value","title":"trueValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Switch.type","text":"type : str = 'switch'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table","text":"Bases: MSAUINode table","title":"Table"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.affixHeader","text":"affixHeader : bool = None True # Whether to fix the table header","title":"affixHeader"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.affixRow","text":"affixRow : list = None Bottom summary row","title":"affixRow"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.autoFillHeight","text":"autoFillHeight : bool = None Content area adaptive height","title":"autoFillHeight"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.checkOnItemClick","text":"checkOnItemClick : bool = None False # Whether the current row can be checked by clicking on the data row","title":"checkOnItemClick"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.className","text":"className : str = None \"panel-default\" # Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.columns","text":"columns : List [ Union [ TableColumn , MSAUISchemaNode ]] = None Used to set column information","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.columnsTogglable","text":"columnsTogglable : Union [ str , bool ] = None \"auto\" # Show column display switch, auto i.e.: automatically on when the number of columns is greater than or equal to 5","title":"columnsTogglable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.combineNum","text":"combineNum : int = None Automatically merge cells","title":"combineNum"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.footable","text":"footable : Union [ bool , dict ] = None When there are too many columns, there is no way to display all the content, so you can let some of the information displayed at the bottom, which allows users to expand to see the details. The configuration is very simple, just turn on the footable property and add a breakpoint property to * for the columns you want to display at the bottom.","title":"footable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.footerClassName","text":"footerClassName : str = None \"Action.md-table-footer\" # bottom outer CSS class name","title":"footerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.headerClassName","text":"headerClassName : str = None \"Action.md-table-header\" # top outer CSS class name","title":"headerClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemActions","text":"itemActions : List [ Action ] = None Hover row action button group","title":"itemActions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemBadge","text":"itemBadge : Badge = None Row corner configuration","title":"itemBadge"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemCheckableOn","text":"itemCheckableOn : MSAUIExpression = None condition to configure whether the current row is checkable, use expression","title":"itemCheckableOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.itemDraggableOn","text":"itemDraggableOn : MSAUIExpression = None condition to configure whether the current row is draggable or not, use the expression","title":"itemDraggableOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.placeholder","text":"placeholder : str = None \"No data yet\" # Text alert when there is no data","title":"placeholder"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.prefixRow","text":"prefixRow : list = None Top summary row","title":"prefixRow"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.rowClassName","text":"rowClassName : str = None Add a CSS class name to the row","title":"rowClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.rowClassNameExpr","text":"rowClassNameExpr : MSAUITemplate = None Add a CSS class name to the row via a template","title":"rowClassNameExpr"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.source","text":"source : str = None \"${items}\" # data source, bound to the current environment variable","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.tableClassName","text":"tableClassName : str = None \"table-db table-striped\" # Table CSS class name","title":"tableClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.title","text":"title : str = None title","title":"title"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.toolbarClassName","text":"toolbarClassName : str = None \"Action.md-table-toolbar\" # Toolbar CSS class name","title":"toolbarClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Table.type","text":"type : str = 'table' Specify as table renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableCRUD","text":"Bases: CRUD , Table TableCRUD","title":"TableCRUD"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn","text":"Bases: MSAUINode columnConfiguration","title":"TableColumn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.breakpoint","text":"breakpoint : str = None *,ls","title":"breakpoint"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.copyable","text":"copyable : Union [ bool , dict ] = None whether copyable boolean or {icon: string, content:string}","title":"copyable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.fixed","text":"fixed : str = None Whether to fix the front row left|right|none","title":"fixed"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.label","text":"label : MSAUITemplate = None the text content of the table header","title":"label"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.name","text":"name : str = None Data associated by name","title":"name"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.popOver","text":"popOver : Union [ bool , dict ] = None popup box","title":"popOver"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.quickEdit","text":"quickEdit : Union [ bool , dict ] = None QuickEdit","title":"quickEdit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.remark","text":"remark : Remark = None Prompt message","title":"remark"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.searchable","text":"searchable : Union [ bool , MSAUISchemaNode ] = None False # Whether to search quickly boolean|Schema","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.sortable","text":"sortable : bool = None False # Whether to sort","title":"sortable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.tpl","text":"tpl : MSAUITemplate = None Template","title":"tpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.type","text":"type : str = None Literal['text','audio','image','link','tpl','mapping','carousel','date', 'progress','status','switch','list','json','operation']","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TableColumn.width","text":"width : Union [ str , int ] = None Column width","title":"width"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs","text":"Bases: MSAUINode","title":"Tabs"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.addBtnText","text":"addBtnText : str = None \"add\" # Add button text","title":"addBtnText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.addable","text":"addable : bool = None False # If or not addable is supported","title":"addable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.className","text":"className : str = None The class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.closeable","text":"closeable : bool = None False # Whether to support delete","title":"closeable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.draggable","text":"draggable : bool = None False # Whether drag and drop is supported","title":"draggable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.editable","text":"editable : bool = None False # Whether to make the tag name editable or not","title":"editable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.mode","text":"mode : str = None Display mode, can be line, card, radio, vertical, chrome, simple, strong, tiled, sidebar","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.mountOnEnter","text":"mountOnEnter : bool = None False # Render only when tab is clicked","title":"mountOnEnter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.scrollable","text":"scrollable : bool = None False # whether navigation supports content overflow scrolling, not supported in vertical and chrome modes; chrome mode compresses tabs by default (property deprecated)","title":"scrollable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.showTip","text":"showTip : bool = None False # Whether to support hints","title":"showTip"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.showTipClassName","text":"showTipClassName : str = None \"'' \" # The class of the prompt","title":"showTipClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.sidePosition","text":"sidePosition : str = None \"left\" # sidebar mode, tab position left / right","title":"sidePosition"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.source","text":"source : str = None tabs association data, can repeat tabs after association","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.tabs","text":"tabs : List [ Item ] = None tabs content","title":"tabs"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.tabsClassName","text":"tabsClassName : str = None The class name of the Tabs Dom","title":"tabsClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.tabsMode","text":"tabsMode : TabsModeEnum = None display mode, the value can be line, card, radio, vertical, chrome, simple, strong, tiled, sidebar","title":"tabsMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.toolbar","text":"toolbar : MSAUISchemaNode = None Toolbar in tabs","title":"toolbar"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.toolbarClassName","text":"toolbarClassName : str = None The class name of the toolbar in tabs","title":"toolbarClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.type","text":"type : str = 'tabs' Specify as Tabs renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.unmountOnExit","text":"unmountOnExit : bool = None False # Destroy when tab is toggled","title":"unmountOnExit"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tabs.Item-attributes","text":"className class-attribute \u00b6 className : str = None \"bg-white b-l b-r b-b wrapper-md\" # Tab area style closable class-attribute \u00b6 closable : bool = None False # Whether to support deletion, prioritize over component's closable disabled class-attribute \u00b6 disabled : bool = None False # Whether to disable hash class-attribute \u00b6 hash : str = None Set to correspond to the hash of the url icon class-attribute \u00b6 icon : Union [ str , Icon ] = None Tab's icon iconPosition class-attribute \u00b6 iconPosition : str = None \"left\" # Tab's icon position left / right reload class-attribute \u00b6 reload : bool = None Set the content to be re-rendered every time, useful for crud re-pulling tab class-attribute \u00b6 tab : MSAUISchemaNode = None Content area title class-attribute \u00b6 title : str = None Tab title unmountOnExit class-attribute \u00b6 unmountOnExit : bool = None Destroy the current tab bar every time you exit","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransfer","text":"Bases: Transfer Combination shuttle","title":"TabsTransfer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransfer-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransfer.type","text":"type : str = 'tabs-transfer'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransferPicker","text":"Bases: Transfer Combination shuttle selector","title":"TabsTransferPicker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransferPicker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TabsTransferPicker.type","text":"type : str = 'tabs-transfer-picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks","text":"Bases: MSAUINode A collection of task actions","title":"Tasks"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.btnClassName","text":"btnClassName : str = None \"btn-sm btn-default\" # Configure the container button className","title":"btnClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.btnText","text":"btnText : str = None \"Go Live\" # Action button text","title":"btnText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.checkApi","text":"checkApi : MSA_UI_API = None Return a list of tasks, see items for the returned data.","title":"checkApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.interval","text":"interval : int = None 3000 # When there is a task in progress, it will be detected again at regular intervals, and the time interval is configured by this, default 3s.","title":"interval"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.items","text":"items : List [ Item ] = None List of tasks","title":"items"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.operationLabel","text":"operationLabel : str = None \"operation\" # Description of the operation column","title":"operationLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.reSubmitApi","text":"reSubmitApi : MSA_UI_API = None This MSA_UI_API is used when submitting if the task fails and can be retried","title":"reSubmitApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.remarkLabel","text":"remarkLabel : str = None \"Remarks\" # Remarks column description","title":"remarkLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.retryBtnClassName","text":"retryBtnClassName : str = None \"btn-sm btn-danger\" # Configure the container retry button className","title":"retryBtnClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.retryBtnText","text":"retryBtnText : str = None \"Retry\" # Retry action button text","title":"retryBtnText"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.statusLabel","text":"statusLabel : str = None \"Status\" # Status column description","title":"statusLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.statusLabelMap","text":"statusLabelMap : List [ str ] = None Configuration of the class name corresponding to the status display [\"label-warning\", \"label-info\", \"label-success\", \"label-danger\", \"label-default\", \"label-danger\"]","title":"statusLabelMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.statusTextMap","text":"statusTextMap : List [ str ] = None \"[\"Not Started\", \"Ready\", \"In Progress\", \"Error\", \"Completed\", \"Error\"]\" # Status display corresponding to the text display configuration","title":"statusTextMap"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.submitApi","text":"submitApi : MSA_UI_API = None The MSA_UI_API used to submit the task","title":"submitApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.tableClassName","text":"tableClassName : str = None Class name of the table Dom","title":"tableClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.taskNameLabel","text":"taskNameLabel : str = None \"Task name\" # Description of the task name column","title":"taskNameLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.type","text":"type : str = 'tasks' Specify as Tasks renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.Item","text":"Bases: MSAUINode","title":"Item"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Tasks.Item-attributes","text":"key class-attribute \u00b6 key : str = None Task key value, please distinguish it uniquely label class-attribute \u00b6 label : str = None Task name remark class-attribute \u00b6 remark : str = None Current task status, supports html status class-attribute \u00b6 status : str = None Task status: 0: initial, inoperable. 1: ready, operable. 2: in progress, not yet finished. 3: with errors, not retryable. 4: has ended normally. 5: with errors, and retryable.","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea","text":"Bases: FormItem Multi-line text input box","title":"Textarea"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.maxLength","text":"maxLength : int = None Limit the maximum number of words","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.maxRows","text":"maxRows : int = None maximum number of lines","title":"maxRows"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.minLength","text":"minLength : int = None Limit the minimum number of words","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.minRows","text":"minRows : int = None minimum number of rows","title":"minRows"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.readOnly","text":"readOnly : bool = None whether to read only","title":"readOnly"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.showCounter","text":"showCounter : bool = True Whether to show the counter","title":"showCounter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.trimContents","text":"trimContents : bool = None whether to remove first and last blank text","title":"trimContents"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Textarea.type","text":"type : str = 'textarea'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer","text":"Bases: FormItem shuttle","title":"Transfer"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.columns","text":"columns : List [ dict ] = None When the display form is table can be used to configure which columns to display, similar to the columns in the table configuration, but only the display function.","title":"columns"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.delimiter","text":"delimiter : str = None \"False\" # Splice character","title":"delimiter"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.extractValue","text":"extractValue : bool = None False # extract value","title":"extractValue"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.joinValues","text":"joinValues : bool = None True # Splice values","title":"joinValues"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.leftMode","text":"leftMode : str = None Configure the left option set when the display is associated, supports list or tree. default is list. rightMode: str = None # Configure the left option set when the display is associated.","title":"leftMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.leftOptions","text":"leftOptions : List [ dict ] = None Used to configure the left set of options when the display is associated.","title":"leftOptions"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.menuTpl","text":"menuTpl : MSAUISchemaNode = None Used to customize the option display.","title":"menuTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.options","text":"options : MSAOptionsNode = None options group","title":"options"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.resultTitle","text":"resultTitle : str = None \"Current selection\" # The title text of the right result","title":"resultTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.rightMode","text":"rightMode : str = None Use to configure the right option set when the display is associated, options are: list, table, tree, chained.","title":"rightMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.searchApi","text":"searchApi : MSA_UI_API = None You can set an api if you want to search through the interface.","title":"searchApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.searchResultMode","text":"searchResultMode : str = None If not set will use the value of selectMode, can be configured separately, refer to selectMode, determine the search results display form.","title":"searchResultMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.searchable","text":"searchable : bool = None False # When set to true means that options can be retrieved by partial input.","title":"searchable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.selectMode","text":"selectMode : str = None \"list\" # Optional: list, table, tree, cascaded, associated. respectively: list form, table form, tree selection form, tree selection form cascade selection form, associated selection form (the difference with cascade selection is that cascade is infinite, while associated is only one level, and the left side of associated can be a tree).","title":"selectMode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.selectTitle","text":"selectTitle : str = None \"Please select\" # The title text on the left side","title":"selectTitle"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.sortable","text":"sortable : bool = None False # Results can be sorted by dragging and dropping","title":"sortable"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.source","text":"source : MSA_UI_API = None dynamic options group","title":"source"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.statistics","text":"statistics : bool = None True # Whether to display statistics","title":"statistics"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.type","text":"type : Literal [ transfer , transfer - picker , tabs - transfer , tabs - transfer - picker , ] = \"transfer\"","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Transfer.valueTpl","text":"valueTpl : MSAUISchemaNode = None Used to customize the display of values","title":"valueTpl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TransferPicker","text":"Bases: Transfer shuttlePicker","title":"TransferPicker"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TransferPicker-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TransferPicker.type","text":"type : str = 'transfer-picker'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect","text":"Bases: InputTree Tree Selector","title":"TreeSelect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect.hideNodePathLabel","text":"hideNodePathLabel : bool = None Whether to hide the path of the selected node in the selection box label information","title":"hideNodePathLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.TreeSelect.type","text":"type : str = 'tree-select'","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation","text":"Bases: MSABaseUIModel","title":"Validation"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.equals","text":"equals : str = None The current value must be exactly equal to xxx.","title":"equals"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.equalsField","text":"equalsField : str = None The current value must match the value of the xxx variable.","title":"equalsField"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isAlpha","text":"isAlpha : bool = None Must be a letter.","title":"isAlpha"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isAlphanumeric","text":"isAlphanumeric : bool = None Must be alphabetic or numeric.","title":"isAlphanumeric"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isEmail","text":"isEmail : bool = None Must be Email.","title":"isEmail"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isFloat","text":"isFloat : bool = None Must be floating point.","title":"isFloat"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isId","text":"isId : bool = None if it is an ID number, no check","title":"isId"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isInt","text":"isInt : bool = None Must be integer.","title":"isInt"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isJson","text":"isJson : bool = None If or not it is a legal Json string. isUrlPath: bool = None","title":"isJson"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isLength","text":"isLength : int = None If or not the length is exactly equal to the set value.","title":"isLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isNumeric","text":"isNumeric : bool = None Must be numeric.","title":"isNumeric"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isPhoneNumber","text":"isPhoneNumber : bool = None If or not it is a legitimate phone number","title":"isPhoneNumber"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isTelNumber","text":"isTelNumber : bool = None if it is a legitimate phone number","title":"isTelNumber"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isUrl","text":"isUrl : bool = None Must be Url.","title":"isUrl"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.isZipcode","text":"isZipcode : bool = None Whether it is a zip code number","title":"isZipcode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.matchRegexp","text":"matchRegexp : str = None Must hit some regular. /foo/","title":"matchRegexp"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.maxLength","text":"maxLength : int = None The maximum length.","title":"maxLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.maximum","text":"maximum : int = None The maximum value.","title":"maximum"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.minLength","text":"minLength : int = None The minimum length.","title":"minLength"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Validation.minimum","text":"minimum : int = None The minimum value.","title":"minimum"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video","text":"Bases: MSAUINode video","title":"Video"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.autoPlay","text":"autoPlay : bool = None Whether to auto play","title":"autoPlay"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.className","text":"className : str = None class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.isLive","text":"isLive : bool = None False # whether it is live, need to add on when the video is live, supports flv and hls formats","title":"isLive"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.muted","text":"muted : bool = None whether to mute","title":"muted"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.poster","text":"poster : str = None video cover address","title":"poster"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.rates","text":"rates : List [ float ] = None multiplier in the format [1.0, 1.5, 2.0]","title":"rates"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.src","text":"src : str = None video address","title":"src"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.type","text":"type : str = 'video' Specify as video renderer","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Video.videoType","text":"videoType : str = None Specify the format of the live video","title":"videoType"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard","text":"Bases: MSAUINode Wizard","title":"Wizard"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionClassName","text":"actionClassName : str = None \"btn-sm btn-default\" # Button CSS class name","title":"actionClassName"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionFinishLabel","text":"actionFinishLabel : str = None \"Finish\" # Finish button text","title":"actionFinishLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionNextLabel","text":"actionNextLabel : str = None \"Next\" # Next button text","title":"actionNextLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionNextSaveLabel","text":"actionNextSaveLabel : str = None \"Save and Next\" # Save and Next button text","title":"actionNextSaveLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.actionPrevLabel","text":"actionPrevLabel : str = None \"Previous\" # Previous button text","title":"actionPrevLabel"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.api","text":"api : MSA_UI_API = None The interface saved in the last step.","title":"api"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.className","text":"className : str = None Outer CSS class name","title":"className"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.initApi","text":"initApi : MSA_UI_API = None Initialize the data interface","title":"initApi"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.initFetch","text":"initFetch : MSA_UI_API = None Initialize whether to pull data.","title":"initFetch"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.initFetchOn","text":"initFetchOn : MSAUIExpression = None Initially pull data or not, configured by expression","title":"initFetchOn"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.mode","text":"mode : str = None Display mode, choose: horizontal or vertical","title":"mode"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.redirect","text":"redirect : MSAUITemplate = None \"3000\" # Jump after the operation.","title":"redirect"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.reload","text":"reload : str = None Refresh the target object after the operation. Please fill in the name value set by the target component, if it is window then the whole current page will be refreshed.","title":"reload"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.startStep","text":"startStep : int = None \"1\" # Start default value, from which step to start. Templates can be supported, but only if the template is rendered and the current step is set when the component is created, and when the component is refreshed later The current step will not change according to startStep","title":"startStep"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.steps","text":"steps : List [ Step ] = None Array to configure step information","title":"steps"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.target","text":"target : str = None \"False\" # You can submit the data to another component instead of saving it yourself. Please fill in the name value set by the target component. If you fill in window, the data will be synced to the address bar, and the component that depends on the data will be refreshed automatically.","title":"target"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.type","text":"type : str = 'wizard' Specify as a Wizard component","title":"type"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.Step","text":"Bases: MSAUINode","title":"Step"},{"location":"reference/admin/frontend/components/#admin.frontend.components.Wizard.Step-attributes","text":"api class-attribute \u00b6 api : MSA_UI_API = None The current step saves the interface, can be unconfigured. body class-attribute \u00b6 body : List [ FormItem ] = None A collection of form items for the current step, see FormItem. horizontal class-attribute \u00b6 horizontal : Horizontal = None When in horizontal mode, used to control the left/right aspect ratio initApi class-attribute \u00b6 initApi : MSA_UI_API = None The current step data initialization interface. initFetch class-attribute \u00b6 initFetch : bool = None Whether the current step data initialization interface is initially pulling. initFetchOn class-attribute \u00b6 initFetchOn : MSAUIExpression = None Whether the current step data initialization interface is pulling initially, using an expression to determine. mode class-attribute \u00b6 mode : str = None Show default, same as mode in Form, choose: normal, horizontal or inline. title class-attribute \u00b6 title : str = None Step title","title":"Attributes"},{"location":"reference/admin/frontend/components/#admin.frontend.components-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/constants/","text":"msaSDK Module \u00b6 .admin.frontend.constants \u00b6 Classes \u00b6 DisplayModeEnum \u00b6 Bases: str , Enum Form display mode Attributes \u00b6 horizontal class-attribute \u00b6 horizontal = 'horizontal' Horizontal Mode inline class-attribute \u00b6 inline = 'inline' Inline mode normal class-attribute \u00b6 normal = 'normal' General mode LabelEnum \u00b6 Bases: str , Enum Label Style Attributes \u00b6 danger class-attribute \u00b6 danger = 'danger' default class-attribute \u00b6 default = 'default' info class-attribute \u00b6 info = 'info' primary class-attribute \u00b6 primary = 'primary' success class-attribute \u00b6 success = 'success' warning class-attribute \u00b6 warning = 'warning' LevelEnum \u00b6 Bases: str , Enum Button Level Attributes \u00b6 danger class-attribute \u00b6 danger = 'danger' dark class-attribute \u00b6 dark = 'dark' default class-attribute \u00b6 default = 'default' info class-attribute \u00b6 info = 'info' light class-attribute \u00b6 light = 'light' link class-attribute \u00b6 link = 'link' primary class-attribute \u00b6 primary = 'primary' secondary class-attribute \u00b6 secondary = 'secondary' success class-attribute \u00b6 success = 'success' warning class-attribute \u00b6 warning = 'warning' SizeEnum \u00b6 Bases: str , Enum Window size Attributes \u00b6 full class-attribute \u00b6 full = 'full' lg class-attribute \u00b6 lg = 'lg' md class-attribute \u00b6 md = 'md' sm class-attribute \u00b6 sm = 'sm' xl class-attribute \u00b6 xl = 'xl' xs class-attribute \u00b6 xs = 'xs' StatusEnum \u00b6 Bases: str , Enum Default State Attributes \u00b6 failure class-attribute \u00b6 failure = 'failure' pending class-attribute \u00b6 pending = 'pending' queue class-attribute \u00b6 queue = 'queue' schedule class-attribute \u00b6 schedule = 'schedule' success class-attribute \u00b6 success = 'success' TabsModeEnum \u00b6 Bases: str , Enum Tab Mode Attributes \u00b6 card class-attribute \u00b6 card = 'card' chrome class-attribute \u00b6 chrome = 'chrome' line class-attribute \u00b6 line = 'line' radio class-attribute \u00b6 radio = 'radio' sidebar class-attribute \u00b6 sidebar = 'sidebar' simple class-attribute \u00b6 simple = 'simple' strong class-attribute \u00b6 strong = 'strong' tiled class-attribute \u00b6 tiled = 'tiled' vertical class-attribute \u00b6 vertical = 'vertical'","title":"constants"},{"location":"reference/admin/frontend/constants/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/constants/#adminfrontendconstants","text":"","title":".admin.frontend.constants"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum","text":"Bases: str , Enum Form display mode","title":"DisplayModeEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum.horizontal","text":"horizontal = 'horizontal' Horizontal Mode","title":"horizontal"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum.inline","text":"inline = 'inline' Inline mode","title":"inline"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.DisplayModeEnum.normal","text":"normal = 'normal' General mode","title":"normal"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum","text":"Bases: str , Enum Label Style","title":"LabelEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.danger","text":"danger = 'danger'","title":"danger"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.default","text":"default = 'default'","title":"default"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.info","text":"info = 'info'","title":"info"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.primary","text":"primary = 'primary'","title":"primary"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.success","text":"success = 'success'","title":"success"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LabelEnum.warning","text":"warning = 'warning'","title":"warning"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum","text":"Bases: str , Enum Button Level","title":"LevelEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.danger","text":"danger = 'danger'","title":"danger"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.dark","text":"dark = 'dark'","title":"dark"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.default","text":"default = 'default'","title":"default"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.info","text":"info = 'info'","title":"info"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.light","text":"light = 'light'","title":"light"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.link","text":"link = 'link'","title":"link"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.primary","text":"primary = 'primary'","title":"primary"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.secondary","text":"secondary = 'secondary'","title":"secondary"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.success","text":"success = 'success'","title":"success"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.LevelEnum.warning","text":"warning = 'warning'","title":"warning"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum","text":"Bases: str , Enum Window size","title":"SizeEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.full","text":"full = 'full'","title":"full"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.lg","text":"lg = 'lg'","title":"lg"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.md","text":"md = 'md'","title":"md"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.sm","text":"sm = 'sm'","title":"sm"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.xl","text":"xl = 'xl'","title":"xl"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.SizeEnum.xs","text":"xs = 'xs'","title":"xs"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum","text":"Bases: str , Enum Default State","title":"StatusEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.failure","text":"failure = 'failure'","title":"failure"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.pending","text":"pending = 'pending'","title":"pending"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.queue","text":"queue = 'queue'","title":"queue"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.schedule","text":"schedule = 'schedule'","title":"schedule"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.StatusEnum.success","text":"success = 'success'","title":"success"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum","text":"Bases: str , Enum Tab Mode","title":"TabsModeEnum"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.card","text":"card = 'card'","title":"card"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.chrome","text":"chrome = 'chrome'","title":"chrome"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.line","text":"line = 'line'","title":"line"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.radio","text":"radio = 'radio'","title":"radio"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.sidebar","text":"sidebar = 'sidebar'","title":"sidebar"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.simple","text":"simple = 'simple'","title":"simple"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.strong","text":"strong = 'strong'","title":"strong"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.tiled","text":"tiled = 'tiled'","title":"tiled"},{"location":"reference/admin/frontend/constants/#admin.frontend.constants.TabsModeEnum.vertical","text":"vertical = 'vertical'","title":"vertical"},{"location":"reference/admin/frontend/types/","text":"msaSDK Module \u00b6 .admin.frontend.types \u00b6 Attributes \u00b6 MSAOptionsNode module-attribute \u00b6 MSAOptionsNode = Union [ List [ Dict [ str , Any ]], List [ str ]] MSAUIExpression module-attribute \u00b6 MSAUIExpression = str MSAUISchemaNode module-attribute \u00b6 MSAUISchemaNode = Union [ MSAUITemplate , \"MSAUINode\" , List [ \"MSAUINode\" ], Dict [ str , Any ], List [ Dict [ str , Any ]], ] MSAUITemplate module-attribute \u00b6 MSAUITemplate = Union [ str , 'MSAUITpl' ] MSA_UI_API module-attribute \u00b6 MSA_UI_API = Union [ str , MSAUIAPI , dict ] Classes \u00b6 MSABaseUIApiOut \u00b6 Bases: MSABaseUIModel MSA UI Api interface output data model Attributes \u00b6 data class-attribute \u00b6 data : dict = None msg class-attribute \u00b6 msg : str = '' status class-attribute \u00b6 status : int = 0 MSABaseUIModel \u00b6 Bases: BaseModel Core Pydantic Base UI Model. Classes \u00b6 Config \u00b6 Attributes \u00b6 extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads Functions \u00b6 msa_ui_dict \u00b6 msa_ui_dict () msa_ui_json \u00b6 msa_ui_json () update_from_dict \u00b6 update_from_dict ( kwargs : Dict [ str , Any ]) update_from_kwargs \u00b6 update_from_kwargs ( ** kwargs ) MSAUIAPI \u00b6 Bases: MSABaseUIModel Core MSA UI API Attributes \u00b6 adaptor class-attribute \u00b6 adaptor : str = None Receive adapter, if the interface does not meet the requirements, you can configure an adapter to handle it as msa_ui needs. Also supports Function or string function styles autoRefresh class-attribute \u00b6 autoRefresh : bool = None Configure whether the interface needs to be automatically refreshed. cache class-attribute \u00b6 cache : int = None Set cache to set the cache time in milliseconds, within the set cache time, the same request will not be repeatedly initiated, but will get the cached request response data. data class-attribute \u00b6 data : Union [ str , dict ] = None Data body of the request, supports data mapping dataType class-attribute \u00b6 dataType : str = None Default is json can be configured as form or form-data. When the data contains a file, the form-data (multipart/form-data) format is automatically used. The application/x-www-form-urlencoded format when configured as form. headers class-attribute \u00b6 headers : Dict [ str , Any ] = None The requested headers method class-attribute \u00b6 method : str = None GET holds request method (get, post, put, delete) qsOptions class-attribute \u00b6 qsOptions : Union [ str , dict ] = None Useful when dataType is form or form-data. Specific parameters, set by default to: { arrayFormat: 'indices', encodeValuesOnly: true } replaceData class-attribute \u00b6 replaceData : bool = None Whether the returned data replaces the current data, the default is false, i.e., append, set to true is a complete replacement. requestAdaptor class-attribute \u00b6 requestAdaptor : str = None send adapter , msa_ui's API configuration, if you can not configure the request structure you want, then you can configure the requestAdaptor send adapter responseData class-attribute \u00b6 responseData : Dict [ str , Any ] = None If the data structure returned by the interface does not meet expectations, you can modify it by configuring responseData, which also supports data mapping. The data available for mapping is the actual data of the interface (the data part returned by the interface), with additional api variables. where api.query is the query parameter sent by the interface, and api.body is the raw data of the content body sent by the interface. responseType class-attribute \u00b6 responseType : str = None Return type, if it is a download it needs to be set to blob sendOn class-attribute \u00b6 sendOn : MSAUIExpression = None Configure the request conditions trackExpression class-attribute \u00b6 trackExpression : str = None Configure track variable expression, when autoRefresh is enabled, the default is the url of the api to automatically track variable changes. If you want to monitor variables outside of the url, configure traceExpression. url class-attribute \u00b6 url : MSAUITemplate Current interface Api address MSAUIEvent \u00b6 Bases: MSABaseUIModel MSA UI Event Pydantic Model Attributes \u00b6 actionType class-attribute \u00b6 actionType : str = None Action name args class-attribute \u00b6 args : dict = None Action parameter {key:value}, supports data mapping expression class-attribute \u00b6 expression : Union [ bool , MSAUIExpression ] = None Execution condition, not set means default execution outputVar class-attribute \u00b6 outputVar : str = None Output data variable name preventDefault class-attribute \u00b6 preventDefault : Union [ bool , MSAUIExpression ] = None False = prevent event default behavior stopPropagation class-attribute \u00b6 stopPropagation : Union [ bool , MSAUIExpression ] = None False = Stop the execution of subsequent actions MSAUINode \u00b6 Bases: MSABaseUIModel UI Node Component Configuration Attributes \u00b6 hidden class-attribute \u00b6 hidden : bool = None Hide this node hiddenOn class-attribute \u00b6 hiddenOn : MSAUIExpression = None Condition for Hiding id class-attribute \u00b6 id : str = None ID of the Node name class-attribute \u00b6 name : str = None Name of the Node onEvent class-attribute \u00b6 onEvent : dict = None On MSAUIEvent Handler type class-attribute \u00b6 type : str = None Component Type visible class-attribute \u00b6 visible : bool = None Enable Visible/Show visibleOn class-attribute \u00b6 visibleOn : MSAUIExpression = None Condition for Visibility MSAUITpl \u00b6 Bases: MSAUINode MSAUITpl component Attributes \u00b6 className class-attribute \u00b6 className : str = None Class name of the outer Dom tpl class-attribute \u00b6 tpl : str Configuration template type class-attribute \u00b6 type : str = 'tpl' Specify as MSAUITpl component","title":"types"},{"location":"reference/admin/frontend/types/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/types/#adminfrontendtypes","text":"","title":".admin.frontend.types"},{"location":"reference/admin/frontend/types/#admin.frontend.types-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAOptionsNode","text":"MSAOptionsNode = Union [ List [ Dict [ str , Any ]], List [ str ]]","title":"MSAOptionsNode"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIExpression","text":"MSAUIExpression = str","title":"MSAUIExpression"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUISchemaNode","text":"MSAUISchemaNode = Union [ MSAUITemplate , \"MSAUINode\" , List [ \"MSAUINode\" ], Dict [ str , Any ], List [ Dict [ str , Any ]], ]","title":"MSAUISchemaNode"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITemplate","text":"MSAUITemplate = Union [ str , 'MSAUITpl' ]","title":"MSAUITemplate"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSA_UI_API","text":"MSA_UI_API = Union [ str , MSAUIAPI , dict ]","title":"MSA_UI_API"},{"location":"reference/admin/frontend/types/#admin.frontend.types-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut","text":"Bases: MSABaseUIModel MSA UI Api interface output data model","title":"MSABaseUIApiOut"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut.data","text":"data : dict = None","title":"data"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut.msg","text":"msg : str = ''","title":"msg"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIApiOut.status","text":"status : int = 0","title":"status"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel","text":"Bases: BaseModel Core Pydantic Base UI Model.","title":"MSABaseUIModel"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel-classes","text":"","title":"Classes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.Config","text":"","title":"Config"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.Config-attributes","text":"extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.msa_ui_dict","text":"msa_ui_dict ()","title":"msa_ui_dict()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.msa_ui_json","text":"msa_ui_json ()","title":"msa_ui_json()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.update_from_dict","text":"update_from_dict ( kwargs : Dict [ str , Any ])","title":"update_from_dict()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSABaseUIModel.update_from_kwargs","text":"update_from_kwargs ( ** kwargs )","title":"update_from_kwargs()"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI","text":"Bases: MSABaseUIModel Core MSA UI API","title":"MSAUIAPI"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.adaptor","text":"adaptor : str = None Receive adapter, if the interface does not meet the requirements, you can configure an adapter to handle it as msa_ui needs. Also supports Function or string function styles","title":"adaptor"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.autoRefresh","text":"autoRefresh : bool = None Configure whether the interface needs to be automatically refreshed.","title":"autoRefresh"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.cache","text":"cache : int = None Set cache to set the cache time in milliseconds, within the set cache time, the same request will not be repeatedly initiated, but will get the cached request response data.","title":"cache"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.data","text":"data : Union [ str , dict ] = None Data body of the request, supports data mapping","title":"data"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.dataType","text":"dataType : str = None Default is json can be configured as form or form-data. When the data contains a file, the form-data (multipart/form-data) format is automatically used. The application/x-www-form-urlencoded format when configured as form.","title":"dataType"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.headers","text":"headers : Dict [ str , Any ] = None The requested headers","title":"headers"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.method","text":"method : str = None GET holds request method (get, post, put, delete)","title":"method"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.qsOptions","text":"qsOptions : Union [ str , dict ] = None Useful when dataType is form or form-data. Specific parameters, set by default to: { arrayFormat: 'indices', encodeValuesOnly: true }","title":"qsOptions"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.replaceData","text":"replaceData : bool = None Whether the returned data replaces the current data, the default is false, i.e., append, set to true is a complete replacement.","title":"replaceData"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.requestAdaptor","text":"requestAdaptor : str = None send adapter , msa_ui's API configuration, if you can not configure the request structure you want, then you can configure the requestAdaptor send adapter","title":"requestAdaptor"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.responseData","text":"responseData : Dict [ str , Any ] = None If the data structure returned by the interface does not meet expectations, you can modify it by configuring responseData, which also supports data mapping. The data available for mapping is the actual data of the interface (the data part returned by the interface), with additional api variables. where api.query is the query parameter sent by the interface, and api.body is the raw data of the content body sent by the interface.","title":"responseData"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.responseType","text":"responseType : str = None Return type, if it is a download it needs to be set to blob","title":"responseType"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.sendOn","text":"sendOn : MSAUIExpression = None Configure the request conditions","title":"sendOn"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.trackExpression","text":"trackExpression : str = None Configure track variable expression, when autoRefresh is enabled, the default is the url of the api to automatically track variable changes. If you want to monitor variables outside of the url, configure traceExpression.","title":"trackExpression"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIAPI.url","text":"url : MSAUITemplate Current interface Api address","title":"url"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent","text":"Bases: MSABaseUIModel MSA UI Event Pydantic Model","title":"MSAUIEvent"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.actionType","text":"actionType : str = None Action name","title":"actionType"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.args","text":"args : dict = None Action parameter {key:value}, supports data mapping","title":"args"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.expression","text":"expression : Union [ bool , MSAUIExpression ] = None Execution condition, not set means default execution","title":"expression"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.outputVar","text":"outputVar : str = None Output data variable name","title":"outputVar"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.preventDefault","text":"preventDefault : Union [ bool , MSAUIExpression ] = None False = prevent event default behavior","title":"preventDefault"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUIEvent.stopPropagation","text":"stopPropagation : Union [ bool , MSAUIExpression ] = None False = Stop the execution of subsequent actions","title":"stopPropagation"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode","text":"Bases: MSABaseUIModel UI Node Component Configuration","title":"MSAUINode"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.hidden","text":"hidden : bool = None Hide this node","title":"hidden"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.hiddenOn","text":"hiddenOn : MSAUIExpression = None Condition for Hiding","title":"hiddenOn"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.id","text":"id : str = None ID of the Node","title":"id"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.name","text":"name : str = None Name of the Node","title":"name"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.onEvent","text":"onEvent : dict = None On MSAUIEvent Handler","title":"onEvent"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.type","text":"type : str = None Component Type","title":"type"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.visible","text":"visible : bool = None Enable Visible/Show","title":"visible"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUINode.visibleOn","text":"visibleOn : MSAUIExpression = None Condition for Visibility","title":"visibleOn"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl","text":"Bases: MSAUINode MSAUITpl component","title":"MSAUITpl"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl-attributes","text":"","title":"Attributes"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl.className","text":"className : str = None Class name of the outer Dom","title":"className"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl.tpl","text":"tpl : str Configuration template","title":"tpl"},{"location":"reference/admin/frontend/types/#admin.frontend.types.MSAUITpl.type","text":"type : str = 'tpl' Specify as MSAUITpl component","title":"type"},{"location":"reference/admin/frontend/utils/","text":"msaSDK Module \u00b6 .admin.frontend.utils \u00b6 Functions \u00b6 msa_ui_templates cached \u00b6 msa_ui_templates ( template_path : str , encoding = \"utf8\" ) -> Template Page UI Templates This function returns a cached instance of the Template object. Note Caching is used to prevent re-reading the environment every time the Template is used.","title":"utils"},{"location":"reference/admin/frontend/utils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/frontend/utils/#adminfrontendutils","text":"","title":".admin.frontend.utils"},{"location":"reference/admin/frontend/utils/#admin.frontend.utils-functions","text":"","title":"Functions"},{"location":"reference/admin/frontend/utils/#admin.frontend.utils.msa_ui_templates","text":"msa_ui_templates ( template_path : str , encoding = \"utf8\" ) -> Template Page UI Templates This function returns a cached instance of the Template object. Note Caching is used to prevent re-reading the environment every time the Template is used.","title":"msa_ui_templates()"},{"location":"reference/admin/utils/choices/","text":"msaSDK Module \u00b6 .admin.utils.choices \u00b6 Attributes \u00b6 __all__ module-attribute \u00b6 __all__ = [ \"MSAChoices\" , \"MSAIntegerChoices\" , \"MSATextChoices\" , ] Classes \u00b6 MSAChoices \u00b6 Bases: enum . Enum Class for creating enumerated choices. Functions \u00b6 __str__ \u00b6 __str__ () Use value when cast to str, so that MSAChoices set as model instance attributes are rendered as expected in templates and similar contexts. MSAChoicesMeta \u00b6 Bases: enum . EnumMeta A metaclass for creating enum choices. Functions \u00b6 __contains__ \u00b6 __contains__ ( member ) __new__ \u00b6 __new__ ( metacls , classname , bases , classdict , ** kwds ) choices property \u00b6 choices () labels property \u00b6 labels () names property \u00b6 names () values property \u00b6 values () MSAIntegerChoices \u00b6 Bases: int , MSAChoices Class for creating enumerated integer choices. MSATextChoices \u00b6 Bases: str , MSAChoices Class for creating enumerated string choices. Promise \u00b6 Base class for the proxy class created in the closure of the lazy function. It's used to recognize promises in code.","title":"choices"},{"location":"reference/admin/utils/choices/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/choices/#adminutilschoices","text":"","title":".admin.utils.choices"},{"location":"reference/admin/utils/choices/#admin.utils.choices-attributes","text":"","title":"Attributes"},{"location":"reference/admin/utils/choices/#admin.utils.choices.__all__","text":"__all__ = [ \"MSAChoices\" , \"MSAIntegerChoices\" , \"MSATextChoices\" , ]","title":"__all__"},{"location":"reference/admin/utils/choices/#admin.utils.choices-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoices","text":"Bases: enum . Enum Class for creating enumerated choices.","title":"MSAChoices"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoices-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoices.__str__","text":"__str__ () Use value when cast to str, so that MSAChoices set as model instance attributes are rendered as expected in templates and similar contexts.","title":"__str__()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta","text":"Bases: enum . EnumMeta A metaclass for creating enum choices.","title":"MSAChoicesMeta"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.__contains__","text":"__contains__ ( member )","title":"__contains__()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.__new__","text":"__new__ ( metacls , classname , bases , classdict , ** kwds )","title":"__new__()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.choices","text":"choices ()","title":"choices()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.labels","text":"labels ()","title":"labels()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.names","text":"names ()","title":"names()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAChoicesMeta.values","text":"values ()","title":"values()"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSAIntegerChoices","text":"Bases: int , MSAChoices Class for creating enumerated integer choices.","title":"MSAIntegerChoices"},{"location":"reference/admin/utils/choices/#admin.utils.choices.MSATextChoices","text":"Bases: str , MSAChoices Class for creating enumerated string choices.","title":"MSATextChoices"},{"location":"reference/admin/utils/choices/#admin.utils.choices.Promise","text":"Base class for the proxy class created in the closure of the lazy function. It's used to recognize promises in code.","title":"Promise"},{"location":"reference/admin/utils/fields/","text":"msaSDK Module \u00b6 .admin.utils.fields \u00b6 Classes \u00b6 Functions \u00b6 Field \u00b6 Field ( default : Any = Undefined , * , default_factory : Optional [ NoArgAnyCallable ] = None , alias : str = None , title : str = None , description : str = None , exclude : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , include : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , const : bool = None , gt : float = None , ge : float = None , lt : float = None , le : float = None , multiple_of : float = None , min_items : int = None , max_items : int = None , min_length : int = None , max_length : int = None , allow_mutation : bool = True , regex : str = None , primary_key : bool = False , foreign_key : Optional [ Any ] = None , unique : bool = False , nullable : Union [ bool , UndefinedType ] = Undefined , index : Union [ bool , UndefinedType ] = Undefined , sa_column : Union [ Column , UndefinedType ] = Undefined , sa_column_args : Union [ Sequence [ Any ], UndefinedType ] = Undefined , sa_column_kwargs : Union [ Mapping [ str , Any ], UndefinedType ] = Undefined , schema_extra : Optional [ Dict [ str , Any ]] = None , msa_ui_form_item : Union [ FormItem , dict , str ] = None , msa_ui_filter_item : Union [ FormItem , dict , str ] = None , msa_ui_table_column : Union [ TableColumn , dict , str ] = None ) -> Any","title":"fields"},{"location":"reference/admin/utils/fields/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/fields/#adminutilsfields","text":"","title":".admin.utils.fields"},{"location":"reference/admin/utils/fields/#admin.utils.fields-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/fields/#admin.utils.fields-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/fields/#admin.utils.fields.Field","text":"Field ( default : Any = Undefined , * , default_factory : Optional [ NoArgAnyCallable ] = None , alias : str = None , title : str = None , description : str = None , exclude : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , include : Union [ AbstractSet [ Union [ int , str ]], Mapping [ Union [ int , str ], Any ], Any , ] = None , const : bool = None , gt : float = None , ge : float = None , lt : float = None , le : float = None , multiple_of : float = None , min_items : int = None , max_items : int = None , min_length : int = None , max_length : int = None , allow_mutation : bool = True , regex : str = None , primary_key : bool = False , foreign_key : Optional [ Any ] = None , unique : bool = False , nullable : Union [ bool , UndefinedType ] = Undefined , index : Union [ bool , UndefinedType ] = Undefined , sa_column : Union [ Column , UndefinedType ] = Undefined , sa_column_args : Union [ Sequence [ Any ], UndefinedType ] = Undefined , sa_column_kwargs : Union [ Mapping [ str , Any ], UndefinedType ] = Undefined , schema_extra : Optional [ Dict [ str , Any ]] = None , msa_ui_form_item : Union [ FormItem , dict , str ] = None , msa_ui_filter_item : Union [ FormItem , dict , str ] = None , msa_ui_table_column : Union [ TableColumn , dict , str ] = None ) -> Any","title":"Field()"},{"location":"reference/admin/utils/functools/","text":"msaSDK Module \u00b6 .admin.utils.functools \u00b6 Classes \u00b6 cached_property \u00b6 Attributes \u00b6 __doc__ instance-attribute \u00b6 __doc__ = func . __doc__ attrname instance-attribute \u00b6 attrname = None func instance-attribute \u00b6 func = func lock instance-attribute \u00b6 lock = RLock () Functions \u00b6 __get__ \u00b6 __get__ ( instance , owner = None ) Get the cached_property RAISES DESCRIPTION TypeError Cannot use cached_property instance without calling set_name on it. TypeError No ' dict ' attribute on... TypeError The ' dict ' attribute on ... does not support item assignment for caching... __init__ \u00b6 __init__ ( func ) __set_name__ \u00b6 __set_name__ ( owner , name ) Set the cached_property name RAISES DESCRIPTION TypeError Cannot assign the same cached_property to two different names","title":"functools"},{"location":"reference/admin/utils/functools/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/functools/#adminutilsfunctools","text":"","title":".admin.utils.functools"},{"location":"reference/admin/utils/functools/#admin.utils.functools-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property","text":"","title":"cached_property"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property-attributes","text":"","title":"Attributes"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__doc__","text":"__doc__ = func . __doc__","title":"__doc__"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.attrname","text":"attrname = None","title":"attrname"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.func","text":"func = func","title":"func"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.lock","text":"lock = RLock ()","title":"lock"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__get__","text":"__get__ ( instance , owner = None ) Get the cached_property RAISES DESCRIPTION TypeError Cannot use cached_property instance without calling set_name on it. TypeError No ' dict ' attribute on... TypeError The ' dict ' attribute on ... does not support item assignment for caching...","title":"__get__()"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__init__","text":"__init__ ( func )","title":"__init__()"},{"location":"reference/admin/utils/functools/#admin.utils.functools.cached_property.__set_name__","text":"__set_name__ ( owner , name ) Set the cached_property name RAISES DESCRIPTION TypeError Cannot assign the same cached_property to two different names","title":"__set_name__()"},{"location":"reference/admin/utils/translation/","text":"msaSDK Module \u00b6 .admin.utils.translation \u00b6 Attributes \u00b6 i18n module-attribute \u00b6 i18n = I18N () Classes \u00b6 I18N \u00b6 Functions \u00b6 __call__ \u00b6 __call__ ( value , language : str = None ) -> str __init__ \u00b6 __init__ () get_language \u00b6 get_language () gettext cached \u00b6 gettext ( value : str , language : str = None ) -> str This function returns a cached instance of the translated str object. Note Caching is used to prevent re-reading the environment every time the translated str object is used. load_translations \u00b6 load_translations ( translations : Dict [ str , GNUTranslations ]) Load the GNUTranslations. PARAMETER DESCRIPTION translations the dict with the GNU Translations TYPE: Dict [ str , GNUTranslations ] set_language \u00b6 set_language ( language : str = None ) -> str Set the i18n localization language. If it is empty, try to read the environment variable LANGUAGE / LANG , the system default language, in turn. PARAMETER DESCRIPTION language the language to try to set TYPE: str DEFAULT: None RETURNS DESCRIPTION str the language after the successful setting","title":"translation"},{"location":"reference/admin/utils/translation/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/admin/utils/translation/#adminutilstranslation","text":"","title":".admin.utils.translation"},{"location":"reference/admin/utils/translation/#admin.utils.translation-attributes","text":"","title":"Attributes"},{"location":"reference/admin/utils/translation/#admin.utils.translation.i18n","text":"i18n = I18N ()","title":"i18n"},{"location":"reference/admin/utils/translation/#admin.utils.translation-classes","text":"","title":"Classes"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N","text":"","title":"I18N"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N-functions","text":"","title":"Functions"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.__call__","text":"__call__ ( value , language : str = None ) -> str","title":"__call__()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.__init__","text":"__init__ ()","title":"__init__()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.get_language","text":"get_language ()","title":"get_language()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.gettext","text":"gettext ( value : str , language : str = None ) -> str This function returns a cached instance of the translated str object. Note Caching is used to prevent re-reading the environment every time the translated str object is used.","title":"gettext()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.load_translations","text":"load_translations ( translations : Dict [ str , GNUTranslations ]) Load the GNUTranslations. PARAMETER DESCRIPTION translations the dict with the GNU Translations TYPE: Dict [ str , GNUTranslations ]","title":"load_translations()"},{"location":"reference/admin/utils/translation/#admin.utils.translation.I18N.set_language","text":"set_language ( language : str = None ) -> str Set the i18n localization language. If it is empty, try to read the environment variable LANGUAGE / LANG , the system default language, in turn. PARAMETER DESCRIPTION language the language to try to set TYPE: str DEFAULT: None RETURNS DESCRIPTION str the language after the successful setting","title":"set_language()"},{"location":"reference/auth/admin/","text":"msaSDK Module \u00b6 .auth.admin \u00b6 Classes \u00b6 GroupAdmin \u00b6 Bases: ModelAdmin Admin Group object Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None link_model_fields class-attribute \u00b6 link_model_fields = [ Group . roles ] model class-attribute \u00b6 model = Group page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Group\" ), icon = \"fa fa-group\" ) readonly_fields class-attribute \u00b6 readonly_fields = [ 'key' ] PermissionAdmin \u00b6 Bases: ModelAdmin Admin Permission object Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None model class-attribute \u00b6 model = Permission page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Permission\" ), icon = \"fa fa-lock\" ) readonly_fields class-attribute \u00b6 readonly_fields = [ 'key' ] RoleAdmin \u00b6 Bases: ModelAdmin Admin Role object Attributes \u00b6 group_schema class-attribute \u00b6 group_schema = None link_model_fields class-attribute \u00b6 link_model_fields = [ Role . permissions ] model class-attribute \u00b6 model = Role page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"Role\" ), icon = \"fa fa-group\" ) readonly_fields class-attribute \u00b6 readonly_fields = [ 'key' ] UserAdmin \u00b6 Bases: ModelAdmin The User Admin object from the AuthAdminSite Attributes \u00b6 exclude class-attribute \u00b6 exclude = [ 'password' ] group_schema class-attribute \u00b6 group_schema = None link_model_fields class-attribute \u00b6 link_model_fields = [ User . roles , User . groups ] model class-attribute \u00b6 model : Type [ BaseUser ] = None page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"User\" ), icon = \"fa fa-user\" ) search_fields class-attribute \u00b6 search_fields = [ User . username ] Functions \u00b6 on_create_pre async \u00b6 on_create_pre ( request : Request , obj , ** kwargs ) -> Dict [ str , Any ] on_update_pre async \u00b6 on_update_pre ( request : Request , obj , item_id : List [ int ], ** kwargs ) -> Dict [ str , Any ] UserInfoFormAdmin \u00b6 Bases: FormAdmin The default User Info Form from the AuthAdminSite Attributes \u00b6 form class-attribute \u00b6 form = Form ( mode = DisplayModeEnum . horizontal ) form_init class-attribute \u00b6 form_init = True group_schema class-attribute \u00b6 group_schema = None page class-attribute \u00b6 page = Page ( title = _ ( 'User Profile' )) page_path class-attribute \u00b6 page_path = '/userinfo' page_route_kwargs class-attribute \u00b6 page_route_kwargs = { 'name' : 'userinfo' } page_schema class-attribute \u00b6 page_schema = None schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ BaseUser ] = None user_model class-attribute \u00b6 user_model : Type [ BaseUser ] = User Functions \u00b6 get_form async \u00b6 get_form ( request : Request ) -> Form get_init_data async \u00b6 get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ] handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ] has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool UserLoginFormAdmin \u00b6 Bases: FormAdmin , ABC The default User Login Form from the AuthAdminSite Attributes \u00b6 page class-attribute \u00b6 page = Page ( title = _ ( 'User Login' )) page_parser_mode class-attribute \u00b6 page_parser_mode = 'html' page_path class-attribute \u00b6 page_path = '/login' page_route_kwargs class-attribute \u00b6 page_route_kwargs = { 'name' : 'login' } page_schema class-attribute \u00b6 page_schema = None schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ UserLoginOut ] = None Functions \u00b6 get_form async \u00b6 get_form ( request : Request ) -> Form get_page async \u00b6 get_page ( request : Request ) -> Page handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ] has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool route_page property \u00b6 route_page () -> Callable route_submit property \u00b6 route_submit () UserRegFormAdmin \u00b6 Bases: FormAdmin , ABC The default User Registration Form from the AuthAdminSite Attributes \u00b6 page class-attribute \u00b6 page = Page ( title = _ ( 'User Register' )) page_parser_mode class-attribute \u00b6 page_parser_mode = 'html' page_path class-attribute \u00b6 page_path = '/reg' page_route_kwargs class-attribute \u00b6 page_route_kwargs = { 'name' : 'reg' } page_schema class-attribute \u00b6 page_schema = None schema class-attribute \u00b6 schema : Type [ BaseModel ] = None schema_submit_out class-attribute \u00b6 schema_submit_out : Type [ UserLoginOut ] = None user_model class-attribute \u00b6 user_model : Type [ BaseUser ] = User Functions \u00b6 get_form async \u00b6 get_form ( request : Request ) -> Form get_page async \u00b6 get_page ( request : Request ) -> Page handle async \u00b6 handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ] has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool route_submit property \u00b6 route_submit () Functions \u00b6 attach_page_head \u00b6 attach_page_head ( page : Page ) -> Page","title":"admin"},{"location":"reference/auth/admin/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/admin/#authadmin","text":"","title":".auth.admin"},{"location":"reference/auth/admin/#auth.admin-classes","text":"","title":"Classes"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin","text":"Bases: ModelAdmin Admin Group object","title":"GroupAdmin"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.link_model_fields","text":"link_model_fields = [ Group . roles ]","title":"link_model_fields"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.model","text":"model = Group","title":"model"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Group\" ), icon = \"fa fa-group\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.GroupAdmin.readonly_fields","text":"readonly_fields = [ 'key' ]","title":"readonly_fields"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin","text":"Bases: ModelAdmin Admin Permission object","title":"PermissionAdmin"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.model","text":"model = Permission","title":"model"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Permission\" ), icon = \"fa fa-lock\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.PermissionAdmin.readonly_fields","text":"readonly_fields = [ 'key' ]","title":"readonly_fields"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin","text":"Bases: ModelAdmin Admin Role object","title":"RoleAdmin"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.link_model_fields","text":"link_model_fields = [ Role . permissions ]","title":"link_model_fields"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.model","text":"model = Role","title":"model"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"Role\" ), icon = \"fa fa-group\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.RoleAdmin.readonly_fields","text":"readonly_fields = [ 'key' ]","title":"readonly_fields"},{"location":"reference/auth/admin/#auth.admin.UserAdmin","text":"Bases: ModelAdmin The User Admin object from the AuthAdminSite","title":"UserAdmin"},{"location":"reference/auth/admin/#auth.admin.UserAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.exclude","text":"exclude = [ 'password' ]","title":"exclude"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.link_model_fields","text":"link_model_fields = [ User . roles , User . groups ]","title":"link_model_fields"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.model","text":"model : Type [ BaseUser ] = None","title":"model"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.page_schema","text":"page_schema = PageSchema ( label = _ ( \"User\" ), icon = \"fa fa-user\" )","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.search_fields","text":"search_fields = [ User . username ]","title":"search_fields"},{"location":"reference/auth/admin/#auth.admin.UserAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.on_create_pre","text":"on_create_pre ( request : Request , obj , ** kwargs ) -> Dict [ str , Any ]","title":"on_create_pre()"},{"location":"reference/auth/admin/#auth.admin.UserAdmin.on_update_pre","text":"on_update_pre ( request : Request , obj , item_id : List [ int ], ** kwargs ) -> Dict [ str , Any ]","title":"on_update_pre()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin","text":"Bases: FormAdmin The default User Info Form from the AuthAdminSite","title":"UserInfoFormAdmin"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.form","text":"form = Form ( mode = DisplayModeEnum . horizontal )","title":"form"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.form_init","text":"form_init = True","title":"form_init"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.group_schema","text":"group_schema = None","title":"group_schema"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page","text":"page = Page ( title = _ ( 'User Profile' ))","title":"page"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page_path","text":"page_path = '/userinfo'","title":"page_path"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page_route_kwargs","text":"page_route_kwargs = { 'name' : 'userinfo' }","title":"page_route_kwargs"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.page_schema","text":"page_schema = None","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ BaseUser ] = None","title":"schema_submit_out"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.user_model","text":"user_model : Type [ BaseUser ] = User","title":"user_model"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.get_init_data","text":"get_init_data ( request : Request , ** kwargs ) -> MSACRUDOut [ Any ]","title":"get_init_data()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ Any ]","title":"handle()"},{"location":"reference/auth/admin/#auth.admin.UserInfoFormAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin","text":"Bases: FormAdmin , ABC The default User Login Form from the AuthAdminSite","title":"UserLoginFormAdmin"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page","text":"page = Page ( title = _ ( 'User Login' ))","title":"page"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_parser_mode","text":"page_parser_mode = 'html'","title":"page_parser_mode"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_path","text":"page_path = '/login'","title":"page_path"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_route_kwargs","text":"page_route_kwargs = { 'name' : 'login' }","title":"page_route_kwargs"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.page_schema","text":"page_schema = None","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ UserLoginOut ] = None","title":"schema_submit_out"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ]","title":"handle()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.route_page","text":"route_page () -> Callable","title":"route_page()"},{"location":"reference/auth/admin/#auth.admin.UserLoginFormAdmin.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin","text":"Bases: FormAdmin , ABC The default User Registration Form from the AuthAdminSite","title":"UserRegFormAdmin"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page","text":"page = Page ( title = _ ( 'User Register' ))","title":"page"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_parser_mode","text":"page_parser_mode = 'html'","title":"page_parser_mode"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_path","text":"page_path = '/reg'","title":"page_path"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_route_kwargs","text":"page_route_kwargs = { 'name' : 'reg' }","title":"page_route_kwargs"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.page_schema","text":"page_schema = None","title":"page_schema"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.schema","text":"schema : Type [ BaseModel ] = None","title":"schema"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.schema_submit_out","text":"schema_submit_out : Type [ UserLoginOut ] = None","title":"schema_submit_out"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.user_model","text":"user_model : Type [ BaseUser ] = User","title":"user_model"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.get_form","text":"get_form ( request : Request ) -> Form","title":"get_form()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.get_page","text":"get_page ( request : Request ) -> Page","title":"get_page()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.handle","text":"handle ( request : Request , data : BaseModel , ** kwargs ) -> MSACRUDOut [ BaseModel ]","title":"handle()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/admin/#auth.admin.UserRegFormAdmin.route_submit","text":"route_submit ()","title":"route_submit()"},{"location":"reference/auth/admin/#auth.admin-functions","text":"","title":"Functions"},{"location":"reference/auth/admin/#auth.admin.attach_page_head","text":"attach_page_head ( page : Page ) -> Page","title":"attach_page_head()"},{"location":"reference/auth/app/","text":"msaSDK Module \u00b6 .auth.app \u00b6 Classes \u00b6 UserAuthApp \u00b6 Bases: AdminApp , AuthRouter Attributes \u00b6 GroupAdmin class-attribute \u00b6 GroupAdmin : Type [ ModelAdmin ] = GroupAdmin PermissionAdmin class-attribute \u00b6 PermissionAdmin : Type [ ModelAdmin ] = PermissionAdmin RoleAdmin class-attribute \u00b6 RoleAdmin : Type [ ModelAdmin ] = RoleAdmin UserAdmin class-attribute \u00b6 UserAdmin : Type [ UserAdmin ] = UserAdmin UserInfoFormAdmin class-attribute \u00b6 UserInfoFormAdmin : Type [ UserInfoFormAdmin ] = UserInfoFormAdmin UserLoginFormAdmin class-attribute \u00b6 UserLoginFormAdmin : Type [ UserLoginFormAdmin ] = UserLoginFormAdmin UserRegFormAdmin class-attribute \u00b6 UserRegFormAdmin : Type [ UserRegFormAdmin ] = UserRegFormAdmin msa_app instance-attribute \u00b6 msa_app = msa_app page_schema class-attribute \u00b6 page_schema = PageSchema ( label = _ ( \"User Authentication\" ), icon = \"fa fa-lock\" , sort = 99 , ) router_prefix class-attribute \u00b6 router_prefix = '/auth' Functions \u00b6 __init__ \u00b6 __init__ ( app : AdminApp , msa_app = None ) User Auth App Note The app parameter for the Auth App is normaly provided by the AuthAdminSite Class. This class shouldn't be instantiated directly. PARAMETER DESCRIPTION app The admin app instance TYPE: AdminApp msa_app The MSAApp instance [Optional] DEFAULT: None has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool check the page permission for the request PARAMETER DESCRIPTION request the request object TYPE: Request","title":"app"},{"location":"reference/auth/app/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/app/#authapp","text":"","title":".auth.app"},{"location":"reference/auth/app/#auth.app-classes","text":"","title":"Classes"},{"location":"reference/auth/app/#auth.app.UserAuthApp","text":"Bases: AdminApp , AuthRouter","title":"UserAuthApp"},{"location":"reference/auth/app/#auth.app.UserAuthApp-attributes","text":"","title":"Attributes"},{"location":"reference/auth/app/#auth.app.UserAuthApp.GroupAdmin","text":"GroupAdmin : Type [ ModelAdmin ] = GroupAdmin","title":"GroupAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.PermissionAdmin","text":"PermissionAdmin : Type [ ModelAdmin ] = PermissionAdmin","title":"PermissionAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.RoleAdmin","text":"RoleAdmin : Type [ ModelAdmin ] = RoleAdmin","title":"RoleAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserAdmin","text":"UserAdmin : Type [ UserAdmin ] = UserAdmin","title":"UserAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserInfoFormAdmin","text":"UserInfoFormAdmin : Type [ UserInfoFormAdmin ] = UserInfoFormAdmin","title":"UserInfoFormAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserLoginFormAdmin","text":"UserLoginFormAdmin : Type [ UserLoginFormAdmin ] = UserLoginFormAdmin","title":"UserLoginFormAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.UserRegFormAdmin","text":"UserRegFormAdmin : Type [ UserRegFormAdmin ] = UserRegFormAdmin","title":"UserRegFormAdmin"},{"location":"reference/auth/app/#auth.app.UserAuthApp.msa_app","text":"msa_app = msa_app","title":"msa_app"},{"location":"reference/auth/app/#auth.app.UserAuthApp.page_schema","text":"page_schema = PageSchema ( label = _ ( \"User Authentication\" ), icon = \"fa fa-lock\" , sort = 99 , )","title":"page_schema"},{"location":"reference/auth/app/#auth.app.UserAuthApp.router_prefix","text":"router_prefix = '/auth'","title":"router_prefix"},{"location":"reference/auth/app/#auth.app.UserAuthApp-functions","text":"","title":"Functions"},{"location":"reference/auth/app/#auth.app.UserAuthApp.__init__","text":"__init__ ( app : AdminApp , msa_app = None ) User Auth App Note The app parameter for the Auth App is normaly provided by the AuthAdminSite Class. This class shouldn't be instantiated directly. PARAMETER DESCRIPTION app The admin app instance TYPE: AdminApp msa_app The MSAApp instance [Optional] DEFAULT: None","title":"__init__()"},{"location":"reference/auth/app/#auth.app.UserAuthApp.has_page_permission","text":"has_page_permission ( request : Request ) -> bool check the page permission for the request PARAMETER DESCRIPTION request the request object TYPE: Request","title":"has_page_permission()"},{"location":"reference/auth/site/","text":"msaSDK Module \u00b6 .auth.site \u00b6 Classes \u00b6 AuthAdminSite \u00b6 Bases: AdminSite Attributes \u00b6 UserAuthApp class-attribute \u00b6 UserAuthApp : Type [ UserAuthApp ] = UserAuthApp auth instance-attribute \u00b6 auth = auth or self . auth or Auth ( db = self . db ) Functions \u00b6 __init__ \u00b6 __init__ ( msa_app : MSAApp = None , auth : Auth = None ) get_page async \u00b6 get_page ( request : Request ) -> App has_page_permission async \u00b6 has_page_permission ( request : Request ) -> bool","title":"site"},{"location":"reference/auth/site/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/site/#authsite","text":"","title":".auth.site"},{"location":"reference/auth/site/#auth.site-classes","text":"","title":"Classes"},{"location":"reference/auth/site/#auth.site.AuthAdminSite","text":"Bases: AdminSite","title":"AuthAdminSite"},{"location":"reference/auth/site/#auth.site.AuthAdminSite-attributes","text":"","title":"Attributes"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.UserAuthApp","text":"UserAuthApp : Type [ UserAuthApp ] = UserAuthApp","title":"UserAuthApp"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.auth","text":"auth = auth or self . auth or Auth ( db = self . db )","title":"auth"},{"location":"reference/auth/site/#auth.site.AuthAdminSite-functions","text":"","title":"Functions"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.__init__","text":"__init__ ( msa_app : MSAApp = None , auth : Auth = None )","title":"__init__()"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.get_page","text":"get_page ( request : Request ) -> App","title":"get_page()"},{"location":"reference/auth/site/#auth.site.AuthAdminSite.has_page_permission","text":"has_page_permission ( request : Request ) -> bool","title":"has_page_permission()"},{"location":"reference/auth/auth/auth/","text":"msaSDK Module \u00b6 .auth.auth.auth \u00b6 Classes \u00b6 Auth \u00b6 Bases: Generic [ _UserModelT ] Attributes \u00b6 backend instance-attribute \u00b6 backend = self . backend or AuthBackend ( self , token_store or DbTokenStore ( self . db ) ) db instance-attribute \u00b6 db = db or self . db pwd_context instance-attribute \u00b6 pwd_context = pwd_context user_model instance-attribute \u00b6 user_model = user_model or self . user_model Functions \u00b6 __init__ \u00b6 __init__ ( db : Union [ AsyncDatabase , Database ], token_store : BaseTokenStore = None , user_model : Type [ _UserModelT ] = User , pwd_context : CryptContext = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ), ) authenticate_user async \u00b6 authenticate_user ( username : str , password : Union [ str , SecretStr ] ) -> Optional [ _UserModelT ] create_role_user async \u00b6 create_role_user ( role_key : str = 'admin' ) -> User get_current_user \u00b6 get_current_user () requires \u00b6 requires ( roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None , status_code : int = 403 , redirect : str = None , response : Union [ bool , Response ] = None , ) -> Callable AuthBackend \u00b6 Bases: AuthenticationBackend , Generic [ _UserModelT ] Attributes \u00b6 auth instance-attribute \u00b6 auth = auth token_store instance-attribute \u00b6 token_store = token_store Functions \u00b6 __init__ \u00b6 __init__ ( auth : Auth , token_store : BaseTokenStore ) attach_middleware \u00b6 attach_middleware ( app : FastAPI ) Add auth middleware authenticate async \u00b6 authenticate ( request : Request , ) -> Tuple [ Auth , Optional [ _UserModelT ]] get_user_token staticmethod \u00b6 get_user_token ( request : Request ) -> Optional [ str ] AuthRouter \u00b6 Bases: MSARouterMixin Attributes \u00b6 auth instance-attribute \u00b6 auth = auth or self . auth router_prefix class-attribute \u00b6 router_prefix = '/auth' schema_user_info instance-attribute \u00b6 schema_user_info = ( self . schema_user_info or schema_create_by_schema ( self . auth . user_model , \"UserInfo\" , exclude = { \"password\" }, ) ) schema_user_login_out class-attribute \u00b6 schema_user_login_out : Type [ UserLoginOut ] = UserLoginOut Classes \u00b6 OAuth2 \u00b6 Bases: OAuth2PasswordBearer Functions \u00b6 __call__ async \u00b6 __call__ ( request : Request ) -> Optional [ str ] Functions \u00b6 __init__ \u00b6 __init__ ( auth : Auth = None ) route_gettoken property \u00b6 route_gettoken () route_logout property \u00b6 route_logout () route_userinfo property \u00b6 route_userinfo () router_path \u00b6 router_path () -> str","title":"auth"},{"location":"reference/auth/auth/auth/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/auth/#authauthauth","text":"","title":".auth.auth.auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth","text":"Bases: Generic [ _UserModelT ]","title":"Auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.backend","text":"backend = self . backend or AuthBackend ( self , token_store or DbTokenStore ( self . db ) )","title":"backend"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.db","text":"db = db or self . db","title":"db"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.pwd_context","text":"pwd_context = pwd_context","title":"pwd_context"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.user_model","text":"user_model = user_model or self . user_model","title":"user_model"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.__init__","text":"__init__ ( db : Union [ AsyncDatabase , Database ], token_store : BaseTokenStore = None , user_model : Type [ _UserModelT ] = User , pwd_context : CryptContext = CryptContext ( schemes = [ \"bcrypt\" ], deprecated = \"auto\" ), )","title":"__init__()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.authenticate_user","text":"authenticate_user ( username : str , password : Union [ str , SecretStr ] ) -> Optional [ _UserModelT ]","title":"authenticate_user()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.create_role_user","text":"create_role_user ( role_key : str = 'admin' ) -> User","title":"create_role_user()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.get_current_user","text":"get_current_user ()","title":"get_current_user()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.Auth.requires","text":"requires ( roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None , status_code : int = 403 , redirect : str = None , response : Union [ bool , Response ] = None , ) -> Callable","title":"requires()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend","text":"Bases: AuthenticationBackend , Generic [ _UserModelT ]","title":"AuthBackend"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.auth","text":"auth = auth","title":"auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.token_store","text":"token_store = token_store","title":"token_store"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.__init__","text":"__init__ ( auth : Auth , token_store : BaseTokenStore )","title":"__init__()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.attach_middleware","text":"attach_middleware ( app : FastAPI ) Add auth middleware","title":"attach_middleware()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.authenticate","text":"authenticate ( request : Request , ) -> Tuple [ Auth , Optional [ _UserModelT ]]","title":"authenticate()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthBackend.get_user_token","text":"get_user_token ( request : Request ) -> Optional [ str ]","title":"get_user_token()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter","text":"Bases: MSARouterMixin","title":"AuthRouter"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.auth","text":"auth = auth or self . auth","title":"auth"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.router_prefix","text":"router_prefix = '/auth'","title":"router_prefix"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.schema_user_info","text":"schema_user_info = ( self . schema_user_info or schema_create_by_schema ( self . auth . user_model , \"UserInfo\" , exclude = { \"password\" }, ) )","title":"schema_user_info"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.schema_user_login_out","text":"schema_user_login_out : Type [ UserLoginOut ] = UserLoginOut","title":"schema_user_login_out"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.OAuth2","text":"Bases: OAuth2PasswordBearer","title":"OAuth2"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.OAuth2-functions","text":"__call__ async \u00b6 __call__ ( request : Request ) -> Optional [ str ]","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.__init__","text":"__init__ ( auth : Auth = None )","title":"__init__()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.route_gettoken","text":"route_gettoken ()","title":"route_gettoken()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.route_logout","text":"route_logout ()","title":"route_logout()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.route_userinfo","text":"route_userinfo ()","title":"route_userinfo()"},{"location":"reference/auth/auth/auth/#auth.auth.auth.AuthRouter.router_path","text":"router_path () -> str","title":"router_path()"},{"location":"reference/auth/auth/models/","text":"msaSDK Module \u00b6 .auth.auth.models \u00b6 Classes \u00b6 BaseGroup \u00b6 Bases: BaseRBAC Attributes \u00b6 __tablename__ class-attribute \u00b6 __tablename__ = 'auth_group' parent_id class-attribute \u00b6 parent_id : int = Field ( None , title = _ ( \"Parent\" ), foreign_key = \"auth_group.id\" ) BaseRBAC \u00b6 Bases: PkMixin Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } desc class-attribute \u00b6 desc : str = Field ( default = \"\" , title = _ ( \"Description\" ), max_length = 400 , msa_ui_form_item = \"textarea\" , ) key class-attribute \u00b6 key : str = Field ( Ellipsis , title = _ ( \"Identify\" ), max_length = 20 , sa_column = Column ( String ( 20 ), unique = True , index = True , nullable = False ), ) name class-attribute \u00b6 name : str = Field ( Ellipsis , title = _ ( 'Name' ), max_length = 20 ) BaseUser \u00b6 Bases: PkMixin , UsernameMixin , PasswordMixin , EmailMixin , CreateTimeMixin Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user' avatar class-attribute \u00b6 avatar : str = Field ( None , title = _ ( \"Avatar\" ), max_length = 100 , msa_ui_form_item = InputImage ( maxLength = 1 , maxSize = 2 * 1024 * 1024 , receiver = \"post:/admin/file/upload\" , ), msa_ui_table_column = ColumnImage ( width = 50 , height = 50 , enlargeAble = True ), ) is_active class-attribute \u00b6 is_active : bool = Field ( default = True , title = _ ( 'Is Active' )) nickname class-attribute \u00b6 nickname : str = Field ( None , title = _ ( \"Nickname\" ), max_length = 32 ) Classes \u00b6 Config \u00b6 Attributes \u00b6 use_enum_values class-attribute \u00b6 use_enum_values = True Functions \u00b6 display_name property \u00b6 display_name () -> str has_requires \u00b6 has_requires ( session : Session , * , roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None ) -> bool Check if the user has the specified RBAC privileges PARAMETER DESCRIPTION session sqlalchemy Session ; asynchronous AsyncSession , please use run_sync method. TYPE: Session roles list of roles TYPE: Union [ str , Sequence [ str ]] DEFAULT: None groups list of user groups TYPE: Union [ str , Sequence [ str ]] DEFAULT: None permissions list of permissions TYPE: Union [ str , Sequence [ str ]] DEFAULT: None RETURNS DESCRIPTION bool Return True for successful detection. identity property \u00b6 identity () -> str is_authenticated property \u00b6 is_authenticated () -> bool CreateTimeMixin \u00b6 Bases: SQLModel Attributes \u00b6 create_time class-attribute \u00b6 create_time : datetime = Field ( default_factory = datetime . now , title = _ ( \"Create Time\" ) ) EmailMixin \u00b6 Bases: SQLModel Attributes \u00b6 email class-attribute \u00b6 email : EmailStr = Field ( None , title = _ ( \"Email\" ), sa_column = Column ( String ( 50 ), unique = True , index = True , nullable = True ), msa_ui_form_item = \"input-email\" , ) Group \u00b6 Bases: BaseGroup Group Attributes \u00b6 roles class-attribute \u00b6 roles : List [ Role ] = Relationship ( back_populates = \"groups\" , link_model = GroupRoleLink ) GroupRoleLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_group_roles' group_id class-attribute \u00b6 group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , ) role_id class-attribute \u00b6 role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , ) PasswordMixin \u00b6 Bases: SQLModel Attributes \u00b6 password class-attribute \u00b6 password : PasswordStr = Field ( title = _ ( \"Password\" ), max_length = 128 , sa_column = Column ( String ( 128 ), nullable = False ), msa_ui_form_item = \"input-password\" , ) PasswordStr \u00b6 Bases: SecretStr , str Permission \u00b6 Bases: BaseRBAC Permisson Attributes \u00b6 __tablename__ class-attribute \u00b6 __tablename__ = 'auth_permission' roles class-attribute \u00b6 roles : List [ Role ] = Relationship ( back_populates = \"permissions\" , link_model = RolePermissionLink , ) PkMixin \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = Field ( default = None , primary_key = True , nullable = False ) Role \u00b6 Bases: BaseRBAC Roles Attributes \u00b6 __tablename__ class-attribute \u00b6 __tablename__ = 'auth_role' groups class-attribute \u00b6 groups : List [ Group ] = Relationship ( back_populates = \"roles\" , link_model = GroupRoleLink ) permissions class-attribute \u00b6 permissions : List [ Permission ] = Relationship ( back_populates = \"roles\" , link_model = RolePermissionLink ) RolePermissionLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_role_permissions' permission_id class-attribute \u00b6 permission_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_permission.id\" , primary_key = True , nullable = False , ) role_id class-attribute \u00b6 role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , ) User \u00b6 Bases: BaseUser Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user' groups class-attribute \u00b6 groups : List [ Group ] = Relationship ( link_model = UserGroupLink ) roles class-attribute \u00b6 roles : List [ Role ] = Relationship ( link_model = UserRoleLink ) UserGroupLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user_groups' group_id class-attribute \u00b6 group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , ) user_id class-attribute \u00b6 user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , ) UserRoleLink \u00b6 Bases: SQLModel Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_user_roles' role_id class-attribute \u00b6 role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , ) user_id class-attribute \u00b6 user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , ) UsernameMixin \u00b6 Bases: SQLModel Attributes \u00b6 username class-attribute \u00b6 username : str = Field ( title = _ ( \"Username\" ), max_length = 32 , sa_column = Column ( String ( 32 ), unique = True , index = True , nullable = False ), )","title":"models"},{"location":"reference/auth/auth/models/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/models/#authauthmodels","text":"","title":".auth.auth.models"},{"location":"reference/auth/auth/models/#auth.auth.models-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup","text":"Bases: BaseRBAC","title":"BaseGroup"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup.__tablename__","text":"__tablename__ = 'auth_group'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseGroup.parent_id","text":"parent_id : int = Field ( None , title = _ ( \"Parent\" ), foreign_key = \"auth_group.id\" )","title":"parent_id"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC","text":"Bases: PkMixin","title":"BaseRBAC"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.desc","text":"desc : str = Field ( default = \"\" , title = _ ( \"Description\" ), max_length = 400 , msa_ui_form_item = \"textarea\" , )","title":"desc"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.key","text":"key : str = Field ( Ellipsis , title = _ ( \"Identify\" ), max_length = 20 , sa_column = Column ( String ( 20 ), unique = True , index = True , nullable = False ), )","title":"key"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseRBAC.name","text":"name : str = Field ( Ellipsis , title = _ ( 'Name' ), max_length = 20 )","title":"name"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser","text":"Bases: PkMixin , UsernameMixin , PasswordMixin , EmailMixin , CreateTimeMixin","title":"BaseUser"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.__tablename__","text":"__tablename__ = 'auth_user'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.avatar","text":"avatar : str = Field ( None , title = _ ( \"Avatar\" ), max_length = 100 , msa_ui_form_item = InputImage ( maxLength = 1 , maxSize = 2 * 1024 * 1024 , receiver = \"post:/admin/file/upload\" , ), msa_ui_table_column = ColumnImage ( width = 50 , height = 50 , enlargeAble = True ), )","title":"avatar"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.is_active","text":"is_active : bool = Field ( default = True , title = _ ( 'Is Active' ))","title":"is_active"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.nickname","text":"nickname : str = Field ( None , title = _ ( \"Nickname\" ), max_length = 32 )","title":"nickname"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.Config","text":"","title":"Config"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.Config-attributes","text":"use_enum_values class-attribute \u00b6 use_enum_values = True","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.display_name","text":"display_name () -> str","title":"display_name()"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.has_requires","text":"has_requires ( session : Session , * , roles : Union [ str , Sequence [ str ]] = None , groups : Union [ str , Sequence [ str ]] = None , permissions : Union [ str , Sequence [ str ]] = None ) -> bool Check if the user has the specified RBAC privileges PARAMETER DESCRIPTION session sqlalchemy Session ; asynchronous AsyncSession , please use run_sync method. TYPE: Session roles list of roles TYPE: Union [ str , Sequence [ str ]] DEFAULT: None groups list of user groups TYPE: Union [ str , Sequence [ str ]] DEFAULT: None permissions list of permissions TYPE: Union [ str , Sequence [ str ]] DEFAULT: None RETURNS DESCRIPTION bool Return True for successful detection.","title":"has_requires()"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.identity","text":"identity () -> str","title":"identity()"},{"location":"reference/auth/auth/models/#auth.auth.models.BaseUser.is_authenticated","text":"is_authenticated () -> bool","title":"is_authenticated()"},{"location":"reference/auth/auth/models/#auth.auth.models.CreateTimeMixin","text":"Bases: SQLModel","title":"CreateTimeMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.CreateTimeMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.CreateTimeMixin.create_time","text":"create_time : datetime = Field ( default_factory = datetime . now , title = _ ( \"Create Time\" ) )","title":"create_time"},{"location":"reference/auth/auth/models/#auth.auth.models.EmailMixin","text":"Bases: SQLModel","title":"EmailMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.EmailMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.EmailMixin.email","text":"email : EmailStr = Field ( None , title = _ ( \"Email\" ), sa_column = Column ( String ( 50 ), unique = True , index = True , nullable = True ), msa_ui_form_item = \"input-email\" , )","title":"email"},{"location":"reference/auth/auth/models/#auth.auth.models.Group","text":"Bases: BaseGroup Group","title":"Group"},{"location":"reference/auth/auth/models/#auth.auth.models.Group-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.Group.roles","text":"roles : List [ Role ] = Relationship ( back_populates = \"groups\" , link_model = GroupRoleLink )","title":"roles"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink","text":"Bases: SQLModel","title":"GroupRoleLink"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.__tablename__","text":"__tablename__ = 'auth_group_roles'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.group_id","text":"group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , )","title":"group_id"},{"location":"reference/auth/auth/models/#auth.auth.models.GroupRoleLink.role_id","text":"role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , )","title":"role_id"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordMixin","text":"Bases: SQLModel","title":"PasswordMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordMixin.password","text":"password : PasswordStr = Field ( title = _ ( \"Password\" ), max_length = 128 , sa_column = Column ( String ( 128 ), nullable = False ), msa_ui_form_item = \"input-password\" , )","title":"password"},{"location":"reference/auth/auth/models/#auth.auth.models.PasswordStr","text":"Bases: SecretStr , str","title":"PasswordStr"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission","text":"Bases: BaseRBAC Permisson","title":"Permission"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission.__tablename__","text":"__tablename__ = 'auth_permission'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.Permission.roles","text":"roles : List [ Role ] = Relationship ( back_populates = \"permissions\" , link_model = RolePermissionLink , )","title":"roles"},{"location":"reference/auth/auth/models/#auth.auth.models.PkMixin","text":"Bases: SQLModel","title":"PkMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.PkMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.PkMixin.id","text":"id : int = Field ( default = None , primary_key = True , nullable = False )","title":"id"},{"location":"reference/auth/auth/models/#auth.auth.models.Role","text":"Bases: BaseRBAC Roles","title":"Role"},{"location":"reference/auth/auth/models/#auth.auth.models.Role-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.Role.__tablename__","text":"__tablename__ = 'auth_role'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.Role.groups","text":"groups : List [ Group ] = Relationship ( back_populates = \"roles\" , link_model = GroupRoleLink )","title":"groups"},{"location":"reference/auth/auth/models/#auth.auth.models.Role.permissions","text":"permissions : List [ Permission ] = Relationship ( back_populates = \"roles\" , link_model = RolePermissionLink )","title":"permissions"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink","text":"Bases: SQLModel","title":"RolePermissionLink"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.__tablename__","text":"__tablename__ = 'auth_role_permissions'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.permission_id","text":"permission_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_permission.id\" , primary_key = True , nullable = False , )","title":"permission_id"},{"location":"reference/auth/auth/models/#auth.auth.models.RolePermissionLink.role_id","text":"role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , )","title":"role_id"},{"location":"reference/auth/auth/models/#auth.auth.models.User","text":"Bases: BaseUser","title":"User"},{"location":"reference/auth/auth/models/#auth.auth.models.User-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.User.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.User.__tablename__","text":"__tablename__ = 'auth_user'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.User.groups","text":"groups : List [ Group ] = Relationship ( link_model = UserGroupLink )","title":"groups"},{"location":"reference/auth/auth/models/#auth.auth.models.User.roles","text":"roles : List [ Role ] = Relationship ( link_model = UserRoleLink )","title":"roles"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink","text":"Bases: SQLModel","title":"UserGroupLink"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.__tablename__","text":"__tablename__ = 'auth_user_groups'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.group_id","text":"group_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_group.id\" , primary_key = True , nullable = False , )","title":"group_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UserGroupLink.user_id","text":"user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , )","title":"user_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink","text":"Bases: SQLModel","title":"UserRoleLink"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.__tablename__","text":"__tablename__ = 'auth_user_roles'","title":"__tablename__"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.role_id","text":"role_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_role.id\" , primary_key = True , nullable = False , )","title":"role_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UserRoleLink.user_id","text":"user_id : Optional [ int ] = Field ( default = None , foreign_key = \"auth_user.id\" , primary_key = True , nullable = False , )","title":"user_id"},{"location":"reference/auth/auth/models/#auth.auth.models.UsernameMixin","text":"Bases: SQLModel","title":"UsernameMixin"},{"location":"reference/auth/auth/models/#auth.auth.models.UsernameMixin-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/models/#auth.auth.models.UsernameMixin.username","text":"username : str = Field ( title = _ ( \"Username\" ), max_length = 32 , sa_column = Column ( String ( 32 ), unique = True , index = True , nullable = False ), )","title":"username"},{"location":"reference/auth/auth/schemas/","text":"msaSDK Module \u00b6 .auth.auth.schemas \u00b6 Classes \u00b6 BaseTokenData \u00b6 Bases: BaseModel Pydantic Model for TokenData Attributes \u00b6 id class-attribute \u00b6 id : int username class-attribute \u00b6 username : str UserLoginOut \u00b6 Bases: BaseUser Pydantic Response/Output Model for User Login Attributes \u00b6 access_token class-attribute \u00b6 access_token : str = None password class-attribute \u00b6 password : SecretStr = None token_type class-attribute \u00b6 token_type : str = 'bearer' UserRegIn \u00b6 Bases: UsernameMixin , PasswordMixin , EmailMixin User Registration Input Pydantic Model Attributes \u00b6 password2 class-attribute \u00b6 password2 : str = Field ( title = _ ( \"Confirm Password\" ), max_length = 128 ) Functions \u00b6 passwords_match \u00b6 passwords_match ( v , values , ** kwargs )","title":"schemas"},{"location":"reference/auth/auth/schemas/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/schemas/#authauthschemas","text":"","title":".auth.auth.schemas"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData","text":"Bases: BaseModel Pydantic Model for TokenData","title":"BaseTokenData"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData.id","text":"id : int","title":"id"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.BaseTokenData.username","text":"username : str","title":"username"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut","text":"Bases: BaseUser Pydantic Response/Output Model for User Login","title":"UserLoginOut"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut.access_token","text":"access_token : str = None","title":"access_token"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut.password","text":"password : SecretStr = None","title":"password"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserLoginOut.token_type","text":"token_type : str = 'bearer'","title":"token_type"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn","text":"Bases: UsernameMixin , PasswordMixin , EmailMixin User Registration Input Pydantic Model","title":"UserRegIn"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn.password2","text":"password2 : str = Field ( title = _ ( \"Confirm Password\" ), max_length = 128 )","title":"password2"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/schemas/#auth.auth.schemas.UserRegIn.passwords_match","text":"passwords_match ( v , values , ** kwargs )","title":"passwords_match()"},{"location":"reference/auth/auth/backends/base/","text":"msaSDK Module \u00b6 .auth.auth.backends.base \u00b6 Classes \u00b6 BaseTokenStore \u00b6 Bases: Generic [ _TokenDataSchemaT ] Attributes \u00b6 TokenDataSchema instance-attribute \u00b6 TokenDataSchema = TokenDataSchema or BaseTokenData expire_seconds instance-attribute \u00b6 expire_seconds = expire_seconds Functions \u00b6 __init__ \u00b6 __init__ ( expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) -> None destroy_token async \u00b6 destroy_token ( token : str ) -> None read_token async \u00b6 read_token ( token : Optional [ str ], ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"base"},{"location":"reference/auth/auth/backends/base/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/base/#authauthbackendsbase","text":"","title":".auth.auth.backends.base"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore","text":"Bases: Generic [ _TokenDataSchemaT ]","title":"BaseTokenStore"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.TokenDataSchema","text":"TokenDataSchema = TokenDataSchema or BaseTokenData","title":"TokenDataSchema"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.expire_seconds","text":"expire_seconds = expire_seconds","title":"expire_seconds"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.__init__","text":"__init__ ( expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) -> None","title":"__init__()"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.read_token","text":"read_token ( token : Optional [ str ], ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/base/#auth.auth.backends.base.BaseTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/auth/auth/backends/db/","text":"msaSDK Module \u00b6 .auth.auth.backends.db \u00b6 Classes \u00b6 DbTokenStore \u00b6 Bases: BaseTokenStore Attributes \u00b6 db instance-attribute \u00b6 db = db Functions \u00b6 __init__ \u00b6 __init__ ( db : Union [ AsyncDatabase , Database ], expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) destroy_token async \u00b6 destroy_token ( token : str ) -> None read_token async \u00b6 read_token ( token : str ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str TokenStoreModel \u00b6 Bases: PkMixin , CreateTimeMixin Attributes \u00b6 __table_args__ class-attribute \u00b6 __table_args__ = { 'extend_existing' : True } __tablename__ class-attribute \u00b6 __tablename__ = 'auth_token' data class-attribute \u00b6 data : str = Field ( default = '' ) token class-attribute \u00b6 token : str = Field ( Ellipsis , max_length = 48 , sa_column = Column ( String ( 48 ), unique = True , index = True , nullable = False ), )","title":"db"},{"location":"reference/auth/auth/backends/db/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/db/#authauthbackendsdb","text":"","title":".auth.auth.backends.db"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore","text":"Bases: BaseTokenStore","title":"DbTokenStore"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.db","text":"db = db","title":"db"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.__init__","text":"__init__ ( db : Union [ AsyncDatabase , Database ], expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , )","title":"__init__()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.read_token","text":"read_token ( token : str ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.DbTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel","text":"Bases: PkMixin , CreateTimeMixin","title":"TokenStoreModel"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.__table_args__","text":"__table_args__ = { 'extend_existing' : True }","title":"__table_args__"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.__tablename__","text":"__tablename__ = 'auth_token'","title":"__tablename__"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.data","text":"data : str = Field ( default = '' )","title":"data"},{"location":"reference/auth/auth/backends/db/#auth.auth.backends.db.TokenStoreModel.token","text":"token : str = Field ( Ellipsis , max_length = 48 , sa_column = Column ( String ( 48 ), unique = True , index = True , nullable = False ), )","title":"token"},{"location":"reference/auth/auth/backends/jwt/","text":"msaSDK Module \u00b6 .auth.auth.backends.jwt \u00b6 Classes \u00b6 JwtTokenStore \u00b6 Bases: BaseTokenStore Attributes \u00b6 algorithm instance-attribute \u00b6 algorithm = algorithm secret_key instance-attribute \u00b6 secret_key = secret_key Functions \u00b6 __init__ \u00b6 __init__ ( secret_key : str , algorithm : str = \"HS256\" , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) destroy_token async \u00b6 destroy_token ( token : str ) -> None read_token async \u00b6 read_token ( token : str ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"jwt"},{"location":"reference/auth/auth/backends/jwt/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/jwt/#authauthbackendsjwt","text":"","title":".auth.auth.backends.jwt"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore","text":"Bases: BaseTokenStore","title":"JwtTokenStore"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.algorithm","text":"algorithm = algorithm","title":"algorithm"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.secret_key","text":"secret_key = secret_key","title":"secret_key"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.__init__","text":"__init__ ( secret_key : str , algorithm : str = \"HS256\" , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , )","title":"__init__()"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.read_token","text":"read_token ( token : str ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/jwt/#auth.auth.backends.jwt.JwtTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/auth/auth/backends/redis/","text":"msaSDK Module \u00b6 .auth.auth.backends.redis \u00b6 Classes \u00b6 RedisTokenStore \u00b6 Bases: BaseTokenStore Attributes \u00b6 redis instance-attribute \u00b6 redis = redis Functions \u00b6 __init__ \u00b6 __init__ ( redis : Redis , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , ) destroy_token async \u00b6 destroy_token ( token : str ) -> None get_key \u00b6 get_key ( token : str ) read_token async \u00b6 read_token ( token : str ) -> Optional [ _TokenDataSchemaT ] write_token async \u00b6 write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"redis"},{"location":"reference/auth/auth/backends/redis/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/auth/auth/backends/redis/#authauthbackendsredis","text":"","title":".auth.auth.backends.redis"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis-classes","text":"","title":"Classes"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore","text":"Bases: BaseTokenStore","title":"RedisTokenStore"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore-attributes","text":"","title":"Attributes"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.redis","text":"redis = redis","title":"redis"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore-functions","text":"","title":"Functions"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.__init__","text":"__init__ ( redis : Redis , expire_seconds : Optional [ int ] = 60 * 60 * 24 * 3 , TokenDataSchema : _TokenDataSchemaT = None , )","title":"__init__()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.destroy_token","text":"destroy_token ( token : str ) -> None","title":"destroy_token()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.get_key","text":"get_key ( token : str )","title":"get_key()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.read_token","text":"read_token ( token : str ) -> Optional [ _TokenDataSchemaT ]","title":"read_token()"},{"location":"reference/auth/auth/backends/redis/#auth.auth.backends.redis.RedisTokenStore.write_token","text":"write_token ( token_data : Union [ _TokenDataSchemaT , dict ] ) -> str","title":"write_token()"},{"location":"reference/db/crud/_sqlmodel/","text":"msaSDK Module \u00b6 .db.crud._sqlmodel \u00b6 Attributes \u00b6 sql_operator_map module-attribute \u00b6 sql_operator_map : Dict [ str , str ] = { \"=\" : \"__eq__\" , \"<=\" : \"__le__\" , \"<\" : \"__lt__\" , \">\" : \"__gt__\" , \">=\" : \"__ge__\" , \"!\" : \"__ne__\" , \"!=\" : \"__ne__\" , \"<>\" : \"__ne__\" , \"*\" : \"in_\" , \"!*\" : \"not_in\" , \"~\" : \"like\" , \"!~\" : \"not_like\" , \"-\" : \"between\" , } sql_operator_pattern module-attribute \u00b6 sql_operator_pattern : Pattern = re . compile ( \"^ \\\\ [(=|<=|<|>|>=|!|!=|<>| \\\\ *|! \\\\ *|~|!~|-)]\" ) Classes \u00b6 MSASQLModelCrud \u00b6 Bases: MSABaseCrud , MSASQLModelSelector Attributes \u00b6 create_fields class-attribute \u00b6 create_fields : List [ SQLModelField ] = [] db instance-attribute \u00b6 db = ( AsyncDatabase ( self . engine ) if isinstance ( self . engine , AsyncEngine ) else Database ( self . engine ) ) engine instance-attribute \u00b6 engine = engine or self . engine list_filter class-attribute \u00b6 list_filter : List [ SQLModelListField ] = [] readonly_fields class-attribute \u00b6 readonly_fields : List [ SQLModelListField ] = [] update_fields class-attribute \u00b6 update_fields : List [ SQLModelListField ] = [] Functions \u00b6 __init__ \u00b6 __init__ ( model : Type [ SQLModel ], engine : Union [ Engine , AsyncEngine ], fields : List [ SQLModelListField ] = None , router : APIRouter = None , ) -> None on_create_pre async \u00b6 on_create_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ] on_filter_pre async \u00b6 on_filter_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ] on_update_pre async \u00b6 on_update_pre ( request : Request , obj : BaseModel , item_id : Union [ List [ str ], List [ int ]], ** kwargs ) -> Dict [ str , Any ] route_create property \u00b6 route_create () -> Callable route_delete property \u00b6 route_delete () -> Callable route_list property \u00b6 route_list () -> Callable route_read property \u00b6 route_read () -> Callable route_update property \u00b6 route_update () -> Callable schema_name_prefix property \u00b6 schema_name_prefix () MSASQLModelSelector \u00b6 SQLModel Selector PARAMETER DESCRIPTION model The SQLModel to use TYPE: Type [ SQLModel ] DEFAULT: None fields List of the SQlModelListFields TYPE: List [ SQLModelListField ] DEFAULT: None Attributes \u00b6 exclude class-attribute \u00b6 exclude : List [ SQLModelListField ] = [] Excluded fields list. A list of fields to exclude from the current model. Supports current SQLModel model fields, current model database table field names Default: [] fields instance-attribute \u00b6 fields = list ( filter ( lambda x : x not in self . parser . filter_insfield ( self . exclude ), self . parser . filter_insfield ( self . fields ), ) ) link_models class-attribute \u00b6 link_models : Dict [ str , Tuple [ Type [ Table ], Column , Column ] ] = {} Dictionary of link models. More complex, detailed parsing to be done. model instance-attribute \u00b6 model = model or self . model ordering class-attribute \u00b6 ordering : List [ Union [ SQLModelListField , UnaryExpression ] ] = [] List of fields sorted by selector. Default: [] parser instance-attribute \u00b6 parser = MSASQLModelFieldParser ( self . model ) pk instance-attribute \u00b6 pk : InstrumentedAttribute = self . model . __dict__ [ self . pk_name ] pk_name instance-attribute \u00b6 pk_name : str = ( self . pk_name or self . model . __table__ . primary_key . columns . keys ()[ 0 ] ) Functions \u00b6 __init__ \u00b6 __init__ ( model : Type [ SQLModel ] = None , fields : List [ SQLModelListField ] = None , ) -> None calc_filter_clause \u00b6 calc_filter_clause ( data : Dict [ str , Any ] ) -> List [ BinaryExpression ] get_link_clause async \u00b6 get_link_clause ( request : Request , link_model : str = None , link_item_id : Union [ int , str ] = Query ( None , title = \"pk\" , example = \"1,2,3\" , description = \"Link Model Primary key or list of primary keys\" , ), ) -> Optional [ Any ] get_select async \u00b6 get_select ( request : Request ) -> Select Functions \u00b6","title":"_sqlmodel"},{"location":"reference/db/crud/_sqlmodel/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/_sqlmodel/#dbcrud_sqlmodel","text":"","title":".db.crud._sqlmodel"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.sql_operator_map","text":"sql_operator_map : Dict [ str , str ] = { \"=\" : \"__eq__\" , \"<=\" : \"__le__\" , \"<\" : \"__lt__\" , \">\" : \"__gt__\" , \">=\" : \"__ge__\" , \"!\" : \"__ne__\" , \"!=\" : \"__ne__\" , \"<>\" : \"__ne__\" , \"*\" : \"in_\" , \"!*\" : \"not_in\" , \"~\" : \"like\" , \"!~\" : \"not_like\" , \"-\" : \"between\" , }","title":"sql_operator_map"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.sql_operator_pattern","text":"sql_operator_pattern : Pattern = re . compile ( \"^ \\\\ [(=|<=|<|>|>=|!|!=|<>| \\\\ *|! \\\\ *|~|!~|-)]\" )","title":"sql_operator_pattern"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel-classes","text":"","title":"Classes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud","text":"Bases: MSABaseCrud , MSASQLModelSelector","title":"MSASQLModelCrud"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.create_fields","text":"create_fields : List [ SQLModelField ] = []","title":"create_fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.db","text":"db = ( AsyncDatabase ( self . engine ) if isinstance ( self . engine , AsyncEngine ) else Database ( self . engine ) )","title":"db"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.engine","text":"engine = engine or self . engine","title":"engine"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.list_filter","text":"list_filter : List [ SQLModelListField ] = []","title":"list_filter"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.readonly_fields","text":"readonly_fields : List [ SQLModelListField ] = []","title":"readonly_fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.update_fields","text":"update_fields : List [ SQLModelListField ] = []","title":"update_fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud-functions","text":"","title":"Functions"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.__init__","text":"__init__ ( model : Type [ SQLModel ], engine : Union [ Engine , AsyncEngine ], fields : List [ SQLModelListField ] = None , router : APIRouter = None , ) -> None","title":"__init__()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.on_create_pre","text":"on_create_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ]","title":"on_create_pre()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.on_filter_pre","text":"on_filter_pre ( request : Request , obj : BaseModel , ** kwargs ) -> Dict [ str , Any ]","title":"on_filter_pre()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.on_update_pre","text":"on_update_pre ( request : Request , obj : BaseModel , item_id : Union [ List [ str ], List [ int ]], ** kwargs ) -> Dict [ str , Any ]","title":"on_update_pre()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_create","text":"route_create () -> Callable","title":"route_create()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_delete","text":"route_delete () -> Callable","title":"route_delete()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_list","text":"route_list () -> Callable","title":"route_list()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_read","text":"route_read () -> Callable","title":"route_read()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.route_update","text":"route_update () -> Callable","title":"route_update()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelCrud.schema_name_prefix","text":"schema_name_prefix ()","title":"schema_name_prefix()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector","text":"SQLModel Selector PARAMETER DESCRIPTION model The SQLModel to use TYPE: Type [ SQLModel ] DEFAULT: None fields List of the SQlModelListFields TYPE: List [ SQLModelListField ] DEFAULT: None","title":"MSASQLModelSelector"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.exclude","text":"exclude : List [ SQLModelListField ] = [] Excluded fields list. A list of fields to exclude from the current model. Supports current SQLModel model fields, current model database table field names Default: []","title":"exclude"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.fields","text":"fields = list ( filter ( lambda x : x not in self . parser . filter_insfield ( self . exclude ), self . parser . filter_insfield ( self . fields ), ) )","title":"fields"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.link_models","text":"link_models : Dict [ str , Tuple [ Type [ Table ], Column , Column ] ] = {} Dictionary of link models. More complex, detailed parsing to be done.","title":"link_models"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.model","text":"model = model or self . model","title":"model"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.ordering","text":"ordering : List [ Union [ SQLModelListField , UnaryExpression ] ] = [] List of fields sorted by selector. Default: []","title":"ordering"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.parser","text":"parser = MSASQLModelFieldParser ( self . model )","title":"parser"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.pk","text":"pk : InstrumentedAttribute = self . model . __dict__ [ self . pk_name ]","title":"pk"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.pk_name","text":"pk_name : str = ( self . pk_name or self . model . __table__ . primary_key . columns . keys ()[ 0 ] )","title":"pk_name"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector-functions","text":"","title":"Functions"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.__init__","text":"__init__ ( model : Type [ SQLModel ] = None , fields : List [ SQLModelListField ] = None , ) -> None","title":"__init__()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.calc_filter_clause","text":"calc_filter_clause ( data : Dict [ str , Any ] ) -> List [ BinaryExpression ]","title":"calc_filter_clause()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.get_link_clause","text":"get_link_clause ( request : Request , link_model : str = None , link_item_id : Union [ int , str ] = Query ( None , title = \"pk\" , example = \"1,2,3\" , description = \"Link Model Primary key or list of primary keys\" , ), ) -> Optional [ Any ]","title":"get_link_clause()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel.MSASQLModelSelector.get_select","text":"get_select ( request : Request ) -> Select","title":"get_select()"},{"location":"reference/db/crud/_sqlmodel/#db.crud._sqlmodel-functions","text":"","title":"Functions"},{"location":"reference/db/crud/base/","text":"msaSDK Module \u00b6 .db.crud.base \u00b6 Classes \u00b6 MSABaseCrud \u00b6 Bases: MSARouterMixin Register Router Base Class Note Database tables have and can only have one self-adding primary key. Attributes \u00b6 list_per_page_max class-attribute \u00b6 list_per_page_max : int = None Maximum number of data per page to read in batches. Default: None, no limit. paginator instance-attribute \u00b6 paginator : Type [ MSACRUDPaginator ] = MSACRUDPaginator pk_name class-attribute \u00b6 pk_name : str = 'id' Current model primary key string, default: id. Note: Database tables have and can only have one self-adding primary key. router instance-attribute \u00b6 router = router schema_create class-attribute \u00b6 schema_create : Type [ BaseModel ] = None Create data submission protocol, default: self.schema_model schema_filter class-attribute \u00b6 schema_filter : Type [ BaseModel ] = None Batch query data filter submission protocol, default: self.schema_model schema_list class-attribute \u00b6 schema_list : Type [ BaseModel ] = None Batch query data return protocol, default: self.schema_model schema_model instance-attribute \u00b6 schema_model = schema_model or self . schema_model schema_read class-attribute \u00b6 schema_read : Type [ BaseModel ] = None Read data return protocol, default: self.schema_model schema_update class-attribute \u00b6 schema_update : Type [ BaseModel ] = None Update data submission protocol, default: self.schema_model Functions \u00b6 __init__ \u00b6 __init__ ( schema_model : Type [ BaseModel ], router : APIRouter = None ) error_data_handle \u00b6 error_data_handle ( request : Request ) error_execute_sql \u00b6 error_execute_sql ( request : Request , error : Exception ) has_create_permission async \u00b6 has_create_permission ( request : Request , obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single create permission. has_delete_permission async \u00b6 has_delete_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single delete permission. has_list_permission async \u00b6 has_list_permission ( request : Request , paginator : Optional [ MSACRUDPaginator ], filters : Optional [ BaseModel ], ** kwargs ) -> bool Check for bulk query permission. has_read_permission async \u00b6 has_read_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single read permission. has_update_permission async \u00b6 has_update_permission ( request : Request , item_id : Optional [ List [ str ]], obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single update permission. register_crud \u00b6 register_crud ( schema_list : Type [ BaseModel ] = None , schema_filter : Type [ BaseModel ] = None , schema_create : Type [ BaseModel ] = None , schema_read : Type [ BaseModel ] = None , schema_update : Type [ BaseModel ] = None , list_max_per_page : int = None , depends_list : List [ Depends ] = None , depends_read : List [ Depends ] = None , depends_create : List [ Depends ] = None , depends_update : List [ Depends ] = None , depends_delete : List [ Depends ] = None , ) -> MSABaseCrud Register Crud routing. route_create property \u00b6 route_create () -> Callable [ ... , Any ] Single/batch creation of routing functions. Support for synchronous/asynchronous functions. route_delete property \u00b6 route_delete () -> Callable [ ... , Any ] Single/batch delete routing functions. Support for synchronous/asynchronous functions. route_list property \u00b6 route_list () -> Callable [ ... , Any ] Batch read routing functions. Support for synchronous/asynchronous functions. route_read property \u00b6 route_read () -> Callable [ ... , Any ] Single/batch read routing functions. Support for synchronous/asynchronous functions. route_update property \u00b6 route_update () -> Callable [ ... , Any ] Single/batch update routing functions. Support for synchronous/asynchronous functions. router_prefix property \u00b6 router_prefix () schema_name_prefix property \u00b6 schema_name_prefix () MSARouterMixin \u00b6 Register Router Attributes \u00b6 router instance-attribute \u00b6 router = self . get_router () router_permission_depend class-attribute \u00b6 router_permission_depend : Callable = None router_prefix class-attribute \u00b6 router_prefix : Optional [ str ] = None Functions \u00b6 __init__ \u00b6 __init__ () error_no_router_permission \u00b6 error_no_router_permission ( request : Request ) get_router \u00b6 get_router () -> APIRouter Functions \u00b6","title":"base"},{"location":"reference/db/crud/base/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/base/#dbcrudbase","text":"","title":".db.crud.base"},{"location":"reference/db/crud/base/#db.crud.base-classes","text":"","title":"Classes"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud","text":"Bases: MSARouterMixin Register Router Base Class Note Database tables have and can only have one self-adding primary key.","title":"MSABaseCrud"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.list_per_page_max","text":"list_per_page_max : int = None Maximum number of data per page to read in batches. Default: None, no limit.","title":"list_per_page_max"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.paginator","text":"paginator : Type [ MSACRUDPaginator ] = MSACRUDPaginator","title":"paginator"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.pk_name","text":"pk_name : str = 'id' Current model primary key string, default: id. Note: Database tables have and can only have one self-adding primary key.","title":"pk_name"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.router","text":"router = router","title":"router"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_create","text":"schema_create : Type [ BaseModel ] = None Create data submission protocol, default: self.schema_model","title":"schema_create"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_filter","text":"schema_filter : Type [ BaseModel ] = None Batch query data filter submission protocol, default: self.schema_model","title":"schema_filter"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_list","text":"schema_list : Type [ BaseModel ] = None Batch query data return protocol, default: self.schema_model","title":"schema_list"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_model","text":"schema_model = schema_model or self . schema_model","title":"schema_model"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_read","text":"schema_read : Type [ BaseModel ] = None Read data return protocol, default: self.schema_model","title":"schema_read"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_update","text":"schema_update : Type [ BaseModel ] = None Update data submission protocol, default: self.schema_model","title":"schema_update"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud-functions","text":"","title":"Functions"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.__init__","text":"__init__ ( schema_model : Type [ BaseModel ], router : APIRouter = None )","title":"__init__()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.error_data_handle","text":"error_data_handle ( request : Request )","title":"error_data_handle()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.error_execute_sql","text":"error_execute_sql ( request : Request , error : Exception )","title":"error_execute_sql()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_create_permission","text":"has_create_permission ( request : Request , obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single create permission.","title":"has_create_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_delete_permission","text":"has_delete_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single delete permission.","title":"has_delete_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_list_permission","text":"has_list_permission ( request : Request , paginator : Optional [ MSACRUDPaginator ], filters : Optional [ BaseModel ], ** kwargs ) -> bool Check for bulk query permission.","title":"has_list_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_read_permission","text":"has_read_permission ( request : Request , item_id : Optional [ List [ str ]], ** kwargs ) -> bool Check for single read permission.","title":"has_read_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.has_update_permission","text":"has_update_permission ( request : Request , item_id : Optional [ List [ str ]], obj : Optional [ BaseModel ], ** kwargs ) -> bool Check for single update permission.","title":"has_update_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.register_crud","text":"register_crud ( schema_list : Type [ BaseModel ] = None , schema_filter : Type [ BaseModel ] = None , schema_create : Type [ BaseModel ] = None , schema_read : Type [ BaseModel ] = None , schema_update : Type [ BaseModel ] = None , list_max_per_page : int = None , depends_list : List [ Depends ] = None , depends_read : List [ Depends ] = None , depends_create : List [ Depends ] = None , depends_update : List [ Depends ] = None , depends_delete : List [ Depends ] = None , ) -> MSABaseCrud Register Crud routing.","title":"register_crud()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_create","text":"route_create () -> Callable [ ... , Any ] Single/batch creation of routing functions. Support for synchronous/asynchronous functions.","title":"route_create()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_delete","text":"route_delete () -> Callable [ ... , Any ] Single/batch delete routing functions. Support for synchronous/asynchronous functions.","title":"route_delete()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_list","text":"route_list () -> Callable [ ... , Any ] Batch read routing functions. Support for synchronous/asynchronous functions.","title":"route_list()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_read","text":"route_read () -> Callable [ ... , Any ] Single/batch read routing functions. Support for synchronous/asynchronous functions.","title":"route_read()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.route_update","text":"route_update () -> Callable [ ... , Any ] Single/batch update routing functions. Support for synchronous/asynchronous functions.","title":"route_update()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.router_prefix","text":"router_prefix ()","title":"router_prefix()"},{"location":"reference/db/crud/base/#db.crud.base.MSABaseCrud.schema_name_prefix","text":"schema_name_prefix ()","title":"schema_name_prefix()"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin","text":"Register Router","title":"MSARouterMixin"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.router","text":"router = self . get_router ()","title":"router"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.router_permission_depend","text":"router_permission_depend : Callable = None","title":"router_permission_depend"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.router_prefix","text":"router_prefix : Optional [ str ] = None","title":"router_prefix"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin-functions","text":"","title":"Functions"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.__init__","text":"__init__ ()","title":"__init__()"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.error_no_router_permission","text":"error_no_router_permission ( request : Request )","title":"error_no_router_permission()"},{"location":"reference/db/crud/base/#db.crud.base.MSARouterMixin.get_router","text":"get_router () -> APIRouter","title":"get_router()"},{"location":"reference/db/crud/base/#db.crud.base-functions","text":"","title":"Functions"},{"location":"reference/db/crud/parser/","text":"msaSDK Module \u00b6 .db.crud.parser \u00b6 Attributes \u00b6 SQLModelField module-attribute \u00b6 SQLModelField = Union [ str , InstrumentedAttribute ] SQLModelListField module-attribute \u00b6 SQLModelListField = Union [ Type [ SQLModel ], SQLModelField ] Classes \u00b6 MSASQLModelFieldParser \u00b6 Attributes \u00b6 default_model instance-attribute \u00b6 default_model = default_model Functions \u00b6 __init__ \u00b6 __init__ ( default_model : Type [ SQLModel ]) conv_row_to_dict \u00b6 conv_row_to_dict ( rows : Union [ Row , List [ Row ]] ) -> Union [ None , Dict [ str , Any ], List [ Dict [ str , Any ]]] sqlalchemy row to dict filter_insfield \u00b6 filter_insfield ( fields : Iterable [ Union [ SQLModelListField , Any ]], save_class : Tuple [ type ] = None , ) -> List [ Union [ InstrumentedAttribute , Any ]] get_alias \u00b6 get_alias ( field : Union [ Column , SQLModelField , Label ] ) -> str get_column \u00b6 get_column ( field : SQLModelField ) -> Optional [ Column ] sqlalchemy Column get_insfield \u00b6 get_insfield ( field : SQLModelField , ) -> Optional [ InstrumentedAttribute ] get_modelfield \u00b6 get_modelfield ( field : Union [ ModelField , SQLModelField ], deepcopy : bool = False , ) -> Optional [ ModelField ] pydantic ModelField get_name \u00b6 get_name ( field : InstrumentedAttribute ) -> str get_row_keys \u00b6 get_row_keys ( row : Row ) -> List [ str ] sqlalchemy row keys get_select_keys \u00b6 get_select_keys ( stmt : Select ) -> List [ str ] sqlalchemy select keys get_sqlmodel_insfield \u00b6 get_sqlmodel_insfield ( model : Type [ SQLModel ], ) -> List [ InstrumentedAttribute ] Excluding the relationship field Functions \u00b6 get_python_type_parse cached \u00b6 get_python_type_parse ( field : Union [ InstrumentedAttribute , Column ] ) -> Callable This function returns a cached instance of the Python Type Callable object. Note Caching is used to prevent re-reading the environment every time the object is used.","title":"parser"},{"location":"reference/db/crud/parser/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/parser/#dbcrudparser","text":"","title":".db.crud.parser"},{"location":"reference/db/crud/parser/#db.crud.parser-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/parser/#db.crud.parser.SQLModelField","text":"SQLModelField = Union [ str , InstrumentedAttribute ]","title":"SQLModelField"},{"location":"reference/db/crud/parser/#db.crud.parser.SQLModelListField","text":"SQLModelListField = Union [ Type [ SQLModel ], SQLModelField ]","title":"SQLModelListField"},{"location":"reference/db/crud/parser/#db.crud.parser-classes","text":"","title":"Classes"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser","text":"","title":"MSASQLModelFieldParser"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.default_model","text":"default_model = default_model","title":"default_model"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser-functions","text":"","title":"Functions"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.__init__","text":"__init__ ( default_model : Type [ SQLModel ])","title":"__init__()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.conv_row_to_dict","text":"conv_row_to_dict ( rows : Union [ Row , List [ Row ]] ) -> Union [ None , Dict [ str , Any ], List [ Dict [ str , Any ]]] sqlalchemy row to dict","title":"conv_row_to_dict()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.filter_insfield","text":"filter_insfield ( fields : Iterable [ Union [ SQLModelListField , Any ]], save_class : Tuple [ type ] = None , ) -> List [ Union [ InstrumentedAttribute , Any ]]","title":"filter_insfield()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_alias","text":"get_alias ( field : Union [ Column , SQLModelField , Label ] ) -> str","title":"get_alias()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_column","text":"get_column ( field : SQLModelField ) -> Optional [ Column ] sqlalchemy Column","title":"get_column()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_insfield","text":"get_insfield ( field : SQLModelField , ) -> Optional [ InstrumentedAttribute ]","title":"get_insfield()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_modelfield","text":"get_modelfield ( field : Union [ ModelField , SQLModelField ], deepcopy : bool = False , ) -> Optional [ ModelField ] pydantic ModelField","title":"get_modelfield()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_name","text":"get_name ( field : InstrumentedAttribute ) -> str","title":"get_name()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_row_keys","text":"get_row_keys ( row : Row ) -> List [ str ] sqlalchemy row keys","title":"get_row_keys()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_select_keys","text":"get_select_keys ( stmt : Select ) -> List [ str ] sqlalchemy select keys","title":"get_select_keys()"},{"location":"reference/db/crud/parser/#db.crud.parser.MSASQLModelFieldParser.get_sqlmodel_insfield","text":"get_sqlmodel_insfield ( model : Type [ SQLModel ], ) -> List [ InstrumentedAttribute ] Excluding the relationship field","title":"get_sqlmodel_insfield()"},{"location":"reference/db/crud/parser/#db.crud.parser-functions","text":"","title":"Functions"},{"location":"reference/db/crud/parser/#db.crud.parser.get_python_type_parse","text":"get_python_type_parse ( field : Union [ InstrumentedAttribute , Column ] ) -> Callable This function returns a cached instance of the Python Type Callable object. Note Caching is used to prevent re-reading the environment every time the object is used.","title":"get_python_type_parse()"},{"location":"reference/db/crud/schema/","text":"msaSDK Module \u00b6 .db.crud.schema \u00b6 Classes \u00b6 MSACRUDEnum \u00b6 Bases: str , Enum Attributes \u00b6 create class-attribute \u00b6 create = 'create' delete class-attribute \u00b6 delete = 'delete' list class-attribute \u00b6 list = 'list' read class-attribute \u00b6 read = 'read' update class-attribute \u00b6 update = 'update' MSACRUDListSchema \u00b6 Bases: GenericModel , Generic [ _T ] , MSACRUDSchema Attributes \u00b6 filter class-attribute \u00b6 filter : Dict [ str , Any ] = None items class-attribute \u00b6 items : List [ _T ] query class-attribute \u00b6 query : Dict [ str , Any ] = None total class-attribute \u00b6 total : int = None MSACRUDOut \u00b6 Bases: GenericModel , Generic [ _T ] , MSACRUDSchema Attributes \u00b6 data class-attribute \u00b6 data : Optional [ _T ] = None msg class-attribute \u00b6 msg : str = 'success' status class-attribute \u00b6 status : int = 0 MSACRUDPaginator \u00b6 Attributes \u00b6 orderBy instance-attribute \u00b6 orderBy = orderBy orderDir instance-attribute \u00b6 orderDir = orderDir page instance-attribute \u00b6 page = page if page and page > 0 else 1 perPage instance-attribute \u00b6 perPage = perPage if perPage and perPage > 0 else 10 perPageMax class-attribute \u00b6 perPageMax : int = None show_total instance-attribute \u00b6 show_total = show_total Functions \u00b6 __init__ \u00b6 __init__ ( page : Union [ int , str ] = 1 , perPage : Union [ int , str ] = 10 , show_total : int = 1 , orderBy : str = None , orderDir : str = \"asc\" , ) MSACRUDSchema \u00b6 Bases: BaseModel Classes \u00b6 Config \u00b6 Attributes \u00b6 extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads","title":"schema"},{"location":"reference/db/crud/schema/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/schema/#dbcrudschema","text":"","title":".db.crud.schema"},{"location":"reference/db/crud/schema/#db.crud.schema-classes","text":"","title":"Classes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum","text":"Bases: str , Enum","title":"MSACRUDEnum"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.create","text":"create = 'create'","title":"create"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.delete","text":"delete = 'delete'","title":"delete"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.list","text":"list = 'list'","title":"list"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.read","text":"read = 'read'","title":"read"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDEnum.update","text":"update = 'update'","title":"update"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema","text":"Bases: GenericModel , Generic [ _T ] , MSACRUDSchema","title":"MSACRUDListSchema"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.filter","text":"filter : Dict [ str , Any ] = None","title":"filter"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.items","text":"items : List [ _T ]","title":"items"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.query","text":"query : Dict [ str , Any ] = None","title":"query"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDListSchema.total","text":"total : int = None","title":"total"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut","text":"Bases: GenericModel , Generic [ _T ] , MSACRUDSchema","title":"MSACRUDOut"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut.data","text":"data : Optional [ _T ] = None","title":"data"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut.msg","text":"msg : str = 'success'","title":"msg"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDOut.status","text":"status : int = 0","title":"status"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator","text":"","title":"MSACRUDPaginator"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator-attributes","text":"","title":"Attributes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.orderBy","text":"orderBy = orderBy","title":"orderBy"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.orderDir","text":"orderDir = orderDir","title":"orderDir"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.page","text":"page = page if page and page > 0 else 1","title":"page"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.perPage","text":"perPage = perPage if perPage and perPage > 0 else 10","title":"perPage"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.perPageMax","text":"perPageMax : int = None","title":"perPageMax"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.show_total","text":"show_total = show_total","title":"show_total"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator-functions","text":"","title":"Functions"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDPaginator.__init__","text":"__init__ ( page : Union [ int , str ] = 1 , perPage : Union [ int , str ] = 10 , show_total : int = 1 , orderBy : str = None , orderDir : str = \"asc\" , )","title":"__init__()"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema","text":"Bases: BaseModel","title":"MSACRUDSchema"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema-classes","text":"","title":"Classes"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema.Config","text":"","title":"Config"},{"location":"reference/db/crud/schema/#db.crud.schema.MSACRUDSchema.Config-attributes","text":"extra class-attribute \u00b6 extra = Extra . allow json_dumps class-attribute \u00b6 json_dumps = json . dumps json_loads class-attribute \u00b6 json_loads = json . loads","title":"Attributes"},{"location":"reference/db/crud/utils/","text":"msaSDK Module \u00b6 .db.crud.utils \u00b6 Classes \u00b6 Functions \u00b6 paginator_factory \u00b6 paginator_factory ( perPage_max : Optional [ int ] = None , ) -> Type [ MSACRUDPaginator ] parser_item_id \u00b6 parser_item_id ( item_id : str = Path ( Ellipsis , min_length = 1 , title = \"pk\" , example = \"1,2,3\" , description = \"Primary key or list of primary keys\" , ) ) -> List [ str ] parser_str_set_list \u00b6 parser_str_set_list ( set_str : Union [ int , str ]) -> List [ str ] schema_create_by_modelfield \u00b6 schema_create_by_modelfield ( schema_name : str , modelfields : Iterable [ ModelField ], * , set_none : bool = False , namespaces : Dict [ str , Any ] = None , extra : Extra = Extra . ignore , ** kwargs ) -> Type [ BaseModel ] schema_create_by_schema \u00b6 schema_create_by_schema ( schema_cls : Type [ BaseModel ], schema_name : str , * , include : Set [ str ] = None , exclude : Set [ str ] = None , set_none : bool = False , ** kwargs ) -> Type [ BaseModel ] validator_skip_blank \u00b6 validator_skip_blank ( cls , v , config : BaseConfig , field : ModelField , * args , ** kwargs )","title":"utils"},{"location":"reference/db/crud/utils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/db/crud/utils/#dbcrudutils","text":"","title":".db.crud.utils"},{"location":"reference/db/crud/utils/#db.crud.utils-classes","text":"","title":"Classes"},{"location":"reference/db/crud/utils/#db.crud.utils-functions","text":"","title":"Functions"},{"location":"reference/db/crud/utils/#db.crud.utils.paginator_factory","text":"paginator_factory ( perPage_max : Optional [ int ] = None , ) -> Type [ MSACRUDPaginator ]","title":"paginator_factory()"},{"location":"reference/db/crud/utils/#db.crud.utils.parser_item_id","text":"parser_item_id ( item_id : str = Path ( Ellipsis , min_length = 1 , title = \"pk\" , example = \"1,2,3\" , description = \"Primary key or list of primary keys\" , ) ) -> List [ str ]","title":"parser_item_id()"},{"location":"reference/db/crud/utils/#db.crud.utils.parser_str_set_list","text":"parser_str_set_list ( set_str : Union [ int , str ]) -> List [ str ]","title":"parser_str_set_list()"},{"location":"reference/db/crud/utils/#db.crud.utils.schema_create_by_modelfield","text":"schema_create_by_modelfield ( schema_name : str , modelfields : Iterable [ ModelField ], * , set_none : bool = False , namespaces : Dict [ str , Any ] = None , extra : Extra = Extra . ignore , ** kwargs ) -> Type [ BaseModel ]","title":"schema_create_by_modelfield()"},{"location":"reference/db/crud/utils/#db.crud.utils.schema_create_by_schema","text":"schema_create_by_schema ( schema_cls : Type [ BaseModel ], schema_name : str , * , include : Set [ str ] = None , exclude : Set [ str ] = None , set_none : bool = False , ** kwargs ) -> Type [ BaseModel ]","title":"schema_create_by_schema()"},{"location":"reference/db/crud/utils/#db.crud.utils.validator_skip_blank","text":"validator_skip_blank ( cls , v , config : BaseConfig , field : ModelField , * args , ** kwargs )","title":"validator_skip_blank()"},{"location":"reference/models/files/","text":"msaSDK Module \u00b6 .models.files \u00b6 Module for the MSAFile Pydantic Model. Classes \u00b6 MSAFile \u00b6 Bases: SQLModel MSAFile Model, used for File Import/Upload. Attributes \u00b6 content_type class-attribute \u00b6 content_type : Optional [ str ] = None Content Mime Type pdf etc. filename class-attribute \u00b6 filename : Optional [ str ] = None Internal Safe Name of the file. size class-attribute \u00b6 size : int = 0 Filesize in bytes. type_description class-attribute \u00b6 type_description : Optional [ str ] = None Raw Mime Type description. type_raw class-attribute \u00b6 type_raw : Optional [ str ] = None Raw Mime Type. uid class-attribute \u00b6 uid : Optional [ str ] = None GUID for the file. upload_filename class-attribute \u00b6 upload_filename : Optional [ str ] = None Upload Filename.","title":"files"},{"location":"reference/models/files/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/files/#modelsfiles","text":"Module for the MSAFile Pydantic Model.","title":".models.files"},{"location":"reference/models/files/#models.files-classes","text":"","title":"Classes"},{"location":"reference/models/files/#models.files.MSAFile","text":"Bases: SQLModel MSAFile Model, used for File Import/Upload.","title":"MSAFile"},{"location":"reference/models/files/#models.files.MSAFile-attributes","text":"","title":"Attributes"},{"location":"reference/models/files/#models.files.MSAFile.content_type","text":"content_type : Optional [ str ] = None Content Mime Type pdf etc.","title":"content_type"},{"location":"reference/models/files/#models.files.MSAFile.filename","text":"filename : Optional [ str ] = None Internal Safe Name of the file.","title":"filename"},{"location":"reference/models/files/#models.files.MSAFile.size","text":"size : int = 0 Filesize in bytes.","title":"size"},{"location":"reference/models/files/#models.files.MSAFile.type_description","text":"type_description : Optional [ str ] = None Raw Mime Type description.","title":"type_description"},{"location":"reference/models/files/#models.files.MSAFile.type_raw","text":"type_raw : Optional [ str ] = None Raw Mime Type.","title":"type_raw"},{"location":"reference/models/files/#models.files.MSAFile.uid","text":"uid : Optional [ str ] = None GUID for the file.","title":"uid"},{"location":"reference/models/files/#models.files.MSAFile.upload_filename","text":"upload_filename : Optional [ str ] = None Upload Filename.","title":"upload_filename"},{"location":"reference/models/health/","text":"msaSDK Module \u00b6 .models.health \u00b6 Healthcheck Pydantic Models Attributes \u00b6 module_var module-attribute \u00b6 module_var : str = '' str: Module Vars Classes \u00b6 MSAHealthDefinition \u00b6 Bases: SQLModel Health Service Definition Attributes \u00b6 enabled class-attribute \u00b6 enabled : bool = True Is the healtcheck enabled True/False interval class-attribute \u00b6 interval : Optional [ int ] = 60 Interval the Healtchcheck Thread sleeps and checks path class-attribute \u00b6 path : str = '/healthcheck' Path in URL for the API MSAHealthMessage \u00b6 Bases: SQLModel Health Pydantic Response Service Message Attributes \u00b6 error class-attribute \u00b6 error : Optional [ str ] healthy class-attribute \u00b6 healthy : bool = False message class-attribute \u00b6 message : Optional [ str ]","title":"health"},{"location":"reference/models/health/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/health/#modelshealth","text":"Healthcheck Pydantic Models","title":".models.health"},{"location":"reference/models/health/#models.health-attributes","text":"","title":"Attributes"},{"location":"reference/models/health/#models.health.module_var","text":"module_var : str = '' str: Module Vars","title":"module_var"},{"location":"reference/models/health/#models.health-classes","text":"","title":"Classes"},{"location":"reference/models/health/#models.health.MSAHealthDefinition","text":"Bases: SQLModel Health Service Definition","title":"MSAHealthDefinition"},{"location":"reference/models/health/#models.health.MSAHealthDefinition-attributes","text":"","title":"Attributes"},{"location":"reference/models/health/#models.health.MSAHealthDefinition.enabled","text":"enabled : bool = True Is the healtcheck enabled True/False","title":"enabled"},{"location":"reference/models/health/#models.health.MSAHealthDefinition.interval","text":"interval : Optional [ int ] = 60 Interval the Healtchcheck Thread sleeps and checks","title":"interval"},{"location":"reference/models/health/#models.health.MSAHealthDefinition.path","text":"path : str = '/healthcheck' Path in URL for the API","title":"path"},{"location":"reference/models/health/#models.health.MSAHealthMessage","text":"Bases: SQLModel Health Pydantic Response Service Message","title":"MSAHealthMessage"},{"location":"reference/models/health/#models.health.MSAHealthMessage-attributes","text":"","title":"Attributes"},{"location":"reference/models/health/#models.health.MSAHealthMessage.error","text":"error : Optional [ str ]","title":"error"},{"location":"reference/models/health/#models.health.MSAHealthMessage.healthy","text":"healthy : bool = False","title":"healthy"},{"location":"reference/models/health/#models.health.MSAHealthMessage.message","text":"message : Optional [ str ]","title":"message"},{"location":"reference/models/sdu/","text":"msaSDK Module \u00b6 .models.sdu \u00b6 Module for the Semantic Document Understanding - Content Classes \u00b6 SDUAttachment \u00b6 Bases: SQLModel Attributes \u00b6 binary class-attribute \u00b6 binary : bool = False charset class-attribute \u00b6 charset : str = '' content_type class-attribute \u00b6 content_type : str = '' disposition class-attribute \u00b6 disposition : str = '' encoding class-attribute \u00b6 encoding : str = '' id class-attribute \u00b6 id : str = '' metadata class-attribute \u00b6 metadata : Dict = {} name class-attribute \u00b6 name : str = '' path class-attribute \u00b6 path : str = '' payload class-attribute \u00b6 payload : str = '' status class-attribute \u00b6 status : str = '' text class-attribute \u00b6 text : SDUText = SDUText () Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUBBox \u00b6 Bases: SQLModel Attributes \u00b6 x0 class-attribute \u00b6 x0 : float = - 1 x1 class-attribute \u00b6 x1 : float = - 1 y0 class-attribute \u00b6 y0 : float = - 1 y1 class-attribute \u00b6 y1 : float = - 1 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUContent \u00b6 Bases: SQLModel Attributes \u00b6 attachments class-attribute \u00b6 attachments : List [ SDUAttachment ] = [] layouts class-attribute \u00b6 layouts : List [ SDULayout ] = [] Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUData \u00b6 Bases: SQLModel Attributes \u00b6 converter class-attribute \u00b6 converter : List [ str ] = [] email class-attribute \u00b6 email : SDUEmail = SDUEmail () images class-attribute \u00b6 images : List [ SDUPageImage ] = [] npages class-attribute \u00b6 npages : int = 0 pages class-attribute \u00b6 pages : List [ SDUPage ] = [] stats class-attribute \u00b6 stats : SDUStatistic = SDUStatistic () text class-attribute \u00b6 text : SDUText = SDUText () Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 addPagePreProcessing \u00b6 addPagePreProcessing ( pagepre : SDUPage ) escaped \u00b6 escaped () sanitized async \u00b6 sanitized () SDUDimensions \u00b6 Bases: SQLModel Attributes \u00b6 factor_x class-attribute \u00b6 factor_x : float = 0.0 factor_y class-attribute \u00b6 factor_y : float = 0.0 height class-attribute \u00b6 height : float = 0.0 id class-attribute \u00b6 id : int = - 1 rotation class-attribute \u00b6 rotation : int = 0 width class-attribute \u00b6 width : float = 0.0 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUElement \u00b6 Bases: SQLModel Attributes \u00b6 end class-attribute \u00b6 end : int = - 1 id class-attribute \u00b6 id : int start class-attribute \u00b6 start : int = - 1 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUEmail \u00b6 Bases: SQLModel Parsed EMail Pydantic Model. Attributes \u00b6 msg_bcc class-attribute \u00b6 msg_bcc : str = '' msg_body class-attribute \u00b6 msg_body : str = '' msg_cc class-attribute \u00b6 msg_cc : str = '' msg_from class-attribute \u00b6 msg_from : str = '' msg_headers class-attribute \u00b6 msg_headers : Dict = {} msg_id class-attribute \u00b6 msg_id : str = '' msg_received class-attribute \u00b6 msg_received : List = [] msg_reply_to class-attribute \u00b6 msg_reply_to : str = '' msg_sender_ip class-attribute \u00b6 msg_sender_ip : str = '' msg_sent_date class-attribute \u00b6 msg_sent_date : str = '' msg_subject class-attribute \u00b6 msg_subject : str = '' msg_timezone class-attribute \u00b6 msg_timezone : str = '' msg_to class-attribute \u00b6 msg_to : str = '' msg_to_domains class-attribute \u00b6 msg_to_domains : str = '' seg_body class-attribute \u00b6 seg_body : str = '' seg_sign class-attribute \u00b6 seg_sign : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUFonts \u00b6 Bases: SQLModel Attributes \u00b6 avg_fontsize class-attribute \u00b6 avg_fontsize : int = 14 fonts class-attribute \u00b6 fonts : List = [] fontsizes class-attribute \u00b6 fontsizes : Dict = {} id class-attribute \u00b6 id : int = - 1 small_fontsize class-attribute \u00b6 small_fontsize : int = 10000 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDULanguage \u00b6 Bases: SQLModel Detected Language Pydantic Model. Attributes \u00b6 bytes class-attribute \u00b6 bytes : int = - 1 code class-attribute \u00b6 code : str = 'unknown' confidence class-attribute \u00b6 confidence : float = - 1 details class-attribute \u00b6 details : Optional [ Tuple ] = tuple () lang class-attribute \u00b6 lang : str = 'unknown' proportion class-attribute \u00b6 proportion : int = - 1 reliable class-attribute \u00b6 reliable : bool = False winner class-attribute \u00b6 winner : Optional [ str ] = None Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDULayout \u00b6 Bases: SQLModel Attributes \u00b6 bjson class-attribute \u00b6 bjson : Dict = {} blocks class-attribute \u00b6 blocks : List [ tuple ] = [] body class-attribute \u00b6 body : SDUBBox = SDUBBox () columns class-attribute \u00b6 columns : List [ SDUBBox ] = [] dimensions class-attribute \u00b6 dimensions : SDUDimensions = SDUDimensions () drawings class-attribute \u00b6 drawings : List = [] fonts class-attribute \u00b6 fonts : SDUFonts = SDUFonts () footer class-attribute \u00b6 footer : SDUBBox = SDUBBox () header class-attribute \u00b6 header : SDUBBox = SDUBBox () id class-attribute \u00b6 id : int = - 1 images class-attribute \u00b6 images : List = [] layouts class-attribute \u00b6 layouts : List = [] margin_left class-attribute \u00b6 margin_left : SDUBBox = SDUBBox () margin_right class-attribute \u00b6 margin_right : SDUBBox = SDUBBox () rows class-attribute \u00b6 rows : List [ SDUBBox ] = [] texttrace class-attribute \u00b6 texttrace : List = [] Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDULearnset \u00b6 Bases: SQLModel Attributes \u00b6 emb class-attribute \u00b6 emb : Dict = {} nlp class-attribute \u00b6 nlp : Dict = {} nlu class-attribute \u00b6 nlu : Dict = {} text class-attribute \u00b6 text : Dict = {} vec_sent class-attribute \u00b6 vec_sent : Dict = {} vec_words class-attribute \u00b6 vec_words : Dict = {} version class-attribute \u00b6 version : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 reset \u00b6 reset () set_version \u00b6 set_version ( version : str ) SDUPDFElement \u00b6 Bases: SQLModel Attributes \u00b6 bold class-attribute \u00b6 bold : bool = False color class-attribute \u00b6 color : int = 0 flags class-attribute \u00b6 flags : int = 0 font class-attribute \u00b6 font : str = '' fontsize class-attribute \u00b6 fontsize : float = 0.0 italic class-attribute \u00b6 italic : bool = False line_id class-attribute \u00b6 line_id : int = - 1 span_id class-attribute \u00b6 span_id : int = - 1 SDUPage \u00b6 Bases: SQLModel Attributes \u00b6 has_en class-attribute \u00b6 has_en : bool = False input class-attribute \u00b6 input : str = '' npar class-attribute \u00b6 npar : int = 0 page class-attribute \u00b6 page : int = - 1 text class-attribute \u00b6 text : SDUText = SDUText () Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 getAllSentencesTextList \u00b6 getAllSentencesTextList () getAllSentencesTextListLF \u00b6 getAllSentencesTextListLF () getAllSentencesTextListNoTableAndLists \u00b6 getAllSentencesTextListNoTableAndLists () getAllSentencesTextList_en \u00b6 getAllSentencesTextList_en () getTextDefault \u00b6 getTextDefault () getTextForDisplay \u00b6 getTextForDisplay () getTextForNLP \u00b6 getTextForNLP () getTextLF \u00b6 getTextLF ( space_before_lf : bool = False ) getTextLF_Paragraph \u00b6 getTextLF_Paragraph ( space_before_lf : bool = False ) getTextNoLF \u00b6 getTextNoLF () getTextNoLF_EN \u00b6 getTextNoLF_EN () getTextNoLF_Paragraph \u00b6 getTextNoLF_Paragraph () hasText \u00b6 hasText () setInput \u00b6 setInput ( inputText : str ) SDUPageImage \u00b6 Bases: SQLModel Page Image Pydantic Model. Storing the information about the Image representation of a Page. Attributes \u00b6 dpi class-attribute \u00b6 dpi : float = 0.0 filepath_name class-attribute \u00b6 filepath_name : str = '' format class-attribute \u00b6 format : str = '' height class-attribute \u00b6 height : float = 0.0 id class-attribute \u00b6 id : int = - 1 layout class-attribute \u00b6 layout : List = [] mode class-attribute \u00b6 mode : str = '' width class-attribute \u00b6 width : float = 0.0 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUParagraph \u00b6 Bases: SQLModel Attributes \u00b6 clean class-attribute \u00b6 clean : str = '' elements class-attribute \u00b6 elements : List [ SDUPDFElement ] = [] id class-attribute \u00b6 id : int = - 1 lang class-attribute \u00b6 lang : SDULanguage = SDULanguage () nsen class-attribute \u00b6 nsen : int = 0 section class-attribute \u00b6 section : str = 'body' semantic_type class-attribute \u00b6 semantic_type : str = 'text' sentences class-attribute \u00b6 sentences : List [ SDUSentence ] = [] sentences_en class-attribute \u00b6 sentences_en : List [ SDUSentence ] = [] size_type class-attribute \u00b6 size_type : str = 'body' sort class-attribute \u00b6 sort : int = - 1 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 getText \u00b6 getText () -> str getTextLF \u00b6 getTextLF () -> str getTextNoLF \u00b6 getTextNoLF () -> str hasText \u00b6 hasText () -> bool SDUSentence \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = - 1 text class-attribute \u00b6 text : str = '' tokens class-attribute \u00b6 tokens : List [ str ] = [] upos class-attribute \u00b6 upos : List [ str ] = [] xpos class-attribute \u00b6 xpos : List [ str ] = [] Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUStatistic \u00b6 Bases: SQLModel Text Statistics Pydantic Model. Attributes \u00b6 avg_character_per_word class-attribute \u00b6 avg_character_per_word : float = 0 avg_letter_per_word class-attribute \u00b6 avg_letter_per_word : float = 0 avg_sentence_length class-attribute \u00b6 avg_sentence_length : float = 0 avg_sentence_per_word class-attribute \u00b6 avg_sentence_per_word : float = 0 avg_syllables_per_word class-attribute \u00b6 avg_syllables_per_word : float = 0 coleman class-attribute \u00b6 coleman : float = 0 crawford class-attribute \u00b6 crawford : float = 0 difficult_words class-attribute \u00b6 difficult_words : int = 0 fog class-attribute \u00b6 fog : float = 0 grade class-attribute \u00b6 grade : float = 0 gulpease_index class-attribute \u00b6 gulpease_index : float = 0 lexicon_count class-attribute \u00b6 lexicon_count : int = 0 long_word_count class-attribute \u00b6 long_word_count : int = 0 osman class-attribute \u00b6 osman : float = 0 paragraph_count class-attribute \u00b6 paragraph_count : int = 0 reading_ease class-attribute \u00b6 reading_ease : str = '' reading_ease_score class-attribute \u00b6 reading_ease_score : float = 0 reading_index class-attribute \u00b6 reading_index : float = 0 reading_score class-attribute \u00b6 reading_score : float = 0 reading_time_s class-attribute \u00b6 reading_time_s : float = 0 sentence_count class-attribute \u00b6 sentence_count : int = 0 smog class-attribute \u00b6 smog : float = 0 standard class-attribute \u00b6 standard : str = '' write_formula class-attribute \u00b6 write_formula : float = 0 Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUText \u00b6 Bases: SQLModel Attributes \u00b6 clean class-attribute \u00b6 clean : str = '' html_content class-attribute \u00b6 html_content : str = '' lang class-attribute \u00b6 lang : SDULanguage = SDULanguage () paragraphs class-attribute \u00b6 paragraphs : List [ SDUParagraph ] = [] raw class-attribute \u00b6 raw : str = '' structured_content class-attribute \u00b6 structured_content : Dict = {} Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False SDUVersion \u00b6 Bases: SQLModel Attributes \u00b6 creation_date class-attribute \u00b6 creation_date : str = '' version class-attribute \u00b6 version : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False Functions \u00b6 getCRLF \u00b6 getCRLF () -> str get's the OS Environment Variable for CR_LF . Default: \\n getCRParagraph \u00b6 getCRParagraph () -> str get's the OS Environment Variable for CR_PARAGRAPH . Default: \\n\\n getSentenceSeperator \u00b6 getSentenceSeperator () -> str get's the OS Environment Variable for SENTENCE_SEPARATOR . Default: (Space/Blank)","title":"sdu"},{"location":"reference/models/sdu/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/sdu/#modelssdu","text":"Module for the Semantic Document Understanding - Content","title":".models.sdu"},{"location":"reference/models/sdu/#models.sdu-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment","text":"Bases: SQLModel","title":"SDUAttachment"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.binary","text":"binary : bool = False","title":"binary"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.charset","text":"charset : str = ''","title":"charset"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.content_type","text":"content_type : str = ''","title":"content_type"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.disposition","text":"disposition : str = ''","title":"disposition"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.encoding","text":"encoding : str = ''","title":"encoding"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.id","text":"id : str = ''","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.metadata","text":"metadata : Dict = {}","title":"metadata"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.name","text":"name : str = ''","title":"name"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.path","text":"path : str = ''","title":"path"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.payload","text":"payload : str = ''","title":"payload"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.status","text":"status : str = ''","title":"status"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.text","text":"text : SDUText = SDUText ()","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUAttachment.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUBBox","text":"Bases: SQLModel","title":"SDUBBox"},{"location":"reference/models/sdu/#models.sdu.SDUBBox-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.x0","text":"x0 : float = - 1","title":"x0"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.x1","text":"x1 : float = - 1","title":"x1"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.y0","text":"y0 : float = - 1","title":"y0"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.y1","text":"y1 : float = - 1","title":"y1"},{"location":"reference/models/sdu/#models.sdu.SDUBBox-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUBBox.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUContent","text":"Bases: SQLModel","title":"SDUContent"},{"location":"reference/models/sdu/#models.sdu.SDUContent-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUContent.attachments","text":"attachments : List [ SDUAttachment ] = []","title":"attachments"},{"location":"reference/models/sdu/#models.sdu.SDUContent.layouts","text":"layouts : List [ SDULayout ] = []","title":"layouts"},{"location":"reference/models/sdu/#models.sdu.SDUContent-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUContent.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUContent.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUData","text":"Bases: SQLModel","title":"SDUData"},{"location":"reference/models/sdu/#models.sdu.SDUData-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUData.converter","text":"converter : List [ str ] = []","title":"converter"},{"location":"reference/models/sdu/#models.sdu.SDUData.email","text":"email : SDUEmail = SDUEmail ()","title":"email"},{"location":"reference/models/sdu/#models.sdu.SDUData.images","text":"images : List [ SDUPageImage ] = []","title":"images"},{"location":"reference/models/sdu/#models.sdu.SDUData.npages","text":"npages : int = 0","title":"npages"},{"location":"reference/models/sdu/#models.sdu.SDUData.pages","text":"pages : List [ SDUPage ] = []","title":"pages"},{"location":"reference/models/sdu/#models.sdu.SDUData.stats","text":"stats : SDUStatistic = SDUStatistic ()","title":"stats"},{"location":"reference/models/sdu/#models.sdu.SDUData.text","text":"text : SDUText = SDUText ()","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUData-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUData.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUData.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUData-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDUData.addPagePreProcessing","text":"addPagePreProcessing ( pagepre : SDUPage )","title":"addPagePreProcessing()"},{"location":"reference/models/sdu/#models.sdu.SDUData.escaped","text":"escaped ()","title":"escaped()"},{"location":"reference/models/sdu/#models.sdu.SDUData.sanitized","text":"sanitized ()","title":"sanitized()"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions","text":"Bases: SQLModel","title":"SDUDimensions"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.factor_x","text":"factor_x : float = 0.0","title":"factor_x"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.factor_y","text":"factor_y : float = 0.0","title":"factor_y"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.height","text":"height : float = 0.0","title":"height"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.rotation","text":"rotation : int = 0","title":"rotation"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.width","text":"width : float = 0.0","title":"width"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUDimensions.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUElement","text":"Bases: SQLModel","title":"SDUElement"},{"location":"reference/models/sdu/#models.sdu.SDUElement-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUElement.end","text":"end : int = - 1","title":"end"},{"location":"reference/models/sdu/#models.sdu.SDUElement.id","text":"id : int","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUElement.start","text":"start : int = - 1","title":"start"},{"location":"reference/models/sdu/#models.sdu.SDUElement-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUElement.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUElement.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUEmail","text":"Bases: SQLModel Parsed EMail Pydantic Model.","title":"SDUEmail"},{"location":"reference/models/sdu/#models.sdu.SDUEmail-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_bcc","text":"msg_bcc : str = ''","title":"msg_bcc"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_body","text":"msg_body : str = ''","title":"msg_body"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_cc","text":"msg_cc : str = ''","title":"msg_cc"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_from","text":"msg_from : str = ''","title":"msg_from"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_headers","text":"msg_headers : Dict = {}","title":"msg_headers"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_id","text":"msg_id : str = ''","title":"msg_id"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_received","text":"msg_received : List = []","title":"msg_received"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_reply_to","text":"msg_reply_to : str = ''","title":"msg_reply_to"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_sender_ip","text":"msg_sender_ip : str = ''","title":"msg_sender_ip"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_sent_date","text":"msg_sent_date : str = ''","title":"msg_sent_date"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_subject","text":"msg_subject : str = ''","title":"msg_subject"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_timezone","text":"msg_timezone : str = ''","title":"msg_timezone"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_to","text":"msg_to : str = ''","title":"msg_to"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.msg_to_domains","text":"msg_to_domains : str = ''","title":"msg_to_domains"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.seg_body","text":"seg_body : str = ''","title":"seg_body"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.seg_sign","text":"seg_sign : str = ''","title":"seg_sign"},{"location":"reference/models/sdu/#models.sdu.SDUEmail-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUEmail.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts","text":"Bases: SQLModel","title":"SDUFonts"},{"location":"reference/models/sdu/#models.sdu.SDUFonts-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.avg_fontsize","text":"avg_fontsize : int = 14","title":"avg_fontsize"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.fonts","text":"fonts : List = []","title":"fonts"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.fontsizes","text":"fontsizes : Dict = {}","title":"fontsizes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.small_fontsize","text":"small_fontsize : int = 10000","title":"small_fontsize"},{"location":"reference/models/sdu/#models.sdu.SDUFonts-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUFonts.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage","text":"Bases: SQLModel Detected Language Pydantic Model.","title":"SDULanguage"},{"location":"reference/models/sdu/#models.sdu.SDULanguage-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.bytes","text":"bytes : int = - 1","title":"bytes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.code","text":"code : str = 'unknown'","title":"code"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.confidence","text":"confidence : float = - 1","title":"confidence"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.details","text":"details : Optional [ Tuple ] = tuple ()","title":"details"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.lang","text":"lang : str = 'unknown'","title":"lang"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.proportion","text":"proportion : int = - 1","title":"proportion"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.reliable","text":"reliable : bool = False","title":"reliable"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.winner","text":"winner : Optional [ str ] = None","title":"winner"},{"location":"reference/models/sdu/#models.sdu.SDULanguage-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDULanguage.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULayout","text":"Bases: SQLModel","title":"SDULayout"},{"location":"reference/models/sdu/#models.sdu.SDULayout-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULayout.bjson","text":"bjson : Dict = {}","title":"bjson"},{"location":"reference/models/sdu/#models.sdu.SDULayout.blocks","text":"blocks : List [ tuple ] = []","title":"blocks"},{"location":"reference/models/sdu/#models.sdu.SDULayout.body","text":"body : SDUBBox = SDUBBox ()","title":"body"},{"location":"reference/models/sdu/#models.sdu.SDULayout.columns","text":"columns : List [ SDUBBox ] = []","title":"columns"},{"location":"reference/models/sdu/#models.sdu.SDULayout.dimensions","text":"dimensions : SDUDimensions = SDUDimensions ()","title":"dimensions"},{"location":"reference/models/sdu/#models.sdu.SDULayout.drawings","text":"drawings : List = []","title":"drawings"},{"location":"reference/models/sdu/#models.sdu.SDULayout.fonts","text":"fonts : SDUFonts = SDUFonts ()","title":"fonts"},{"location":"reference/models/sdu/#models.sdu.SDULayout.footer","text":"footer : SDUBBox = SDUBBox ()","title":"footer"},{"location":"reference/models/sdu/#models.sdu.SDULayout.header","text":"header : SDUBBox = SDUBBox ()","title":"header"},{"location":"reference/models/sdu/#models.sdu.SDULayout.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDULayout.images","text":"images : List = []","title":"images"},{"location":"reference/models/sdu/#models.sdu.SDULayout.layouts","text":"layouts : List = []","title":"layouts"},{"location":"reference/models/sdu/#models.sdu.SDULayout.margin_left","text":"margin_left : SDUBBox = SDUBBox ()","title":"margin_left"},{"location":"reference/models/sdu/#models.sdu.SDULayout.margin_right","text":"margin_right : SDUBBox = SDUBBox ()","title":"margin_right"},{"location":"reference/models/sdu/#models.sdu.SDULayout.rows","text":"rows : List [ SDUBBox ] = []","title":"rows"},{"location":"reference/models/sdu/#models.sdu.SDULayout.texttrace","text":"texttrace : List = []","title":"texttrace"},{"location":"reference/models/sdu/#models.sdu.SDULayout-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDULayout.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDULayout.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset","text":"Bases: SQLModel","title":"SDULearnset"},{"location":"reference/models/sdu/#models.sdu.SDULearnset-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.emb","text":"emb : Dict = {}","title":"emb"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.nlp","text":"nlp : Dict = {}","title":"nlp"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.nlu","text":"nlu : Dict = {}","title":"nlu"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.text","text":"text : Dict = {}","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.vec_sent","text":"vec_sent : Dict = {}","title":"vec_sent"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.vec_words","text":"vec_words : Dict = {}","title":"vec_words"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.version","text":"version : str = ''","title":"version"},{"location":"reference/models/sdu/#models.sdu.SDULearnset-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDULearnset-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.reset","text":"reset ()","title":"reset()"},{"location":"reference/models/sdu/#models.sdu.SDULearnset.set_version","text":"set_version ( version : str )","title":"set_version()"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement","text":"Bases: SQLModel","title":"SDUPDFElement"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.bold","text":"bold : bool = False","title":"bold"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.color","text":"color : int = 0","title":"color"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.flags","text":"flags : int = 0","title":"flags"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.font","text":"font : str = ''","title":"font"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.fontsize","text":"fontsize : float = 0.0","title":"fontsize"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.italic","text":"italic : bool = False","title":"italic"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.line_id","text":"line_id : int = - 1","title":"line_id"},{"location":"reference/models/sdu/#models.sdu.SDUPDFElement.span_id","text":"span_id : int = - 1","title":"span_id"},{"location":"reference/models/sdu/#models.sdu.SDUPage","text":"Bases: SQLModel","title":"SDUPage"},{"location":"reference/models/sdu/#models.sdu.SDUPage-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPage.has_en","text":"has_en : bool = False","title":"has_en"},{"location":"reference/models/sdu/#models.sdu.SDUPage.input","text":"input : str = ''","title":"input"},{"location":"reference/models/sdu/#models.sdu.SDUPage.npar","text":"npar : int = 0","title":"npar"},{"location":"reference/models/sdu/#models.sdu.SDUPage.page","text":"page : int = - 1","title":"page"},{"location":"reference/models/sdu/#models.sdu.SDUPage.text","text":"text : SDUText = SDUText ()","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUPage-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUPage.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUPage.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPage-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextList","text":"getAllSentencesTextList ()","title":"getAllSentencesTextList()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextListLF","text":"getAllSentencesTextListLF ()","title":"getAllSentencesTextListLF()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextListNoTableAndLists","text":"getAllSentencesTextListNoTableAndLists ()","title":"getAllSentencesTextListNoTableAndLists()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getAllSentencesTextList_en","text":"getAllSentencesTextList_en ()","title":"getAllSentencesTextList_en()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextDefault","text":"getTextDefault ()","title":"getTextDefault()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextForDisplay","text":"getTextForDisplay ()","title":"getTextForDisplay()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextForNLP","text":"getTextForNLP ()","title":"getTextForNLP()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextLF","text":"getTextLF ( space_before_lf : bool = False )","title":"getTextLF()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextLF_Paragraph","text":"getTextLF_Paragraph ( space_before_lf : bool = False )","title":"getTextLF_Paragraph()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextNoLF","text":"getTextNoLF ()","title":"getTextNoLF()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextNoLF_EN","text":"getTextNoLF_EN ()","title":"getTextNoLF_EN()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.getTextNoLF_Paragraph","text":"getTextNoLF_Paragraph ()","title":"getTextNoLF_Paragraph()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.hasText","text":"hasText ()","title":"hasText()"},{"location":"reference/models/sdu/#models.sdu.SDUPage.setInput","text":"setInput ( inputText : str )","title":"setInput()"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage","text":"Bases: SQLModel Page Image Pydantic Model. Storing the information about the Image representation of a Page.","title":"SDUPageImage"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.dpi","text":"dpi : float = 0.0","title":"dpi"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.filepath_name","text":"filepath_name : str = ''","title":"filepath_name"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.format","text":"format : str = ''","title":"format"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.height","text":"height : float = 0.0","title":"height"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.layout","text":"layout : List = []","title":"layout"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.mode","text":"mode : str = ''","title":"mode"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.width","text":"width : float = 0.0","title":"width"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUPageImage.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph","text":"Bases: SQLModel","title":"SDUParagraph"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.clean","text":"clean : str = ''","title":"clean"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.elements","text":"elements : List [ SDUPDFElement ] = []","title":"elements"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.lang","text":"lang : SDULanguage = SDULanguage ()","title":"lang"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.nsen","text":"nsen : int = 0","title":"nsen"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.section","text":"section : str = 'body'","title":"section"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.semantic_type","text":"semantic_type : str = 'text'","title":"semantic_type"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.sentences","text":"sentences : List [ SDUSentence ] = []","title":"sentences"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.sentences_en","text":"sentences_en : List [ SDUSentence ] = []","title":"sentences_en"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.size_type","text":"size_type : str = 'body'","title":"size_type"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.sort","text":"sort : int = - 1","title":"sort"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.getText","text":"getText () -> str","title":"getText()"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.getTextLF","text":"getTextLF () -> str","title":"getTextLF()"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.getTextNoLF","text":"getTextNoLF () -> str","title":"getTextNoLF()"},{"location":"reference/models/sdu/#models.sdu.SDUParagraph.hasText","text":"hasText () -> bool","title":"hasText()"},{"location":"reference/models/sdu/#models.sdu.SDUSentence","text":"Bases: SQLModel","title":"SDUSentence"},{"location":"reference/models/sdu/#models.sdu.SDUSentence-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.text","text":"text : str = ''","title":"text"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.tokens","text":"tokens : List [ str ] = []","title":"tokens"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.upos","text":"upos : List [ str ] = []","title":"upos"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.xpos","text":"xpos : List [ str ] = []","title":"xpos"},{"location":"reference/models/sdu/#models.sdu.SDUSentence-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUSentence.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic","text":"Bases: SQLModel Text Statistics Pydantic Model.","title":"SDUStatistic"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_character_per_word","text":"avg_character_per_word : float = 0","title":"avg_character_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_letter_per_word","text":"avg_letter_per_word : float = 0","title":"avg_letter_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_sentence_length","text":"avg_sentence_length : float = 0","title":"avg_sentence_length"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_sentence_per_word","text":"avg_sentence_per_word : float = 0","title":"avg_sentence_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.avg_syllables_per_word","text":"avg_syllables_per_word : float = 0","title":"avg_syllables_per_word"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.coleman","text":"coleman : float = 0","title":"coleman"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.crawford","text":"crawford : float = 0","title":"crawford"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.difficult_words","text":"difficult_words : int = 0","title":"difficult_words"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.fog","text":"fog : float = 0","title":"fog"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.grade","text":"grade : float = 0","title":"grade"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.gulpease_index","text":"gulpease_index : float = 0","title":"gulpease_index"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.lexicon_count","text":"lexicon_count : int = 0","title":"lexicon_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.long_word_count","text":"long_word_count : int = 0","title":"long_word_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.osman","text":"osman : float = 0","title":"osman"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.paragraph_count","text":"paragraph_count : int = 0","title":"paragraph_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_ease","text":"reading_ease : str = ''","title":"reading_ease"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_ease_score","text":"reading_ease_score : float = 0","title":"reading_ease_score"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_index","text":"reading_index : float = 0","title":"reading_index"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_score","text":"reading_score : float = 0","title":"reading_score"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.reading_time_s","text":"reading_time_s : float = 0","title":"reading_time_s"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.sentence_count","text":"sentence_count : int = 0","title":"sentence_count"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.smog","text":"smog : float = 0","title":"smog"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.standard","text":"standard : str = ''","title":"standard"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.write_formula","text":"write_formula : float = 0","title":"write_formula"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUStatistic.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUText","text":"Bases: SQLModel","title":"SDUText"},{"location":"reference/models/sdu/#models.sdu.SDUText-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUText.clean","text":"clean : str = ''","title":"clean"},{"location":"reference/models/sdu/#models.sdu.SDUText.html_content","text":"html_content : str = ''","title":"html_content"},{"location":"reference/models/sdu/#models.sdu.SDUText.lang","text":"lang : SDULanguage = SDULanguage ()","title":"lang"},{"location":"reference/models/sdu/#models.sdu.SDUText.paragraphs","text":"paragraphs : List [ SDUParagraph ] = []","title":"paragraphs"},{"location":"reference/models/sdu/#models.sdu.SDUText.raw","text":"raw : str = ''","title":"raw"},{"location":"reference/models/sdu/#models.sdu.SDUText.structured_content","text":"structured_content : Dict = {}","title":"structured_content"},{"location":"reference/models/sdu/#models.sdu.SDUText-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUText.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUText.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUVersion","text":"Bases: SQLModel","title":"SDUVersion"},{"location":"reference/models/sdu/#models.sdu.SDUVersion-attributes","text":"","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.creation_date","text":"creation_date : str = ''","title":"creation_date"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.version","text":"version : str = ''","title":"version"},{"location":"reference/models/sdu/#models.sdu.SDUVersion-classes","text":"","title":"Classes"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.Config","text":"","title":"Config"},{"location":"reference/models/sdu/#models.sdu.SDUVersion.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/sdu/#models.sdu-functions","text":"","title":"Functions"},{"location":"reference/models/sdu/#models.sdu.getCRLF","text":"getCRLF () -> str get's the OS Environment Variable for CR_LF . Default: \\n","title":"getCRLF()"},{"location":"reference/models/sdu/#models.sdu.getCRParagraph","text":"getCRParagraph () -> str get's the OS Environment Variable for CR_PARAGRAPH . Default: \\n\\n","title":"getCRParagraph()"},{"location":"reference/models/sdu/#models.sdu.getSentenceSeperator","text":"getSentenceSeperator () -> str get's the OS Environment Variable for SENTENCE_SEPARATOR . Default: (Space/Blank)","title":"getSentenceSeperator()"},{"location":"reference/models/service/","text":"msaSDK Module \u00b6 .models.service \u00b6 Classes \u00b6 MSAServiceDefinition \u00b6 Bases: APISettings , SQLModel MSAApp Settings (Service Definitions) This class enables the configuration of your MSAApp instance through the use of environment variables. Any of the instance attributes can be overridden upon instantiation by either passing the desired value to the initializer, or by setting the corresponding environment variable. Attribute xxx_yyy corresponds to environment variable API_XXX_YYY . So, for example, to override openapi_prefix , you would set the environment variable API_OPENAPI_PREFIX . Note that assignments to variables are also validated, ensuring that even if you make runtime-modifications to the config, they should have the correct types. Attributes \u00b6 allow_credentials class-attribute \u00b6 allow_credentials : bool = True CORSMiddleware. Bool. Allow (True) Credentials (Authorization headers, Cookies, etc). allow_headers class-attribute \u00b6 allow_headers : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP headers or all of them with the wildcard * . allow_methods class-attribute \u00b6 allow_methods : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP methods (POST, PUT) or all of them with the wildcard * . allow_origins class-attribute \u00b6 allow_origins : List [ str ] = [ '*' ] CORSMiddleware. List[str]. List of allowed origins (as strings) or all of them with the wildcard * . context class-attribute \u00b6 context : bool = False Enable Context Middleware. cors class-attribute \u00b6 cors : bool = True Enable CORS Middleware. csrf class-attribute \u00b6 csrf : bool = True Enable CSRF Forms Protection Middleware. db class-attribute \u00b6 db : bool = True Enables internal Asynchron SQLite DB. db_crud class-attribute \u00b6 db_crud : bool = True Enables CRUD API creation of the provided SQLModels. db_debug class-attribute \u00b6 db_debug : bool = False Enables internal DB Debug output. db_meta_create class-attribute \u00b6 db_meta_create : bool = True Enables internal DB Metadata creation from defined SQLModels at Startup. db_meta_drop class-attribute \u00b6 db_meta_drop : bool = False If True, all existing Data and Schemas in internal DB get's deleted at Startup. db_url class-attribute \u00b6 db_url : str = ( \"sqlite+aiosqlite:///msa_sdk.db?check_same_thread=True\" ) Set's DB URL, compatibility with async and SQLModel/SQLAlchemy is required. graphql class-attribute \u00b6 graphql : bool = False Enable initiation of Strawberry GraphQLRouter (/graphql). gzip class-attribute \u00b6 gzip : bool = False Enable GZIP Middleware. healthdefinition class-attribute \u00b6 healthdefinition : MSAHealthDefinition = ( MSAHealthDefinition () ) Healthdefinition Instance. host class-attribute \u00b6 host : str = '127.0.0.1' Host/IP which the service runs on. httpception class-attribute \u00b6 httpception : bool = True Enable the HTTP Exception Handler, which provides HTML Error Pages instead of JSONResponse. httpception_exclude class-attribute \u00b6 httpception_exclude : List [ int ] = [ 307 ] List of HTTP Exception Codes which are excluded and just forwarded by the HTTP Exception Handler. httpsredirect class-attribute \u00b6 httpsredirect : bool = False Enable HTTPS Redirect Middleware. instrument class-attribute \u00b6 instrument : bool = True Enable Prometheus Instrumentation for the instance. language class-attribute \u00b6 language : str = '' Set's internal Admin Dashboard language ( zh_CN or en_US =default if empty). limiter class-attribute \u00b6 limiter : bool = False Enables Rate Limiter (slowapi). msgpack class-attribute \u00b6 msgpack : bool = False Enable Messagepack Negotiation Middleware. name class-attribute \u00b6 name : str = 'msaSDK Service' Service Name, also used as Title. pages class-attribute \u00b6 pages : bool = True Enable the Pages Routes (/profiler, /testpage), if site is Off also (/, /monitor, /monitor_inline). pagination class-attribute \u00b6 pagination : bool = False Enable FastAPI Pagination. port class-attribute \u00b6 port : int = 8090 Port which the service binds to. profiler class-attribute \u00b6 profiler : bool = False Enable Profiler Middleware. profiler_output_type class-attribute \u00b6 profiler_output_type : str = 'html' Set the Profiler Output Type, should be html or text, html is needed if you want to use the profiler on the Admin Site. profiler_single_calls class-attribute \u00b6 profiler_single_calls : bool = True Enable to Track each Request by the Profiler. profiler_url class-attribute \u00b6 profiler_url : str = '/profiler' Set the URL to reach the profiler result html, /profiler. root_path class-attribute \u00b6 root_path : str = '/admin' Set's internal Admin Dashboard Root Path, normally /admin . scheduler class-attribute \u00b6 scheduler : bool = True Enables MSA Scheduler Engine. scheduler_poll_millis class-attribute \u00b6 scheduler_poll_millis : int = 1000 Set's Scheduler Poll Minimum. servicerouter class-attribute \u00b6 servicerouter : bool = True Enable the Service Routes defined by the MSAApp (/scheduler, /status, /defintion, /settings, /schema, /info, ...). session class-attribute \u00b6 session : bool = False Enable Session Middleware. site class-attribute \u00b6 site : bool = True Enables internal Admin Site Dashboard. site_auth class-attribute \u00b6 site_auth : bool = False Extends internal Admin Dashboard with Auth. site_copyright class-attribute \u00b6 site_copyright : str = 'Copyright \u00a9 2022 by u2d.ai' Set's internal Admin Dashboard copyright information. site_icon class-attribute \u00b6 site_icon : str = '/msastatic/img/favicon.png' Set's internal Admin Dashboard Favicon. site_title class-attribute \u00b6 site_title : str = 'Admin' Set's internal Admin Dashboard Titel. site_url class-attribute \u00b6 site_url : str = '' Set's internal Admin Dashboard Site URL, normally empty. starception class-attribute \u00b6 starception : bool = True Enable Starception Middleware. static class-attribute \u00b6 static : bool = True Enable the internal Static Folder ( msastatic ) and Mount to instance. sysrouter class-attribute \u00b6 sysrouter : bool = True Enable the System Routes defined by router.system module (/sysinfo, /sysgpuinfo, /syserror, ...). tags class-attribute \u00b6 tags : List [ str ] = [] Optional Metadata: Use this to carry some variables through the service instance. templates class-attribute \u00b6 templates : bool = True Enable the internal Templates and mount the directory. templates_dir class-attribute \u00b6 templates_dir : List [ str ] = [ \"msatemplates\" , \"msatemplates/errors\" , ] Set the List of Directories for the MSAUITemplate Engine to look for the requested template. timing class-attribute \u00b6 timing : bool = False Enables Timing Middleware, reports timing data at the granularity of individual endpoint calls. uvloop class-attribute \u00b6 uvloop : bool = True Use UVLoop instead of asyncio loop. validationception class-attribute \u00b6 validationception : bool = True Enable Validation Exception Handler. version class-attribute \u00b6 version : str = '0.0.0' Version of the Service. Functions \u00b6 valid_url \u00b6 valid_url ( url : str ) Internal Validator for root_path and site_url to remove ending / . Functions \u00b6 get_msa_app_settings cached \u00b6 get_msa_app_settings () -> MSAServiceDefinition This function returns a cached instance of the MSAServiceDefinition object. Note Caching is used to prevent re-reading the environment every time the API settings are used in an endpoint.","title":"service"},{"location":"reference/models/service/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/service/#modelsservice","text":"","title":".models.service"},{"location":"reference/models/service/#models.service-classes","text":"","title":"Classes"},{"location":"reference/models/service/#models.service.MSAServiceDefinition","text":"Bases: APISettings , SQLModel MSAApp Settings (Service Definitions) This class enables the configuration of your MSAApp instance through the use of environment variables. Any of the instance attributes can be overridden upon instantiation by either passing the desired value to the initializer, or by setting the corresponding environment variable. Attribute xxx_yyy corresponds to environment variable API_XXX_YYY . So, for example, to override openapi_prefix , you would set the environment variable API_OPENAPI_PREFIX . Note that assignments to variables are also validated, ensuring that even if you make runtime-modifications to the config, they should have the correct types.","title":"MSAServiceDefinition"},{"location":"reference/models/service/#models.service.MSAServiceDefinition-attributes","text":"","title":"Attributes"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_credentials","text":"allow_credentials : bool = True CORSMiddleware. Bool. Allow (True) Credentials (Authorization headers, Cookies, etc).","title":"allow_credentials"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_headers","text":"allow_headers : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP headers or all of them with the wildcard * .","title":"allow_headers"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_methods","text":"allow_methods : List [ str ] = [ '*' ] CORSMiddleware. List[str]. Specific HTTP methods (POST, PUT) or all of them with the wildcard * .","title":"allow_methods"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.allow_origins","text":"allow_origins : List [ str ] = [ '*' ] CORSMiddleware. List[str]. List of allowed origins (as strings) or all of them with the wildcard * .","title":"allow_origins"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.context","text":"context : bool = False Enable Context Middleware.","title":"context"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.cors","text":"cors : bool = True Enable CORS Middleware.","title":"cors"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.csrf","text":"csrf : bool = True Enable CSRF Forms Protection Middleware.","title":"csrf"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db","text":"db : bool = True Enables internal Asynchron SQLite DB.","title":"db"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_crud","text":"db_crud : bool = True Enables CRUD API creation of the provided SQLModels.","title":"db_crud"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_debug","text":"db_debug : bool = False Enables internal DB Debug output.","title":"db_debug"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_meta_create","text":"db_meta_create : bool = True Enables internal DB Metadata creation from defined SQLModels at Startup.","title":"db_meta_create"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_meta_drop","text":"db_meta_drop : bool = False If True, all existing Data and Schemas in internal DB get's deleted at Startup.","title":"db_meta_drop"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.db_url","text":"db_url : str = ( \"sqlite+aiosqlite:///msa_sdk.db?check_same_thread=True\" ) Set's DB URL, compatibility with async and SQLModel/SQLAlchemy is required.","title":"db_url"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.graphql","text":"graphql : bool = False Enable initiation of Strawberry GraphQLRouter (/graphql).","title":"graphql"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.gzip","text":"gzip : bool = False Enable GZIP Middleware.","title":"gzip"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.healthdefinition","text":"healthdefinition : MSAHealthDefinition = ( MSAHealthDefinition () ) Healthdefinition Instance.","title":"healthdefinition"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.host","text":"host : str = '127.0.0.1' Host/IP which the service runs on.","title":"host"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.httpception","text":"httpception : bool = True Enable the HTTP Exception Handler, which provides HTML Error Pages instead of JSONResponse.","title":"httpception"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.httpception_exclude","text":"httpception_exclude : List [ int ] = [ 307 ] List of HTTP Exception Codes which are excluded and just forwarded by the HTTP Exception Handler.","title":"httpception_exclude"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.httpsredirect","text":"httpsredirect : bool = False Enable HTTPS Redirect Middleware.","title":"httpsredirect"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.instrument","text":"instrument : bool = True Enable Prometheus Instrumentation for the instance.","title":"instrument"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.language","text":"language : str = '' Set's internal Admin Dashboard language ( zh_CN or en_US =default if empty).","title":"language"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.limiter","text":"limiter : bool = False Enables Rate Limiter (slowapi).","title":"limiter"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.msgpack","text":"msgpack : bool = False Enable Messagepack Negotiation Middleware.","title":"msgpack"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.name","text":"name : str = 'msaSDK Service' Service Name, also used as Title.","title":"name"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.pages","text":"pages : bool = True Enable the Pages Routes (/profiler, /testpage), if site is Off also (/, /monitor, /monitor_inline).","title":"pages"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.pagination","text":"pagination : bool = False Enable FastAPI Pagination.","title":"pagination"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.port","text":"port : int = 8090 Port which the service binds to.","title":"port"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler","text":"profiler : bool = False Enable Profiler Middleware.","title":"profiler"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler_output_type","text":"profiler_output_type : str = 'html' Set the Profiler Output Type, should be html or text, html is needed if you want to use the profiler on the Admin Site.","title":"profiler_output_type"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler_single_calls","text":"profiler_single_calls : bool = True Enable to Track each Request by the Profiler.","title":"profiler_single_calls"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.profiler_url","text":"profiler_url : str = '/profiler' Set the URL to reach the profiler result html, /profiler.","title":"profiler_url"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.root_path","text":"root_path : str = '/admin' Set's internal Admin Dashboard Root Path, normally /admin .","title":"root_path"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.scheduler","text":"scheduler : bool = True Enables MSA Scheduler Engine.","title":"scheduler"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.scheduler_poll_millis","text":"scheduler_poll_millis : int = 1000 Set's Scheduler Poll Minimum.","title":"scheduler_poll_millis"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.servicerouter","text":"servicerouter : bool = True Enable the Service Routes defined by the MSAApp (/scheduler, /status, /defintion, /settings, /schema, /info, ...).","title":"servicerouter"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.session","text":"session : bool = False Enable Session Middleware.","title":"session"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site","text":"site : bool = True Enables internal Admin Site Dashboard.","title":"site"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_auth","text":"site_auth : bool = False Extends internal Admin Dashboard with Auth.","title":"site_auth"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_copyright","text":"site_copyright : str = 'Copyright \u00a9 2022 by u2d.ai' Set's internal Admin Dashboard copyright information.","title":"site_copyright"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_icon","text":"site_icon : str = '/msastatic/img/favicon.png' Set's internal Admin Dashboard Favicon.","title":"site_icon"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_title","text":"site_title : str = 'Admin' Set's internal Admin Dashboard Titel.","title":"site_title"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.site_url","text":"site_url : str = '' Set's internal Admin Dashboard Site URL, normally empty.","title":"site_url"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.starception","text":"starception : bool = True Enable Starception Middleware.","title":"starception"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.static","text":"static : bool = True Enable the internal Static Folder ( msastatic ) and Mount to instance.","title":"static"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.sysrouter","text":"sysrouter : bool = True Enable the System Routes defined by router.system module (/sysinfo, /sysgpuinfo, /syserror, ...).","title":"sysrouter"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.tags","text":"tags : List [ str ] = [] Optional Metadata: Use this to carry some variables through the service instance.","title":"tags"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.templates","text":"templates : bool = True Enable the internal Templates and mount the directory.","title":"templates"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.templates_dir","text":"templates_dir : List [ str ] = [ \"msatemplates\" , \"msatemplates/errors\" , ] Set the List of Directories for the MSAUITemplate Engine to look for the requested template.","title":"templates_dir"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.timing","text":"timing : bool = False Enables Timing Middleware, reports timing data at the granularity of individual endpoint calls.","title":"timing"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.uvloop","text":"uvloop : bool = True Use UVLoop instead of asyncio loop.","title":"uvloop"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.validationception","text":"validationception : bool = True Enable Validation Exception Handler.","title":"validationception"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.version","text":"version : str = '0.0.0' Version of the Service.","title":"version"},{"location":"reference/models/service/#models.service.MSAServiceDefinition-functions","text":"","title":"Functions"},{"location":"reference/models/service/#models.service.MSAServiceDefinition.valid_url","text":"valid_url ( url : str ) Internal Validator for root_path and site_url to remove ending / .","title":"valid_url()"},{"location":"reference/models/service/#models.service-functions","text":"","title":"Functions"},{"location":"reference/models/service/#models.service.get_msa_app_settings","text":"get_msa_app_settings () -> MSAServiceDefinition This function returns a cached instance of the MSAServiceDefinition object. Note Caching is used to prevent re-reading the environment every time the API settings are used in an endpoint.","title":"get_msa_app_settings()"},{"location":"reference/models/wdc/","text":"msaSDK Module \u00b6 .models.wdc \u00b6 Classes \u00b6 WDCDocument \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' entities class-attribute \u00b6 entities : List [ WDCSpan ] = [] meanings class-attribute \u00b6 meanings : List [ WDCMeaning ] = [] ndepends class-attribute \u00b6 ndepends : int = 0 nentities class-attribute \u00b6 nentities : int = 0 nmeanings class-attribute \u00b6 nmeanings : int = 0 npages class-attribute \u00b6 npages : int = 0 nparagraphs class-attribute \u00b6 nparagraphs : int = 0 nsentences class-attribute \u00b6 nsentences : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 ntriples class-attribute \u00b6 ntriples : int = 0 nwords class-attribute \u00b6 nwords : int = 0 pages class-attribute \u00b6 pages : List [ WDCPage ] = [] Functions \u00b6 addEntity \u00b6 addEntity ( entity : WDCSpan ) addMeaning \u00b6 addMeaning ( meaning : WDCMeaning , pos : WDCPosition ) addPage \u00b6 addPage ( page : WDCPage ) getCurrentPageID \u00b6 getCurrentPageID () WDCItem \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = - 1 pos class-attribute \u00b6 pos : List [ Tuple ] = [] pos_text class-attribute \u00b6 pos_text : List [ str ] = [] score class-attribute \u00b6 score : float = 0.0 text class-attribute \u00b6 text : str = '' type class-attribute \u00b6 type : str = '' WDCMLDocument \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' df_data class-attribute \u00b6 df_data : List = [] entries class-attribute \u00b6 entries : List [ WDCMLEntry ] = [] leaderboard_html class-attribute \u00b6 leaderboard_html : str = '' nentries class-attribute \u00b6 nentries : int = 0 prediction_html class-attribute \u00b6 prediction_html : str = '' profile_html class-attribute \u00b6 profile_html : str = '' profile_learn_html class-attribute \u00b6 profile_learn_html : str = '' raw_json class-attribute \u00b6 raw_json : List [ Dict ] = [] targetsList class-attribute \u00b6 targetsList : List = [] trainList class-attribute \u00b6 trainList : List = [] Functions \u00b6 addEntry \u00b6 addEntry ( entry : WDCMLEntry ) get_leaderboard_html \u00b6 get_leaderboard_html () -> str get_prediction_html \u00b6 get_prediction_html () -> str get_profile_html \u00b6 get_profile_html () -> str get_profile_learn_html \u00b6 get_profile_learn_html () -> str set_leaderboard_html \u00b6 set_leaderboard_html ( strHTML : str ) set_prediction_html \u00b6 set_prediction_html ( strHTML : str ) set_profile_html \u00b6 set_profile_html ( strHTML : str ) set_profile_learn_html \u00b6 set_profile_learn_html ( strHTML : str ) WDCMLEntry \u00b6 Bases: SQLModel Attributes \u00b6 density class-attribute \u00b6 density : float = 0.0 en_tokens class-attribute \u00b6 en_tokens : List [ str ] = [] en_upos class-attribute \u00b6 en_upos : List [ str ] = [] en_xpos class-attribute \u00b6 en_xpos : List [ str ] = [] entities class-attribute \u00b6 entities : List [ WDCSpan ] = [] id class-attribute \u00b6 id : int = - 1 lng_tokens class-attribute \u00b6 lng_tokens : List [ str ] = [] lng_upos class-attribute \u00b6 lng_upos : List [ str ] = [] lng_xpos class-attribute \u00b6 lng_xpos : List [ str ] = [] meanings class-attribute \u00b6 meanings : List [ WDCMeaning ] = [] misc class-attribute \u00b6 misc : Dict = {} nentities class-attribute \u00b6 nentities : int = 0 nmeanings class-attribute \u00b6 nmeanings : int = 0 sentiment class-attribute \u00b6 sentiment : str = '' text class-attribute \u00b6 text : str = '' text_en class-attribute \u00b6 text_en : str = '' Functions \u00b6 addEntity \u00b6 addEntity ( entity : WDCSpan ) addMeaning \u00b6 addMeaning ( meaning : WDCMeaning , pos : WDCPosition ) WDCMeaning \u00b6 Bases: SQLModel Attributes \u00b6 Dict class-attribute \u00b6 Dict = {} context class-attribute \u00b6 context : List [ str ] = [] description class-attribute \u00b6 description : str = '' domains class-attribute \u00b6 domains : List [ str ] = [] entailments class-attribute \u00b6 entailments : List [ str ] = [] frames class-attribute \u00b6 frames : List [ str ] = [] frames_id class-attribute \u00b6 frames_id : List [ int ] = [] frames_set class-attribute \u00b6 frames_set : List [ str ] = [] frames_set_id class-attribute \u00b6 frames_set_id : List [ int ] = [] hits class-attribute \u00b6 hits : int = 1 holonyms class-attribute \u00b6 holonyms : List [ str ] = [] hypernyms class-attribute \u00b6 hypernyms : List [ str ] = [] hyponyms class-attribute \u00b6 hyponyms : List [ str ] = [] id class-attribute \u00b6 id : int = - 1 lemmas class-attribute \u00b6 lemmas : List [ str ] = [] lexname class-attribute \u00b6 lexname : str = '' meronyms class-attribute \u00b6 meronyms : List [ str ] = [] misc class-attribute \u00b6 misc = {} name class-attribute \u00b6 name : str = '' offset class-attribute \u00b6 offset : int = 0 pos class-attribute \u00b6 pos : str = '' positions class-attribute \u00b6 positions : List [ WDCPosition ] = [] root class-attribute \u00b6 root : str = '' root_tree class-attribute \u00b6 root_tree : List [ str ] = [] root_tree_names class-attribute \u00b6 root_tree_names : List [ str ] = [] sees class-attribute \u00b6 sees : List [ str ] = [] similar class-attribute \u00b6 similar : List [ str ] = [] ssid class-attribute \u00b6 ssid : str = '' synset class-attribute \u00b6 synset : str = '' token class-attribute \u00b6 token : str = '' tree class-attribute \u00b6 tree : List [ str ] = [] tree_names class-attribute \u00b6 tree_names : List [ str ] = [] type class-attribute \u00b6 type : str = '' Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) get_domains \u00b6 get_domains () -> str get_entailments \u00b6 get_entailments () -> str get_frames \u00b6 get_frames () -> str get_frames_set \u00b6 get_frames_set () -> str get_holonyms \u00b6 get_holonyms () -> str get_hypernyms \u00b6 get_hypernyms () -> str get_hyponyms \u00b6 get_hyponyms () -> str get_lemmas \u00b6 get_lemmas () -> str get_meronyms \u00b6 get_meronyms () -> str get_root_tree \u00b6 get_root_tree () -> str get_root_tree_names \u00b6 get_root_tree_names () -> str get_sees \u00b6 get_sees () -> str get_similar \u00b6 get_similar () -> str get_synset_list_names \u00b6 get_synset_list_names ( lst_syn : List , sep : str = \", \" ) -> str get_tooltip \u00b6 get_tooltip () -> str get_tree \u00b6 get_tree () -> str processSynset \u00b6 processSynset ( syn , type : str ) WDCPage \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' e class-attribute \u00b6 e : int = - 1 id class-attribute \u00b6 id : int = - 1 nparagraphs class-attribute \u00b6 nparagraphs : int = 0 paragraphs class-attribute \u00b6 paragraphs : List [ WDCParagraph ] = [] s class-attribute \u00b6 s : int = - 1 Functions \u00b6 addParagraph \u00b6 addParagraph ( paragraph : WDCParagraph ) WDCParagraph \u00b6 Bases: SQLModel Attributes \u00b6 content class-attribute \u00b6 content : str = '' id class-attribute \u00b6 id : int = - 1 lang class-attribute \u00b6 lang : Optional [ str ] = None ndepends class-attribute \u00b6 ndepends : int = 0 nentities class-attribute \u00b6 nentities : int = 0 nsentences class-attribute \u00b6 nsentences : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 nwords class-attribute \u00b6 nwords : int = 0 position class-attribute \u00b6 position : WDCPosition = WDCPosition () semantic class-attribute \u00b6 semantic : str = '' sentences class-attribute \u00b6 sentences : List [ WDCSentence ] = [] Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) addSentence \u00b6 addSentence ( sentence : WDCSentence ) getTextNoLF \u00b6 getTextNoLF () WDCPosition \u00b6 Bases: SQLModel Attributes \u00b6 e class-attribute \u00b6 e : int = - 1 id class-attribute \u00b6 id : int = 0 pageid class-attribute \u00b6 pageid : int = - 1 paraid class-attribute \u00b6 paraid : int = - 1 s class-attribute \u00b6 s : int = - 1 senid class-attribute \u00b6 senid : int = - 1 WDCSentence \u00b6 Bases: SQLModel Attributes \u00b6 density class-attribute \u00b6 density : float = 0.0 dependencies class-attribute \u00b6 dependencies : List = [] en_tokens class-attribute \u00b6 en_tokens : List [ str ] = [] en_upos class-attribute \u00b6 en_upos : List [ str ] = [] en_xpos class-attribute \u00b6 en_xpos : List [ str ] = [] id class-attribute \u00b6 id : int = - 1 lng_tokens class-attribute \u00b6 lng_tokens : List [ str ] = [] lng_upos class-attribute \u00b6 lng_upos : List [ str ] = [] lng_xpos class-attribute \u00b6 lng_xpos : List [ str ] = [] misc class-attribute \u00b6 misc : Dict = {} ndepends class-attribute \u00b6 ndepends : int = 0 nentities class-attribute \u00b6 nentities : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 ntriples class-attribute \u00b6 ntriples : int = 0 nwords class-attribute \u00b6 nwords : int = 0 position class-attribute \u00b6 position : WDCPosition = WDCPosition () sentiment class-attribute \u00b6 sentiment : str = '' text class-attribute \u00b6 text : str = '' text_en class-attribute \u00b6 text_en : str = '' tokens class-attribute \u00b6 tokens : List [ WDCToken ] = [] triples class-attribute \u00b6 triples : List [ WDCTriple ] = [] Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) addToken \u00b6 addToken ( tok : WDCToken ) addTriple \u00b6 addTriple ( triple : WDCTriple ) WDCSpan \u00b6 Bases: SQLModel Attributes \u00b6 Dict class-attribute \u00b6 Dict = {} id class-attribute \u00b6 id : int = - 1 misc class-attribute \u00b6 misc = {} npos class-attribute \u00b6 npos : int = 0 ntokens class-attribute \u00b6 ntokens : int = 0 positions class-attribute \u00b6 positions : List [ WDCPosition ] = [] text class-attribute \u00b6 text : str = '' tokens class-attribute \u00b6 tokens : List [ WDCToken ] = [] type class-attribute \u00b6 type : str = '' Functions \u00b6 addPosition \u00b6 addPosition ( pos : WDCPosition ) WDCToken \u00b6 Bases: SQLModel Attributes \u00b6 density class-attribute \u00b6 density : float = 0.0 id class-attribute \u00b6 id : int = - 1 misc class-attribute \u00b6 misc : Dict = {} ner class-attribute \u00b6 ner : str = '' nwords class-attribute \u00b6 nwords : int = 0 position class-attribute \u00b6 position : WDCPosition = WDCPosition () text class-attribute \u00b6 text : str = '' words class-attribute \u00b6 words : List [ WDCWord ] = [] Functions \u00b6 addWord \u00b6 addWord ( wrd : WDCWord ) WDCTriple \u00b6 Bases: SQLModel Attributes \u00b6 id class-attribute \u00b6 id : int = - 1 object class-attribute \u00b6 object : Dict = {} perspective class-attribute \u00b6 perspective : Dict = {} position class-attribute \u00b6 position : WDCPosition = WDCPosition () predicate class-attribute \u00b6 predicate : Dict = {} score class-attribute \u00b6 score : float = 0.0 subject class-attribute \u00b6 subject : Dict = {} utterance class-attribute \u00b6 utterance : str = '' WDCWord \u00b6 Bases: SQLModel Attributes \u00b6 deps class-attribute \u00b6 deps : str = '' head class-attribute \u00b6 head : int = - 1 id class-attribute \u00b6 id : int = - 1 label class-attribute \u00b6 label : str = '' lemma class-attribute \u00b6 lemma : str = '' misc class-attribute \u00b6 misc : Optional [ str ] = None morph class-attribute \u00b6 morph : str = '' pos class-attribute \u00b6 pos : str = '' role class-attribute \u00b6 role : str = '' text class-attribute \u00b6 text : str = '' type class-attribute \u00b6 type : Optional [ str ] = ''","title":"wdc"},{"location":"reference/models/wdc/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/wdc/#modelswdc","text":"","title":".models.wdc"},{"location":"reference/models/wdc/#models.wdc-classes","text":"","title":"Classes"},{"location":"reference/models/wdc/#models.wdc.WDCDocument","text":"Bases: SQLModel","title":"WDCDocument"},{"location":"reference/models/wdc/#models.wdc.WDCDocument-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.entities","text":"entities : List [ WDCSpan ] = []","title":"entities"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.meanings","text":"meanings : List [ WDCMeaning ] = []","title":"meanings"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.ndepends","text":"ndepends : int = 0","title":"ndepends"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nmeanings","text":"nmeanings : int = 0","title":"nmeanings"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.npages","text":"npages : int = 0","title":"npages"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nparagraphs","text":"nparagraphs : int = 0","title":"nparagraphs"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nsentences","text":"nsentences : int = 0","title":"nsentences"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.ntriples","text":"ntriples : int = 0","title":"ntriples"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.pages","text":"pages : List [ WDCPage ] = []","title":"pages"},{"location":"reference/models/wdc/#models.wdc.WDCDocument-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.addEntity","text":"addEntity ( entity : WDCSpan )","title":"addEntity()"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.addMeaning","text":"addMeaning ( meaning : WDCMeaning , pos : WDCPosition )","title":"addMeaning()"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.addPage","text":"addPage ( page : WDCPage )","title":"addPage()"},{"location":"reference/models/wdc/#models.wdc.WDCDocument.getCurrentPageID","text":"getCurrentPageID ()","title":"getCurrentPageID()"},{"location":"reference/models/wdc/#models.wdc.WDCItem","text":"Bases: SQLModel","title":"WDCItem"},{"location":"reference/models/wdc/#models.wdc.WDCItem-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCItem.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCItem.pos","text":"pos : List [ Tuple ] = []","title":"pos"},{"location":"reference/models/wdc/#models.wdc.WDCItem.pos_text","text":"pos_text : List [ str ] = []","title":"pos_text"},{"location":"reference/models/wdc/#models.wdc.WDCItem.score","text":"score : float = 0.0","title":"score"},{"location":"reference/models/wdc/#models.wdc.WDCItem.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCItem.type","text":"type : str = ''","title":"type"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument","text":"Bases: SQLModel","title":"WDCMLDocument"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.df_data","text":"df_data : List = []","title":"df_data"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.entries","text":"entries : List [ WDCMLEntry ] = []","title":"entries"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.leaderboard_html","text":"leaderboard_html : str = ''","title":"leaderboard_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.nentries","text":"nentries : int = 0","title":"nentries"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.prediction_html","text":"prediction_html : str = ''","title":"prediction_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.profile_html","text":"profile_html : str = ''","title":"profile_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.profile_learn_html","text":"profile_learn_html : str = ''","title":"profile_learn_html"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.raw_json","text":"raw_json : List [ Dict ] = []","title":"raw_json"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.targetsList","text":"targetsList : List = []","title":"targetsList"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.trainList","text":"trainList : List = []","title":"trainList"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.addEntry","text":"addEntry ( entry : WDCMLEntry )","title":"addEntry()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_leaderboard_html","text":"get_leaderboard_html () -> str","title":"get_leaderboard_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_prediction_html","text":"get_prediction_html () -> str","title":"get_prediction_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_profile_html","text":"get_profile_html () -> str","title":"get_profile_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.get_profile_learn_html","text":"get_profile_learn_html () -> str","title":"get_profile_learn_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_leaderboard_html","text":"set_leaderboard_html ( strHTML : str )","title":"set_leaderboard_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_prediction_html","text":"set_prediction_html ( strHTML : str )","title":"set_prediction_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_profile_html","text":"set_profile_html ( strHTML : str )","title":"set_profile_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLDocument.set_profile_learn_html","text":"set_profile_learn_html ( strHTML : str )","title":"set_profile_learn_html()"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry","text":"Bases: SQLModel","title":"WDCMLEntry"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.density","text":"density : float = 0.0","title":"density"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.en_tokens","text":"en_tokens : List [ str ] = []","title":"en_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.en_upos","text":"en_upos : List [ str ] = []","title":"en_upos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.en_xpos","text":"en_xpos : List [ str ] = []","title":"en_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.entities","text":"entities : List [ WDCSpan ] = []","title":"entities"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.lng_tokens","text":"lng_tokens : List [ str ] = []","title":"lng_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.lng_upos","text":"lng_upos : List [ str ] = []","title":"lng_upos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.lng_xpos","text":"lng_xpos : List [ str ] = []","title":"lng_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.meanings","text":"meanings : List [ WDCMeaning ] = []","title":"meanings"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.misc","text":"misc : Dict = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.nmeanings","text":"nmeanings : int = 0","title":"nmeanings"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.sentiment","text":"sentiment : str = ''","title":"sentiment"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.text_en","text":"text_en : str = ''","title":"text_en"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.addEntity","text":"addEntity ( entity : WDCSpan )","title":"addEntity()"},{"location":"reference/models/wdc/#models.wdc.WDCMLEntry.addMeaning","text":"addMeaning ( meaning : WDCMeaning , pos : WDCPosition )","title":"addMeaning()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning","text":"Bases: SQLModel","title":"WDCMeaning"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.Dict","text":"Dict = {}","title":"Dict"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.context","text":"context : List [ str ] = []","title":"context"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.description","text":"description : str = ''","title":"description"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.domains","text":"domains : List [ str ] = []","title":"domains"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.entailments","text":"entailments : List [ str ] = []","title":"entailments"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames","text":"frames : List [ str ] = []","title":"frames"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames_id","text":"frames_id : List [ int ] = []","title":"frames_id"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames_set","text":"frames_set : List [ str ] = []","title":"frames_set"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.frames_set_id","text":"frames_set_id : List [ int ] = []","title":"frames_set_id"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.hits","text":"hits : int = 1","title":"hits"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.holonyms","text":"holonyms : List [ str ] = []","title":"holonyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.hypernyms","text":"hypernyms : List [ str ] = []","title":"hypernyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.hyponyms","text":"hyponyms : List [ str ] = []","title":"hyponyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.lemmas","text":"lemmas : List [ str ] = []","title":"lemmas"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.lexname","text":"lexname : str = ''","title":"lexname"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.meronyms","text":"meronyms : List [ str ] = []","title":"meronyms"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.misc","text":"misc = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.name","text":"name : str = ''","title":"name"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.offset","text":"offset : int = 0","title":"offset"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.pos","text":"pos : str = ''","title":"pos"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.positions","text":"positions : List [ WDCPosition ] = []","title":"positions"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.root","text":"root : str = ''","title":"root"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.root_tree","text":"root_tree : List [ str ] = []","title":"root_tree"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.root_tree_names","text":"root_tree_names : List [ str ] = []","title":"root_tree_names"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.sees","text":"sees : List [ str ] = []","title":"sees"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.similar","text":"similar : List [ str ] = []","title":"similar"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.ssid","text":"ssid : str = ''","title":"ssid"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.synset","text":"synset : str = ''","title":"synset"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.token","text":"token : str = ''","title":"token"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.tree","text":"tree : List [ str ] = []","title":"tree"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.tree_names","text":"tree_names : List [ str ] = []","title":"tree_names"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.type","text":"type : str = ''","title":"type"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_domains","text":"get_domains () -> str","title":"get_domains()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_entailments","text":"get_entailments () -> str","title":"get_entailments()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_frames","text":"get_frames () -> str","title":"get_frames()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_frames_set","text":"get_frames_set () -> str","title":"get_frames_set()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_holonyms","text":"get_holonyms () -> str","title":"get_holonyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_hypernyms","text":"get_hypernyms () -> str","title":"get_hypernyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_hyponyms","text":"get_hyponyms () -> str","title":"get_hyponyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_lemmas","text":"get_lemmas () -> str","title":"get_lemmas()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_meronyms","text":"get_meronyms () -> str","title":"get_meronyms()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_root_tree","text":"get_root_tree () -> str","title":"get_root_tree()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_root_tree_names","text":"get_root_tree_names () -> str","title":"get_root_tree_names()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_sees","text":"get_sees () -> str","title":"get_sees()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_similar","text":"get_similar () -> str","title":"get_similar()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_synset_list_names","text":"get_synset_list_names ( lst_syn : List , sep : str = \", \" ) -> str","title":"get_synset_list_names()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_tooltip","text":"get_tooltip () -> str","title":"get_tooltip()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.get_tree","text":"get_tree () -> str","title":"get_tree()"},{"location":"reference/models/wdc/#models.wdc.WDCMeaning.processSynset","text":"processSynset ( syn , type : str )","title":"processSynset()"},{"location":"reference/models/wdc/#models.wdc.WDCPage","text":"Bases: SQLModel","title":"WDCPage"},{"location":"reference/models/wdc/#models.wdc.WDCPage-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCPage.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCPage.e","text":"e : int = - 1","title":"e"},{"location":"reference/models/wdc/#models.wdc.WDCPage.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCPage.nparagraphs","text":"nparagraphs : int = 0","title":"nparagraphs"},{"location":"reference/models/wdc/#models.wdc.WDCPage.paragraphs","text":"paragraphs : List [ WDCParagraph ] = []","title":"paragraphs"},{"location":"reference/models/wdc/#models.wdc.WDCPage.s","text":"s : int = - 1","title":"s"},{"location":"reference/models/wdc/#models.wdc.WDCPage-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCPage.addParagraph","text":"addParagraph ( paragraph : WDCParagraph )","title":"addParagraph()"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph","text":"Bases: SQLModel","title":"WDCParagraph"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.content","text":"content : str = ''","title":"content"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.lang","text":"lang : Optional [ str ] = None","title":"lang"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.ndepends","text":"ndepends : int = 0","title":"ndepends"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.nsentences","text":"nsentences : int = 0","title":"nsentences"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.semantic","text":"semantic : str = ''","title":"semantic"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.sentences","text":"sentences : List [ WDCSentence ] = []","title":"sentences"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.addSentence","text":"addSentence ( sentence : WDCSentence )","title":"addSentence()"},{"location":"reference/models/wdc/#models.wdc.WDCParagraph.getTextNoLF","text":"getTextNoLF ()","title":"getTextNoLF()"},{"location":"reference/models/wdc/#models.wdc.WDCPosition","text":"Bases: SQLModel","title":"WDCPosition"},{"location":"reference/models/wdc/#models.wdc.WDCPosition-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.e","text":"e : int = - 1","title":"e"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.id","text":"id : int = 0","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.pageid","text":"pageid : int = - 1","title":"pageid"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.paraid","text":"paraid : int = - 1","title":"paraid"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.s","text":"s : int = - 1","title":"s"},{"location":"reference/models/wdc/#models.wdc.WDCPosition.senid","text":"senid : int = - 1","title":"senid"},{"location":"reference/models/wdc/#models.wdc.WDCSentence","text":"Bases: SQLModel","title":"WDCSentence"},{"location":"reference/models/wdc/#models.wdc.WDCSentence-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.density","text":"density : float = 0.0","title":"density"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.dependencies","text":"dependencies : List = []","title":"dependencies"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.en_tokens","text":"en_tokens : List [ str ] = []","title":"en_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.en_upos","text":"en_upos : List [ str ] = []","title":"en_upos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.en_xpos","text":"en_xpos : List [ str ] = []","title":"en_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.lng_tokens","text":"lng_tokens : List [ str ] = []","title":"lng_tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.lng_upos","text":"lng_upos : List [ str ] = []","title":"lng_upos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.lng_xpos","text":"lng_xpos : List [ str ] = []","title":"lng_xpos"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.misc","text":"misc : Dict = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.ndepends","text":"ndepends : int = 0","title":"ndepends"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.nentities","text":"nentities : int = 0","title":"nentities"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.ntriples","text":"ntriples : int = 0","title":"ntriples"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.sentiment","text":"sentiment : str = ''","title":"sentiment"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.text_en","text":"text_en : str = ''","title":"text_en"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.tokens","text":"tokens : List [ WDCToken ] = []","title":"tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.triples","text":"triples : List [ WDCTriple ] = []","title":"triples"},{"location":"reference/models/wdc/#models.wdc.WDCSentence-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.addToken","text":"addToken ( tok : WDCToken )","title":"addToken()"},{"location":"reference/models/wdc/#models.wdc.WDCSentence.addTriple","text":"addTriple ( triple : WDCTriple )","title":"addTriple()"},{"location":"reference/models/wdc/#models.wdc.WDCSpan","text":"Bases: SQLModel","title":"WDCSpan"},{"location":"reference/models/wdc/#models.wdc.WDCSpan-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.Dict","text":"Dict = {}","title":"Dict"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.misc","text":"misc = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.npos","text":"npos : int = 0","title":"npos"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.ntokens","text":"ntokens : int = 0","title":"ntokens"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.positions","text":"positions : List [ WDCPosition ] = []","title":"positions"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.tokens","text":"tokens : List [ WDCToken ] = []","title":"tokens"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.type","text":"type : str = ''","title":"type"},{"location":"reference/models/wdc/#models.wdc.WDCSpan-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCSpan.addPosition","text":"addPosition ( pos : WDCPosition )","title":"addPosition()"},{"location":"reference/models/wdc/#models.wdc.WDCToken","text":"Bases: SQLModel","title":"WDCToken"},{"location":"reference/models/wdc/#models.wdc.WDCToken-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCToken.density","text":"density : float = 0.0","title":"density"},{"location":"reference/models/wdc/#models.wdc.WDCToken.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCToken.misc","text":"misc : Dict = {}","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCToken.ner","text":"ner : str = ''","title":"ner"},{"location":"reference/models/wdc/#models.wdc.WDCToken.nwords","text":"nwords : int = 0","title":"nwords"},{"location":"reference/models/wdc/#models.wdc.WDCToken.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCToken.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCToken.words","text":"words : List [ WDCWord ] = []","title":"words"},{"location":"reference/models/wdc/#models.wdc.WDCToken-functions","text":"","title":"Functions"},{"location":"reference/models/wdc/#models.wdc.WDCToken.addWord","text":"addWord ( wrd : WDCWord )","title":"addWord()"},{"location":"reference/models/wdc/#models.wdc.WDCTriple","text":"Bases: SQLModel","title":"WDCTriple"},{"location":"reference/models/wdc/#models.wdc.WDCTriple-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.object","text":"object : Dict = {}","title":"object"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.perspective","text":"perspective : Dict = {}","title":"perspective"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.position","text":"position : WDCPosition = WDCPosition ()","title":"position"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.predicate","text":"predicate : Dict = {}","title":"predicate"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.score","text":"score : float = 0.0","title":"score"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.subject","text":"subject : Dict = {}","title":"subject"},{"location":"reference/models/wdc/#models.wdc.WDCTriple.utterance","text":"utterance : str = ''","title":"utterance"},{"location":"reference/models/wdc/#models.wdc.WDCWord","text":"Bases: SQLModel","title":"WDCWord"},{"location":"reference/models/wdc/#models.wdc.WDCWord-attributes","text":"","title":"Attributes"},{"location":"reference/models/wdc/#models.wdc.WDCWord.deps","text":"deps : str = ''","title":"deps"},{"location":"reference/models/wdc/#models.wdc.WDCWord.head","text":"head : int = - 1","title":"head"},{"location":"reference/models/wdc/#models.wdc.WDCWord.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wdc/#models.wdc.WDCWord.label","text":"label : str = ''","title":"label"},{"location":"reference/models/wdc/#models.wdc.WDCWord.lemma","text":"lemma : str = ''","title":"lemma"},{"location":"reference/models/wdc/#models.wdc.WDCWord.misc","text":"misc : Optional [ str ] = None","title":"misc"},{"location":"reference/models/wdc/#models.wdc.WDCWord.morph","text":"morph : str = ''","title":"morph"},{"location":"reference/models/wdc/#models.wdc.WDCWord.pos","text":"pos : str = ''","title":"pos"},{"location":"reference/models/wdc/#models.wdc.WDCWord.role","text":"role : str = ''","title":"role"},{"location":"reference/models/wdc/#models.wdc.WDCWord.text","text":"text : str = ''","title":"text"},{"location":"reference/models/wdc/#models.wdc.WDCWord.type","text":"type : Optional [ str ] = ''","title":"type"},{"location":"reference/models/wfl/","text":"msaSDK Module \u00b6 .models.wfl \u00b6 Attributes \u00b6 list_node_modules module-attribute \u00b6 list_node_modules : List [ WFLModule ] = [] list_node_types module-attribute \u00b6 list_node_types : List [ WFLNodeType ] = [] Classes \u00b6 WFLModule \u00b6 Bases: SQLModel Attributes \u00b6 description class-attribute \u00b6 description : str = '' id class-attribute \u00b6 id : int = - 1 name class-attribute \u00b6 name : str = '' short class-attribute \u00b6 short : str = '' step class-attribute \u00b6 step : str = '00000' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False WFLNodeType \u00b6 Bases: SQLModel Attributes \u00b6 description class-attribute \u00b6 description : str = '' grp class-attribute \u00b6 grp : str = '00000' icon class-attribute \u00b6 icon : str = 'input' id class-attribute \u00b6 id : int = - 1 name class-attribute \u00b6 name : str = '' short class-attribute \u00b6 short : str = '' Classes \u00b6 Config \u00b6 Attributes \u00b6 orm_mode class-attribute \u00b6 orm_mode = False","title":"wfl"},{"location":"reference/models/wfl/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/models/wfl/#modelswfl","text":"","title":".models.wfl"},{"location":"reference/models/wfl/#models.wfl-attributes","text":"","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.list_node_modules","text":"list_node_modules : List [ WFLModule ] = []","title":"list_node_modules"},{"location":"reference/models/wfl/#models.wfl.list_node_types","text":"list_node_types : List [ WFLNodeType ] = []","title":"list_node_types"},{"location":"reference/models/wfl/#models.wfl-classes","text":"","title":"Classes"},{"location":"reference/models/wfl/#models.wfl.WFLModule","text":"Bases: SQLModel","title":"WFLModule"},{"location":"reference/models/wfl/#models.wfl.WFLModule-attributes","text":"","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.WFLModule.description","text":"description : str = ''","title":"description"},{"location":"reference/models/wfl/#models.wfl.WFLModule.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wfl/#models.wfl.WFLModule.name","text":"name : str = ''","title":"name"},{"location":"reference/models/wfl/#models.wfl.WFLModule.short","text":"short : str = ''","title":"short"},{"location":"reference/models/wfl/#models.wfl.WFLModule.step","text":"step : str = '00000'","title":"step"},{"location":"reference/models/wfl/#models.wfl.WFLModule-classes","text":"","title":"Classes"},{"location":"reference/models/wfl/#models.wfl.WFLModule.Config","text":"","title":"Config"},{"location":"reference/models/wfl/#models.wfl.WFLModule.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType","text":"Bases: SQLModel","title":"WFLNodeType"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType-attributes","text":"","title":"Attributes"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.description","text":"description : str = ''","title":"description"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.grp","text":"grp : str = '00000'","title":"grp"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.icon","text":"icon : str = 'input'","title":"icon"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.id","text":"id : int = - 1","title":"id"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.name","text":"name : str = ''","title":"name"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.short","text":"short : str = ''","title":"short"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType-classes","text":"","title":"Classes"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.Config","text":"","title":"Config"},{"location":"reference/models/wfl/#models.wfl.WFLNodeType.Config-attributes","text":"orm_mode class-attribute \u00b6 orm_mode = False","title":"Attributes"},{"location":"reference/router/system/","text":"msaSDK Module \u00b6 .router.system \u00b6 Attributes \u00b6 sys_router module-attribute \u00b6 sys_router = APIRouter ( prefix = \"\" , tags = [ \"system\" ], include_in_schema = True ) Functions \u00b6 system_gpu_info \u00b6 system_gpu_info ( request : Request ) -> MSASystemGPUInfo Get System Nvidia GPU's Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysgpuinfo MSASystemGPUInfo Pydantic Model TYPE: MSASystemGPUInfo system_info \u00b6 system_info ( request : Request ) -> MSASystemInfo Get System Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysinfo MSASystemInfo Pydantic Model TYPE: MSASystemInfo system_test_error \u00b6 system_test_error ( request : Request ) -> TypeError Create an Error to test the interception middleware. With an HTTP request it replies with an HTML Interception Page PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RAISES DESCRIPTION TypeError TypeError('msaSDK System Test error...')","title":"system"},{"location":"reference/router/system/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/router/system/#routersystem","text":"","title":".router.system"},{"location":"reference/router/system/#router.system-attributes","text":"","title":"Attributes"},{"location":"reference/router/system/#router.system.sys_router","text":"sys_router = APIRouter ( prefix = \"\" , tags = [ \"system\" ], include_in_schema = True )","title":"sys_router"},{"location":"reference/router/system/#router.system-functions","text":"","title":"Functions"},{"location":"reference/router/system/#router.system.system_gpu_info","text":"system_gpu_info ( request : Request ) -> MSASystemGPUInfo Get System Nvidia GPU's Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysgpuinfo MSASystemGPUInfo Pydantic Model TYPE: MSASystemGPUInfo","title":"system_gpu_info()"},{"location":"reference/router/system/#router.system.system_info","text":"system_info ( request : Request ) -> MSASystemInfo Get System Info PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RETURNS DESCRIPTION sysinfo MSASystemInfo Pydantic Model TYPE: MSASystemInfo","title":"system_info()"},{"location":"reference/router/system/#router.system.system_test_error","text":"system_test_error ( request : Request ) -> TypeError Create an Error to test the interception middleware. With an HTTP request it replies with an HTML Interception Page PARAMETER DESCRIPTION request HTTP Request. TYPE: Request RAISES DESCRIPTION TypeError TypeError('msaSDK System Test error...')","title":"system_test_error()"},{"location":"reference/server/srv_gunicorn/","text":"msaSDK Module \u00b6 .server.srv_gunicorn \u00b6 Attributes \u00b6 JSON_LOGS module-attribute \u00b6 JSON_LOGS = ( True if os . environ . get ( \"JSON_LOGS\" , \"0\" ) == \"1\" else False ) Classes \u00b6 InterceptHandler \u00b6 Bases: logging . Handler Functions \u00b6 emit \u00b6 emit ( record ) MSAServerGunicorn \u00b6 Attributes \u00b6 app instance-attribute \u00b6 app : MSAApp = app app_dir instance-attribute \u00b6 app_dir : str = app_dir host instance-attribute \u00b6 host : str = host intercept_handler instance-attribute \u00b6 intercept_handler = InterceptHandler () log_level instance-attribute \u00b6 log_level : str = log_level port instance-attribute \u00b6 port : int = port reload instance-attribute \u00b6 reload : bool = reload seen instance-attribute \u00b6 seen = set () workers instance-attribute \u00b6 workers : int = workers Functions \u00b6 __init__ \u00b6 __init__ ( app : MSAApp , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = - 1 , ) -> None run \u00b6 run () StandaloneApplication \u00b6 Bases: BaseApplication , ABC Attributes \u00b6 application instance-attribute \u00b6 application : MSAApp = app options instance-attribute \u00b6 options = options or {} Functions \u00b6 __init__ \u00b6 __init__ ( app : MSAApp , options = None ) load \u00b6 load () load_config \u00b6 load_config () StubbedGunicornLogger \u00b6 Bases: Logger Attributes \u00b6 access_logger instance-attribute \u00b6 access_logger = logging . getLogger ( 'gunicorn.access' ) error_logger instance-attribute \u00b6 error_logger = logging . getLogger ( 'gunicorn.error' ) handler instance-attribute \u00b6 handler = logging . NullHandler () log_level instance-attribute \u00b6 log_level : str = log_level Functions \u00b6 __init__ \u00b6 __init__ ( cfg , log_level : str = 'info' ) Functions \u00b6 number_of_workers \u00b6 number_of_workers ()","title":"srv_gunicorn"},{"location":"reference/server/srv_gunicorn/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/server/srv_gunicorn/#serversrv_gunicorn","text":"","title":".server.srv_gunicorn"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.JSON_LOGS","text":"JSON_LOGS = ( True if os . environ . get ( \"JSON_LOGS\" , \"0\" ) == \"1\" else False )","title":"JSON_LOGS"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn-classes","text":"","title":"Classes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.InterceptHandler","text":"Bases: logging . Handler","title":"InterceptHandler"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.InterceptHandler-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.InterceptHandler.emit","text":"emit ( record )","title":"emit()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn","text":"","title":"MSAServerGunicorn"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.app","text":"app : MSAApp = app","title":"app"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.app_dir","text":"app_dir : str = app_dir","title":"app_dir"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.host","text":"host : str = host","title":"host"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.intercept_handler","text":"intercept_handler = InterceptHandler ()","title":"intercept_handler"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.log_level","text":"log_level : str = log_level","title":"log_level"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.port","text":"port : int = port","title":"port"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.reload","text":"reload : bool = reload","title":"reload"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.seen","text":"seen = set ()","title":"seen"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.workers","text":"workers : int = workers","title":"workers"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.__init__","text":"__init__ ( app : MSAApp , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = - 1 , ) -> None","title":"__init__()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.MSAServerGunicorn.run","text":"run ()","title":"run()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication","text":"Bases: BaseApplication , ABC","title":"StandaloneApplication"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.application","text":"application : MSAApp = app","title":"application"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.options","text":"options = options or {}","title":"options"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.__init__","text":"__init__ ( app : MSAApp , options = None )","title":"__init__()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.load","text":"load ()","title":"load()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StandaloneApplication.load_config","text":"load_config ()","title":"load_config()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger","text":"Bases: Logger","title":"StubbedGunicornLogger"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.access_logger","text":"access_logger = logging . getLogger ( 'gunicorn.access' )","title":"access_logger"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.error_logger","text":"error_logger = logging . getLogger ( 'gunicorn.error' )","title":"error_logger"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.handler","text":"handler = logging . NullHandler ()","title":"handler"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.log_level","text":"log_level : str = log_level","title":"log_level"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.StubbedGunicornLogger.__init__","text":"__init__ ( cfg , log_level : str = 'info' )","title":"__init__()"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn-functions","text":"","title":"Functions"},{"location":"reference/server/srv_gunicorn/#server.srv_gunicorn.number_of_workers","text":"number_of_workers ()","title":"number_of_workers()"},{"location":"reference/server/srv_uvicorn/","text":"msaSDK Module \u00b6 .server.srv_uvicorn \u00b6 Classes \u00b6 MSAServerUvicorn \u00b6 Attributes \u00b6 app instance-attribute \u00b6 app : str = app app_dir instance-attribute \u00b6 app_dir : str = app_dir host instance-attribute \u00b6 host : str = host log_config instance-attribute \u00b6 log_config = uvicorn . config . LOGGING_CONFIG log_level instance-attribute \u00b6 log_level : str = log_level port instance-attribute \u00b6 port : int = port reload instance-attribute \u00b6 reload : bool = reload workers instance-attribute \u00b6 workers : int = workers Functions \u00b6 __init__ \u00b6 __init__ ( app : str , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = 1 , ) -> None run \u00b6 run ()","title":"srv_uvicorn"},{"location":"reference/server/srv_uvicorn/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/server/srv_uvicorn/#serversrv_uvicorn","text":"","title":".server.srv_uvicorn"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn-classes","text":"","title":"Classes"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn","text":"","title":"MSAServerUvicorn"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn-attributes","text":"","title":"Attributes"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.app","text":"app : str = app","title":"app"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.app_dir","text":"app_dir : str = app_dir","title":"app_dir"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.host","text":"host : str = host","title":"host"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.log_config","text":"log_config = uvicorn . config . LOGGING_CONFIG","title":"log_config"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.log_level","text":"log_level : str = log_level","title":"log_level"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.port","text":"port : int = port","title":"port"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.reload","text":"reload : bool = reload","title":"reload"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.workers","text":"workers : int = workers","title":"workers"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn-functions","text":"","title":"Functions"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.__init__","text":"__init__ ( app : str , app_dir : str , host : str , port : int , reload : bool = False , log_level : str = \"info\" , workers : int = 1 , ) -> None","title":"__init__()"},{"location":"reference/server/srv_uvicorn/#server.srv_uvicorn.MSAServerUvicorn.run","text":"run ()","title":"run()"},{"location":"reference/services/wdc/","text":"msaSDK Module \u00b6 .services.wdc \u00b6 Functions \u00b6 createEntity async \u00b6 createEntity ( paragraph : WDCParagraph , ent , optionCountry : bool , optionOrg : bool , optionDensity : bool , optionNatural : bool , langcode : str , ) createEntityOnly async \u00b6 createEntityOnly ( text : str , type : str , start : int , end : int , pageid : int = - 1 , paraid : int = - 1 , senid : int = - 1 , misc = None , ) createEntitySimple async \u00b6 createEntitySimple ( paragraph : WDCParagraph , text , type , start , end , misc , x , senx , ) createNewDoc async \u00b6 createNewDoc ( inputText : str , langcode : str = 'en' ) createNewMLDoc async \u00b6 createNewMLDoc ( data : dict , langcode : str = \"en\" , optionTargetFields : str = \"IMPULSKATEGORIE, IMPULSART\" , optionTrainFields : str = \"SACHVERHALT\" , ) createNewParagraphs async \u00b6 createNewParagraphs ( page : WDCPage , sdu_page : SDUPage , parmove : int , optionSentiment : bool , langcode : str , ) createParagraph async \u00b6 createParagraph ( par , x ) createToken async \u00b6 createToken ( tok , optionDensity : bool , optionNatural : bool , langcode : str , ) createTriple async \u00b6 createTriple ( triple : Dict , x ) createWord async \u00b6 createWord ( wrd ) getCompleteRoleFromDep async \u00b6 getCompleteRoleFromDep ( dep ) -> str getResultDependencies async \u00b6 getResultDependencies ( doc : WDCDocument ) getResultEntities async \u00b6 getResultEntities ( doc : WDCDocument ) getResultEntitiesGroups async \u00b6 getResultEntitiesGroups ( doc : WDCDocument ) getResultPages async \u00b6 getResultPages ( doc : WDCDocument ) getResultParagraphs async \u00b6 getResultParagraphs ( doc : WDCDocument ) getResultSentences async \u00b6 getResultSentences ( doc : WDCDocument ) getResultTokens async \u00b6 getResultTokens ( doc : WDCDocument ) getResultTriples async \u00b6 getResultTriples ( doc : WDCDocument ) getResultWords async \u00b6 getResultWords ( doc : WDCDocument )","title":"wdc"},{"location":"reference/services/wdc/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/services/wdc/#serviceswdc","text":"","title":".services.wdc"},{"location":"reference/services/wdc/#services.wdc-functions","text":"","title":"Functions"},{"location":"reference/services/wdc/#services.wdc.createEntity","text":"createEntity ( paragraph : WDCParagraph , ent , optionCountry : bool , optionOrg : bool , optionDensity : bool , optionNatural : bool , langcode : str , )","title":"createEntity()"},{"location":"reference/services/wdc/#services.wdc.createEntityOnly","text":"createEntityOnly ( text : str , type : str , start : int , end : int , pageid : int = - 1 , paraid : int = - 1 , senid : int = - 1 , misc = None , )","title":"createEntityOnly()"},{"location":"reference/services/wdc/#services.wdc.createEntitySimple","text":"createEntitySimple ( paragraph : WDCParagraph , text , type , start , end , misc , x , senx , )","title":"createEntitySimple()"},{"location":"reference/services/wdc/#services.wdc.createNewDoc","text":"createNewDoc ( inputText : str , langcode : str = 'en' )","title":"createNewDoc()"},{"location":"reference/services/wdc/#services.wdc.createNewMLDoc","text":"createNewMLDoc ( data : dict , langcode : str = \"en\" , optionTargetFields : str = \"IMPULSKATEGORIE, IMPULSART\" , optionTrainFields : str = \"SACHVERHALT\" , )","title":"createNewMLDoc()"},{"location":"reference/services/wdc/#services.wdc.createNewParagraphs","text":"createNewParagraphs ( page : WDCPage , sdu_page : SDUPage , parmove : int , optionSentiment : bool , langcode : str , )","title":"createNewParagraphs()"},{"location":"reference/services/wdc/#services.wdc.createParagraph","text":"createParagraph ( par , x )","title":"createParagraph()"},{"location":"reference/services/wdc/#services.wdc.createToken","text":"createToken ( tok , optionDensity : bool , optionNatural : bool , langcode : str , )","title":"createToken()"},{"location":"reference/services/wdc/#services.wdc.createTriple","text":"createTriple ( triple : Dict , x )","title":"createTriple()"},{"location":"reference/services/wdc/#services.wdc.createWord","text":"createWord ( wrd )","title":"createWord()"},{"location":"reference/services/wdc/#services.wdc.getCompleteRoleFromDep","text":"getCompleteRoleFromDep ( dep ) -> str","title":"getCompleteRoleFromDep()"},{"location":"reference/services/wdc/#services.wdc.getResultDependencies","text":"getResultDependencies ( doc : WDCDocument )","title":"getResultDependencies()"},{"location":"reference/services/wdc/#services.wdc.getResultEntities","text":"getResultEntities ( doc : WDCDocument )","title":"getResultEntities()"},{"location":"reference/services/wdc/#services.wdc.getResultEntitiesGroups","text":"getResultEntitiesGroups ( doc : WDCDocument )","title":"getResultEntitiesGroups()"},{"location":"reference/services/wdc/#services.wdc.getResultPages","text":"getResultPages ( doc : WDCDocument )","title":"getResultPages()"},{"location":"reference/services/wdc/#services.wdc.getResultParagraphs","text":"getResultParagraphs ( doc : WDCDocument )","title":"getResultParagraphs()"},{"location":"reference/services/wdc/#services.wdc.getResultSentences","text":"getResultSentences ( doc : WDCDocument )","title":"getResultSentences()"},{"location":"reference/services/wdc/#services.wdc.getResultTokens","text":"getResultTokens ( doc : WDCDocument )","title":"getResultTokens()"},{"location":"reference/services/wdc/#services.wdc.getResultTriples","text":"getResultTriples ( doc : WDCDocument )","title":"getResultTriples()"},{"location":"reference/services/wdc/#services.wdc.getResultWords","text":"getResultWords ( doc : WDCDocument )","title":"getResultWords()"},{"location":"reference/utils/constants/","text":"msaSDK Module \u00b6 .utils.constants \u00b6 Attributes \u00b6 ERROR module-attribute \u00b6 ERROR = 'SPK_V1_ERROR' ERROR_NO_FILE module-attribute \u00b6 ERROR_NO_FILE = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' ) ERROR_NO_FILES module-attribute \u00b6 ERROR_NO_FILES = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' ) ERROR_NO_TEXT module-attribute \u00b6 ERROR_NO_TEXT = ( '{\"' + ERROR + '\": \"' + \"InputText empty\" + '\"}' ) ERROR_NO_UID module-attribute \u00b6 ERROR_NO_UID = ( '{\"' + ERROR + '\": \"' + \"No UID provided\" + '\"}' )","title":"constants"},{"location":"reference/utils/constants/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/constants/#utilsconstants","text":"","title":".utils.constants"},{"location":"reference/utils/constants/#utils.constants-attributes","text":"","title":"Attributes"},{"location":"reference/utils/constants/#utils.constants.ERROR","text":"ERROR = 'SPK_V1_ERROR'","title":"ERROR"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_FILE","text":"ERROR_NO_FILE = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' )","title":"ERROR_NO_FILE"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_FILES","text":"ERROR_NO_FILES = ( '{\"' + ERROR + '\": \"' + \"No File provided\" + '\"}' )","title":"ERROR_NO_FILES"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_TEXT","text":"ERROR_NO_TEXT = ( '{\"' + ERROR + '\": \"' + \"InputText empty\" + '\"}' )","title":"ERROR_NO_TEXT"},{"location":"reference/utils/constants/#utils.constants.ERROR_NO_UID","text":"ERROR_NO_UID = ( '{\"' + ERROR + '\": \"' + \"No UID provided\" + '\"}' )","title":"ERROR_NO_UID"},{"location":"reference/utils/doc_code_ref/","text":"msaSDK Module \u00b6 .utils.doc_code_ref \u00b6 Generate the code reference pages and navigation. Functions \u00b6 generate_code_reference_documentation \u00b6 generate_code_reference_documentation ( virtual_ref_nav_path : str = \"reference\" , ref_md_file : str = \"SUMMARY.md\" , virtual_requirements_nav_path : str = \"requirements\" , req_md_file : str = \"requirements.md\" , source_path : str = \"msaSDK\" , source_file_type_filter : str = \"*.py\" , requirement_file : str = \"requirements.txt\" , md_file_type : str = \".md\" , recreate_pip_info : bool = False , exclude_functions : List [ str ] = [ \"__init__\" , \"__main__\" , \"main\" , \"run\" , ], pkl_info_file : str = \"docs/saved_req_package_pip_info.pkl\" , ) Generates the virtual mkdocs md files and adds them to the navigation. Scans the requirement file and gets pip show info for each package and stores it to a pickle file. Copy this to your project and use in mkdocs.yml with the mkdocs-gen-files plugin to execute the script. Ensure to call the function at the end, add generate_code_reference_documentation() at the end of your file.","title":"doc_code_ref"},{"location":"reference/utils/doc_code_ref/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/doc_code_ref/#utilsdoc_code_ref","text":"Generate the code reference pages and navigation.","title":".utils.doc_code_ref"},{"location":"reference/utils/doc_code_ref/#utils.doc_code_ref-functions","text":"","title":"Functions"},{"location":"reference/utils/doc_code_ref/#utils.doc_code_ref.generate_code_reference_documentation","text":"generate_code_reference_documentation ( virtual_ref_nav_path : str = \"reference\" , ref_md_file : str = \"SUMMARY.md\" , virtual_requirements_nav_path : str = \"requirements\" , req_md_file : str = \"requirements.md\" , source_path : str = \"msaSDK\" , source_file_type_filter : str = \"*.py\" , requirement_file : str = \"requirements.txt\" , md_file_type : str = \".md\" , recreate_pip_info : bool = False , exclude_functions : List [ str ] = [ \"__init__\" , \"__main__\" , \"main\" , \"run\" , ], pkl_info_file : str = \"docs/saved_req_package_pip_info.pkl\" , ) Generates the virtual mkdocs md files and adds them to the navigation. Scans the requirement file and gets pip show info for each package and stores it to a pickle file. Copy this to your project and use in mkdocs.yml with the mkdocs-gen-files plugin to execute the script. Ensure to call the function at the end, add generate_code_reference_documentation() at the end of your file.","title":"generate_code_reference_documentation()"},{"location":"reference/utils/email/","text":"msaSDK Module \u00b6 .utils.email \u00b6 Classes \u00b6 MSASendEmail \u00b6 Attributes \u00b6 host instance-attribute \u00b6 host : str = smtp_host password instance-attribute \u00b6 password : str = smtp_password port instance-attribute \u00b6 port : int = smtp_port testmode instance-attribute \u00b6 testmode : bool = testmode Testmode True doesnt send the email out through SMTP Server timeout instance-attribute \u00b6 timeout : int = timeout username instance-attribute \u00b6 username : str = smtp_username Functions \u00b6 __init__ \u00b6 __init__ ( smtp_host : str , smtp_port : int , smtp_username : str , smtp_password : str , timeout : int = 60 , testmode : bool = False , ) send_email async \u00b6 send_email ( from_email : str , to_email : str , subject : str , body : str , jinja_template_path_html : str = \"\" , ) Send an email. RAISES DESCRIPTION TypeError Error: MSASendEmail: HTML Templatefile ... not exists TypeError Error: MSASendEmail: SMTP Server Login failed for User","title":"email"},{"location":"reference/utils/email/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/email/#utilsemail","text":"","title":".utils.email"},{"location":"reference/utils/email/#utils.email-classes","text":"","title":"Classes"},{"location":"reference/utils/email/#utils.email.MSASendEmail","text":"","title":"MSASendEmail"},{"location":"reference/utils/email/#utils.email.MSASendEmail-attributes","text":"","title":"Attributes"},{"location":"reference/utils/email/#utils.email.MSASendEmail.host","text":"host : str = smtp_host","title":"host"},{"location":"reference/utils/email/#utils.email.MSASendEmail.password","text":"password : str = smtp_password","title":"password"},{"location":"reference/utils/email/#utils.email.MSASendEmail.port","text":"port : int = smtp_port","title":"port"},{"location":"reference/utils/email/#utils.email.MSASendEmail.testmode","text":"testmode : bool = testmode Testmode True doesnt send the email out through SMTP Server","title":"testmode"},{"location":"reference/utils/email/#utils.email.MSASendEmail.timeout","text":"timeout : int = timeout","title":"timeout"},{"location":"reference/utils/email/#utils.email.MSASendEmail.username","text":"username : str = smtp_username","title":"username"},{"location":"reference/utils/email/#utils.email.MSASendEmail-functions","text":"","title":"Functions"},{"location":"reference/utils/email/#utils.email.MSASendEmail.__init__","text":"__init__ ( smtp_host : str , smtp_port : int , smtp_username : str , smtp_password : str , timeout : int = 60 , testmode : bool = False , )","title":"__init__()"},{"location":"reference/utils/email/#utils.email.MSASendEmail.send_email","text":"send_email ( from_email : str , to_email : str , subject : str , body : str , jinja_template_path_html : str = \"\" , ) Send an email. RAISES DESCRIPTION TypeError Error: MSASendEmail: HTML Templatefile ... not exists TypeError Error: MSASendEmail: SMTP Server Login failed for User","title":"send_email()"},{"location":"reference/utils/errorhandling/","text":"msaSDK Module \u00b6 .utils.errorhandling \u00b6 Classes \u00b6 MSABaseExceptionHandler \u00b6 Attributes \u00b6 stack_trace instance-attribute \u00b6 stack_trace = list () Functions \u00b6 __init__ \u00b6 __init__ () -> None handle \u00b6 handle ( ex : Exception , * args ) handle Exception Get the current system exception, extract unformatter stack traces as tuples. flowchart LR system_exception -. n:m .-> Exceptions Exceptions -. m:m .-> Extract Extract -. m:m .-> Formatted Formats stacktrace to: File : %s , Line : %d, Func.Name : %s, Message : %s Logs the information with logger.error() str, args, type, value, stack_trace RAISES DESCRIPTION TypeError Exception: ... Arguments: ... Message: ... Stack trace: ... Functions \u00b6 getMSABaseExceptionHandler cached \u00b6 getMSABaseExceptionHandler () -> MSABaseExceptionHandler This function returns a cached instance of the MSABaseExceptionHandler object. Note Caching is used to prevent re-reading the environment every time the MSABaseExceptionHandler is used.","title":"errorhandling"},{"location":"reference/utils/errorhandling/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/errorhandling/#utilserrorhandling","text":"","title":".utils.errorhandling"},{"location":"reference/utils/errorhandling/#utils.errorhandling-classes","text":"","title":"Classes"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler","text":"","title":"MSABaseExceptionHandler"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler-attributes","text":"","title":"Attributes"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler.stack_trace","text":"stack_trace = list ()","title":"stack_trace"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler-functions","text":"","title":"Functions"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler.__init__","text":"__init__ () -> None","title":"__init__()"},{"location":"reference/utils/errorhandling/#utils.errorhandling.MSABaseExceptionHandler.handle","text":"handle ( ex : Exception , * args ) handle Exception Get the current system exception, extract unformatter stack traces as tuples. flowchart LR system_exception -. n:m .-> Exceptions Exceptions -. m:m .-> Extract Extract -. m:m .-> Formatted Formats stacktrace to: File : %s , Line : %d, Func.Name : %s, Message : %s Logs the information with logger.error() str, args, type, value, stack_trace RAISES DESCRIPTION TypeError Exception: ... Arguments: ... Message: ... Stack trace: ...","title":"handle()"},{"location":"reference/utils/errorhandling/#utils.errorhandling-functions","text":"","title":"Functions"},{"location":"reference/utils/errorhandling/#utils.errorhandling.getMSABaseExceptionHandler","text":"getMSABaseExceptionHandler () -> MSABaseExceptionHandler This function returns a cached instance of the MSABaseExceptionHandler object. Note Caching is used to prevent re-reading the environment every time the MSABaseExceptionHandler is used.","title":"getMSABaseExceptionHandler()"},{"location":"reference/utils/example_google_doc_style/","text":"msaSDK Module \u00b6 .utils.example_google_doc_style \u00b6 Example Google style docstrings. This module demonstrates documentation as specified by the Google Python Style Guide _. Docstrings may extend over multiple lines. Sections are created with a section header and a colon followed by a block of indented text. Example Examples can be given using either the Example or Examples sections. Sections support any reStructuredText formatting, including literal blocks:: $ python example_google.py Section breaks are created by resuming unindented text. Section breaks are also implicitly created anytime a new section starts. ATTRIBUTE DESCRIPTION module_level_variable1 Module level variables may be documented in either the Attributes section of the module docstring, or in an inline docstring immediately following the variable. Either form is acceptable, but the two should not be mixed. Choose one convention to document module level variables and be consistent with it. TYPE: int Todo For module TODOs You have to also use sphinx.ext.todo extension .. _Google Python Style Guide: http://google.github.io/styleguide/pyguide.html Attributes \u00b6 module_level_variable1 module-attribute \u00b6 module_level_variable1 = 12345 module_level_variable2 module-attribute \u00b6 module_level_variable2 = 98765 int: Module level variable documented inline. The docstring may span multiple lines. The type may optionally be specified on the first line, separated by a colon. Classes \u00b6 ExampleClass \u00b6 Bases: object The summary line for a class docstring should fit on one line. If the class has public attributes, they may be documented here in an Attributes section and follow the same formatting as a function's Args section. Alternatively, attributes may be documented inline with the attribute's declaration (see init method below). Properties created with the @property decorator should be documented in the property's getter method. ATTRIBUTE DESCRIPTION attr1 Description of attr1 . TYPE: str attr2 obj: int , optional): Description of attr2 . Attributes \u00b6 attr1 instance-attribute \u00b6 attr1 = param1 attr2 instance-attribute \u00b6 attr2 = param2 attr3 instance-attribute \u00b6 attr3 = param3 attr4 instance-attribute \u00b6 attr4 = [ 'attr4' ] attr5 instance-attribute \u00b6 attr5 = None str: Docstring after attribute, with type specified. Functions \u00b6 __init__ \u00b6 __init__ ( param1 , param2 , param3 ) Example of docstring on the init method. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 Description of param1 . TYPE: str param2 obj: int , optional): Description of param2 . Multiple lines are supported. param3 obj: list of :obj: str ): Description of param3 . __special__ \u00b6 __special__ () By default special members with docstrings are not included. Special members are any methods or attributes that start with and end with a double underscore. Any special member with a docstring will be included in the output, if napoleon_include_special_with_doc is set to True. This behavior can be enabled by changing the following setting in Sphinx's conf.py:: napoleon_include_special_with_doc = True __special_without_docstring__ \u00b6 __special_without_docstring__ () example_method \u00b6 example_method ( param1 , param2 ) Class methods are similar to regular functions. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 The first parameter. param2 The second parameter. RETURNS DESCRIPTION True if successful, False otherwise. readonly_property property \u00b6 readonly_property () str: Properties should be documented in their getter method. readwrite_property property writable \u00b6 readwrite_property () :obj: list of :obj: str : Properties with both a getter and setter should only be documented in their getter method. If the setter method contains notable behavior, it should be mentioned here. ExampleError \u00b6 Bases: Exception Exceptions are documented in the same way as classes. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION msg Human readable string describing the exception. TYPE: str code obj: int , optional): Error code. ATTRIBUTE DESCRIPTION msg Human readable string describing the exception. TYPE: str code Exception error code. TYPE: int Attributes \u00b6 code instance-attribute \u00b6 code = code msg instance-attribute \u00b6 msg = msg Functions \u00b6 __init__ \u00b6 __init__ ( msg , code ) Functions \u00b6 example_generator \u00b6 example_generator ( n ) Generators have a Yields section instead of a Returns section. PARAMETER DESCRIPTION n The upper limit of the range to generate, from 0 to n - 1. TYPE: int YIELDS DESCRIPTION int The next number in the range of 0 to n - 1. Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> print ([ i for i in example_generator ( 4 )]) [0, 1, 2, 3] function_with_pep484_type_annotations \u00b6 function_with_pep484_type_annotations ( param1 : int , param2 : str ) -> bool Example function with PEP 484 type annotations. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise. function_with_types_in_docstring \u00b6 function_with_types_in_docstring ( param1 , param2 ) Example function with types documented in the docstring. PEP 484 _ type annotations are supported. If attribute, parameter, and return types are annotated according to PEP 484 _, they do not need to be included in the docstring: PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise. .. _PEP 484: https://www.python.org/dev/peps/pep-0484/ module_level_function \u00b6 module_level_function ( param1 , param2 = None , * args , ** kwargs ) This is an example of a module level function. Function parameters should be documented in the Args section. The name of each parameter is required. The type and description of each parameter is optional, but should be included if not obvious. If *args or **kwargs are accepted, they should be listed as *args and **kwargs . The format for a parameter is:: name (type): description The description may span multiple lines. Following lines should be indented. The \"(type)\" is optional. Multiple paragraphs are supported in parameter descriptions. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 obj: str , optional): The second parameter. Defaults to None. Second line of description should be indented. DEFAULT: None *args Variable length argument list. DEFAULT: () **kwargs Arbitrary keyword arguments. DEFAULT: {} RETURNS DESCRIPTION bool True if successful, False otherwise. The return type is optional and may be specified at the beginning of the Returns section followed by a colon. The Returns section may span multiple lines and paragraphs. Following lines should be indented to match the first line. The Returns section supports any reStructuredText formatting, including literal blocks:: { 'param1': param1, 'param2': param2 } RAISES DESCRIPTION AttributeError The Raises section is a list of all exceptions that are relevant to the interface. ValueError If param2 is equal to param1 .","title":"example_google_doc_style"},{"location":"reference/utils/example_google_doc_style/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/example_google_doc_style/#utilsexample_google_doc_style","text":"Example Google style docstrings. This module demonstrates documentation as specified by the Google Python Style Guide _. Docstrings may extend over multiple lines. Sections are created with a section header and a colon followed by a block of indented text. Example Examples can be given using either the Example or Examples sections. Sections support any reStructuredText formatting, including literal blocks:: $ python example_google.py Section breaks are created by resuming unindented text. Section breaks are also implicitly created anytime a new section starts. ATTRIBUTE DESCRIPTION module_level_variable1 Module level variables may be documented in either the Attributes section of the module docstring, or in an inline docstring immediately following the variable. Either form is acceptable, but the two should not be mixed. Choose one convention to document module level variables and be consistent with it. TYPE: int Todo For module TODOs You have to also use sphinx.ext.todo extension .. _Google Python Style Guide: http://google.github.io/styleguide/pyguide.html","title":".utils.example_google_doc_style"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style-attributes","text":"","title":"Attributes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.module_level_variable1","text":"module_level_variable1 = 12345","title":"module_level_variable1"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.module_level_variable2","text":"module_level_variable2 = 98765 int: Module level variable documented inline. The docstring may span multiple lines. The type may optionally be specified on the first line, separated by a colon.","title":"module_level_variable2"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style-classes","text":"","title":"Classes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass","text":"Bases: object The summary line for a class docstring should fit on one line. If the class has public attributes, they may be documented here in an Attributes section and follow the same formatting as a function's Args section. Alternatively, attributes may be documented inline with the attribute's declaration (see init method below). Properties created with the @property decorator should be documented in the property's getter method. ATTRIBUTE DESCRIPTION attr1 Description of attr1 . TYPE: str attr2 obj: int , optional): Description of attr2 .","title":"ExampleClass"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass-attributes","text":"","title":"Attributes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr1","text":"attr1 = param1","title":"attr1"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr2","text":"attr2 = param2","title":"attr2"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr3","text":"attr3 = param3","title":"attr3"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr4","text":"attr4 = [ 'attr4' ]","title":"attr4"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.attr5","text":"attr5 = None str: Docstring after attribute, with type specified.","title":"attr5"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass-functions","text":"","title":"Functions"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.__init__","text":"__init__ ( param1 , param2 , param3 ) Example of docstring on the init method. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 Description of param1 . TYPE: str param2 obj: int , optional): Description of param2 . Multiple lines are supported. param3 obj: list of :obj: str ): Description of param3 .","title":"__init__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.__special__","text":"__special__ () By default special members with docstrings are not included. Special members are any methods or attributes that start with and end with a double underscore. Any special member with a docstring will be included in the output, if napoleon_include_special_with_doc is set to True. This behavior can be enabled by changing the following setting in Sphinx's conf.py:: napoleon_include_special_with_doc = True","title":"__special__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.__special_without_docstring__","text":"__special_without_docstring__ ()","title":"__special_without_docstring__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.example_method","text":"example_method ( param1 , param2 ) Class methods are similar to regular functions. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION param1 The first parameter. param2 The second parameter. RETURNS DESCRIPTION True if successful, False otherwise.","title":"example_method()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.readonly_property","text":"readonly_property () str: Properties should be documented in their getter method.","title":"readonly_property()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleClass.readwrite_property","text":"readwrite_property () :obj: list of :obj: str : Properties with both a getter and setter should only be documented in their getter method. If the setter method contains notable behavior, it should be mentioned here.","title":"readwrite_property()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError","text":"Bases: Exception Exceptions are documented in the same way as classes. The init method may be documented in either the class level docstring, or as a docstring on the init method itself. Either form is acceptable, but the two should not be mixed. Choose one convention to document the init method and be consistent with it. Note Do not include the self parameter in the Args section. PARAMETER DESCRIPTION msg Human readable string describing the exception. TYPE: str code obj: int , optional): Error code. ATTRIBUTE DESCRIPTION msg Human readable string describing the exception. TYPE: str code Exception error code. TYPE: int","title":"ExampleError"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError-attributes","text":"","title":"Attributes"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError.code","text":"code = code","title":"code"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError.msg","text":"msg = msg","title":"msg"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError-functions","text":"","title":"Functions"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.ExampleError.__init__","text":"__init__ ( msg , code )","title":"__init__()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style-functions","text":"","title":"Functions"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.example_generator","text":"example_generator ( n ) Generators have a Yields section instead of a Returns section. PARAMETER DESCRIPTION n The upper limit of the range to generate, from 0 to n - 1. TYPE: int YIELDS DESCRIPTION int The next number in the range of 0 to n - 1. Examples: Examples should be written in doctest format, and should illustrate how to use the function. >>> print ([ i for i in example_generator ( 4 )]) [0, 1, 2, 3]","title":"example_generator()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.function_with_pep484_type_annotations","text":"function_with_pep484_type_annotations ( param1 : int , param2 : str ) -> bool Example function with PEP 484 type annotations. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise.","title":"function_with_pep484_type_annotations()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.function_with_types_in_docstring","text":"function_with_types_in_docstring ( param1 , param2 ) Example function with types documented in the docstring. PEP 484 _ type annotations are supported. If attribute, parameter, and return types are annotated according to PEP 484 _, they do not need to be included in the docstring: PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 The second parameter. TYPE: str RETURNS DESCRIPTION bool The return value. True for success, False otherwise. .. _PEP 484: https://www.python.org/dev/peps/pep-0484/","title":"function_with_types_in_docstring()"},{"location":"reference/utils/example_google_doc_style/#utils.example_google_doc_style.module_level_function","text":"module_level_function ( param1 , param2 = None , * args , ** kwargs ) This is an example of a module level function. Function parameters should be documented in the Args section. The name of each parameter is required. The type and description of each parameter is optional, but should be included if not obvious. If *args or **kwargs are accepted, they should be listed as *args and **kwargs . The format for a parameter is:: name (type): description The description may span multiple lines. Following lines should be indented. The \"(type)\" is optional. Multiple paragraphs are supported in parameter descriptions. PARAMETER DESCRIPTION param1 The first parameter. TYPE: int param2 obj: str , optional): The second parameter. Defaults to None. Second line of description should be indented. DEFAULT: None *args Variable length argument list. DEFAULT: () **kwargs Arbitrary keyword arguments. DEFAULT: {} RETURNS DESCRIPTION bool True if successful, False otherwise. The return type is optional and may be specified at the beginning of the Returns section followed by a colon. The Returns section may span multiple lines and paragraphs. Following lines should be indented to match the first line. The Returns section supports any reStructuredText formatting, including literal blocks:: { 'param1': param1, 'param2': param2 } RAISES DESCRIPTION AttributeError The Raises section is a list of all exceptions that are relevant to the interface. ValueError If param2 is equal to param1 .","title":"module_level_function()"},{"location":"reference/utils/fileupload/","text":"msaSDK Module \u00b6 .utils.fileupload \u00b6 Attributes \u00b6 archive_pack_formats module-attribute \u00b6 archive_pack_formats = shutil . get_archive_formats () archive_unpack_formats module-attribute \u00b6 archive_unpack_formats = shutil . get_unpack_formats () Classes \u00b6 FileDelete \u00b6 File Delete Class PARAMETER DESCRIPTION uid str , the GUID of the file TYPE: str root_path str, dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str, the folder the file was uploaded to. TYPE: str DEFAULT: 'data/uploads' Attributes \u00b6 root_path instance-attribute \u00b6 root_path = root_path uid instance-attribute \u00b6 uid = uid uploads_dir instance-attribute \u00b6 uploads_dir = uploads_dir Functions \u00b6 __init__ \u00b6 __init__ ( uid : str , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , ) delete_files async \u00b6 delete_files () FileExtNotAllowed \u00b6 Bases: ServerHTTPException raise when the upload file ext not allowed FileMaxSizeLimit \u00b6 Bases: ServerHTTPException raise when the upload file exceeds the max size FileUpload \u00b6 FileUpload Class PARAMETER DESCRIPTION filesize int, size in bytes TYPE: int root_path str = dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str = \"data/uploads\", where to store the file TYPE: str DEFAULT: 'data/uploads' not_allow_extensions Optional[List[str]] = None, exclude file extensions from upload ability TYPE: Optional [ List [ str ]] DEFAULT: None max_size int = 150000000, max allowed filesize in bytes for upload TYPE: int DEFAULT: 150000000 createUIDSubFolders bool = False, if enabled the system creates Subfolders by the UID TYPE: bool DEFAULT: False Attributes \u00b6 content_type instance-attribute \u00b6 content_type = '' createSubFolders instance-attribute \u00b6 createSubFolders = createUIDSubFolders file_size instance-attribute \u00b6 file_size = filesize filename_generator instance-attribute \u00b6 filename_generator = nameGen fullpath instance-attribute \u00b6 fullpath = '' magic_desc instance-attribute \u00b6 magic_desc = '' magic_type instance-attribute \u00b6 magic_type = '' max_size instance-attribute \u00b6 max_size = max_size name instance-attribute \u00b6 name = '' not_allow_extensions instance-attribute \u00b6 not_allow_extensions = not_allow_extensions root_path instance-attribute \u00b6 root_path = root_path uid instance-attribute \u00b6 uid = str ( uuid4 ()) uploads_dir instance-attribute \u00b6 uploads_dir = uploads_dir Functions \u00b6 __init__ \u00b6 __init__ ( filesize : int , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , not_allow_extensions : Optional [ List [ str ]] = None , max_size : int = 150000000 , createUIDSubFolders : bool = False , ) save_file async \u00b6 save_file ( filename : str , ufile : UploadFile ) Save the file PARAMETER DESCRIPTION filename the name of the file it should be saved uner TYPE: str ufile UploadFile instance of the file to save TYPE: UploadFile upload async \u00b6 upload ( file : UploadFile ) upload the file PARAMETER DESCRIPTION file The UploadFile instance of the file for upload. TYPE: UploadFile InvalidResource \u00b6 Bases: ServerHTTPException raise when has invalid resource NoSuchFieldFound \u00b6 Bases: ServerHTTPException raise when no such field for the given ServerHTTPException \u00b6 Bases: HTTPException Functions \u00b6 __init__ \u00b6 __init__ ( error : str = None ) Functions \u00b6 checkIfFileIsArchive async \u00b6 checkIfFileIsArchive ( file : UploadFile ) Check if File is an Archive like zip or tar createMSAFile async \u00b6 createMSAFile ( file : UploadFile , up : FileUpload ) -> MSAFile Create an MSAFile Instance for the provided file PARAMETER DESCRIPTION file is the UploadFile TYPE: UploadFile up is the FileUpload Instance TYPE: FileUpload RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile createMSAFileFromUnpacked async \u00b6 createMSAFileFromUnpacked ( filepath : str , processuid : str ) -> MSAFile Create an MSAFile Instance for a file from an archive, and keep them under one group by the processuid PARAMETER DESCRIPTION filepath str of the file path TYPE: str processuid str of the group process id (GUID) TYPE: str RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile nameGen \u00b6 nameGen ( uid , file ) secure_filename \u00b6 secure_filename ( filename : str ) -> str Pass it a filename and it will return a secure version of it. This filename can then safely be stored on a regular file system and passed to :func: os.path.join . The filename returned is an ASCII only string for maximum portability. On windows systems the function also makes sure that the file is not named after one of the special device files. Example secure_filename ( \"My cool movie.mov\" ) 'My_cool_movie.mov' secure_filename ( \"../../../etc/passwd\" ) 'etc_passwd' secure_filename ( 'i contain cool \\xfc ml \\xe4 uts.txt' ) 'i_contain_cool_umlauts.txt' The function might return an empty filename. It's your responsibility to ensure that the filename is unique and that you abort or generate a random filename if the function returned an empty one. .. versionadded:: 0.5 PARAMETER DESCRIPTION filename the filename to secure TYPE: str","title":"fileupload"},{"location":"reference/utils/fileupload/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/fileupload/#utilsfileupload","text":"","title":".utils.fileupload"},{"location":"reference/utils/fileupload/#utils.fileupload-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileupload/#utils.fileupload.archive_pack_formats","text":"archive_pack_formats = shutil . get_archive_formats ()","title":"archive_pack_formats"},{"location":"reference/utils/fileupload/#utils.fileupload.archive_unpack_formats","text":"archive_unpack_formats = shutil . get_unpack_formats ()","title":"archive_unpack_formats"},{"location":"reference/utils/fileupload/#utils.fileupload-classes","text":"","title":"Classes"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete","text":"File Delete Class PARAMETER DESCRIPTION uid str , the GUID of the file TYPE: str root_path str, dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str, the folder the file was uploaded to. TYPE: str DEFAULT: 'data/uploads'","title":"FileDelete"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.root_path","text":"root_path = root_path","title":"root_path"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.uid","text":"uid = uid","title":"uid"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.uploads_dir","text":"uploads_dir = uploads_dir","title":"uploads_dir"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.__init__","text":"__init__ ( uid : str , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , )","title":"__init__()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileDelete.delete_files","text":"delete_files ()","title":"delete_files()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileExtNotAllowed","text":"Bases: ServerHTTPException raise when the upload file ext not allowed","title":"FileExtNotAllowed"},{"location":"reference/utils/fileupload/#utils.fileupload.FileMaxSizeLimit","text":"Bases: ServerHTTPException raise when the upload file exceeds the max size","title":"FileMaxSizeLimit"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload","text":"FileUpload Class PARAMETER DESCRIPTION filesize int, size in bytes TYPE: int root_path str = dirname of the file TYPE: str DEFAULT: os.path.join(os.path.dirname(__file__)) uploads_dir str = \"data/uploads\", where to store the file TYPE: str DEFAULT: 'data/uploads' not_allow_extensions Optional[List[str]] = None, exclude file extensions from upload ability TYPE: Optional [ List [ str ]] DEFAULT: None max_size int = 150000000, max allowed filesize in bytes for upload TYPE: int DEFAULT: 150000000 createUIDSubFolders bool = False, if enabled the system creates Subfolders by the UID TYPE: bool DEFAULT: False","title":"FileUpload"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload-attributes","text":"","title":"Attributes"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.content_type","text":"content_type = ''","title":"content_type"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.createSubFolders","text":"createSubFolders = createUIDSubFolders","title":"createSubFolders"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.file_size","text":"file_size = filesize","title":"file_size"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.filename_generator","text":"filename_generator = nameGen","title":"filename_generator"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.fullpath","text":"fullpath = ''","title":"fullpath"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.magic_desc","text":"magic_desc = ''","title":"magic_desc"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.magic_type","text":"magic_type = ''","title":"magic_type"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.max_size","text":"max_size = max_size","title":"max_size"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.name","text":"name = ''","title":"name"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.not_allow_extensions","text":"not_allow_extensions = not_allow_extensions","title":"not_allow_extensions"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.root_path","text":"root_path = root_path","title":"root_path"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.uid","text":"uid = str ( uuid4 ())","title":"uid"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.uploads_dir","text":"uploads_dir = uploads_dir","title":"uploads_dir"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.__init__","text":"__init__ ( filesize : int , root_path : str = os . path . join ( os . path . dirname ( __file__ ) ), uploads_dir : str = \"data/uploads\" , not_allow_extensions : Optional [ List [ str ]] = None , max_size : int = 150000000 , createUIDSubFolders : bool = False , )","title":"__init__()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.save_file","text":"save_file ( filename : str , ufile : UploadFile ) Save the file PARAMETER DESCRIPTION filename the name of the file it should be saved uner TYPE: str ufile UploadFile instance of the file to save TYPE: UploadFile","title":"save_file()"},{"location":"reference/utils/fileupload/#utils.fileupload.FileUpload.upload","text":"upload ( file : UploadFile ) upload the file PARAMETER DESCRIPTION file The UploadFile instance of the file for upload. TYPE: UploadFile","title":"upload()"},{"location":"reference/utils/fileupload/#utils.fileupload.InvalidResource","text":"Bases: ServerHTTPException raise when has invalid resource","title":"InvalidResource"},{"location":"reference/utils/fileupload/#utils.fileupload.NoSuchFieldFound","text":"Bases: ServerHTTPException raise when no such field for the given","title":"NoSuchFieldFound"},{"location":"reference/utils/fileupload/#utils.fileupload.ServerHTTPException","text":"Bases: HTTPException","title":"ServerHTTPException"},{"location":"reference/utils/fileupload/#utils.fileupload.ServerHTTPException-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.ServerHTTPException.__init__","text":"__init__ ( error : str = None )","title":"__init__()"},{"location":"reference/utils/fileupload/#utils.fileupload-functions","text":"","title":"Functions"},{"location":"reference/utils/fileupload/#utils.fileupload.checkIfFileIsArchive","text":"checkIfFileIsArchive ( file : UploadFile ) Check if File is an Archive like zip or tar","title":"checkIfFileIsArchive()"},{"location":"reference/utils/fileupload/#utils.fileupload.createMSAFile","text":"createMSAFile ( file : UploadFile , up : FileUpload ) -> MSAFile Create an MSAFile Instance for the provided file PARAMETER DESCRIPTION file is the UploadFile TYPE: UploadFile up is the FileUpload Instance TYPE: FileUpload RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile","title":"createMSAFile()"},{"location":"reference/utils/fileupload/#utils.fileupload.createMSAFileFromUnpacked","text":"createMSAFileFromUnpacked ( filepath : str , processuid : str ) -> MSAFile Create an MSAFile Instance for a file from an archive, and keep them under one group by the processuid PARAMETER DESCRIPTION filepath str of the file path TYPE: str processuid str of the group process id (GUID) TYPE: str RETURNS DESCRIPTION mf New MSAFile instance. TYPE: MSAFile","title":"createMSAFileFromUnpacked()"},{"location":"reference/utils/fileupload/#utils.fileupload.nameGen","text":"nameGen ( uid , file )","title":"nameGen()"},{"location":"reference/utils/fileupload/#utils.fileupload.secure_filename","text":"secure_filename ( filename : str ) -> str Pass it a filename and it will return a secure version of it. This filename can then safely be stored on a regular file system and passed to :func: os.path.join . The filename returned is an ASCII only string for maximum portability. On windows systems the function also makes sure that the file is not named after one of the special device files. Example secure_filename ( \"My cool movie.mov\" ) 'My_cool_movie.mov' secure_filename ( \"../../../etc/passwd\" ) 'etc_passwd' secure_filename ( 'i contain cool \\xfc ml \\xe4 uts.txt' ) 'i_contain_cool_umlauts.txt' The function might return an empty filename. It's your responsibility to ensure that the filename is unique and that you abort or generate a random filename if the function returned an empty one. .. versionadded:: 0.5 PARAMETER DESCRIPTION filename the filename to secure TYPE: str","title":"secure_filename()"},{"location":"reference/utils/fileutils/","text":"msaSDK Module \u00b6 .utils.fileutils \u00b6 Functions \u00b6 all_dirs_with_subdirs async \u00b6 all_dirs_with_subdirs ( path , subdirs ) -> List get_directory_listing async \u00b6 get_directory_listing ( path ) -> Dict load_content_from_file async \u00b6 load_content_from_file ( file_name : str ) -> str save_binary_to_file async \u00b6 save_binary_to_file ( file_name : str , content : bytes ) -> None save_content_to_file async \u00b6 save_content_to_file ( file_name : str , content : str ) -> None","title":"fileutils"},{"location":"reference/utils/fileutils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/fileutils/#utilsfileutils","text":"","title":".utils.fileutils"},{"location":"reference/utils/fileutils/#utils.fileutils-functions","text":"","title":"Functions"},{"location":"reference/utils/fileutils/#utils.fileutils.all_dirs_with_subdirs","text":"all_dirs_with_subdirs ( path , subdirs ) -> List","title":"all_dirs_with_subdirs()"},{"location":"reference/utils/fileutils/#utils.fileutils.get_directory_listing","text":"get_directory_listing ( path ) -> Dict","title":"get_directory_listing()"},{"location":"reference/utils/fileutils/#utils.fileutils.load_content_from_file","text":"load_content_from_file ( file_name : str ) -> str","title":"load_content_from_file()"},{"location":"reference/utils/fileutils/#utils.fileutils.save_binary_to_file","text":"save_binary_to_file ( file_name : str , content : bytes ) -> None","title":"save_binary_to_file()"},{"location":"reference/utils/fileutils/#utils.fileutils.save_content_to_file","text":"save_content_to_file ( file_name : str , content : str ) -> None","title":"save_content_to_file()"},{"location":"reference/utils/fonts/","text":"msaSDK Module \u00b6 .utils.fonts \u00b6 Functions \u00b6 findSystemFonts async \u00b6 findSystemFonts ( fontpaths = None , fontext = \"ttf\" ) -> List [ str ] Search for fonts in the specified font paths. If no paths are given, will use a standard set of system paths, as well as the list of fonts tracked by fontconfig if fontconfig is installed and available. A list of TrueType fonts are returned by default with AFM fonts as an option. RETURNS DESCRIPTION ret List[str] of fname of fontfiles in path TYPE: List [ str ]","title":"fonts"},{"location":"reference/utils/fonts/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/fonts/#utilsfonts","text":"","title":".utils.fonts"},{"location":"reference/utils/fonts/#utils.fonts-functions","text":"","title":"Functions"},{"location":"reference/utils/fonts/#utils.fonts.findSystemFonts","text":"findSystemFonts ( fontpaths = None , fontext = \"ttf\" ) -> List [ str ] Search for fonts in the specified font paths. If no paths are given, will use a standard set of system paths, as well as the list of fonts tracked by fontconfig if fontconfig is installed and available. A list of TrueType fonts are returned by default with AFM fonts as an option. RETURNS DESCRIPTION ret List[str] of fname of fontfiles in path TYPE: List [ str ]","title":"findSystemFonts()"},{"location":"reference/utils/healthcheck/","text":"msaSDK Module \u00b6 .utils.healthcheck \u00b6 Attributes \u00b6 __version__ module-attribute \u00b6 __version__ = '0.1.1' Classes \u00b6 MSAHealthCheck \u00b6 Bases: Thread Attributes \u00b6 error instance-attribute \u00b6 error : str = '' healthy instance-attribute \u00b6 healthy : str = 'No Healthcheck executed yet:400' interval instance-attribute \u00b6 interval = healthdefinition . interval is_healthy instance-attribute \u00b6 is_healthy : bool = False url instance-attribute \u00b6 url = 'http:// {} : {} /' . format ( host , port ) Functions \u00b6 __init__ \u00b6 __init__ ( healthdefinition : MSAHealthDefinition , host : str , port : int , ) MSAHealthCheckObject, provides a thread to give a healthcheck. PARAMETER DESCRIPTION healthdefinition The MSAHealthDefinition instance TYPE: MSAHealthDefinition host IP/URl to call the healtcheck endpoint TYPE: str port Port of the healtcheck endpoint server listener/endpoint TYPE: int get_health async \u00b6 get_health () -> str Get the last health check result The string is \"positiv: status_code\" or \"negative: status_code\" run \u00b6 run () Run the Healthcheck Thread Sleeps by the interval provided by the MSAHealthDefinition. Uses httpx to call the healthcheck endpoint which is http://{}:{}/\".format(host, port) Any 200 <= response.status_code < 300 is healthy, rest is not healthy stop async \u00b6 stop () Stops the Healthcheck Thread.","title":"healthcheck"},{"location":"reference/utils/healthcheck/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/healthcheck/#utilshealthcheck","text":"","title":".utils.healthcheck"},{"location":"reference/utils/healthcheck/#utils.healthcheck-attributes","text":"","title":"Attributes"},{"location":"reference/utils/healthcheck/#utils.healthcheck.__version__","text":"__version__ = '0.1.1'","title":"__version__"},{"location":"reference/utils/healthcheck/#utils.healthcheck-classes","text":"","title":"Classes"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck","text":"Bases: Thread","title":"MSAHealthCheck"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck-attributes","text":"","title":"Attributes"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.error","text":"error : str = ''","title":"error"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.healthy","text":"healthy : str = 'No Healthcheck executed yet:400'","title":"healthy"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.interval","text":"interval = healthdefinition . interval","title":"interval"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.is_healthy","text":"is_healthy : bool = False","title":"is_healthy"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.url","text":"url = 'http:// {} : {} /' . format ( host , port )","title":"url"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck-functions","text":"","title":"Functions"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.__init__","text":"__init__ ( healthdefinition : MSAHealthDefinition , host : str , port : int , ) MSAHealthCheckObject, provides a thread to give a healthcheck. PARAMETER DESCRIPTION healthdefinition The MSAHealthDefinition instance TYPE: MSAHealthDefinition host IP/URl to call the healtcheck endpoint TYPE: str port Port of the healtcheck endpoint server listener/endpoint TYPE: int","title":"__init__()"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.get_health","text":"get_health () -> str Get the last health check result The string is \"positiv: status_code\" or \"negative: status_code\"","title":"get_health()"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.run","text":"run () Run the Healthcheck Thread Sleeps by the interval provided by the MSAHealthDefinition. Uses httpx to call the healthcheck endpoint which is http://{}:{}/\".format(host, port) Any 200 <= response.status_code < 300 is healthy, rest is not healthy","title":"run()"},{"location":"reference/utils/healthcheck/#utils.healthcheck.MSAHealthCheck.stop","text":"stop () Stops the Healthcheck Thread.","title":"stop()"},{"location":"reference/utils/htmlutils/","text":"msaSDK Module \u00b6 .utils.htmlutils \u00b6 Functions \u00b6 sanitize async \u00b6 sanitize ( dirty_html : Any ) -> Optional [ str ] Clean/Sanitize HTML using lxml.html.clean.Cleaner Cleans the following: Removes any <meta> tags Removes any embedded objects (flash, iframes) Removes any <link> tags Removes any style tags. Removes any processing instructions. Removes any style attributes. Defaults to the value of the style option. Removes any <script> tags. Removes any Javascript, like an onclick attribute. Also removes stylesheets as they could contain Javascript. Removes any comments. Removes any frame-related tags Removes any form tags Removes Tags that aren't wrong , but are annoying. <blink> and <marquee> Remove any tags that aren't standard parts of HTML. Remove any attributes which are not frozenset(['src', 'color', 'href', 'title', 'class', 'name', 'id']), Remove Tags ('span', 'font', 'div'), their content will get pulled up into the parent tag. PARAMETER DESCRIPTION dirty_html Any, usually a html str TYPE: Any RETURNS DESCRIPTION clean_html Optional[str] cleaned html TYPE: Optional [ str ]","title":"htmlutils"},{"location":"reference/utils/htmlutils/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/htmlutils/#utilshtmlutils","text":"","title":".utils.htmlutils"},{"location":"reference/utils/htmlutils/#utils.htmlutils-functions","text":"","title":"Functions"},{"location":"reference/utils/htmlutils/#utils.htmlutils.sanitize","text":"sanitize ( dirty_html : Any ) -> Optional [ str ] Clean/Sanitize HTML using lxml.html.clean.Cleaner Cleans the following: Removes any <meta> tags Removes any embedded objects (flash, iframes) Removes any <link> tags Removes any style tags. Removes any processing instructions. Removes any style attributes. Defaults to the value of the style option. Removes any <script> tags. Removes any Javascript, like an onclick attribute. Also removes stylesheets as they could contain Javascript. Removes any comments. Removes any frame-related tags Removes any form tags Removes Tags that aren't wrong , but are annoying. <blink> and <marquee> Remove any tags that aren't standard parts of HTML. Remove any attributes which are not frozenset(['src', 'color', 'href', 'title', 'class', 'name', 'id']), Remove Tags ('span', 'font', 'div'), their content will get pulled up into the parent tag. PARAMETER DESCRIPTION dirty_html Any, usually a html str TYPE: Any RETURNS DESCRIPTION clean_html Optional[str] cleaned html TYPE: Optional [ str ]","title":"sanitize()"},{"location":"reference/utils/logger/","text":"msaSDK Module \u00b6 .utils.logger \u00b6 Classes \u00b6 InterceptHandler \u00b6 Bases: logging . Handler Default handler from examples in loguru documentaion. See https://loguru.readthedocs.io/en/stable/overview.html#entirely-compatible-with-standard-logging Functions \u00b6 emit \u00b6 emit ( record : logging . LogRecord ) Functions \u00b6 format_record \u00b6 format_record ( record : dict ) -> str Custom format for loguru loggers. Uses pformat for log any data like request/response body during debug. Works with logging if loguru handler it. Example payload = [{ \"users\" :[{ \"name\" : \"Nick\" , \"age\" : 87 , \"is_active\" : True }, { \"name\" : \"Alex\" , \"age\" : 27 , \"is_active\" : True }], \"count\" : 2 }] logger . bind ( payload = ) . debug ( \"users payload\" ) [ { 'count' : 2 , 'users' : [ { 'age' : 87 , 'is_active' : True , 'name' : 'Nick' }, { 'age' : 27 , 'is_active' : True , 'name' : 'Alex' }]}] init_logging \u00b6 init_logging () Replaces logging handlers with a handler for using the custom handler. WARNING! if you call the init_logging in startup event function, then the first logs before the application start will be in the old format Example app . add_event_handler ( \"startup\" , init_logging ) stdout : INFO : Uvicorn running on http : // 127.0.0.1 : 8000 ( Press CTRL + C to quit ) INFO : Started reloader process [ 11528 ] using statreload INFO : Started server process [ 6036 ] INFO : Waiting for application startup . 2020 - 07 - 25 02 : 19 : 21.357 | INFO | uvicorn . lifespan . on : startup : 34 - Application startup complete .","title":"logger"},{"location":"reference/utils/logger/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/logger/#utilslogger","text":"","title":".utils.logger"},{"location":"reference/utils/logger/#utils.logger-classes","text":"","title":"Classes"},{"location":"reference/utils/logger/#utils.logger.InterceptHandler","text":"Bases: logging . Handler Default handler from examples in loguru documentaion. See https://loguru.readthedocs.io/en/stable/overview.html#entirely-compatible-with-standard-logging","title":"InterceptHandler"},{"location":"reference/utils/logger/#utils.logger.InterceptHandler-functions","text":"","title":"Functions"},{"location":"reference/utils/logger/#utils.logger.InterceptHandler.emit","text":"emit ( record : logging . LogRecord )","title":"emit()"},{"location":"reference/utils/logger/#utils.logger-functions","text":"","title":"Functions"},{"location":"reference/utils/logger/#utils.logger.format_record","text":"format_record ( record : dict ) -> str Custom format for loguru loggers. Uses pformat for log any data like request/response body during debug. Works with logging if loguru handler it. Example payload = [{ \"users\" :[{ \"name\" : \"Nick\" , \"age\" : 87 , \"is_active\" : True }, { \"name\" : \"Alex\" , \"age\" : 27 , \"is_active\" : True }], \"count\" : 2 }] logger . bind ( payload = ) . debug ( \"users payload\" ) [ { 'count' : 2 , 'users' : [ { 'age' : 87 , 'is_active' : True , 'name' : 'Nick' }, { 'age' : 27 , 'is_active' : True , 'name' : 'Alex' }]}]","title":"format_record()"},{"location":"reference/utils/logger/#utils.logger.init_logging","text":"init_logging () Replaces logging handlers with a handler for using the custom handler. WARNING! if you call the init_logging in startup event function, then the first logs before the application start will be in the old format Example app . add_event_handler ( \"startup\" , init_logging ) stdout : INFO : Uvicorn running on http : // 127.0.0.1 : 8000 ( Press CTRL + C to quit ) INFO : Started reloader process [ 11528 ] using statreload INFO : Started server process [ 6036 ] INFO : Waiting for application startup . 2020 - 07 - 25 02 : 19 : 21.357 | INFO | uvicorn . lifespan . on : startup : 34 - Application startup complete .","title":"init_logging()"},{"location":"reference/utils/profiler/","text":"msaSDK Module \u00b6 .utils.profiler \u00b6 Classes \u00b6 MSAProfilerMiddleware \u00b6 PyInstrument Profiler as Middleware Used to create a HTML from the Profiler result if enabled in the MSAServiceDefinition instance. PARAMETER DESCRIPTION msa_app Optional[Router] = None, Instance of the MSAApp TYPE: Optional [ Router ] DEFAULT: None profiler_interval float = 0.0001, TYPE: float DEFAULT: 0.0001 profiler_output_type str = \"html\", text or html should be html if Admin Site Profiler Page should be used. TYPE: str DEFAULT: 'html' track_each_request bool = True, Tracks each single request and profiles it immediatly, if off then profiler creates result while shutdwon event. TYPE: bool DEFAULT: True **profiler_kwargs other pyinstrument args like 'html_file_name' TYPE: Dict DEFAULT: {} Attributes \u00b6 app instance-attribute \u00b6 app = app Linked/Mounted MSAApp Instance Functions \u00b6 __call__ async \u00b6 __call__ ( scope : Scope , receive : Receive , send : Send ) -> None register an event handler for profiler stop __init__ \u00b6 __init__ ( app : ASGIApp , * , msa_app : Optional [ Router ] = None , profiler_interval : float = 0.0001 , profiler_output_type : str = \"html\" , track_each_request : bool = True , ** profiler_kwargs : Dict ) get_profiler_result async \u00b6 get_profiler_result () Produces the profiler result in the defined output type format, text or html","title":"profiler"},{"location":"reference/utils/profiler/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/profiler/#utilsprofiler","text":"","title":".utils.profiler"},{"location":"reference/utils/profiler/#utils.profiler-classes","text":"","title":"Classes"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware","text":"PyInstrument Profiler as Middleware Used to create a HTML from the Profiler result if enabled in the MSAServiceDefinition instance. PARAMETER DESCRIPTION msa_app Optional[Router] = None, Instance of the MSAApp TYPE: Optional [ Router ] DEFAULT: None profiler_interval float = 0.0001, TYPE: float DEFAULT: 0.0001 profiler_output_type str = \"html\", text or html should be html if Admin Site Profiler Page should be used. TYPE: str DEFAULT: 'html' track_each_request bool = True, Tracks each single request and profiles it immediatly, if off then profiler creates result while shutdwon event. TYPE: bool DEFAULT: True **profiler_kwargs other pyinstrument args like 'html_file_name' TYPE: Dict DEFAULT: {}","title":"MSAProfilerMiddleware"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware-attributes","text":"","title":"Attributes"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.app","text":"app = app Linked/Mounted MSAApp Instance","title":"app"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware-functions","text":"","title":"Functions"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.__call__","text":"__call__ ( scope : Scope , receive : Receive , send : Send ) -> None register an event handler for profiler stop","title":"__call__()"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.__init__","text":"__init__ ( app : ASGIApp , * , msa_app : Optional [ Router ] = None , profiler_interval : float = 0.0001 , profiler_output_type : str = \"html\" , track_each_request : bool = True , ** profiler_kwargs : Dict )","title":"__init__()"},{"location":"reference/utils/profiler/#utils.profiler.MSAProfilerMiddleware.get_profiler_result","text":"get_profiler_result () Produces the profiler result in the defined output type format, text or html","title":"get_profiler_result()"},{"location":"reference/utils/scheduler/","text":"msaSDK Module \u00b6 .utils.scheduler \u00b6 Classes \u00b6 MSAScheduler \u00b6 Attributes \u00b6 debug instance-attribute \u00b6 debug = debug Debug mode True/False enabled instance-attribute \u00b6 enabled : bool = False is_running instance-attribute \u00b6 is_running : bool = False jobs instance-attribute \u00b6 jobs = jobs dictionary MSATimers instances local_time_zone instance-attribute \u00b6 local_time_zone = local_time_zone logger instance-attribute \u00b6 logger = parent_logger if parent_logger else logger Functions \u00b6 __init__ \u00b6 __init__ ( jobs : dict , local_time_zone : str = \"UTC\" , poll_millis : float = 1000 , debug : bool = False , parent_logger = None , ) MSAScheduler object runs timers Standard Polling is 1 second PARAMETER DESCRIPTION jobs timer_jobs: dict[MSATimerEnum, list] = {... TYPE: dict local_time_zone str = 'UTC' TYPE: str DEFAULT: 'UTC' poll_millis float = 1000 TYPE: float DEFAULT: 1000 debug bool = False TYPE: bool DEFAULT: False parent_logger logger instance to use, if empty it creates a local loguru logger DEFAULT: None run_timers async \u00b6 run_timers ( poll_adjuster = 0.99 , debug = False ) runs timers as follows: Step 1: run every poll jobs Step 2: load timer queues for next poll Step 3: delay function which runs previous poll queues poll_adjustor allows time for other timing stop_timers async \u00b6 stop_timers () Stop all timers MSATimerEnum \u00b6 Bases: str , Enum Enum for the different timer Types Attributes \u00b6 every_hour class-attribute \u00b6 every_hour = 'every hour' every_minute class-attribute \u00b6 every_minute = 'every minute' every_poll class-attribute \u00b6 every_poll = 'every poll' every_second class-attribute \u00b6 every_second = 'every second' on_the_15_minute class-attribute \u00b6 on_the_15_minute = 'on the 15 minute' on_the_15_second class-attribute \u00b6 on_the_15_second = 'on the 15 second' on_the_30_minute class-attribute \u00b6 on_the_30_minute = 'on the 30 minute' on_the_30_second class-attribute \u00b6 on_the_30_second = 'on the 30 second' on_the_5_minute class-attribute \u00b6 on_the_5_minute = 'on the 5 minute' on_the_5_second class-attribute \u00b6 on_the_5_second = 'on the 5 second' schedule class-attribute \u00b6 schedule = 'schedule' MSATimers \u00b6 Class to create dictionary of timers for use in MSAScheduler. Attributes \u00b6 timer_jobs instance-attribute \u00b6 timer_jobs = { MSATimerEnum . every_poll : [], MSATimerEnum . every_second : [], MSATimerEnum . on_the_5_second : [], MSATimerEnum . on_the_15_second : [], MSATimerEnum . on_the_30_second : [], MSATimerEnum . every_minute : [], MSATimerEnum . on_the_5_minute : [], MSATimerEnum . on_the_15_minute : [], MSATimerEnum . on_the_30_minute : [], MSATimerEnum . every_hour : [], MSATimerEnum . schedule : [], } Functions \u00b6 __init__ \u00b6 __init__ () self.timer_jobs is the primary resource in MSATimers This is filled by MSATimers It is then accessed by the source and served to MSAScheduler create_timer \u00b6 create_timer ( T_mode : MSATimerEnum , func : typing . Callable , mark_HH_MM : str = None , ) Create a Timer PARAMETER DESCRIPTION T_mode MSATimerEnum TYPE: MSATimerEnum func the call handler for this timer TYPE: typing . Callable mark_HH_MM If scheduler type then this is the time for execution. TYPE: str DEFAULT: None Functions \u00b6 get_time \u00b6 get_time ( local_time_zone = 'UTC' ) get_time_stamp \u00b6 get_time_stamp ( local_time_zone = \"UTC\" , time_format = \"HMS\" )","title":"scheduler"},{"location":"reference/utils/scheduler/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/scheduler/#utilsscheduler","text":"","title":".utils.scheduler"},{"location":"reference/utils/scheduler/#utils.scheduler-classes","text":"","title":"Classes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler","text":"","title":"MSAScheduler"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.debug","text":"debug = debug Debug mode True/False","title":"debug"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.enabled","text":"enabled : bool = False","title":"enabled"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.is_running","text":"is_running : bool = False","title":"is_running"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.jobs","text":"jobs = jobs dictionary MSATimers instances","title":"jobs"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.local_time_zone","text":"local_time_zone = local_time_zone","title":"local_time_zone"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.logger","text":"logger = parent_logger if parent_logger else logger","title":"logger"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler-functions","text":"","title":"Functions"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.__init__","text":"__init__ ( jobs : dict , local_time_zone : str = \"UTC\" , poll_millis : float = 1000 , debug : bool = False , parent_logger = None , ) MSAScheduler object runs timers Standard Polling is 1 second PARAMETER DESCRIPTION jobs timer_jobs: dict[MSATimerEnum, list] = {... TYPE: dict local_time_zone str = 'UTC' TYPE: str DEFAULT: 'UTC' poll_millis float = 1000 TYPE: float DEFAULT: 1000 debug bool = False TYPE: bool DEFAULT: False parent_logger logger instance to use, if empty it creates a local loguru logger DEFAULT: None","title":"__init__()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.run_timers","text":"run_timers ( poll_adjuster = 0.99 , debug = False ) runs timers as follows: Step 1: run every poll jobs Step 2: load timer queues for next poll Step 3: delay function which runs previous poll queues poll_adjustor allows time for other timing","title":"run_timers()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSAScheduler.stop_timers","text":"stop_timers () Stop all timers","title":"stop_timers()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum","text":"Bases: str , Enum Enum for the different timer Types","title":"MSATimerEnum"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_hour","text":"every_hour = 'every hour'","title":"every_hour"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_minute","text":"every_minute = 'every minute'","title":"every_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_poll","text":"every_poll = 'every poll'","title":"every_poll"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.every_second","text":"every_second = 'every second'","title":"every_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_15_minute","text":"on_the_15_minute = 'on the 15 minute'","title":"on_the_15_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_15_second","text":"on_the_15_second = 'on the 15 second'","title":"on_the_15_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_30_minute","text":"on_the_30_minute = 'on the 30 minute'","title":"on_the_30_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_30_second","text":"on_the_30_second = 'on the 30 second'","title":"on_the_30_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_5_minute","text":"on_the_5_minute = 'on the 5 minute'","title":"on_the_5_minute"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.on_the_5_second","text":"on_the_5_second = 'on the 5 second'","title":"on_the_5_second"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimerEnum.schedule","text":"schedule = 'schedule'","title":"schedule"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers","text":"Class to create dictionary of timers for use in MSAScheduler.","title":"MSATimers"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers-attributes","text":"","title":"Attributes"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers.timer_jobs","text":"timer_jobs = { MSATimerEnum . every_poll : [], MSATimerEnum . every_second : [], MSATimerEnum . on_the_5_second : [], MSATimerEnum . on_the_15_second : [], MSATimerEnum . on_the_30_second : [], MSATimerEnum . every_minute : [], MSATimerEnum . on_the_5_minute : [], MSATimerEnum . on_the_15_minute : [], MSATimerEnum . on_the_30_minute : [], MSATimerEnum . every_hour : [], MSATimerEnum . schedule : [], }","title":"timer_jobs"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers-functions","text":"","title":"Functions"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers.__init__","text":"__init__ () self.timer_jobs is the primary resource in MSATimers This is filled by MSATimers It is then accessed by the source and served to MSAScheduler","title":"__init__()"},{"location":"reference/utils/scheduler/#utils.scheduler.MSATimers.create_timer","text":"create_timer ( T_mode : MSATimerEnum , func : typing . Callable , mark_HH_MM : str = None , ) Create a Timer PARAMETER DESCRIPTION T_mode MSATimerEnum TYPE: MSATimerEnum func the call handler for this timer TYPE: typing . Callable mark_HH_MM If scheduler type then this is the time for execution. TYPE: str DEFAULT: None","title":"create_timer()"},{"location":"reference/utils/scheduler/#utils.scheduler-functions","text":"","title":"Functions"},{"location":"reference/utils/scheduler/#utils.scheduler.get_time","text":"get_time ( local_time_zone = 'UTC' )","title":"get_time()"},{"location":"reference/utils/scheduler/#utils.scheduler.get_time_stamp","text":"get_time_stamp ( local_time_zone = \"UTC\" , time_format = \"HMS\" )","title":"get_time_stamp()"},{"location":"reference/utils/sysinfo/","text":"msaSDK Module \u00b6 .utils.sysinfo \u00b6 Provides System Information about devices, OS etc. Classes \u00b6 MSACPUFrequency \u00b6 Bases: SQLModel Pydantic CPU Frequency Info Model. Attributes \u00b6 current class-attribute \u00b6 current : Optional [ float ] max class-attribute \u00b6 max : Optional [ int ] min class-attribute \u00b6 min : Optional [ int ] MSACPUStats \u00b6 Bases: SQLModel Pydantic CPU Stats Info Model. Attributes \u00b6 ctx_switches class-attribute \u00b6 ctx_switches : Optional [ int ] number of context switches (voluntary + involuntary) since boot. interrupts class-attribute \u00b6 interrupts : Optional [ int ] number of interrupts since boot. soft_interrupts class-attribute \u00b6 soft_interrupts : Optional [ int ] number of software interrupts since boot. Always set to 0 on Windows and SunOS. syscalls class-attribute \u00b6 syscalls : Optional [ int ] number of system calls since boot. Always set to 0 on Linux. MSACPUTimes \u00b6 Bases: SQLModel Pydantic CPU Timings Info Model. Attributes \u00b6 guest class-attribute \u00b6 guest : Optional [ float ] (Linux 2.6.24+): time spent running a virtual CPU for guest operating systems under the control of the Linux kernel guest_nice class-attribute \u00b6 guest_nice : Optional [ int ] (Linux 3.2.0+): time spent running a niced guest (virtual CPU for guest operating systems under the control of the Linux kernel) idle class-attribute \u00b6 idle : Optional [ float ] time spent doing nothing iowait class-attribute \u00b6 iowait : Optional [ float ] (Linux): time spent waiting for I/O to complete. This is not accounted in idle time counter. irq class-attribute \u00b6 irq : Optional [ int ] (Linux, BSD): time spent for servicing hardware interrupts nice class-attribute \u00b6 nice : Optional [ int ] (UNIX): time spent by niced (prioritized) processes executing in user mode; on Linux this also includes guest_nice time softirq class-attribute \u00b6 softirq : Optional [ float ] (Linux): time spent for servicing software interrupts steal class-attribute \u00b6 steal : Optional [ int ] (Linux 2.6.11+): time spent by other operating systems running in a virtualized environment system class-attribute \u00b6 system : Optional [ float ] time spent by processes executing in kernel mode user class-attribute \u00b6 user : Optional [ float ] time spent by normal processes executing in user mode; on Linux this also includes guest time MSADiskIO \u00b6 Bases: SQLModel Pydantic Disk IO Info Model. ATTRIBUTE DESCRIPTION read_count number of reads TYPE: Optional [ int ] write_count number of writes TYPE: Optional [ int ] read_bytes number of bytes read TYPE: Optional [ int ] write_bytes number of bytes written TYPE: Optional [ int ] read_time (all except NetBSD and OpenBSD) time spent reading from disk (in milliseconds) TYPE: Optional [ int ] write_time (all except NetBSD and OpenBSD) time spent writing to disk (in milliseconds) TYPE: Optional [ int ] busy_time (Linux, FreeBSD) time spent doing actual I/Os (in milliseconds) TYPE: Optional [ int ] read_merged_count number of merged reads (see iostats doc) TYPE: Linux write_merged_count number of merged writes (see iostats doc) TYPE: Linux Attributes \u00b6 busy_time class-attribute \u00b6 busy_time : Optional [ int ] read_bytes class-attribute \u00b6 read_bytes : Optional [ int ] read_count class-attribute \u00b6 read_count : Optional [ int ] read_merged_count class-attribute \u00b6 read_merged_count : Optional [ int ] read_time class-attribute \u00b6 read_time : Optional [ int ] write_bytes class-attribute \u00b6 write_bytes : Optional [ int ] write_count class-attribute \u00b6 write_count : Optional [ int ] write_merged_count class-attribute \u00b6 write_merged_count : Optional [ int ] write_time class-attribute \u00b6 write_time : Optional [ int ] MSAGPUInfo \u00b6 Bases: SQLModel Pydantic GPU Info Model. Attributes \u00b6 free_memory class-attribute \u00b6 free_memory : Optional [ str ] id class-attribute \u00b6 id : Optional [ int ] load class-attribute \u00b6 load : Optional [ str ] name class-attribute \u00b6 name : Optional [ str ] temperature class-attribute \u00b6 temperature : Optional [ str ] total_memory class-attribute \u00b6 total_memory : Optional [ str ] used_memory class-attribute \u00b6 used_memory : Optional [ str ] uuid class-attribute \u00b6 uuid : Optional [ str ] MSAMemoryUsage \u00b6 Bases: SQLModel Pydantic Memory Usage Info Model. Attributes \u00b6 active class-attribute \u00b6 active : Optional [ float ] (UNIX): memory currently in use or very recently used, and so it is in RAM. available class-attribute \u00b6 available : Optional [ float ] the memory that can be given instantly to processes without the system going into swap. This is calculated by summing different memory values depending on the platform and it is supposed to be used to monitor actual memory usage in a cross platform fashion. buffers class-attribute \u00b6 buffers : Optional [ float ] (Linux, BSD): cache for things like file system metadata. cached class-attribute \u00b6 cached : Optional [ float ] (Linux, BSD): cache for various things. free class-attribute \u00b6 free : Optional [ float ] memory not being used at all (zeroed) that is readily available; note that this doesn\u2019t reflect the actual memory available (use available instead). total - used does not necessarily match free. inactive class-attribute \u00b6 inactive : Optional [ float ] (UNIX): memory that is marked as not used. percent class-attribute \u00b6 percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100 total class-attribute \u00b6 total : Optional [ float ] total physical memory (exclusive swap). used class-attribute \u00b6 used : Optional [ float ] memory used, calculated differently depending on the platform and designed for informational purposes only. total - free does not necessarily match used. MSANetworkAdapter \u00b6 Bases: SQLModel Pydantic Network Adapter Info Model. Attributes \u00b6 address class-attribute \u00b6 address : Optional [ str ] the primary NIC address (always set). broadcast class-attribute \u00b6 broadcast : Optional [ str ] the broadcast address (may be None). family class-attribute \u00b6 family : Optional [ int ] the address family, either AF_INET or AF_INET6 or psutil.AF_LINK, which refers to a MAC address. netmask class-attribute \u00b6 netmask : Optional [ str ] the netmask address (may be None). ptp class-attribute \u00b6 ptp : Optional [ int ] stands for \u201cpoint to point\u201d; it\u2019s the destination address on a point to point interface (typically a VPN). broadcast and ptp are mutually exclusive. May be None. MSANetworkAdapters \u00b6 Bases: SQLModel Pydantic Network Adapters List Model. Attributes \u00b6 adapters class-attribute \u00b6 adapters : List [ MSANetworkAdapter ] = [] name class-attribute \u00b6 name : str = '' MSANetworkConnection \u00b6 Bases: SQLModel Pydantic Network Connection Info Model. Attributes \u00b6 family class-attribute \u00b6 family : Optional [ int ] the address family, either AF_INET, AF_INET6 or AF_UNIX. file_descriptor class-attribute \u00b6 file_descriptor : Optional [ int ] the socket file descriptor. If the connection refers to the current process this may be passed to socket.fromfd to obtain a usable socket object. On Windows and SunOS this is always set to -1. index class-attribute \u00b6 index : Optional [ int ] local_addr class-attribute \u00b6 local_addr : Optional [ str ] the local address as a (ip, port) named tuple or a path in case of AF_UNIX sockets. For UNIX sockets see notes below. pid class-attribute \u00b6 pid : Optional [ int ] the PID of the process which opened the socket, if retrievable, else None . On some platforms (e.g. Linux) the availability of this field changes depending on process privileges (root is needed). remote_addr class-attribute \u00b6 remote_addr : Optional [ str ] the remote address as a (ip, port) named tuple or an absolute path in case of UNIX sockets. When the remote endpoint is not connected you\u2019ll get an empty tuple (AF_INET*) or \"\" (AF_UNIX). For UNIX sockets see notes below. status class-attribute \u00b6 status : str = '' represents the status of a TCP connection. The return value is one of the psutil.CONN_* constants (a string). For UDP and UNIX sockets this is always going to be psutil.CONN_NONE. type class-attribute \u00b6 type : Optional [ int ] the address type, either SOCK_STREAM , SOCK_DGRAM or SOCK_SEQPACKET . MSANetworkIO \u00b6 Bases: SQLModel Pydantic Network IO Info Model. ATTRIBUTE DESCRIPTION bytes_sent number of bytes sent TYPE: Optional [ int ] bytes_recv number of bytes received TYPE: Optional [ int ] packets_sent number of packets sent TYPE: Optional [ int ] packets_recv number of packets received TYPE: Optional [ int ] errin total number of errors while receiving TYPE: Optional [ int ] errout total number of errors while sending TYPE: Optional [ int ] dropin total number of incoming packets which were dropped TYPE: Optional [ int ] dropout total number of outgoing packets which were dropped (always 0 on macOS and BSD) TYPE: Optional [ int ] Attributes \u00b6 bytes_recv class-attribute \u00b6 bytes_recv : Optional [ int ] bytes_sent class-attribute \u00b6 bytes_sent : Optional [ int ] dropin class-attribute \u00b6 dropin : Optional [ int ] dropout class-attribute \u00b6 dropout : Optional [ int ] errin class-attribute \u00b6 errin : Optional [ int ] errout class-attribute \u00b6 errout : Optional [ int ] packets_recv class-attribute \u00b6 packets_recv : Optional [ int ] packets_sent class-attribute \u00b6 packets_sent : Optional [ int ] MSANetworkStat \u00b6 Bases: SQLModel Pydantic Network Stats Info Model. Attributes \u00b6 duplex class-attribute \u00b6 duplex : Optional [ int ] the duplex communication type; it can be either NIC_DUPLEX_FULL, NIC_DUPLEX_HALF or NIC_DUPLEX_UNKNOWN. isup class-attribute \u00b6 isup : Optional [ bool ] a bool indicating whether the NIC is up and running (meaning ethernet cable or Wi-Fi is connected). mtu class-attribute \u00b6 mtu : Optional [ int ] NIC\u2019s maximum transmission unit expressed in bytes. speed class-attribute \u00b6 speed : Optional [ int ] the NIC speed expressed in mega bits (MB), if it can\u2019t be determined (e.g. \u2018localhost\u2019) it will be set to 0. MSANetworkStats \u00b6 Bases: SQLModel Pydantic Network Stats List Info Model. Attributes \u00b6 adapters class-attribute \u00b6 adapters : List [ MSANetworkStat ] = [] name class-attribute \u00b6 name : str = '' MSASwap \u00b6 Bases: SQLModel Pydantic Swapfile Info Model. Attributes \u00b6 free class-attribute \u00b6 free : Optional [ float ] percent class-attribute \u00b6 percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100 total class-attribute \u00b6 total : Optional [ float ] used class-attribute \u00b6 used : Optional [ float ] MSASystemGPUInfo \u00b6 Bases: SQLModel Pydantic System GPU Info Model. Attributes \u00b6 CPU_Logical class-attribute \u00b6 CPU_Logical : Optional [ int ] CPU_Physical class-attribute \u00b6 CPU_Physical : Optional [ int ] GPUs class-attribute \u00b6 GPUs : Optional [ List [ MSAGPUInfo ]] HW_Identifier class-attribute \u00b6 HW_Identifier : str = '' Host_Name class-attribute \u00b6 Host_Name : str = '' IP_Address class-attribute \u00b6 IP_Address : str = '' MAC_Address class-attribute \u00b6 MAC_Address : str = '' Memory_Available class-attribute \u00b6 Memory_Available : str = '' Memory_Physical class-attribute \u00b6 Memory_Physical : str = '' Node_Name class-attribute \u00b6 Node_Name : str = '' OS_Name class-attribute \u00b6 OS_Name : str = '' OS_Release class-attribute \u00b6 OS_Release : str = '' OS_Version class-attribute \u00b6 OS_Version : str = '' PID class-attribute \u00b6 PID : Optional [ int ] Runtime_Cmd class-attribute \u00b6 Runtime_Cmd : List [ str ] = [] Runtime_Exe class-attribute \u00b6 Runtime_Exe : str = '' Runtime_Status class-attribute \u00b6 Runtime_Status : str = '' Service_Start class-attribute \u00b6 Service_Start : str = '' System_Boot class-attribute \u00b6 System_Boot : str = '' MSASystemInfo \u00b6 Bases: SQLModel Pydantic System Info Model. Attributes \u00b6 CPU_Affinity class-attribute \u00b6 CPU_Affinity : Optional [ int ] CPU_Current class-attribute \u00b6 CPU_Current : Optional [ int ] CPU_Frequency class-attribute \u00b6 CPU_Frequency : Optional [ MSACPUFrequency ] CPU_LoadAvg class-attribute \u00b6 CPU_LoadAvg : Optional [ List [ float ]] CPU_Logical class-attribute \u00b6 CPU_Logical : Optional [ int ] Amount of logical (each physical core doing 2 or more threads, hyperthreading) CPU's CPU_Physical class-attribute \u00b6 CPU_Physical : Optional [ int ] Amount of physical CPU's CPU_Stats class-attribute \u00b6 CPU_Stats : Optional [ MSACPUStats ] CPU_Times class-attribute \u00b6 CPU_Times : Optional [ MSACPUTimes ] CPU_Usage_Name class-attribute \u00b6 CPU_Usage_Name : str = '' CPU_Usage_Process class-attribute \u00b6 CPU_Usage_Process : Optional [ float ] CPU_Usage_Total class-attribute \u00b6 CPU_Usage_Total : Optional [ float ] Disk_IO class-attribute \u00b6 Disk_IO : Optional [ MSADiskIO ] HW_Identifier class-attribute \u00b6 HW_Identifier : str = '' Host_Name class-attribute \u00b6 Host_Name : str = '' IP_Address class-attribute \u00b6 IP_Address : str = '' MAC_Address class-attribute \u00b6 MAC_Address : str = '' Memory_Available class-attribute \u00b6 Memory_Available : str = '' Memory_Physical class-attribute \u00b6 Memory_Physical : str = '' Memory_Usage class-attribute \u00b6 Memory_Usage : Optional [ MSAMemoryUsage ] Network_Adapters class-attribute \u00b6 Network_Adapters : Optional [ List [ MSANetworkAdapters ]] Network_Connections class-attribute \u00b6 Network_Connections : Optional [ List [ MSANetworkConnection ]] Network_IO class-attribute \u00b6 Network_IO : Optional [ MSANetworkIO ] Network_Stats class-attribute \u00b6 Network_Stats : Optional [ List [ MSANetworkStats ]] Node_Name class-attribute \u00b6 Node_Name : str = '' OS_Name class-attribute \u00b6 OS_Name : str = '' OS_Release class-attribute \u00b6 OS_Release : str = '' OS_Version class-attribute \u00b6 OS_Version : str = '' PID class-attribute \u00b6 PID : Optional [ int ] Runtime_Cmd class-attribute \u00b6 Runtime_Cmd : List [ str ] = [] Runtime_Exe class-attribute \u00b6 Runtime_Exe : str = '' Runtime_Status class-attribute \u00b6 Runtime_Status : str = '' Service Status, running or stopped Service_Start class-attribute \u00b6 Service_Start : str = '' Swap class-attribute \u00b6 Swap : Optional [ MSASwap ] System_Boot class-attribute \u00b6 System_Boot : str = '' Temperatures class-attribute \u00b6 Temperatures : Optional [ List [ MSATemperatures ]] MSATemperature \u00b6 Bases: SQLModel Pydantic Temperature Info Model. Attributes \u00b6 critical class-attribute \u00b6 critical : Optional [ float ] current class-attribute \u00b6 current : Optional [ float ] high class-attribute \u00b6 high : Optional [ float ] label class-attribute \u00b6 label : Optional [ str ] MSATemperatures \u00b6 Bases: SQLModel Pydantic Temperatures List Model. Attributes \u00b6 device class-attribute \u00b6 device : str = '' temps class-attribute \u00b6 temps : List [ MSATemperature ] = [] Functions \u00b6 get_cpu_freq \u00b6 get_cpu_freq () -> MSACPUFrequency Get psutil.cpu_freq() RETURNS DESCRIPTION cpf MSACPUFrequency TYPE: MSACPUFrequency get_cpu_stats \u00b6 get_cpu_stats () -> MSACPUStats Get psutil.cpu_times() RETURNS DESCRIPTION cst MSACPUStats TYPE: MSACPUStats get_cpu_times \u00b6 get_cpu_times () -> MSACPUTimes Get psutil.cpu_times() RETURNS DESCRIPTION cti MSACPUTimes TYPE: MSACPUTimes get_cpu_usage \u00b6 get_cpu_usage ( user : str = None , ignore_self : bool = False ) -> tuple [ int , int , str ] Returns the total CPU usage for all available cores. PARAMETER DESCRIPTION user If given, returns only the total CPU usage of all processes for the given user. TYPE: str DEFAULT: None ignore_self If True the process that runs this script will be ignored. TYPE: bool DEFAULT: False RETURNS DESCRIPTION total total usage TYPE: int largest_process largest process usage TYPE: int largest_process_name name of the largest process TYPE: str get_disk_io \u00b6 get_disk_io () -> MSADiskIO Get psutil.disk_io_counters() RETURNS DESCRIPTION dio MSADiskIO TYPE: MSADiskIO get_gpus \u00b6 get_gpus () -> List [ MSAGPUInfo ] Get GPUtil.getGPUs() RETURNS DESCRIPTION list_gpus List[MSAGPUInfo] = [] TYPE: List [ MSAGPUInfo ] get_hostname \u00b6 get_hostname () -> str Get socket.gethostname() RETURNS DESCRIPTION hostname str TYPE: str get_list_partitions \u00b6 get_list_partitions () -> List Get psutil.disk_partitions() RETURNS DESCRIPTION partitions_list List = [] TYPE: List get_load_average \u00b6 get_load_average () -> tuple [ float , float , float ] Returns the CPU load average in tuple[1min, 5min, 15min]. RETURNS DESCRIPTION 1min total usage TYPE: float 5min largest process usage TYPE: float 15min name of the largest process TYPE: float get_map_disk_usage \u00b6 get_map_disk_usage () -> Dict Get get_partition_usage(get_list_partitions()) RETURNS DESCRIPTION rdict Dict TYPE: Dict get_memory_usage \u00b6 get_memory_usage () -> MSAMemoryUsage Get psutil.virtual_memory() RETURNS DESCRIPTION mu MSAMemoryUsage TYPE: MSAMemoryUsage get_network_adapters \u00b6 get_network_adapters () -> List [ MSANetworkAdapters ] Get psutil.net_if_addrs() RETURNS DESCRIPTION ret List[MSANetworkAdapters] = [] TYPE: List [ MSANetworkAdapters ] get_network_connections \u00b6 get_network_connections () -> List [ MSANetworkConnection ] Get psutil.net_connections() RETURNS DESCRIPTION rlist List[MSANetworkConnection] = [] TYPE: List [ MSANetworkConnection ] get_network_io \u00b6 get_network_io () -> MSANetworkIO Get psutil.net_io_counters() RETURNS DESCRIPTION nio MSANetworkIO TYPE: MSANetworkIO get_network_stats \u00b6 get_network_stats () -> List [ MSANetworkStats ] Get psutil.net_if_stats() RETURNS DESCRIPTION ret List[MSANetworkStats] = [] TYPE: List [ MSANetworkStats ] get_partition_usage \u00b6 get_partition_usage ( partitions ) -> Dict Get psutil.disk_usage(partition) RETURNS DESCRIPTION ret Dict = {\"partition\": list, \"total\": list, \"used\": list, \"free\": list, \"percent\": list} TYPE: Dict get_swap \u00b6 get_swap () -> MSASwap Get psutil.swap_memory() RETURNS DESCRIPTION sw MSASwap TYPE: MSASwap get_sysgpuinfo \u00b6 get_sysgpuinfo () -> MSASystemGPUInfo Get MSASystemGPUInfo RETURNS DESCRIPTION system_gpu_info Pydantic System GPU Info Model. TYPE: MSASystemGPUInfo get_sysinfo \u00b6 get_sysinfo () -> MSASystemInfo Get MSASystemInfo RETURNS DESCRIPTION system_info Pydantic System Info Model. TYPE: MSASystemInfo get_temperatures \u00b6 get_temperatures () -> List [ MSATemperatures ] Get psutil.sensors_temperatures() RETURNS DESCRIPTION ret List[MSATemperatures] = [] TYPE: List [ MSATemperatures ]","title":"sysinfo"},{"location":"reference/utils/sysinfo/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/sysinfo/#utilssysinfo","text":"Provides System Information about devices, OS etc.","title":".utils.sysinfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo-classes","text":"","title":"Classes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency","text":"Bases: SQLModel Pydantic CPU Frequency Info Model.","title":"MSACPUFrequency"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency.current","text":"current : Optional [ float ]","title":"current"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency.max","text":"max : Optional [ int ]","title":"max"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUFrequency.min","text":"min : Optional [ int ]","title":"min"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats","text":"Bases: SQLModel Pydantic CPU Stats Info Model.","title":"MSACPUStats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.ctx_switches","text":"ctx_switches : Optional [ int ] number of context switches (voluntary + involuntary) since boot.","title":"ctx_switches"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.interrupts","text":"interrupts : Optional [ int ] number of interrupts since boot.","title":"interrupts"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.soft_interrupts","text":"soft_interrupts : Optional [ int ] number of software interrupts since boot. Always set to 0 on Windows and SunOS.","title":"soft_interrupts"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUStats.syscalls","text":"syscalls : Optional [ int ] number of system calls since boot. Always set to 0 on Linux.","title":"syscalls"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes","text":"Bases: SQLModel Pydantic CPU Timings Info Model.","title":"MSACPUTimes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.guest","text":"guest : Optional [ float ] (Linux 2.6.24+): time spent running a virtual CPU for guest operating systems under the control of the Linux kernel","title":"guest"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.guest_nice","text":"guest_nice : Optional [ int ] (Linux 3.2.0+): time spent running a niced guest (virtual CPU for guest operating systems under the control of the Linux kernel)","title":"guest_nice"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.idle","text":"idle : Optional [ float ] time spent doing nothing","title":"idle"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.iowait","text":"iowait : Optional [ float ] (Linux): time spent waiting for I/O to complete. This is not accounted in idle time counter.","title":"iowait"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.irq","text":"irq : Optional [ int ] (Linux, BSD): time spent for servicing hardware interrupts","title":"irq"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.nice","text":"nice : Optional [ int ] (UNIX): time spent by niced (prioritized) processes executing in user mode; on Linux this also includes guest_nice time","title":"nice"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.softirq","text":"softirq : Optional [ float ] (Linux): time spent for servicing software interrupts","title":"softirq"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.steal","text":"steal : Optional [ int ] (Linux 2.6.11+): time spent by other operating systems running in a virtualized environment","title":"steal"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.system","text":"system : Optional [ float ] time spent by processes executing in kernel mode","title":"system"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSACPUTimes.user","text":"user : Optional [ float ] time spent by normal processes executing in user mode; on Linux this also includes guest time","title":"user"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO","text":"Bases: SQLModel Pydantic Disk IO Info Model. ATTRIBUTE DESCRIPTION read_count number of reads TYPE: Optional [ int ] write_count number of writes TYPE: Optional [ int ] read_bytes number of bytes read TYPE: Optional [ int ] write_bytes number of bytes written TYPE: Optional [ int ] read_time (all except NetBSD and OpenBSD) time spent reading from disk (in milliseconds) TYPE: Optional [ int ] write_time (all except NetBSD and OpenBSD) time spent writing to disk (in milliseconds) TYPE: Optional [ int ] busy_time (Linux, FreeBSD) time spent doing actual I/Os (in milliseconds) TYPE: Optional [ int ] read_merged_count number of merged reads (see iostats doc) TYPE: Linux write_merged_count number of merged writes (see iostats doc) TYPE: Linux","title":"MSADiskIO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.busy_time","text":"busy_time : Optional [ int ]","title":"busy_time"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_bytes","text":"read_bytes : Optional [ int ]","title":"read_bytes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_count","text":"read_count : Optional [ int ]","title":"read_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_merged_count","text":"read_merged_count : Optional [ int ]","title":"read_merged_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.read_time","text":"read_time : Optional [ int ]","title":"read_time"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_bytes","text":"write_bytes : Optional [ int ]","title":"write_bytes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_count","text":"write_count : Optional [ int ]","title":"write_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_merged_count","text":"write_merged_count : Optional [ int ]","title":"write_merged_count"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSADiskIO.write_time","text":"write_time : Optional [ int ]","title":"write_time"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo","text":"Bases: SQLModel Pydantic GPU Info Model.","title":"MSAGPUInfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.free_memory","text":"free_memory : Optional [ str ]","title":"free_memory"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.id","text":"id : Optional [ int ]","title":"id"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.load","text":"load : Optional [ str ]","title":"load"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.name","text":"name : Optional [ str ]","title":"name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.temperature","text":"temperature : Optional [ str ]","title":"temperature"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.total_memory","text":"total_memory : Optional [ str ]","title":"total_memory"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.used_memory","text":"used_memory : Optional [ str ]","title":"used_memory"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAGPUInfo.uuid","text":"uuid : Optional [ str ]","title":"uuid"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage","text":"Bases: SQLModel Pydantic Memory Usage Info Model.","title":"MSAMemoryUsage"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.active","text":"active : Optional [ float ] (UNIX): memory currently in use or very recently used, and so it is in RAM.","title":"active"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.available","text":"available : Optional [ float ] the memory that can be given instantly to processes without the system going into swap. This is calculated by summing different memory values depending on the platform and it is supposed to be used to monitor actual memory usage in a cross platform fashion.","title":"available"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.buffers","text":"buffers : Optional [ float ] (Linux, BSD): cache for things like file system metadata.","title":"buffers"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.cached","text":"cached : Optional [ float ] (Linux, BSD): cache for various things.","title":"cached"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.free","text":"free : Optional [ float ] memory not being used at all (zeroed) that is readily available; note that this doesn\u2019t reflect the actual memory available (use available instead). total - used does not necessarily match free.","title":"free"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.inactive","text":"inactive : Optional [ float ] (UNIX): memory that is marked as not used.","title":"inactive"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.percent","text":"percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100","title":"percent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.total","text":"total : Optional [ float ] total physical memory (exclusive swap).","title":"total"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSAMemoryUsage.used","text":"used : Optional [ float ] memory used, calculated differently depending on the platform and designed for informational purposes only. total - free does not necessarily match used.","title":"used"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter","text":"Bases: SQLModel Pydantic Network Adapter Info Model.","title":"MSANetworkAdapter"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.address","text":"address : Optional [ str ] the primary NIC address (always set).","title":"address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.broadcast","text":"broadcast : Optional [ str ] the broadcast address (may be None).","title":"broadcast"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.family","text":"family : Optional [ int ] the address family, either AF_INET or AF_INET6 or psutil.AF_LINK, which refers to a MAC address.","title":"family"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.netmask","text":"netmask : Optional [ str ] the netmask address (may be None).","title":"netmask"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapter.ptp","text":"ptp : Optional [ int ] stands for \u201cpoint to point\u201d; it\u2019s the destination address on a point to point interface (typically a VPN). broadcast and ptp are mutually exclusive. May be None.","title":"ptp"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters","text":"Bases: SQLModel Pydantic Network Adapters List Model.","title":"MSANetworkAdapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters.adapters","text":"adapters : List [ MSANetworkAdapter ] = []","title":"adapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkAdapters.name","text":"name : str = ''","title":"name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection","text":"Bases: SQLModel Pydantic Network Connection Info Model.","title":"MSANetworkConnection"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.family","text":"family : Optional [ int ] the address family, either AF_INET, AF_INET6 or AF_UNIX.","title":"family"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.file_descriptor","text":"file_descriptor : Optional [ int ] the socket file descriptor. If the connection refers to the current process this may be passed to socket.fromfd to obtain a usable socket object. On Windows and SunOS this is always set to -1.","title":"file_descriptor"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.index","text":"index : Optional [ int ]","title":"index"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.local_addr","text":"local_addr : Optional [ str ] the local address as a (ip, port) named tuple or a path in case of AF_UNIX sockets. For UNIX sockets see notes below.","title":"local_addr"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.pid","text":"pid : Optional [ int ] the PID of the process which opened the socket, if retrievable, else None . On some platforms (e.g. Linux) the availability of this field changes depending on process privileges (root is needed).","title":"pid"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.remote_addr","text":"remote_addr : Optional [ str ] the remote address as a (ip, port) named tuple or an absolute path in case of UNIX sockets. When the remote endpoint is not connected you\u2019ll get an empty tuple (AF_INET*) or \"\" (AF_UNIX). For UNIX sockets see notes below.","title":"remote_addr"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.status","text":"status : str = '' represents the status of a TCP connection. The return value is one of the psutil.CONN_* constants (a string). For UDP and UNIX sockets this is always going to be psutil.CONN_NONE.","title":"status"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkConnection.type","text":"type : Optional [ int ] the address type, either SOCK_STREAM , SOCK_DGRAM or SOCK_SEQPACKET .","title":"type"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO","text":"Bases: SQLModel Pydantic Network IO Info Model. ATTRIBUTE DESCRIPTION bytes_sent number of bytes sent TYPE: Optional [ int ] bytes_recv number of bytes received TYPE: Optional [ int ] packets_sent number of packets sent TYPE: Optional [ int ] packets_recv number of packets received TYPE: Optional [ int ] errin total number of errors while receiving TYPE: Optional [ int ] errout total number of errors while sending TYPE: Optional [ int ] dropin total number of incoming packets which were dropped TYPE: Optional [ int ] dropout total number of outgoing packets which were dropped (always 0 on macOS and BSD) TYPE: Optional [ int ]","title":"MSANetworkIO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.bytes_recv","text":"bytes_recv : Optional [ int ]","title":"bytes_recv"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.bytes_sent","text":"bytes_sent : Optional [ int ]","title":"bytes_sent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.dropin","text":"dropin : Optional [ int ]","title":"dropin"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.dropout","text":"dropout : Optional [ int ]","title":"dropout"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.errin","text":"errin : Optional [ int ]","title":"errin"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.errout","text":"errout : Optional [ int ]","title":"errout"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.packets_recv","text":"packets_recv : Optional [ int ]","title":"packets_recv"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkIO.packets_sent","text":"packets_sent : Optional [ int ]","title":"packets_sent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat","text":"Bases: SQLModel Pydantic Network Stats Info Model.","title":"MSANetworkStat"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.duplex","text":"duplex : Optional [ int ] the duplex communication type; it can be either NIC_DUPLEX_FULL, NIC_DUPLEX_HALF or NIC_DUPLEX_UNKNOWN.","title":"duplex"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.isup","text":"isup : Optional [ bool ] a bool indicating whether the NIC is up and running (meaning ethernet cable or Wi-Fi is connected).","title":"isup"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.mtu","text":"mtu : Optional [ int ] NIC\u2019s maximum transmission unit expressed in bytes.","title":"mtu"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStat.speed","text":"speed : Optional [ int ] the NIC speed expressed in mega bits (MB), if it can\u2019t be determined (e.g. \u2018localhost\u2019) it will be set to 0.","title":"speed"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats","text":"Bases: SQLModel Pydantic Network Stats List Info Model.","title":"MSANetworkStats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats.adapters","text":"adapters : List [ MSANetworkStat ] = []","title":"adapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSANetworkStats.name","text":"name : str = ''","title":"name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap","text":"Bases: SQLModel Pydantic Swapfile Info Model.","title":"MSASwap"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.free","text":"free : Optional [ float ]","title":"free"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.percent","text":"percent : Optional [ float ] the percentage usage calculated as (total - available) / total * 100","title":"percent"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.total","text":"total : Optional [ float ]","title":"total"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASwap.used","text":"used : Optional [ float ]","title":"used"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo","text":"Bases: SQLModel Pydantic System GPU Info Model.","title":"MSASystemGPUInfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.CPU_Logical","text":"CPU_Logical : Optional [ int ]","title":"CPU_Logical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.CPU_Physical","text":"CPU_Physical : Optional [ int ]","title":"CPU_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.GPUs","text":"GPUs : Optional [ List [ MSAGPUInfo ]]","title":"GPUs"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.HW_Identifier","text":"HW_Identifier : str = ''","title":"HW_Identifier"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Host_Name","text":"Host_Name : str = ''","title":"Host_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.IP_Address","text":"IP_Address : str = ''","title":"IP_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.MAC_Address","text":"MAC_Address : str = ''","title":"MAC_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Memory_Available","text":"Memory_Available : str = ''","title":"Memory_Available"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Memory_Physical","text":"Memory_Physical : str = ''","title":"Memory_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Node_Name","text":"Node_Name : str = ''","title":"Node_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.OS_Name","text":"OS_Name : str = ''","title":"OS_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.OS_Release","text":"OS_Release : str = ''","title":"OS_Release"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.OS_Version","text":"OS_Version : str = ''","title":"OS_Version"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.PID","text":"PID : Optional [ int ]","title":"PID"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Runtime_Cmd","text":"Runtime_Cmd : List [ str ] = []","title":"Runtime_Cmd"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Runtime_Exe","text":"Runtime_Exe : str = ''","title":"Runtime_Exe"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Runtime_Status","text":"Runtime_Status : str = ''","title":"Runtime_Status"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.Service_Start","text":"Service_Start : str = ''","title":"Service_Start"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemGPUInfo.System_Boot","text":"System_Boot : str = ''","title":"System_Boot"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo","text":"Bases: SQLModel Pydantic System Info Model.","title":"MSASystemInfo"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Affinity","text":"CPU_Affinity : Optional [ int ]","title":"CPU_Affinity"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Current","text":"CPU_Current : Optional [ int ]","title":"CPU_Current"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Frequency","text":"CPU_Frequency : Optional [ MSACPUFrequency ]","title":"CPU_Frequency"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_LoadAvg","text":"CPU_LoadAvg : Optional [ List [ float ]]","title":"CPU_LoadAvg"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Logical","text":"CPU_Logical : Optional [ int ] Amount of logical (each physical core doing 2 or more threads, hyperthreading) CPU's","title":"CPU_Logical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Physical","text":"CPU_Physical : Optional [ int ] Amount of physical CPU's","title":"CPU_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Stats","text":"CPU_Stats : Optional [ MSACPUStats ]","title":"CPU_Stats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Times","text":"CPU_Times : Optional [ MSACPUTimes ]","title":"CPU_Times"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Usage_Name","text":"CPU_Usage_Name : str = ''","title":"CPU_Usage_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Usage_Process","text":"CPU_Usage_Process : Optional [ float ]","title":"CPU_Usage_Process"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.CPU_Usage_Total","text":"CPU_Usage_Total : Optional [ float ]","title":"CPU_Usage_Total"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Disk_IO","text":"Disk_IO : Optional [ MSADiskIO ]","title":"Disk_IO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.HW_Identifier","text":"HW_Identifier : str = ''","title":"HW_Identifier"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Host_Name","text":"Host_Name : str = ''","title":"Host_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.IP_Address","text":"IP_Address : str = ''","title":"IP_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.MAC_Address","text":"MAC_Address : str = ''","title":"MAC_Address"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Memory_Available","text":"Memory_Available : str = ''","title":"Memory_Available"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Memory_Physical","text":"Memory_Physical : str = ''","title":"Memory_Physical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Memory_Usage","text":"Memory_Usage : Optional [ MSAMemoryUsage ]","title":"Memory_Usage"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_Adapters","text":"Network_Adapters : Optional [ List [ MSANetworkAdapters ]]","title":"Network_Adapters"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_Connections","text":"Network_Connections : Optional [ List [ MSANetworkConnection ]]","title":"Network_Connections"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_IO","text":"Network_IO : Optional [ MSANetworkIO ]","title":"Network_IO"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Network_Stats","text":"Network_Stats : Optional [ List [ MSANetworkStats ]]","title":"Network_Stats"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Node_Name","text":"Node_Name : str = ''","title":"Node_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.OS_Name","text":"OS_Name : str = ''","title":"OS_Name"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.OS_Release","text":"OS_Release : str = ''","title":"OS_Release"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.OS_Version","text":"OS_Version : str = ''","title":"OS_Version"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.PID","text":"PID : Optional [ int ]","title":"PID"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Runtime_Cmd","text":"Runtime_Cmd : List [ str ] = []","title":"Runtime_Cmd"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Runtime_Exe","text":"Runtime_Exe : str = ''","title":"Runtime_Exe"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Runtime_Status","text":"Runtime_Status : str = '' Service Status, running or stopped","title":"Runtime_Status"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Service_Start","text":"Service_Start : str = ''","title":"Service_Start"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Swap","text":"Swap : Optional [ MSASwap ]","title":"Swap"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.System_Boot","text":"System_Boot : str = ''","title":"System_Boot"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSASystemInfo.Temperatures","text":"Temperatures : Optional [ List [ MSATemperatures ]]","title":"Temperatures"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature","text":"Bases: SQLModel Pydantic Temperature Info Model.","title":"MSATemperature"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.critical","text":"critical : Optional [ float ]","title":"critical"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.current","text":"current : Optional [ float ]","title":"current"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.high","text":"high : Optional [ float ]","title":"high"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperature.label","text":"label : Optional [ str ]","title":"label"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures","text":"Bases: SQLModel Pydantic Temperatures List Model.","title":"MSATemperatures"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures-attributes","text":"","title":"Attributes"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures.device","text":"device : str = ''","title":"device"},{"location":"reference/utils/sysinfo/#utils.sysinfo.MSATemperatures.temps","text":"temps : List [ MSATemperature ] = []","title":"temps"},{"location":"reference/utils/sysinfo/#utils.sysinfo-functions","text":"","title":"Functions"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_freq","text":"get_cpu_freq () -> MSACPUFrequency Get psutil.cpu_freq() RETURNS DESCRIPTION cpf MSACPUFrequency TYPE: MSACPUFrequency","title":"get_cpu_freq()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_stats","text":"get_cpu_stats () -> MSACPUStats Get psutil.cpu_times() RETURNS DESCRIPTION cst MSACPUStats TYPE: MSACPUStats","title":"get_cpu_stats()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_times","text":"get_cpu_times () -> MSACPUTimes Get psutil.cpu_times() RETURNS DESCRIPTION cti MSACPUTimes TYPE: MSACPUTimes","title":"get_cpu_times()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_cpu_usage","text":"get_cpu_usage ( user : str = None , ignore_self : bool = False ) -> tuple [ int , int , str ] Returns the total CPU usage for all available cores. PARAMETER DESCRIPTION user If given, returns only the total CPU usage of all processes for the given user. TYPE: str DEFAULT: None ignore_self If True the process that runs this script will be ignored. TYPE: bool DEFAULT: False RETURNS DESCRIPTION total total usage TYPE: int largest_process largest process usage TYPE: int largest_process_name name of the largest process TYPE: str","title":"get_cpu_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_disk_io","text":"get_disk_io () -> MSADiskIO Get psutil.disk_io_counters() RETURNS DESCRIPTION dio MSADiskIO TYPE: MSADiskIO","title":"get_disk_io()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_gpus","text":"get_gpus () -> List [ MSAGPUInfo ] Get GPUtil.getGPUs() RETURNS DESCRIPTION list_gpus List[MSAGPUInfo] = [] TYPE: List [ MSAGPUInfo ]","title":"get_gpus()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_hostname","text":"get_hostname () -> str Get socket.gethostname() RETURNS DESCRIPTION hostname str TYPE: str","title":"get_hostname()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_list_partitions","text":"get_list_partitions () -> List Get psutil.disk_partitions() RETURNS DESCRIPTION partitions_list List = [] TYPE: List","title":"get_list_partitions()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_load_average","text":"get_load_average () -> tuple [ float , float , float ] Returns the CPU load average in tuple[1min, 5min, 15min]. RETURNS DESCRIPTION 1min total usage TYPE: float 5min largest process usage TYPE: float 15min name of the largest process TYPE: float","title":"get_load_average()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_map_disk_usage","text":"get_map_disk_usage () -> Dict Get get_partition_usage(get_list_partitions()) RETURNS DESCRIPTION rdict Dict TYPE: Dict","title":"get_map_disk_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_memory_usage","text":"get_memory_usage () -> MSAMemoryUsage Get psutil.virtual_memory() RETURNS DESCRIPTION mu MSAMemoryUsage TYPE: MSAMemoryUsage","title":"get_memory_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_adapters","text":"get_network_adapters () -> List [ MSANetworkAdapters ] Get psutil.net_if_addrs() RETURNS DESCRIPTION ret List[MSANetworkAdapters] = [] TYPE: List [ MSANetworkAdapters ]","title":"get_network_adapters()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_connections","text":"get_network_connections () -> List [ MSANetworkConnection ] Get psutil.net_connections() RETURNS DESCRIPTION rlist List[MSANetworkConnection] = [] TYPE: List [ MSANetworkConnection ]","title":"get_network_connections()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_io","text":"get_network_io () -> MSANetworkIO Get psutil.net_io_counters() RETURNS DESCRIPTION nio MSANetworkIO TYPE: MSANetworkIO","title":"get_network_io()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_network_stats","text":"get_network_stats () -> List [ MSANetworkStats ] Get psutil.net_if_stats() RETURNS DESCRIPTION ret List[MSANetworkStats] = [] TYPE: List [ MSANetworkStats ]","title":"get_network_stats()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_partition_usage","text":"get_partition_usage ( partitions ) -> Dict Get psutil.disk_usage(partition) RETURNS DESCRIPTION ret Dict = {\"partition\": list, \"total\": list, \"used\": list, \"free\": list, \"percent\": list} TYPE: Dict","title":"get_partition_usage()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_swap","text":"get_swap () -> MSASwap Get psutil.swap_memory() RETURNS DESCRIPTION sw MSASwap TYPE: MSASwap","title":"get_swap()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_sysgpuinfo","text":"get_sysgpuinfo () -> MSASystemGPUInfo Get MSASystemGPUInfo RETURNS DESCRIPTION system_gpu_info Pydantic System GPU Info Model. TYPE: MSASystemGPUInfo","title":"get_sysgpuinfo()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_sysinfo","text":"get_sysinfo () -> MSASystemInfo Get MSASystemInfo RETURNS DESCRIPTION system_info Pydantic System Info Model. TYPE: MSASystemInfo","title":"get_sysinfo()"},{"location":"reference/utils/sysinfo/#utils.sysinfo.get_temperatures","text":"get_temperatures () -> List [ MSATemperatures ] Get psutil.sensors_temperatures() RETURNS DESCRIPTION ret List[MSATemperatures] = [] TYPE: List [ MSATemperatures ]","title":"get_temperatures()"},{"location":"reference/utils/token/","text":"msaSDK Module \u00b6 .utils.token \u00b6 Attributes \u00b6 oauth2_scheme module-attribute \u00b6 oauth2_scheme = OAuth2PasswordBearer ( tokenUrl = 'login' ) Classes \u00b6 MSAToken \u00b6 Attributes \u00b6 algorithm instance-attribute \u00b6 algorithm : str = algorithm credentials_exception instance-attribute \u00b6 credentials_exception = HTTPException ( status_code = status . HTTP_401_UNAUTHORIZED , detail = \"Could not validate credentials\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, ) secret_key instance-attribute \u00b6 secret_key : str = secret_key Functions \u00b6 __init__ \u00b6 __init__ ( secret_key : str , algorithm : str = 'HS256' ) MSAToken PARAMETER DESCRIPTION secret_key The secret key to produce a Token TYPE: str algorithm Algo to use, default HS256 TYPE: str DEFAULT: 'HS256' create_token async \u00b6 create_token ( data : dict , expire_minutes : int = 100 ) -> str Create a Token PARAMETER DESCRIPTION data the data and content used to build the token TYPE: dict expire_minutes the time the token is valid, expires TYPE: int DEFAULT: 100 RETURNS DESCRIPTION encoded_jwt jwt encoded token TYPE: str get_current_user async \u00b6 get_current_user ( token : str = Depends ( oauth2_scheme )) verify_token async \u00b6 verify_token ( token : str ) -> MSATokenData Verify Token PARAMETER DESCRIPTION token the token as str TYPE: str RAISES DESCRIPTION JWTError credentials_exception RETURNS DESCRIPTION token_data the jwt decoded data TYPE: MSATokenData MSATokenData \u00b6 Bases: SQLModel TokenData schema Attributes \u00b6 id class-attribute \u00b6 id : Optional [ str ] User ID","title":"token"},{"location":"reference/utils/token/#msasdk-module","text":"","title":"msaSDK Module"},{"location":"reference/utils/token/#utilstoken","text":"","title":".utils.token"},{"location":"reference/utils/token/#utils.token-attributes","text":"","title":"Attributes"},{"location":"reference/utils/token/#utils.token.oauth2_scheme","text":"oauth2_scheme = OAuth2PasswordBearer ( tokenUrl = 'login' )","title":"oauth2_scheme"},{"location":"reference/utils/token/#utils.token-classes","text":"","title":"Classes"},{"location":"reference/utils/token/#utils.token.MSAToken","text":"","title":"MSAToken"},{"location":"reference/utils/token/#utils.token.MSAToken-attributes","text":"","title":"Attributes"},{"location":"reference/utils/token/#utils.token.MSAToken.algorithm","text":"algorithm : str = algorithm","title":"algorithm"},{"location":"reference/utils/token/#utils.token.MSAToken.credentials_exception","text":"credentials_exception = HTTPException ( status_code = status . HTTP_401_UNAUTHORIZED , detail = \"Could not validate credentials\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, )","title":"credentials_exception"},{"location":"reference/utils/token/#utils.token.MSAToken.secret_key","text":"secret_key : str = secret_key","title":"secret_key"},{"location":"reference/utils/token/#utils.token.MSAToken-functions","text":"","title":"Functions"},{"location":"reference/utils/token/#utils.token.MSAToken.__init__","text":"__init__ ( secret_key : str , algorithm : str = 'HS256' ) MSAToken PARAMETER DESCRIPTION secret_key The secret key to produce a Token TYPE: str algorithm Algo to use, default HS256 TYPE: str DEFAULT: 'HS256'","title":"__init__()"},{"location":"reference/utils/token/#utils.token.MSAToken.create_token","text":"create_token ( data : dict , expire_minutes : int = 100 ) -> str Create a Token PARAMETER DESCRIPTION data the data and content used to build the token TYPE: dict expire_minutes the time the token is valid, expires TYPE: int DEFAULT: 100 RETURNS DESCRIPTION encoded_jwt jwt encoded token TYPE: str","title":"create_token()"},{"location":"reference/utils/token/#utils.token.MSAToken.get_current_user","text":"get_current_user ( token : str = Depends ( oauth2_scheme ))","title":"get_current_user()"},{"location":"reference/utils/token/#utils.token.MSAToken.verify_token","text":"verify_token ( token : str ) -> MSATokenData Verify Token PARAMETER DESCRIPTION token the token as str TYPE: str RAISES DESCRIPTION JWTError credentials_exception RETURNS DESCRIPTION token_data the jwt decoded data TYPE: MSATokenData","title":"verify_token()"},{"location":"reference/utils/token/#utils.token.MSATokenData","text":"Bases: SQLModel TokenData schema","title":"MSATokenData"},{"location":"reference/utils/token/#utils.token.MSATokenData-attributes","text":"","title":"Attributes"},{"location":"reference/utils/token/#utils.token.MSATokenData.id","text":"id : Optional [ str ] User ID","title":"id"},{"location":"sites/admin/","text":"Admin Site \u00b6 msaSDK - Admin Site Admin Site is an efficient and easily extensible MSAApp (FastAPI) admin framework. Inspired by Django-admin, and for a fast track through PoC's, MVP's to Production. msaSDK - Admin Site is an efficient Python 3.7+ based framework on top of msaSDK & fastapi & amis , and build with standard Python type hints. The original intention of the development is to improve the application ecology and to quickly generate a visual dashboard for API's and web application. It was build to support very quick PoC's, MVP's in AI Applications. It can be extended with Auth and Login for an MVP Phase with the Auth Module by just define a setting to True. Features \u00b6 Build connected distributed applications faster : Ready for Distributed Application Runtime (Dapr). Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces. Dependencies \u00b6 FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue.js / React - JSON based Frontend Composition \u00b6 msaSDK - Admin consists of three core modules, of which, amis , crud , which can be used as separate modules, and MSAApp as the core SDK part. amis : Based on the pydantic data model building library of baidu amis . To generate/parse data rapidly. crud : Based on FastAPI & SQLModel . To quickly build Create, Read, Update, Delete common API interfaces. admin : Inspired by Django-Admin . Combine amis with crud . To quickly build Web Admin dashboard . Simple Example \u00b6 # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" ) Interface Preview \u00b6 Home Screen with System Info \u00b6 Open http://127.0.0.1:8090/admin/ in your browser: CRUD of SQLModels Screen \u00b6 OpenAPI Interactive Documentation (Swagger) Screen \u00b6 Open http://127.0.0.1:8090/#/admin/docs in your browser: Profiler Screen \u00b6 Open http://127.0.0.1:8090/#/admin/profiler in your browser: License Agreement \u00b6 msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"Admin"},{"location":"sites/admin/#admin-site","text":"","title":"Admin Site"},{"location":"sites/admin/#features","text":"Build connected distributed applications faster : Ready for Distributed Application Runtime (Dapr). Consistency : With sometimes 10s or 100s of Micro Services, the SDK helps to easy version control and provides a stable Dapr Basis. High performance : Based on FastAPI . Enjoy all the benefits. High efficiency : Perfect code type hints. Higher code reusability. Support asynchronous and synchronous hybrid writing : ORM is based on SQLModel & Sqlalchemy . Freely customize database type. Asynchronous mode. Strong scalability. Front-end separation : The front-end is rendered by Amis , the back-end interface is automatically generated by msaSDK - Admin . The interface is reusable. Strong scalability : The background page supports Amis pages and ordinary html pages. Easily customize the interface freely. Automatic api documentation : Automatically generate Interface documentation by FastAPI . Easily debug and share interfaces.","title":"Features"},{"location":"sites/admin/#dependencies","text":"FastAPI SQLModel combined with SQLAlchemy and Pydantic , with all their features . Amis : Vue.js / React - JSON based Frontend","title":"Dependencies"},{"location":"sites/admin/#composition","text":"msaSDK - Admin consists of three core modules, of which, amis , crud , which can be used as separate modules, and MSAApp as the core SDK part. amis : Based on the pydantic data model building library of baidu amis . To generate/parse data rapidly. crud : Based on FastAPI & SQLModel . To quickly build Create, Read, Update, Delete common API interfaces. admin : Inspired by Django-Admin . Combine amis with crud . To quickly build Web Admin dashboard .","title":"Composition"},{"location":"sites/admin/#simple-example","text":"# -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from typing import Optional from sqlmodel import SQLModel from msaSDK.admin.utils.fields import Field from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp from msaSDK.utils.scheduler import MSATimers , MSATimerEnum # example async function to be executed by a timer async def test_timer_min (): app . logger . info ( \"msaSDK Test Timer Async Every Minute\" ) # example sync/blocking function to be executed by a timer def test_timer_five_sec (): app . logger . info ( \"msaSDK Test Timer Sync 5 Second\" ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestArticle ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # SQLModel class to be used for auto API CRUD and/or Admin Site Web UI class TestCategory ( SQLModel , table = True ): id : Optional [ int ] = Field ( default = None , primary_key = True , nullable = False ) title : str = Field ( title = 'ArticleTitle' , max_length = 200 ) description : Optional [ str ] = Field ( default = '' , title = 'ArticleDescription' , max_length = 400 ) status : bool = Field ( None , title = 'status' ) content : str = Field ( title = 'ArticleContent' ) # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True # Create some timers with a MSATimer instance, define the interval and set the handler my_timers : MSATimers = MSATimers () my_timers . create_timer ( MSATimerEnum . every_minute , test_timer_min ) my_timers . create_timer ( MSATimerEnum . on_the_5_second , test_timer_five_sec ) # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Optional the Classes of your SQLModels # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler # Optional the MSATimers instance app = MSAApp ( settings = settings , timers = my_timers , auto_mount_site = True , sql_models = [ TestArticle , TestCategory ], contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" )","title":"Simple Example"},{"location":"sites/admin/#interface-preview","text":"","title":"Interface Preview"},{"location":"sites/admin/#home-screen-with-system-info","text":"Open http://127.0.0.1:8090/admin/ in your browser:","title":"Home Screen with System Info"},{"location":"sites/admin/#crud-of-sqlmodels-screen","text":"","title":"CRUD of SQLModels Screen"},{"location":"sites/admin/#openapi-interactive-documentation-swagger-screen","text":"Open http://127.0.0.1:8090/#/admin/docs in your browser:","title":"OpenAPI Interactive Documentation (Swagger) Screen"},{"location":"sites/admin/#profiler-screen","text":"Open http://127.0.0.1:8090/#/admin/profiler in your browser:","title":"Profiler Screen"},{"location":"sites/admin/#license-agreement","text":"msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"License Agreement"},{"location":"sites/auth/","text":"Auth Admin Site \u00b6 msaSDK Auth msaSDK Auth. Auth Site that extends the Admin Site Web UI with Login/Auth for the API's. Simple Example \u00b6 Just define in the Service Definition (Settings) site_auth: bool = False # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True settings . site_auth = True # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler app = MSAApp ( settings = settings , auto_mount_site = True , contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" ) Validation Method \u00b6 Decorator \u00b6 Recommended scenario: Single route. Supports synchronous/asynchronous routing. @app . get ( \"/auth/user\" ) @app . auth . requires () def user ( request : Request ): return request . user @app . get ( \"/auth/admin_roles\" ) @app . auth . requires ( 'admin' ) def admin_roles ( request : Request ): return request . user @app . get ( \"/auth/vip_roles\" ) @app . auth . requires ([ 'vip' ]) async def vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_or_vip_roles\" ) @app . auth . requires ( roles = [ 'admin' , 'vip' ]) def admin_or_vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_groups\" ) @app . auth . requires ( groups = [ 'admin' ]) def admin_groups ( request : Request ): return request . user @app . get ( \"/auth/admin_roles_and_admin_groups\" ) @app . auth . requires ( roles = [ 'admin' ], groups = [ 'admin' ]) def admin_roles_and_admin_groups ( request : Request ): return request . user @app . get ( \"/auth/vip_roles_and_article_update\" ) @app . auth . requires ( roles = [ 'vip' ], permissions = [ 'article:update' ]) def vip_roles_and_article_update ( request : Request ): return request . user Dependencies (Recommended) \u00b6 Recommended scenarios: single routes, route collections, MSAApp applications. from fastapi import Depends from typing import Tuple from msaSDK.auth import Auth from msaSDK.auth.models import User app = MSAApp ... @app . get ( \"/auth/admin_roles_depend_1\" ) def admin_roles ( user : User = Depends ( app . auth . get_current_user )): return user # or request.user @app . get ( \"/auth/admin_roles_depend_2\" , dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) def admin_roles ( request : Request ): return request . user app = MSAApp ( dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) @app . get ( \"/auth/admin_roles_depend_3\" ) def admin_roles ( request : Request ): return request . user Middleware \u00b6 Recommended Scenario: MSAApp Application app = MSAApp () auth . backend . attach_middleware ( app ) Direct call \u00b6 Recommended scenarios: Non-routed methods from msaSDK.auth.models import User async def get_request_user ( request : Request ) -> Optional [ User ]: # user= await auth.get_current_user(request) if await auth . requires ( 'admin' , response = False )( request ): return request . user else : return None Token Storage Backend \u00b6 NSA auth supports multiple token storage methods. Default is: DbTokenStore , suggest to customize it to: JwtTokenStore . JwtTokenStore \u00b6 from msaSDK.auth.backends.jwt import JwtTokenStore from sqlalchemy.ext.asyncio import create_async_engine from sqlalchemy_database import AsyncDatabase engine = create_async_engine ( url = 'sqlite+aiosqlite:///amisadmin.db' , future = True ) auth = Auth ( db = AsyncDatabase ( engine ), token_store = JwtTokenStore ( secret_key = '09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7' ) ) # Auth Admin Site site = AuthAdminSite ( settings = Settings ( database_url_async = 'sqlite+aiosqlite:///amisadmin.db' ), auth = auth ) DbTokenStore \u00b6 from msaSDK.auth.backends.db import DbTokenStore auth = Auth ( db = AsyncDatabase ( engine ), token_store = DbTokenStore ( db = AsyncDatabase ( engine )) ) RedisTokenStore \u00b6 # Creating auth objects with `RedisTokenStore` from msaSDK.auth.backends.redis import RedisTokenStore from aioredis import Redis auth = Auth ( db = AsyncDatabase ( engine ), token_store = RedisTokenStore ( redis = Redis . from_url ( 'redis://localhost?db=0' )) ) RBAC Model \u00b6 The RBAC model used in this system is as follows, you can also expand it according to your needs. Reference: Design of permission system flowchart LR User -. m:n .-> Group User -. m:n .-> Role Group -. m:n .-> Role Role -. m:n .-> Perimission Advanced Expansion \u00b6 Expanding the User model \u00b6 from datetime import date from msaSDK.admin.models.fields import Field from msaSDK.auth.models import BaseUser # Customize the `User` model, inherit from `BaseUser`. class MyUser ( BaseUser , table = True ): birthday : date = Field ( None , title = \"Date of Birth\" ) location : str = Field ( None , title = \"Location\" ) # Create auth objects using a custom `User` model auth = Auth ( db = AsyncDatabase ( engine ), user_model = MyUser ) Extending the Role , Group , Permission model \u00b6 # Customize `Group` model, inherit from `BaseRBAC`; # override `Role`, `Permission` model is similar, the difference is the table name. class MyGroup ( BaseRBAC , table = True ): __tablename__ = 'auth_group' # Database table name, must be this to override the default model icon : str = Field ( None , title = 'Icons' ) is_active : bool = Field ( default = True , title = \"Activate or not\" ) Customize UserAuthApp default management class \u00b6 The default management classes can be replaced by inheritance overrides. For example: UserLoginFormAdmin , UserRegFormAdmin , UserInfoFormAdmin , UserAdmin , GroupAdmin , RoleAdmin , PermissionAdmin # Custom model management class, inheritance rewrites the corresponding default management class class MyGroupAdmin ( admin . ModelAdmin ): group_schema = None page_schema = PageSchema ( label = 'User Group Management' , icon = 'fa fa-group' ) model = MyGroup link_model_fields = [ Group . roles ] readonly_fields = [ 'key' ] # Customize the user authentication application, inherit and rewrite the default user authentication application class MyUserAuthApp ( UserAuthApp ): GroupAdmin = MyGroupAdmin # Customize user management site, inherit rewrite the default user management site class MyAuthAdminSite ( AuthAdminSite ): UserAuthApp = MyUserAuthApp # Use the custom `AuthAdminSite` class to create the site object site = MyAuthAdminSite ( settings , auth = auth ) Interface Preview \u00b6 Login Screen \u00b6 Open http://127.0.0.1:8090/admin/auth/form/login in your browser: Home Screen with System Info \u00b6 Open http://127.0.0.1:8090/admin/ in your browser: CRUD of SQLModels Screen \u00b6 OpenAPI Interactive Documentation (Swagger) Screen \u00b6 Open http://127.0.0.1:8090/admin/docs in your browser: License Agreement \u00b6 msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"Auth Admin"},{"location":"sites/auth/#auth-admin-site","text":"","title":"Auth Admin Site"},{"location":"sites/auth/#simple-example","text":"Just define in the Service Definition (Settings) site_auth: bool = False # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2022 - U2D.ai / S.Welcker \"\"\" __version__ = \"0.0.1\" from msaSDK.models.service import get_msa_app_settings from msaSDK.service import MSAApp # get the MSA app setting, clear the cache, set some settings get_msa_app_settings . cache_clear () settings = get_msa_app_settings () settings . title = \"SPK.ai - MSA/SDK MVP\" settings . version = \"SPK.0.0.1\" settings . debug = True settings . site_auth = True # Create the main app instance, like FastAPI but provide a Setting Definition Instance # Define if the optional Admin Site gets mounted automatically, if False you need to Mount in your own Startup MSAUIEvent Handler app = MSAApp ( settings = settings , auto_mount_site = True , contact = { \"name\" : \"msaSDK\" , \"url\" : \"http://u2d.ai\" , \"email\" : \"stefan@u2d.ai\" }, license_info = { \"name\" : \"MIT\" , \"url\" : \"https://opensource.org/licenses/MIT\" , }) # use the internal logger of app app . logger . info ( \"Initialized \" + settings . title + \" \" + settings . version ) # Optional use startup event @app . on_event ( \"startup\" ) async def startup (): app . logger . info ( \"msaSDK Own Startup MSAUIEvent\" ) # Optional use shutdown event @app . on_event ( \"shutdown\" ) async def shutdown (): app . logger . info ( \"msaSDK Own Shutdown MSAUIEvent\" )","title":"Simple Example"},{"location":"sites/auth/#validation-method","text":"","title":"Validation Method"},{"location":"sites/auth/#decorator","text":"Recommended scenario: Single route. Supports synchronous/asynchronous routing. @app . get ( \"/auth/user\" ) @app . auth . requires () def user ( request : Request ): return request . user @app . get ( \"/auth/admin_roles\" ) @app . auth . requires ( 'admin' ) def admin_roles ( request : Request ): return request . user @app . get ( \"/auth/vip_roles\" ) @app . auth . requires ([ 'vip' ]) async def vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_or_vip_roles\" ) @app . auth . requires ( roles = [ 'admin' , 'vip' ]) def admin_or_vip_roles ( request : Request ): return request . user @app . get ( \"/auth/admin_groups\" ) @app . auth . requires ( groups = [ 'admin' ]) def admin_groups ( request : Request ): return request . user @app . get ( \"/auth/admin_roles_and_admin_groups\" ) @app . auth . requires ( roles = [ 'admin' ], groups = [ 'admin' ]) def admin_roles_and_admin_groups ( request : Request ): return request . user @app . get ( \"/auth/vip_roles_and_article_update\" ) @app . auth . requires ( roles = [ 'vip' ], permissions = [ 'article:update' ]) def vip_roles_and_article_update ( request : Request ): return request . user","title":"Decorator"},{"location":"sites/auth/#dependencies-recommended","text":"Recommended scenarios: single routes, route collections, MSAApp applications. from fastapi import Depends from typing import Tuple from msaSDK.auth import Auth from msaSDK.auth.models import User app = MSAApp ... @app . get ( \"/auth/admin_roles_depend_1\" ) def admin_roles ( user : User = Depends ( app . auth . get_current_user )): return user # or request.user @app . get ( \"/auth/admin_roles_depend_2\" , dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) def admin_roles ( request : Request ): return request . user app = MSAApp ( dependencies = [ Depends ( app . auth . requires ( 'admin' )())]) @app . get ( \"/auth/admin_roles_depend_3\" ) def admin_roles ( request : Request ): return request . user","title":"Dependencies (Recommended)"},{"location":"sites/auth/#middleware","text":"Recommended Scenario: MSAApp Application app = MSAApp () auth . backend . attach_middleware ( app )","title":"Middleware"},{"location":"sites/auth/#direct-call","text":"Recommended scenarios: Non-routed methods from msaSDK.auth.models import User async def get_request_user ( request : Request ) -> Optional [ User ]: # user= await auth.get_current_user(request) if await auth . requires ( 'admin' , response = False )( request ): return request . user else : return None","title":"Direct call"},{"location":"sites/auth/#token-storage-backend","text":"NSA auth supports multiple token storage methods. Default is: DbTokenStore , suggest to customize it to: JwtTokenStore .","title":"Token Storage Backend"},{"location":"sites/auth/#jwttokenstore","text":"from msaSDK.auth.backends.jwt import JwtTokenStore from sqlalchemy.ext.asyncio import create_async_engine from sqlalchemy_database import AsyncDatabase engine = create_async_engine ( url = 'sqlite+aiosqlite:///amisadmin.db' , future = True ) auth = Auth ( db = AsyncDatabase ( engine ), token_store = JwtTokenStore ( secret_key = '09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7' ) ) # Auth Admin Site site = AuthAdminSite ( settings = Settings ( database_url_async = 'sqlite+aiosqlite:///amisadmin.db' ), auth = auth )","title":"JwtTokenStore"},{"location":"sites/auth/#dbtokenstore","text":"from msaSDK.auth.backends.db import DbTokenStore auth = Auth ( db = AsyncDatabase ( engine ), token_store = DbTokenStore ( db = AsyncDatabase ( engine )) )","title":"DbTokenStore"},{"location":"sites/auth/#redistokenstore","text":"# Creating auth objects with `RedisTokenStore` from msaSDK.auth.backends.redis import RedisTokenStore from aioredis import Redis auth = Auth ( db = AsyncDatabase ( engine ), token_store = RedisTokenStore ( redis = Redis . from_url ( 'redis://localhost?db=0' )) )","title":"RedisTokenStore"},{"location":"sites/auth/#rbac-model","text":"The RBAC model used in this system is as follows, you can also expand it according to your needs. Reference: Design of permission system flowchart LR User -. m:n .-> Group User -. m:n .-> Role Group -. m:n .-> Role Role -. m:n .-> Perimission","title":"RBAC Model"},{"location":"sites/auth/#advanced-expansion","text":"","title":"Advanced Expansion"},{"location":"sites/auth/#expanding-the-user-model","text":"from datetime import date from msaSDK.admin.models.fields import Field from msaSDK.auth.models import BaseUser # Customize the `User` model, inherit from `BaseUser`. class MyUser ( BaseUser , table = True ): birthday : date = Field ( None , title = \"Date of Birth\" ) location : str = Field ( None , title = \"Location\" ) # Create auth objects using a custom `User` model auth = Auth ( db = AsyncDatabase ( engine ), user_model = MyUser )","title":"Expanding the User model"},{"location":"sites/auth/#extending-the-rolegrouppermission-model","text":"# Customize `Group` model, inherit from `BaseRBAC`; # override `Role`, `Permission` model is similar, the difference is the table name. class MyGroup ( BaseRBAC , table = True ): __tablename__ = 'auth_group' # Database table name, must be this to override the default model icon : str = Field ( None , title = 'Icons' ) is_active : bool = Field ( default = True , title = \"Activate or not\" )","title":"Extending the Role,Group,Permission model"},{"location":"sites/auth/#customize-userauthapp-default-management-class","text":"The default management classes can be replaced by inheritance overrides. For example: UserLoginFormAdmin , UserRegFormAdmin , UserInfoFormAdmin , UserAdmin , GroupAdmin , RoleAdmin , PermissionAdmin # Custom model management class, inheritance rewrites the corresponding default management class class MyGroupAdmin ( admin . ModelAdmin ): group_schema = None page_schema = PageSchema ( label = 'User Group Management' , icon = 'fa fa-group' ) model = MyGroup link_model_fields = [ Group . roles ] readonly_fields = [ 'key' ] # Customize the user authentication application, inherit and rewrite the default user authentication application class MyUserAuthApp ( UserAuthApp ): GroupAdmin = MyGroupAdmin # Customize user management site, inherit rewrite the default user management site class MyAuthAdminSite ( AuthAdminSite ): UserAuthApp = MyUserAuthApp # Use the custom `AuthAdminSite` class to create the site object site = MyAuthAdminSite ( settings , auth = auth )","title":"Customize UserAuthApp default management class"},{"location":"sites/auth/#interface-preview","text":"","title":"Interface Preview"},{"location":"sites/auth/#login-screen","text":"Open http://127.0.0.1:8090/admin/auth/form/login in your browser:","title":"Login Screen"},{"location":"sites/auth/#home-screen-with-system-info","text":"Open http://127.0.0.1:8090/admin/ in your browser:","title":"Home Screen with System Info"},{"location":"sites/auth/#crud-of-sqlmodels-screen","text":"","title":"CRUD of SQLModels Screen"},{"location":"sites/auth/#openapi-interactive-documentation-swagger-screen","text":"Open http://127.0.0.1:8090/admin/docs in your browser:","title":"OpenAPI Interactive Documentation (Swagger) Screen"},{"location":"sites/auth/#license-agreement","text":"msaSDK Based on MIT open source and free to use, it is free for commercial use, but please clearly show the copyright information about msaSDK - Auth Admin in the display interface.","title":"License Agreement"}]}